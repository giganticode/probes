tr	6	public static void removeConnection ( String identifier ) { htConnections . remove ( identifier ) ; }
tr	1	public boolean isInfected ( ) { return false ; }
tr	9	@ Override public Object clone ( ) { return new CharArrayWrapper ( Arrays . copyOf ( getData ( ) , getData ( ) . length ) ) ; }
tr	10	@ Override public void writeHeaderCell ( HeaderCellDetails headerCell ) { writeCell ( headerCell . getColumnIndex ( ) , headerCell . getColumn ( ) . getTitle ( ) ) ; }
tr	7	public IDs getFriendsIDs ( String screenName ) throws WeiboException { return getFriendsIDs ( screenName , - 1 ) ; }
tr	6	public void removeDayOfMonthException ( String exceptionName ) { this . workingDayMonthExceptions . removeException ( exceptionName ) ; }
tr	1	public IndexerCommon ( ) { }
tr	3	public String getUpdated ( ) { return updated ; }
tr	1	private ConfigPool ( ) { }
tr	9	@ Override public String toString ( ) { return returnType . toString ( ) + " " + symbolName + "(" + Main . join ( argumentTypes , "  " ) + ")" ; }
tr	7	@ Override public void guardar ( Object arg ) { this . objB . guardar ( arg , null ) ; }
tr	4	public void setNumVotes ( int nbv ) { this . numVotes = nbv ; }
tr	2	public static int getProxyPort ( ) { return getIntProperty ( "tblog4j.http.proxyPort" ) ; }
tr	3	public MarkovState [ ] getMarkovStates ( ) { return STATES ; }
tr	7	public BuildFile ( ProjectFile projectFile , Dict dict ) { super ( projectFile , dict ) ; }
tr	4	public SingleInstanceThread ( ) { super ( ) ; this . executor = null ; this . isRunning = null ; this . notifiyer = null ; }
tr	9	private int getUniformLocationChecked ( final String uniform ) { try { return getUniformLocation ( uniform ) ; } catch ( java . lang . IllegalArgumentException exception ) { return - 1 ; } }
tr	3	public String getStoreg ( ) { return storeg ; }
tr	3	public boolean isDataFlavorSupported ( DataFlavor flavor ) { return false ; }
tr	2	public Component getComponent ( ) { return this ; }
tr	2	public boolean hasBorder ( ) { return border != null ; }
tr	4	public char getCloseChar ( ) { return btnClose . getText ( ) . charAt ( 0 ) ; }
tr	4	@ Override public int getCenterY ( ) { return getY ( ) + HEIGHT / 2 ; }
tr	3	public MyInternalFrame GetAttribs ( ) { return attribs ; }
tr	9	private void fireIOException ( IOException ioe ) { for ( PeerActivityListener listener : this . listeners ) { listener . handleIOException ( this , ioe ) ; } }
tr	4	void progIncr ( ) { progress += 1 ; setProgress ( progress ) ; }
tr	6	Level ( XmlLevel xmlLevel ) { this . name = xmlLevel . getName ( ) ; }
tr	7	public void mouseDragged ( MouseEvent mouseEvent ) { if ( paintType == null ) return ; paintType . mouseDragged ( mouseEvent ) ; }
tr	9	public BTDeviceListModel ( ArrayList < BTDevice > discoveredDevices ) { this . devicesList = discoveredDevices ; listDataListener = new ArrayList < ListDataListener > ( ) ; }
tr	2	public Monitor ( ) { initComponents ( ) ; }
tr	5	public FileSystemScanner ( String path ) { musicFolderPath = path ; }
tr	2	public void normalizeDocument ( ) { throw new UnsupportedOperationException ( "org.w3c.tidy.DOMDocumentImpl normalizeDocument() Not implemented" ) ; }
tr	10	public void displayOutput ( String error ) { history . addOutput ( error ) ; clearLine ( ) ; addOutput ( error ) ; addCommandMarker ( ) ; }
tr	10	public PathComparator ( Heuristic < N > heuristic , N target ) { mHeuristic = heuristic ; mTarget = target ; }
tr	10	public static double gaussian ( double x ) { return Math . exp ( - x * x / 2 ) / Math . sqrt ( 2 * Math . PI ) ; }
tr	2	public int getVersion ( ) { return getInt ( 1 ) ; }
tr	7	@ Override public long getQuantity ( Mineral mineral ) { return minerals [ mineral . ordinal ( ) ] ; }
tr	7	public String concatenarEstatus ( ) { String ret = "#inactivo\n" ; if ( isEstatus ( ) ) { ret = "#activo\n" ; } return ret ; }
tr	1	private FileChooserFactory ( ) { super ( ) ; }
tr	6	public void setCurrentElementShape ( ElementShape shape ) { currentElementShape = shape ; updateShapes ( ) ; }
tr	6	public Kick ( ) { setCardName ( "Kick" ) ; setCardValue ( 1 ) ; setCardCost ( 2 ) ; setCardDamage ( 2 ) ; setCardImage ( "/Resources/Kick.jpg" ) ; }
tr	4	public Layer ( float zPosition ) { this . zPosition = zPosition ; }
tr	5	public void setNews ( NewsResponse value ) { this . news = value ; }
tr	6	@ Test public void test_0203_IMG ( ) throws Exception { doTest ( getClass ( ) . getResource ( "/w3.org/WAI/UA/TS/html401/cp0203/0203-IMG.html" ) ) ; }
tr	1	public OptionsControl ( ) { }
tr	9	@ Override public void repaint ( ) { super . repaint ( ) ; if ( panels != null ) { for ( PanelMonitor panel : panels ) { panel . repaint ( ) ; } } }
tr	6	@ AfterClass public static void cleanupTempRoot ( ) { cleanupDirectory ( tempRoot ) ; tempRoot . delete ( ) ; }
tr	10	@ Override public void reverse ( ) { MapLayers layers = map . getLayers ( ) ; layers . addLayer ( index , layer ) ; }
tr	4	public void setCoeffSeats ( double coeffSeats ) { this . coeffSeats = coeffSeats ; }
tr	8	private void initializeOptions ( ) { foo = new InputOption ( "foo" , "f" ) ; | = new InputOption ( "bar" , "b" ) ; foo1 = new InputOption ( "fooBis" , "f" ) ; foo2 = new InputOption ( "foo" , "p" ) ; }
tr	2	public int getExitTileNumberX ( ) { return exitTileNumberX ; }
tr	10	@ Override public JsonElement serialize ( boolean src , Type srcType , JsonSerializationContext context ) { return new JsonPrimitive ( src ? 1 : 0 ) ; }
tr	5	public TerminalScreenToConsoleObserver ( Terminal terminal ) { this . terminal = terminal ; }
tr	10	@ Override public void subjectUpdated ( String subject , String from ) { logger . debug ( "subjectUpdated: subject='" + subject + "'  from='" + from + "'" ) ; }
tr	10	public final String readPropertyValue ( final String propertyName , final String defaultValue ) { return PROPERTIES . getProperty ( propertyName , defaultValue ) ; }
tr	1	private void inspectAll ( ) { }
tr	7	public static int getMonth ( GregCalPlus g ) { return g . get ( GregCalPlus . MONTH ) ; }
tr	1	public ObjectFactory ( ) { }
tr	8	public void println ( double d , int dec ) { this . out . println ( this . formatDouble ( d , dec ) ) ; }
tr	5	public void setActivePlayer ( Player activePlayer ) { this . activePlayer = activePlayer ; }
tr	10	@ Override public boolean equals ( Object object ) { if ( object instanceof AtomChar ) { return ( ( AtomChar ) object ) . value == value ; } else { return false ; } }
tr	9	public boolean contains ( Interval interval ) { return ( this . start <= interval . start && this . end >= interval . end ) ; }
tr	2	public int portNumber ( ) { return this . portNumber ; }
tr	1	public EndTag ( ) { super ( "" ) ; }
tr	7	@ SuppressWarnings ( "unused" ) public static void main ( String [ ] args ) { ServerWindow serverWindow = new ServerWindow ( ) ; }
tr	6	public void removeMouseMotionListener ( MouseMotionListener arg0 ) { render . removeMouseMotionListener ( arg0 ) ; }
tr	2	@ Override public float getExtemp ( ) { return 0 ; }
tr	7	@ Override public int compareTo ( Node o ) { return this . cnt - o . cnt ; }
tr	9	public SongManager ( ) throws SQLException , IOException { sdb = new SongDBManager ( ) ; cm = new CategoryManager ( ) ; am = new ArtistManager ( ) ; }
tr	8	@ Override public final Impl slice ( int start ) { return slice ( start , Integer . MAX_VALUE ) ; }
tr	7	public RandomFileInputStream ( String fileName ) throws FileNotFoundException { super ( ) ; randomFile = new RandomAccessFile ( fileName , "r" ) ; }
tr	3	public JLabel getRedText ( ) { return redText ; }
tr	7	public Image createImage ( ImageProducer arg0 ) { return render . createImage ( arg0 ) ; }
tr	1	protected void interrupted ( ) { }
tr	8	@ Test public void absDiv_yIsNegative_returnsPositiveValue ( ) { float result = new Calculator ( ) . absDiv ( 15 , - 6 ) ; assert . assertEquals ( 2.5f , result ) ; }
tr	4	public String getCarModel ( ) { return carModelTxt . getText ( ) ; }
tr	6	public boolean equalsTo ( String otherName ) { return name . equals ( otherName ) ; }
tr	8	@ Override public void setText ( String Text ) { this . SetText ( Text , Color . white ) ; }
tr	4	public void setT1_array_num ( int t1_array_num ) { this . t1_array_num = t1_array_num ; }
tr	9	@ Test public void shouldProvidePlayersScore ( ) { int score = gameScore . of ( ANY_PLAYER_ID ) ; assertThat ( score ) . isEqualTo ( 0 ) ; }
tr	8	public void error ( SAXParseException spe ) throws SAXException { errors . add ( spe . toString ( ) ) ; }
tr	1	public PutAccountPolicyRequest ( ) { }
tr	7	public Object getValue ( ) { if ( coroutine == null ) return value ; return coroutine . stack [ index ] ; }
tr	2	public void redirectOut ( ) { redirectOut ( null , null ) ; }
tr	10	@ Override public void fillPolygon ( int [ ] xPoints , int [ ] yPoints , int nPoints ) { g . fillPolygon ( xPoints , yPoints , nPoints ) ; }
tr	2	public byte getNotSettable ( ) { return notSettable ; }
tr	10	public void setPosition ( Translate p ) { setPosition ( p . getX ( ) , p . getY ( ) , p . getZ ( ) ) ; }
tr	4	@ Override public int getSize ( ) { return lokal . getSize ( ) + 1 ; }
tr	9	@ Override public void nextFrame ( ) { if ( images . size ( ) <= 1 || ! playing ) { return ; } frame ++ ; frame %= images . size ( ) ; }
tr	6	private void ddActionPerformed ( java . awt . event . ActionEvent evt ) { }
tr	3	public String getName ( ) { return name ; }
tr	6	public PhoneIdStandardResponse standard ( String phone_number ) { return standard ( phone_number , null , null ) ; }
tr	1	public int process_id ( ) { return 2 ; }
tr	9	protected String mapKeyCode ( int keycode , int modifiers ) { return getTerminal ( ) . getKeyMapper ( ) . map ( keycode , modifiers ) ; }
tr	9	public HabitacioId ( String nomhotel , Integer numero ) { this . nomHotel = nomhotel ; this . numero = numero ; }
tr	1	protected DatabaseLogger ( ) { }
tr	8	public EditionVelo ( Velo velo ) { this . velo = velo ; initComponents ( ) ; InitialisationEditionVelo ( this . velo ) ; }
tr	7	public double snapToGridY ( double y , double gridsnapy ) { return el . snapToGridY ( y , gridsnapy ) ; }
tr	8	public final Option addLongOption ( String longForm ) { return addOption ( new Option . LongOption ( longForm ) ) ; }
tr	4	public String getBranch_id ( ) { retrieve ( ) ; return branch_id ; }
tr	1	public Parser ( ) { }
tr	9	public void testFirstExposed ( ) throws Exception { Entity firstElement = executeString ( "(first (list 1 2 3))" ) ; assertEquals ( SparseInt . valueOf ( 1 ) , firstElement ) ; }
tr	4	protected LevelCreator ( ) { level = new Level ( ) ; loaded = false ; }
tr	7	@ Override public void remove ( ) { Preconditions . checkState ( delegate != null ) ; delegate . remove ( ) ; }
tr	8	public AdjacencyListWeightedDirectedGraph < WeightedEdge > generateGraph ( ) { return RandomGraphGenerator . generateConnectedWeightedUndirectedGraph ( numberOfVertices , currentStepValue , numberOfEdgesPerVertex ) ; }
tr	7	public static void sort ( Individual [ ] array ) { sort ( array , array . length ) ; }
tr	9	@ WebMethod public String getLocation ( @ WebParam ( name = "id" ) int id ) { return server_location . getLocation ( id ) ; }
tr	2	public double [ ] getO ( ) { return o ; }
tr	10	public Vector2f divide ( Vector2f v ) { x /= v . x ; y /= v . y ; return this ; }
tr	7	public AsnRange to ( long end ) { return to ( Asn . of ( end ) ) ; }
tr	3	public ScrolledNotesCanvas getScrolledNotesCanvas ( ) { return scrolledNotesCanvas ; }
tr	1	private UIEventHandling ( ) { }
tr	5	public Map < String , Object > parameters ( ) { return this . parameters ; }
tr	10	@ Override public void marshal ( Element e , Document d ) { if ( this . id != null ) e . setAttribute ( "ID" , this . id ) ; }
tr	7	private Theme ( Color bgColor , Color txtColor ) { this ( bgColor , txtColor , "checkicon" ) ; }
tr	6	private JRadioButton [ ] createDefaultOptionButtons ( ) { return new JRadioButton [ ] { createOptionButton ( "Easy level (16 mines  9x9 squares)" , 0 , 9 , 9 , 16 ) , createOptionButton ( "Intermediate level (40 mines  16x16 squares)" , 1 , 16 , 16 , 40 ) , createOptionButton ( "Advanced level (99 mines  16x30 squares)" , 2 , 16 , 30 , 99 ) } ; }
tr	6	public OlogClientBuilder withExecutor ( ExecutorService executor ) { this . executor = executor ; return this ; }
tr	10	public void mouseReleased ( MouseEvent e ) { GameAction gameAction = getMouseButtonAction ( e ) ; if ( gameAction != null ) { gameAction . release ( ) ; } }
tr	2	public int getTestInt ( ) { return testInt ; }
tr	1	protected Learner ( ) { this ( 1 ) ; }
tr	6	public String getTitle ( ) { return ( ( TitledBorder ) scrollPane . getBorder ( ) ) . getTitle ( ) ; }
tr	8	public void run ( ) { if ( writethread == null ) writethread = Thread . currentThread ( ) ; interruptableRun ( ) ; assert ( ! channel . isOpen ( ) ) ; }
tr	9	public void addDocument ( int docid , String grade ) { relevances . put ( docid , convertToBinaryRelevance ( grade ) ) ; }
tr	2	public int getFixedLength ( ) { return getFixedLength ( 0 , 0 ) ; }
tr	9	@ Override public NumberInteger parseNumber ( String s ) { return new NumberInteger ( Integer . parseInt ( s ) ) ; }
tr	9	private Player getWinner ( ) { for ( Player player : playerList . getPlayers ( ) ) { if ( ! player . isBankrupt ( ) ) { return player ; } } return null ; }
tr	8	private String getSlice ( int start , int end ) { return input . substring ( start , end ) ; }
tr	9	public void pesquisar ( String x ) throws Exception { list = new InstituicaoSubmissaoDAO ( ) . listar ( x ) ; preencherTabela ( ) ; }
tr	1	public void setColour ( ) { }
tr	1	public ForestZone ( ) { this ( null ) ; }
tr	8	public DOTParserTokenManager ( SimpleCharStream stream ) { if ( SimpleCharStream . staticFlag ) throw new Error ( "ERROR: Cannot use a static CharStream class with a non-static lexical analyzer." ) ; input_stream = stream ; }
tr	7	public Exception getException ( ) { return this . infoList . get ( infoList . size ( ) - 1 ) . getException ( ) ; }
tr	3	public static Card getCard ( ) { return card ; }
tr	10	public void updateTerm ( int index , double [ ] [ ] current ) { vars . remove ( index ) ; vars . add ( index , current ) ; }
tr	8	public String load_public_key ( String NYM_ID ) { return otapiJNI . OTMadeEasy_load_public_key ( swigCPtr , this , NYM_ID ) ; }
tr	1	public AllAnswer ( ) { super ( ) ; }
tr	3	public boolean isPositive ( ) { return compareTo ( ZERO ) > 0 ; }
tr	6	@ Override public void drawMidground ( Graphics g ) { drawChildrenMidground ( g ) ; }
tr	8	public InputLine ( String name ) { super ( name , new StructInput [ 0 ] , new StructOutput [ ] { new StructOutput ( new StringPipe ( "result" ) ) } ) ; }
tr	3	public CheckBox getOnsaleCheckbox ( ) { return onsaleCheckbox ; }
tr	7	@ Override public void execute ( ) { if ( ServletFileUpload . isMultipartContent ( request ) ) { processMultipartRequest ( request ) ; } }
tr	5	private static byte normalizeByte ( byte b ) { if ( b < 0 ) { return ( byte ) ( 256 + b ) ; } else return b ; }
tr	8	@ Override public Map < Name , String > getMainAttributes ( ) { return Collections . unmodifiableMap ( attributes ) ; }
tr	4	public void setScore ( int [ ] score ) { this . score = score ; }
tr	7	public boolean registerFile ( File file ) { return registerFile ( file , false , Thread . currentThread ( ) ) ; }
tr	8	public AcademyFacadeDB ( ) { emf = Persistence . createEntityManagerFactory ( "ServerSidePU" ) ; em = emf . createEntityManager ( ) ; addToDatabase ( ) ; }
tr	9	public Music getMusic ( ) { try { return new Music ( folder + musicFile ) ; } catch ( SlickException e ) { e . printStackTrace ( ) ; return null ; } }
tr	1	public TSquare ( ) { }
tr	2	public int getLimit ( ) { return this . limit ; }
tr	3	public String getDataProviderID ( ) { return dataProviderID ; }
tr	4	protected void handleConstantValue ( final Object value ) { throw newUnimplementedException ( ) ; }
tr	9	@ Override public void resetAmmo ( ) { super . resetAmmo ( ) ; synchronized ( this . explosions ) { this . explosions . clear ( ) ; } this . ammoLeft = Landmine . DEFAULT_AMMO ; }
tr	6	public void setTutorsInfo ( ArrayList < PareTutor > tutorsInfo ) { this . tutorsInfo = tutorsInfo ; }
tr	4	public void setMinMwt ( float value ) { this . minMwt = value ; }
tr	10	public void keyReleased ( KeyEvent e ) { for ( Key key : keylist ) { key . release ( e . getKeyCode ( ) ) ; } }
tr	4	public static void main ( final String [ ] args ) { asciiTest ( ) ; }
tr	3	public Agent getActer ( ) { return _acter ; }
tr	3	public TxnTypeType getTxnType ( ) { return txnType ; }
tr	8	public AbstractResponse ( String url , boolean failed ) { this . urlString = url ; this . failed = failed ; }
tr	4	public void setClosed ( boolean closed ) { this . closed = closed ; }
tr	1	public boolean reversible ( ) { return true ; }
tr	3	public static IUStatusDao create ( ) { return new UStatusDaoImpl ( ) ; }
tr	5	public Eye ( Organism organism1 ) { this ( ) ; setOrganism ( organism1 ) ; }
tr	5	public void setRespGrp ( RespGrp value ) { this . respGrp = value ; }
tr	4	public LinkedBlockingQueue < Message > getMessageQueue ( ) { return messageQueue ; }
tr	4	public void setNbRows ( int nb ) { rows = nb ; }
tr	1	public InvalidActionException ( ) { super ( ) ; }
tr	3	public String getTopDownCenterIntersection ( ) { return topDownCenterIntersection ; }
tr	9	public ThreadedHandlerFactory ( IHandlerFactory factory , IExecutorService executor ) { handlerFactory = factory ; service = executor ; }
tr	10	private void bGameShowHintsItemStateChanged ( java . awt . event . ItemEvent evt ) { c . showHints = evt . getStateChange ( ) == 1 ; }
tr	4	public DamageType damageType ( ) { return damageType_native ( pointer ) ; }
tr	10	@ Override public void keyReleased ( KeyEvent e ) { Dependencias . Teclado . getInstance ( ) . liberarTecla ( e . getKeyCode ( ) ) ; }
tr	5	public void setPhoneNum ( PhoneNumber phoneNum ) { this . phoneNum = phoneNum ; }
tr	2	public long getId ( ) { return id ; }
tr	4	@ Override public JComponent getOptionsComponent ( ) { return so ; }
tr	6	@ Test ( expected = IllegalArgumentException . class ) public void shouldFailToParseRangeInCidrNotation ( ) { Ipv6 . parse ( "1:2:3:4/64" ) ; }
tr	2	public int get_drop_off_type ( ) { return _drop_off_type ; }
tr	10	public DatabaseManagementMainForm ( Component c ) { initComponents ( ) ; setLocationRelativeTo ( c ) ; this . dataIO = new DatabaseIO ( ) ; loadDB ( ) ; setListArrangement ( ) ; }
tr	9	public List < ABObject > findPigsRealShape ( ) { if ( visionRealShape == null ) { visionRealShape = new VisionRealShape ( image ) ; } return visionRealShape . findPigs ( ) ; }
tr	6	public int getHeight ( int layer ) { return layers . get ( layer ) . getHeight ( ) ; }
tr	5	private List < SourceType > getParameterSources ( ) { return getParameters ( ) . getSourceTypeList ( ) ; }
tr	7	@ Override public void removeListDataListener ( ListDataListener l ) { dataListeners . remove ( l ) ; }
tr	9	@ Temporal ( TemporalType . DATE ) @ Column ( name = "comment_date" , length = 10 ) public Date getCommentDate ( ) { return this . commentDate ; }
tr	6	public void add ( C resource ) { add ( resource . asRange ( ) ) ; }
tr	8	public List < String > getReturn ( ) { if ( _return == null ) { _return = new ArrayList < String > ( ) ; } return this . _return ; }
tr	6	public RangedAction ( Entity actor , int skillId ) { super ( actor , skillId ) ; }
tr	5	public void setName ( String name ) { this . name = name ; }
tr	4	public void setHolesAllowedInFiles ( boolean holesAllowedInFiles ) { this . holesAllowedInFiles = holesAllowedInFiles ; }
tr	9	public void killSuicideRecord ( Sprite sprite ) { killRecord ( sprite ) ; suicideKills ++ ; System . out . println ( " suicide " ) ; }
tr	6	private void formMouseMoved ( java . awt . event . MouseEvent evt ) { }
tr	1	protected void interrupted ( ) { }
tr	1	public SmoothGraph ( ) { this ( true ) ; }
tr	3	public Player getPlayer ( ) { return player ; }
tr	1	public int error_sym ( ) { return 1 ; }
tr	2	public boolean isCountDimension ( ) { return isCountDimension ; }
tr	4	public static Scanner getInputFile ( ) { return CrazyConnectFour . inFile ; }
tr	7	public Integer get ( String key ) { return map . get ( key ) ; }
tr	2	public Tela_Usuario_Cadastro ( ) { initComponents ( ) ; }
tr	4	public void setPreserveEscapeString ( boolean preserveEscapeString ) { this . preserveEscapeString = preserveEscapeString ; }
tr	6	public void info ( ) { System . out . println ( sequencer . getTickPosition ( ) ) ; }
tr	1	public Endereco ( ) { }
tr	10	@ Test public final void testOKPacket ( ) { OKPacket packet = new OKPacket ( ) ; assertEquals ( OKPacket . SERVER_PACKET_HEADER_OK , packet . getData ( ) [ 0 ] ) ; }
tr	9	public void requestShiftRight ( ) { boolean continueToMakeNew = true ; if ( ! saved ) { continueToMakeNew = promptToSaveState ( ) ; } if ( continueToMakeNew ) { continueToMakeNew = promptShiftRight ( ) ; if ( continueToMakeNew ) { } } }
tr	1	public Staff ( ) { }
tr	2	protected double getTotalVolume ( ) { return totalVolume ; }
tr	4	public void setEditar ( boolean editar ) { this . editar = editar ; }
tr	5	@ Before public void setup ( ) throws Exception { easyDI = new EasyDI ( ) ; }
tr	4	public static ArrayList < MotClef > getLstMotClefs ( ) { return m_lstMotClefs ; }
tr	3	public boolean isCellEditable ( int rowIndex , int columnIndex ) { return false ; }
tr	7	public void setUserAgent ( String ua ) { setRequestHeader ( "User-Agent" , Configuration . getUserAgent ( ua ) ) ; }
tr	8	@ Override public void initialize ( URL url , ResourceBundle rb ) { clock = new DigitalClock ( ) ; }
tr	8	public Widget ( Point pos , Dimension size ) { init ( pos , size ) ; }
tr	1	public void AlteraAvaliacao ( ) { }
tr	8	private static void CheckLogger ( ) { File SettingsDirectory = new File ( "Logs/" ) ; if ( ! SettingsDirectory . exists ( ) ) { SettingsDirectory . mkdir ( ) ; } }
tr	3	public String getAlbum ( ) { return this . Album ; }
tr	5	public void setCONTACTS_ISACTIVE ( Integer cONTACTS_ISACTIVE ) { CONTACTS_ISACTIVE = cONTACTS_ISACTIVE ; }
tr	10	public static void sort ( OffHeapLongAddressable a , OffHeapLongComparator comp ) { sort ( a , 0 , a . size ( ) , comp ) ; }
tr	9	public static void zrobCosZObiektem ( Osoba osoba ) { String name = new String ( "Zbyszek" ) ; osoba . setName ( name ) ; }
tr	1	public LineItem ( ) { }
tr	6	HelpVisitor ( boolean showHidden ) { this . showHidden = showHidden ; topLevel . println ( "Global options:" ) ; }
tr	9	@ Test public void testIsBuried ( ) { Job j = new DefaultJob ( 1 , "body" . getBytes ( ) , true ) ; assert . assertTrue ( j . isBuried ( ) ) ; }
tr	6	private void jButton1ActionPerformed ( java . awt . event . ActionEvent evt ) { }
tr	10	private Ability ( TargetType target , TargetType blockedBy , String description ) { this ( target , blockedBy , description , false ) ; }
tr	10	public void resetStructure ( ) { mVertices = new ArrayList < > ( ) ; mStops = new ArrayList < > ( ) ; mRoute = null ; mStartTime = 0 ; mEndTime = 0 ; mStartStopID = - 1 ; mEndStopID = - 1 ; }
tr	9	String get ( boolean isField , int i ) { return isField ? field [ i ] : "" + data [ i ] ; }
tr	7	@ Override public void serialize ( UBJOutputStream out ) throws IOException { writeValue ( out , this ) ; }
tr	2	public static double getPenRadius ( ) { return penRadius ; }
tr	5	public DisplayProperties getDisplayOrientation ( ) { return ( DisplayProperties ) orientationBox . getSelectedItem ( ) ; }
tr	4	public void updateMenu ( ) { setPanel ( _menuSelect . selectMenu ( ) ) ; }
tr	10	public static boolean isBase64 ( byte octet ) { return octet == PAD || ( octet >= 0 && octet < base64ToInt . length && base64ToInt [ octet ] != - 1 ) ; }
tr	3	public String getUserId ( ) { return userId ; }
tr	6	public int compareTo ( Race r ) { return number - r . getNumber ( ) ; }
tr	9	public LogoError ( String message , Object ... args ) { super ( String . format ( message , args ) ) ; }
tr	10	@ Override public Collection < Cursor < C >> getCursors ( ) { return Collections . unmodifiableCollection ( Arrays . asList ( _cursors ) ) ; }
tr	8	void setKeyPath ( int num , String path ) { keyPaths [ num ] . setText ( path ) ; }
tr	8	public static void main ( String [ ] args ) { InnerButton gui = new InnerButton ( ) ; gui . go ( ) ; }
tr	8	static public Image invertirImagen ( Image imagen ) { return ( Image ) invertirImagen ( convertImage ( imagen ) ) ; }
tr	5	public Job ( ActorID actorID ) { this . actorID = actorID ; }
tr	8	public static void main ( String [ ] args ) { SystemSetting_CLI cli = new SystemSetting_CLI ( ) ; cli . show ( ) ; }
tr	6	public void NotifyServerStatusChanged ( ) { for ( IServerStatusChangedNotification sscn : serverStatusChangedNotificationListeners ) { sscn . onServerStatusChanged ( ) ; } }
tr	9	@ Override public void setThorique ( boolean thorique ) { this . thorique = thorique ; this . gameDifficulty = GameDifficulty . CUSTOM ; this . notifyViews ( ) ; }
tr	3	public BooleanProperty invitedProperty ( ) { return invited ; }
tr	3	public static MountainTile getInstance ( ) { return tile ; }
tr	6	public void removeChangeListener ( ChangeListener l ) { other . removeChangeListener ( l ) ; }
tr	10	public PlaceDisc ( Integer column ) { this . column = column ; protocolRepresentation = String . format ( "%s %d" , NAME , column ) ; }
tr	6	@ Override public void exitEnquanto ( @ NotNull EnquantoParser . EnquantoContext ctx ) { }
tr	7	private void printWelcome ( ) { printMessage ( "Welcome to the World of Kraft Dinner Table(KDT) Maze!" ) ; printMessage ( "KDT is the first version of an incredibly boring adventure game." ) ; printMessage ( "If you find KD  you win! And the prize is an actual box of KD.\n" ) ; printMessage ( "You are lost. You are alone. You wander" ) ; printMessage ( "around the maze searching for an exit.\n" ) ; printMessage ( "Click the help menu option to view help manual." ) ; }
tr	8	public Cut ( String delimiter , String [ ] as ) { this ( as ) ; this . delimiter = delimiter ; }
tr	4	public QueueList ( ) { list = new LinkedList < Item > ( ) ; }
tr	7	public boolean isInsideY ( double y ) { return ( y >= positionY && y <= ( positionY + rectHeight ) ) ; }
tr	2	public boolean getReloj ( ) { return Reloj ; }
tr	10	public void log ( final Object data ) { if ( timeStamped ) { this . log ( logType , data ) ; } else { this . logTimeless ( logType , data ) ; } }
tr	2	public int getPosition ( ) { return position ; }
tr	8	public final void skipBits ( int n ) throws IOException { if ( bit_pos < n ) get_long ( ) ; bit_pos -= n ; }
tr	10	public double addNewTurtle ( int x , int y ) { myWorkspaces . get ( myController . getWorkspaceIndex ( ) ) . addNewTurtle ( x , y ) ; return 1 ; }
tr	2	public int getOutputMode ( ) { return mOutputMode ; }
tr	8	public Email ( int id , String endereco ) { this . id = id ; this . endereco = endereco ; }
tr	1	public item ( ) { }
tr	7	public static boolean is_valid ( String text ) { if ( text . length ( ) <= 25 ) { return false ; } if ( text . length ( ) % 25 == 0 ) return true ; else { return false ; } }
tr	7	public Writer write ( Writer writer ) throws JSONException { return this . write ( writer , 0 , 0 ) ; }
tr	7	public Vec2i ( final int x , final int y ) { this . x = x ; this . y = y ; }
tr	3	public String getReturn ( ) { return _return ; }
tr	4	public void setEast ( boolean east ) { this . east = east ; }
tr	2	public boolean getResult ( ) { return result ; }
tr	6	public void paintComponent ( Graphics g2 ) { g2 . drawImage ( bgImage , 0 , 0 , null ) ; }
tr	5	public void setPromotype ( String promotype ) { this . promotype = promotype ; }
tr	6	public void addPropertyChangeListener ( PropertyChangeListener pcl ) { pcs . addPropertyChangeListener ( pcl ) ; }
tr	7	public int getRowCount ( ) { if ( datos == null ) System . out . println ( "Es nulo" ) ; return datos . size ( ) ; }
tr	5	public CountyInitCmd ( Country country ) { super ( ) ; this . country = country ; }
tr	7	public JSONWriter value ( long l ) throws JSONException { return this . append ( long . toString ( l ) ) ; }
tr	7	@ Bean JmsTemplate jmsTemplate ( ConnectionFactory connectionFactory ) { return new JmsTemplate ( connectionFactory ) ; }
tr	6	public void setLstJoueurs ( List < Joueur > lstJoueurs ) { this . lstJoueurs = lstJoueurs ; }
tr	3	public static ArrayList getRegVecNom ( ) { return m_lstRegNom ; }
tr	2	public void showAddAnimalDialog ( ) { setup ( ) ; }
tr	9	public void wait ( String message , TimeSpan timeout ) { wait ( message , timeout , DEFAULT_INTERVAL ) ; }
tr	3	public void clear ( ) { listModel . clear ( ) ; }
tr	9	private void topScoresDialogWindowClosing ( java . awt . event . WindowEvent evt ) { new CompAction ( ) . ghostOut ( topScoresDialog ) ; }
tr	5	public JsonExportOptions getJsonExportOptions ( ) { return ( JsonExportOptions ) getDataWriter ( ) . getOptions ( ) ; }
tr	9	public Parameter ( final String name , final MatchMode value ) { this . name = name ; this . value = "" + value ; }
tr	1	public void addRoom ( ) { return ; }
tr	8	@ Override public void write ( String message ) { write ( message , false , OutputType . NORMAL ) ; }
tr	1	public HopBillTM ( ) { }
tr	6	protected void submitPrioritaryInfluence ( Influence i ) { _influences . addFirst ( i ) ; }
tr	5	private void setNodeLabels ( ArrayList nodeLabels ) { this . nodeLabels = nodeLabels ; }
tr	4	@ Override public String toString ( ) { return "db.Client[ idClient=" + idClient + " ]" ; }
tr	8	public void serviceRemoved ( ServiceEvent event ) { synchronized ( infos ) { infos . remove ( event . getName ( ) ) ; } }
tr	8	public void setSize ( double w , double h ) throws IllegalArgumentException { setWidth ( w ) ; setHeight ( h ) ; }
tr	10	public Condition equals ( final Condition c ) { return new Condition ( ) { public boolean validate ( ) { return Condition . this . validate ( ) == c . validate ( ) ; } } ; }
tr	6	public void write ( int b ) throws IOException { f . write ( b ) ; }
tr	6	private final void step2 ( ) { if ( ends ( "y" ) && vowelinstem ( ) ) b [ k ] = i ; }
tr	6	public TextBuilder withFont ( MapFont font ) { this . font = font ; return this ; }
tr	7	private void sleep ( int millis ) { try { Thread . sleep ( millis ) ; } catch ( InterruptedException e ) { } }
tr	2	private boolean isPersistent ( ) { return persistent ; }
tr	4	public PortException ( String message ) { super ( message ) ; }
tr	7	public DefaultMessage [ ] getMessages ( ) { return messages . toArray ( new DefaultMessage [ messages . size ( ) ] ) ; }
tr	8	@ Override public int hashCode ( ) { int hash = 0 ; hash += ( idlaboratorios != null ? idlaboratorios . hashCode ( ) : 0 ) ; return hash ; }
tr	6	public static RepositoryContato getInstance ( ) { if ( instance == null ) { instance = new RepositoryContato ( ) ; } return instance ; }
tr	8	public Set < Moderator > getModeratorsOfGroup ( String groupName ) { return this . storage . findModeratorsOfGroup ( groupName ) ; }
tr	3	public List getInfo ( ) { return info ; }
tr	10	public void deploy ( VirtualMachine vm , String destNodeId ) { nodes . get ( destNodeId ) . deploy ( vm ) ; }
tr	5	@ Override public String toString ( ) { return "[" + x + "  " + y + "]" ; }
tr	6	public void println ( Object o ) { out . println ( o ) ; }
tr	10	public void mouseExited ( MouseEvent arg0 ) { String command = "mouseExited-" + arg0 . getComponent ( ) . getName ( ) ; enqueueCommands ( command ) ; }
tr	1	private Constants ( ) { super ( ) ; }
tr	6	public JSONTokener ( InputStream inputStream ) throws JSONException { this ( new InputStreamReader ( inputStream ) ) ; }
tr	10	public void readExternal ( ObjectInput in ) throws IOException , ClassNotFoundException { LayoutUtil . setSerializedObject ( this , LayoutUtil . readAsXML ( in ) ) ; }
tr	2	public long getUserId ( ) { return userId ; }
tr	1	public AboutAction ( ) { super ( "AboutDialog" ) ; }
tr	8	private void mniViewTimesActionPerformed ( java . awt . event . ActionEvent evt ) { Controller . viewTimesWindow ( ) ; }
tr	2	public void testApp ( ) { assertTrue ( true ) ; }
tr	8	public List < MessageVO > getMessageVOs ( ) { if ( messageVOs == null ) { messageVOs = new ArrayList < MessageVO > ( ) ; } return this . messageVOs ; }
tr	4	public int jjtGetNumChildren ( ) { return ( children == null ) ? 0 : children . length ; }
tr	10	public void setGender ( String gender ) { if ( gender != null && ! gender . isEmpty ( ) ) { this . gender = Gender . valueOf ( gender ) ; } }
tr	5	public void setAmexSecrAD ( String value ) { this . amexSecrAD = value ; }
tr	7	public void reset ( ) { uid . setText ( "" ) ; name . setText ( "" ) ; email . setText ( "" ) ; }
tr	10	private ParseException error ( final String message ) { return new ParseException ( message , getOffset ( ) , getCurrentLineNumber ( ) , getColumnNumber ( ) , getLastCharacterRead ( ) ) ; }
tr	3	public String getName ( ) { return name ; }
tr	3	@ Override public void act ( ) throws RestartException { }
tr	4	private void m_uiShowDisassembly_actionPerformed ( ActionEvent e ) { showDebugger ( ) ; }
tr	3	public String getVencTerceiraCota ( ) { return vencTerceiraCota ; }
tr	9	@ Override public String toString ( ) { return "MultipleWall [getX()=" + getX ( ) + "  getY()=" + getY ( ) + "  blockWidth=" + wallWidth + "  getHeight()=" + getHeight ( ) + "  getType()=" + getType ( ) + "  getSprite()=" + getSprite ( ) + "]" ; }
tr	5	public void pressRotateLeft ( ) { inputTorque = inputTorque + steering . pressRotateLeft ( ) ; }
tr	4	public final List < Object > getObjects ( ) { return objects ; }
tr	5	public void setCapacitat ( Integer capacitat ) { this . capacitat = capacitat ; }
tr	3	public void limpiarSiApeNombres ( ) { txtDNI . setText ( "" ) ; }
tr	5	public LayoutParameters ( int width , int height ) { this ( width , height , 0 ) ; }
tr	8	public boolean updateGuestsInRoomDB ( BookingDetail bookingDetail ) { if ( unitOfWork == null ) { openNewTransaction ( ) ; } return unitOfWork . updateGuestsInRoomDB ( bookingDetail ) ; }
tr	5	public int optInt ( String key ) { return optInt ( key , 0 ) ; }
tr	7	public String tag ( String input ) { return tagger . tagString ( input ) ; }
tr	7	public void resetTabsContent ( ) { if ( mRestoreTabController != null ) mRestoreTabController . reset ( ) ; if ( mVisualizeTabController != null ) mVisualizeTabController . reset ( ) ; }
tr	3	public int getCurrentRound ( ) { return getFinalRound ( currentMatch ) ; }
tr	2	public boolean isVegetarian ( ) { return vegetarian ; }
tr	10	public GliderUser ( XCGame app , Vector3d p ) { super ( app , p , true ) ; app . eventManager . subscribe ( this ) ; }
tr	5	public void setSizeWithHead ( Integer sizeWithHead ) { this . sizeWithHead = sizeWithHead ; }
tr	3	static BlobScroller getInterceptScroller ( ) { return interceptScroller ; }
tr	4	public void testGetVirtualLinks ( ) { assertNotNull ( request . getVirtualLinks ( ) ) ; }
tr	5	public void setMainWindow ( MainWindow mainWindow ) { this . mainWindow = mainWindow ; }
tr	3	public Cliente ( ) { mascotas = new ArrayList ( ) ; }
tr	2	public double getOccupiedSpace ( ) { return occupiedSpace ; }
tr	6	public Callout_argContext callout_arg ( int i ) { return getRuleContext ( Callout_argContext . class , i ) ; }
tr	10	public static SpotLight [ ] getSpotLights ( ) { SpotLight [ ] lights = new SpotLight [ spotLights . size ( ) ] ; return spotLights . toArray ( lights ) ; }
tr	1	public LinearRing ( ) { super ( ) ; }
tr	9	public static final int setBit ( int data , int bit , boolean value ) { return value ? data | ( 01 << bit ) : ( data & ~ ( 01 << bit ) ) ; }
tr	10	public TestListNotification ( HashMap < String , Object > applyNotificationTo , boolean silent ) { this . applyNotificationTo = applyNotificationTo ; this . silent = silent ; }
tr	8	@ Override public String toString ( ) { return String . format ( "%d/%d/%d" , day , month , year ) ; }
tr	3	public PurchaseOrderInformation getPurchaseOrderInformation ( ) { return purchaseOrderInformation ; }
tr	7	public KmlException ( String arg0 , Throwable arg1 ) { super ( arg0 , arg1 ) ; }
tr	10	protected void setRedoText ( String arg ) { if ( ! cmdRedo . getToolTipText ( ) . equals ( arg ) ) { cmdRedo . setToolTipText ( arg ) ; } }
tr	8	public BoardChangedEvent ( Object source , Location [ ] locations ) { super ( source ) ; this . locations = locations ; }
tr	10	public JSTableDialog ( String title , String [ ] headings , int rows ) { this ( title , headings , getDefaultButtonArray ( ) , rows ) ; }
tr	6	public boolean match ( String identifier ) { return myIdentifier . equals ( identifier ) ; }
tr	3	public int currentXPToLevel ( ) { return this . xpToLevel ( ) - this . getCurrentXP ( ) ; }
tr	2	public int getRenown ( ) { return renown ; }
tr	10	public UnauthorizedException ( int code , int category , String message , int httpStatusCode ) { super ( code , category , message , httpStatusCode ) ; }
tr	10	public void processEvent ( AWTEvent e ) { if ( e . getID ( ) == Event . WINDOW_DESTROY ) { dispose ( ) ; } else { super . processEvent ( e ) ; } }
tr	8	public static void main ( String [ ] args ) { CountingSort sort = new CountingSort ( ) ; sort . process ( ) ; }
tr	3	public String getNombre ( ) { return nombre ; }
tr	4	public void setZ ( int z ) { this . z = z ; }
tr	8	public void writeVariable ( String variable , int toAdd ) { getWorkspaceView ( ) . writeVariable ( variable , toAdd ) ; }
tr	1	public CDR ( ) { }
tr	5	public NotConfiguredException ( String message ) { this . message = message ; }
tr	9	public static RenameMapCommand rename ( Map map , String newName ) { return new RenameMapCommand ( map , newName ) ; }
tr	10	MyToken read ( TokenID expectedToken , String expectedString ) { expect ( expectedToken , expectedString ) ; return read ( ) ; }
tr	10	public boolean equals ( Object o ) { if ( o == null ) return false ; if ( o == this ) return true ; if ( o instanceof ASPath ) return this . equals ( ( ASPath ) o ) ; return false ; }
tr	9	public Plot ( ) { super ( 70 , 50 , "plot" ) ; input = new InputConnector ( "u" , Component . Position . bottom ) ; register ( input ) ; reset ( ) ; }
tr	6	@ Override public Integer call ( ) throws Exception { COUNT += 1 ; return COUNT ; }
tr	8	public static void sendMsg ( Team team , String msg ) { team . write ( msg ) ; }
tr	5	public void reset ( ) { currentScene . dispose ( ) ; currentScene = new TitleScene ( ) ; }
tr	5	public void setLongBoneName ( String longBoneName ) { this . longBoneName = longBoneName ; }
tr	8	public Vertex ( Vector3f pos , Vector2f texCoord ) { this ( pos , texCoord , new Vector3f ( 0 , 0 , 0 ) ) ; }
tr	10	public static long of ( long n , long b1 , long b2 , long b3 ) { return _of ( n , b1 , b2 , b3 ) ; }
tr	6	public void setLeft ( int left ) { Dispatch . put ( this , "Left" , new Variant ( left ) ) ; }
tr	10	private void addEntityCount ( int amount ) { this . entityCount . add ( amount ) ; while ( this . entityCount . size ( ) > maxSize ) { this . entityCount . remove ( 0 ) ; } }
tr	1	public void construct ( ) { return ; }
tr	5	public T call ( ) throws Exception { return future . get ( ) ; }
tr	6	public Range ( int single ) { this . left = single ; this . right = single ; }
tr	7	public HitWallEventImpl ( long time , Vector hitPos ) { super ( time ) ; this . hitPos = hitPos ; }
tr	8	public Vector2f mul ( float r ) { return new Vector2f ( x * r , y * r ) ; }
tr	3	@ Override public int hashCode ( ) { return id ; }
tr	4	public List < SwarmDeclaration > getArguments ( ) { return myArguments ; }
tr	1	public Person ( ) { super ( ) ; }
tr	5	public Trendline setShadow ( boolean shadow ) { this . shadow = shadow ; return this ; }
tr	7	private void formWindowClosed ( java . awt . event . WindowEvent evt ) { dispose ( ) ; }
tr	7	public UnexpectedResultatSizeException ( final String message , final Throwable cause ) { super ( message , cause ) ; }
tr	9	private int getBaseScore ( Sequence sequence ) { int length = sequence . getSequence ( ) . length ( ) ; if ( length < 4 ) return 10 ; if ( length < 7 ) return 20 ; else return 40 ; }
tr	9	public ComponentMover ( Component destinationComponent , Component ... components ) { this . destinationComponent = destinationComponent ; registerComponent ( components ) ; }
tr	3	public static boolean isUnix ( ) { return isLinux ( ) || isMac ( ) ; }
tr	6	public IValue peek ( ) { if ( _stack . isEmpty ( ) ) { return null ; } return _stack . peek ( ) ; }
tr	4	public void close ( ) throws IOException { out . close ( ) ; }
tr	8	public List < Match > getMatch ( ) { if ( match == null ) { match = new ArrayList < Match > ( ) ; } return this . match ; }
tr	2	public boolean isGuiOpen ( ) { return gui_open ; }
tr	2	public boolean getIsReset ( ) { return isReset ; }
tr	7	public MsgDaoException ( String message , Throwable cause ) { super ( message , cause ) ; }
tr	6	@ Override public void addDict ( Dict value ) { add ( value ) ; }
tr	3	public String cookie ( ) { return cookie ; }
tr	10	@ Override public boolean addComplexObject ( String id , Composition c ) { return delegate . addComplexObject ( id , c ) ; }
tr	3	public String getMateria ( ) { return materia ; }
tr	7	public BN6BattleProvider ( RandomizerContext context , BattleProducer producer ) { super ( context , producer ) ; }
tr	5	public void setCodTipoPagamento ( Integer codTipoPagamento ) { this . codTipoPagamento = codTipoPagamento ; }
tr	7	public int kannNochSoVielArbeiten ( ) { int i = hoursPerWeek . intValue ( ) - arbeitsZeit . intValue ( ) ; return i ; }
tr	9	public boolean examine ( ) { System . out . println ( "A steel broadsword. The hilt is wrapped in leather." ) ; if ( this . name . contains ( "vorpal" ) ) { System . out . println ( "The edge seems very sharp." ) ; } return true ; }
tr	9	public boolean deleteUser ( String username ) { if ( this . users . get ( username ) != null ) { this . users . remove ( username ) ; return true ; } return false ; }
tr	8	public KeyCommand ( KeyStrike strike , int keycode ) { super ( ) ; this . strike = strike ; this . keycode = keycode ; }
tr	2	public int getT_tap ( ) { return t_tap ; }
tr	9	RSApplet ( ) { delayTime = 20 ; minDelay = 1 ; aLongArray7 = new long [ 10 ] ; shouldDebug = false ; shouldClearScreen = true ; awtFocus = true ; keyArray = new int [ 128 ] ; charQueue = new int [ 128 ] ; }
tr	3	public void onNewSong ( Line line ) { }
tr	10	public boolean isLeaf ( Object node ) { if ( asksAllowsChildren ) return ! ( ( TreeNode ) node ) . getAllowsChildren ( ) ; else return ( ( TreeNode ) node ) . isLeaf ( ) ; }
tr	6	public boolean delNode ( String hostname ) { return nodeList . delNode ( hostname ) ; }
tr	7	public void push ( ) { matrix [ top + 1 ] . copy ( matrix [ top ] ) ; top ++ ; }
tr	6	@ Autowired public SessionService ( SessionRepository sessions ) { this . sessions = sessions ; }
tr	9	private void btnBackallActionPerformed ( java . awt . event . ActionEvent evt ) { i = 0 ; btnPesquisarActionPerformed ( evt ) ; }
tr	1	public boolean isContainer ( ) { return false ; }
tr	2	public int getNumberOfChildren ( ) { return numberOfChildren ; }
tr	4	public void setNeedsPass ( boolean needsPass ) { this . needsPass = needsPass ; }
tr	9	public Pair ( F first , S second ) { this . first = first ; this . second = second ; }
tr	1	public TollFreeNumberRental ( ) { }
tr	2	public boolean isNotified ( ) { return notified ; }
tr	4	@ Override public String getSchema ( ) throws SQLException { return null ; }
tr	5	public void setComments ( String comments ) { this . comments = comments ; }
tr	8	@ Test public void testEncodingTestForDataSize ( ) { assertEquals ( "ziplist" , this . hashZipList . getBeforeEncoding2 ( ) ) ; assertEquals ( "hashtable" , this . hashZipList . getAfterEncoding2 ( ) ) ; }
tr	8	@ Override public void focusGained ( FocusEvent e ) { if ( this . getText ( ) . equals ( hint ) ) super . setText ( "" ) ; }
tr	9	public static void main ( String [ ] args ) { MagicTrick magicTrick = new MagicTrick ( ) ; magicTrick . main ( args [ 0 ] ) ; }
tr	2	public boolean hasIrrigationTile ( ) { return irrigationTiles > 0 ; }
tr	10	public void paint ( Graphics2D pen , double heading ) { myView . paint ( pen , myCenter , mySize , heading ) ; }
tr	5	@ JsonProperty ( "StorageAccessProtocolID" ) public List < String > getStorageAccessProtocolID ( ) { return StorageAccessProtocolID ; }
tr	2	public final int getEpochs ( ) { return this . epochs ; }
tr	9	@ Override @ Transactional public Kit getEventKit ( Integer eventId ) { return eventDAO . getEventKit ( eventId ) ; }
tr	6	public String getConfirmarSenha ( ) { return String . copyValueOf ( this . textConfirmarSenha . getPassword ( ) ) ; }
tr	5	@ Override public void setPrev ( Filter f ) { throw new UnsupportedOperationException ( "This is an endpoint." ) ; }
tr	1	FormListener ( ) { }
tr	1	public EliminarFarmacia ( ) { super ( ) ; }
tr	5	@ XmlElement ( name = "n" ) public n getYawMomment ( ) { return n ; }
tr	2	public int [ ] getBlockPointers ( ) { return this . blockPointers ; }
tr	9	public final void addEpisodes ( Collection < EpisodeMatch > episodes ) { for ( EpisodeMatch episode : episodes ) { addEpisode ( episode ) ; } }
tr	2	@ Override public boolean isLiteralValue ( ) { return true ; }
tr	3	public Integer getBuycount ( ) { return buycount ; }
tr	2	public double getDomesticMig2010 ( ) { return domesticMig2010 ; }
tr	8	@ Test public void testAddProduct ( ) { assertEquals ( "OK" , this . cart . addProduct ( "151" , "\uC6D0\uB450\uCEE4\uD53C" , 1 ) ) ; assertEquals ( "OK" , this . cart . addProduct ( "156" , "\uCE94\uCEE4\uD53C" , 5 ) ) ; }
tr	9	public PlayerTableMouseListener ( JTable table , LB2Kview view ) { this . table = table ; this . view = view ; }
tr	5	public Door ( int id ) { this . id = id ; openStatus = false ; }
tr	6	@ Override public void actionPerformed ( ActionEvent e ) { UISupport . showMessage ( "Open" ) ; }
tr	6	public void addInt ( int a ) { size ++ ; info . add ( a ) ; }
tr	3	@ Override public int size ( ) { return size ; }
tr	6	public static Json getInstance ( ) { if ( instance == null ) { instance = new Json ( ) ; } return instance ; }
tr	7	@ Override public void buildMessage ( String string ) { clientName = string . substring ( 5 ) ; }
tr	3	public String toString ( ) { return "Expert Attack:\t" + getDescription ( ) ; }
tr	1	public void begin ( ) { }
tr	4	public ArrayList < BufferedImage > getFrames ( ) { return frames ; }
tr	2	public int getX ( ) { return x ; }
tr	2	public int getHpBase ( ) { return hpBase ; }
tr	7	@ Override public Person editPerson ( String json , long id ) { throw new UnsupportedOperationException ( "Not supported yet." ) ; }
tr	4	@ Override public void componentShown ( ComponentEvent e ) { }
tr	10	@ Override public final Date unmarshal ( final String v ) throws ParseException { return new SimpleDateFormat ( DATE_FORMAT ) . parse ( v ) ; }
tr	7	public void setDate ( Date date ) { this . date = date ; console . refreshEntry ( this ) ; }
tr	1	public ImmutableSet ( ) { super ( ) ; }
tr	8	public void open ( InputStream inputStream ) throws BasicPlayerException { if ( inputStream != null ) { m_dataSource = inputStream ; initAudioInputStream ( ) ; } }
tr	7	@ Override public T getById ( int id ) { return dao . getById ( id ) ; }
tr	6	public MainWindow ( DataModel model ) { this . model = model ; init ( ) ; }
tr	8	public PlayerHandler45 ( Socket socket , CardGame45 cGame45 ) { super ( socket ) ; this . cGame45 = cGame45 ; }
tr	10	@ Override public boolean accept ( File f ) { return f . isDirectory ( ) || f . getName ( ) . toLowerCase ( ) . endsWith ( ".hex" ) ; }
tr	6	public JPreviousIcon ( int width , int height ) { setDimension ( width , height ) ; }
tr	1	public void applyVelocity ( ) { }
tr	2	public int getId_ut ( ) { return id_ut ; }
tr	4	@ Override public String getMessage ( ) { return singleOptionMessage ( ) + " is not a legal option character" ; }
tr	2	public void checkListen ( int port ) { }
tr	5	public SMValue ( T value ) { this . value = value ; }
tr	9	@ Override public String toString ( ) { return "Token(" + id + "(" + id . id ( ) + ")" + " " + text + " " + line + " " + column + ")" ; }
tr	10	@ Override public int getPopulation ( ) { int counter = 0 ; for ( Region r : regions ) counter += r . getPopulation ( ) ; return counter ; }
tr	2	public int getDoubleInJail ( ) { return this . doubleInWormhole ; }
tr	5	public void setMinDelay ( MinimumDelay minDelay ) { this . minDelay = minDelay ; }
tr	2	public int num_states ( ) { return _num_states ; }
tr	10	public void debugf ( String fmt , Object ... args ) { core ( Level . DEBUG , fmt , null , args ) ; }
tr	3	public String getTelefone ( ) { return telefone ; }
tr	4	public void setStartY ( int startY ) { this . startY = startY ; }
tr	4	public boolean isCellEditable ( int row , int col ) { if ( col < 1 ) { return false ; } else { return true ; } }
tr	3	public String getLevels ( ) { return levels ; }
tr	7	public NoSuchColumnException ( String message , Throwable cause ) { super ( message , cause ) ; }
tr	9	@ Override public void run ( ) { Singleton singleton = Singleton . singleton ( ) ; singletons . add ( singleton ) ; }
tr	6	Link ( L val ) { this . val = val ; this . next = null ; }
tr	3	public boolean isRight ( ) { return _father . _right == this ; }
tr	8	public void setHideMode ( int mode ) { if ( mode < - 1 || mode > 3 ) throw new IllegalArgumentException ( "Wrong hideMode: " + mode ) ; hideMode = mode ; }
tr	6	@ SuppressWarnings ( "rawtypes" ) public void setStringMapperClass ( class < ? extends StringEnumMapper > stringMapperClass ) { this . stringMapperClass = stringMapperClass ; }
tr	2	public int getCID ( ) { return cID ; }
tr	4	public static void main ( String [ ] arg ) throws Exception { }
tr	1	public void removeUser ( ) { }
tr	4	@ Override protected String getPostfix ( ) { return postfix ; }
tr	3	public Users getUser ( ) { return this . user ; }
tr	5	public MiniGameEventRelayer ( MiniGame initGame ) { game = initGame ; }
tr	8	public ValidarException ( String msg ) { JOptionPane . showMessageDialog ( null , msg , "Erro" , JOptionPane . ERROR_MESSAGE ) ; }
tr	8	public void putShortA ( int j ) { buffer [ position ++ ] = ( byte ) ( j >> 8 ) ; buffer [ position ++ ] = ( byte ) ( j + 128 ) ; }
tr	10	@ Parameters public static Collection sumValues ( ) { return Arrays . asList ( new Object [ ] [ ] { { new GenArrayList < Integer > ( ) } , { new GenLinkedList < Integer > ( ) } } ) ; }
tr	4	public void setDescompte ( float descompte ) { this . descompte = descompte ; }
tr	1	public Player ( ) { }
tr	1	public static int offset_interval ( ) { return ( 8 / 8 ) ; }
tr	3	public String getStyle ( ) { return style ; }
tr	10	@ Test public void whenGameStartsBothPlayersHaveZeroScore ( ) { new GameBoard ( display ) ; verify ( display ) . display ( anyString ( ) , = ( PLAYER_1 + ": 0  " + PLAYER_2 + ": 0" ) ) ; }
tr	8	private void enable ( FocusWidget ... widgets ) { for ( FocusWidget w : widgets ) { w . setEnabled ( true ) ; } }
tr	6	public void print ( Object o ) { out . print ( o ) ; }
tr	10	public void start ( YCondition start ) { this . start = start ; if ( ! conds . contains ( start ) ) { addCond ( start ) ; } }
tr	6	protected TaskTrackerServices ( TaskTracker taskTracker ) throws RemoteException { this . taskTrackerReference = taskTracker ; }
tr	2	public float getMaxz ( ) { return maxz ; }
tr	2	public int getSize ( ) { return size ; }
tr	5	@ Override public String toString ( ) { return "o(" + blackPlayerPoints + " " + whitePlayerPoints + ")" ; }
tr	8	public Main ( ) throws IOException { server = new com . esotericsoftware . kryonet . Server ( ) ; instantiate ( ) ; }
tr	3	public T getData ( ) { return data ; }
tr	3	public AltranreqRole getIdRole ( ) { return idRole ; }
tr	10	@ Override public SimpleArithmeticalOperator resolve ( ) { return new SimpleArithmeticalOperator ( a . resolve ( ) . getValue ( ) + b . resolve ( ) . getValue ( ) ) ; }
tr	2	public boolean isValidChromosome ( ) { return validChromosome ; }
tr	9	public static void updateQuestionnaire ( Questionnaire questionnaire ) { QuestionnaireDao dao = new QuestionnaireDaoMySQL ( ) ; dao . updateQuestionnaire ( questionnaire ) ; }
tr	1	public Alphabet ( ) { this ( 10000 ) ; }
tr	4	public int calculateXAfterRightMove ( int moveStep ) { return ( this . getLeftX ( ) + moveStep ) ; }
tr	7	public boolean isOfType ( String tipus ) { return this . tipus . getNom ( ) . equals ( tipus ) ; }
tr	8	public void useDB ( String dbName ) { String stat = "USE " + dbName ; this . execute ( stat ) ; }
tr	8	public boolean canAttackGrouped ( PositionOrUnit target , boolean checkCanTargetUnit ) { return canAttackGrouped_native ( pointer , target , checkCanTargetUnit ) ; }
tr	5	public void setCommonGrp ( CommonGrp value ) { this . commonGrp = value ; }
tr	1	public Visitor ( ) { this ( "    " ) ; }
tr	6	public boolean get ( int value ) { assertValue ( value ) ; return ( bitset & 1 << value ) > 0 ; }
tr	1	public AuthFilter ( ) { super ( ) ; }
tr	5	public void setCheckRequest ( CheckRequestDetails value ) { this . checkRequest = value ; }
tr	9	protected ASTNode maybeWrapInTerm ( ASTNode node ) { if ( node . getNodeCount ( ) == 1 ) { return node ; } return new TermNode ( node ) ; }
tr	9	public void activateQuest ( String questName ) { activeList . put ( questName , questList . get ( questName ) ) ; }
tr	6	public static Poseur getPoseur ( ) { if ( singleton == null ) { singleton = new Poseur ( ) ; } return singleton ; }
tr	4	public EntityManager getEntityManager ( ) { return this . emf . createEntityManager ( ) ; }
tr	9	public static RemoveLayerCommand remove ( Map map , MapLayer layer ) { return new RemoveLayerCommand ( map , layer ) ; }
tr	1	public void cleanUp ( ) { }
tr	9	@ Override public int hashCode ( ) { int hash = 7 ; hash = 13 * hash + ( this . schema != null ? this . schema . hashCode ( ) : 0 ) ; return hash ; }
tr	8	public boolean isValidBST ( TreeNode root ) { if ( root == null ) { return true ; } return validate ( root , min , max ) ; }
tr	5	@ Subscribe public void showView ( UserViewShowEvent event ) { initLayout ( ) ; }
tr	10	@ Override protected Color [ ] getBarColors ( ) { Color [ ] colors = { new Color ( 0 , 0 , 245 ) , new Color ( 20 , 105 , 255 ) , new Color ( 0 , 0 , 245 ) , new Color ( 0 , 0 , 200 ) } ; return colors ; }
tr	5	public void setRc1 ( ReportCampaign rc1 ) { this . rc1 = rc1 ; }
tr	4	public String [ ] showDialog ( ) { this . setVisible ( true ) ; return result ; }
tr	9	public void procFile ( String filepath , String restart ) { this . lastItem = restart ; copyTable ( filepath ) ; }
tr	1	public void setWeight ( ) { }
tr	2	public int getCom_codigo ( ) { return com_codigo ; }
tr	8	private void printMessage ( String messageOut ) { if ( debug ) { System . out . print ( messageOut ) ; } }
tr	2	public int getY ( ) { return y ; }
tr	6	@ Override public void shareMemberData ( String key , Object object ) { }
tr	9	private void buttonFaseActionPerformed ( java . awt . event . ActionEvent evt ) { app . faseSelecionada ( id ) ; }
tr	7	public Location ( int x , int y ) { this . x = x ; this . y = y ; }
tr	9	public void testValueOfString ( ) throws Exception { SparseInt sint = SparseInt . valueOf ( "123" ) ; assertEquals ( new SparseInt ( "123" ) , sint ) ; }
tr	10	public void setVue ( Vue vue ) { try { getClientRmiImpl ( ) . setVue ( vue ) ; } catch ( RemoteException e ) { e . printStackTrace ( ) ; } }
tr	3	public String getNama ( ) { return nama ; }
tr	2	public BaseInformation ( ) { this . ecrireInformations ( ) ; }
tr	10	@ Test public void testSetUserChoice ( ) throws Exception { ticTacToeGame . setBoardArray ( boardArray ) ; assert . assertSame ( boardArray [ 2 ] [ 2 ] , ticTacToeGame . getBoardArray ( ) [ 2 ] [ 2 ] ) ; }
tr	5	private InputStream getBufferedBody ( ) { if ( this . _bufferedOutput == null ) { return null ; } return new ByteArrayInputStream ( this . _bufferedOutput ) ; }
tr	3	public static void main ( String [ ] args ) { }
tr	7	public e ( ) { if ( ! __initDone ) { LOGGER . setLevel ( Level . SEVERE ) ; __initDone = true ; } }
tr	10	public void showHideDeleteBtn ( ) { if ( ! btnVisible ) { deletePanel . setVisible ( true ) ; this . repaint ( ) ; btnVisible = true ; } else { deletePanel . setVisible ( false ) ; this . repaint ( ) ; btnVisible = false ; } }
tr	1	public FeedScrollBar ( ) { }
tr	1	public void showRallyDetails ( ) { }
tr	9	public StreamCopyRunnable ( InputStream inputStream , OutputStream outputStream ) { this . inputStream = inputStream ; this . outputStream = outputStream ; }
tr	1	public int size ( ) { return 0 ; }
tr	2	public boolean isNullable ( ) { return nullable ; }
tr	10	public synchronized void aggiorna ( ) { Iterator < Giocatore > itGiocatori = this . iterator ( ) ; while ( itGiocatori . hasNext ( ) ) { itGiocatori . next ( ) . aggiorna ( ) ; } }
tr	8	public static void tidyPrint ( PrintWriter p , String msg ) { p . print ( msg ) ; }
tr	1	public FileGarbage ( ) { }
tr	9	private StudyBook ( Builder builder ) { id = builder . id ; name = builder . name ; }
tr	5	public void setView ( NotebookDaysPanelView view ) { this . view = view ; }
tr	2	public long getStorageUsedBlocks ( ) { return storageUsedBlocks ; }
tr	4	public void setMax_force ( float max_force ) { this . max_force = max_force ; }
tr	2	public final boolean readBoolean ( ) { return readBoolean ( null ) ; }
tr	8	public void setFrom ( String from ) { paramPush ( FROM , from ) ; this . from = from ; }
tr	4	public void sendClearATOCommand ( ) { sendCommand ( "Clear ATO" , Globals . requestClearATO ) ; }
tr	7	@ Override public void writeData ( GameServer server ) { server . sendDataToAllClients ( getData ( ) ) ; }
tr	8	public void setTextSize ( bwapi . Text . Size . enum size ) { setTextSize_native ( pointer , size ) ; }
tr	1	public boolean availableForSwamp ( ) { return true ; }
tr	3	public Usuario getAnalista ( ) { return analista ; }
tr	7	public String toString ( ) { return this . getString ( ) + " " + this . getNumber ( ) + " " + this . isBoolean ( ) + "." + this . getBENT ( ) + " " + this . getX ( ) ; }
tr	10	public boolean encontrarele ( String nombre ) { int i = 0 ; while ( i < this . size ) { if ( nombre == this . lista [ i ] ) { return true ; } else { ++ i ; } } return false ; }
tr	7	private GPSFunctionalityVerfiedActivity getVerifyGPSActvity ( ) { if ( gpsFunctionalityVerfiedActiviy == null ) { gpsFunctionalityVerfiedActiviy = new GPSFunctionalityVerfiedActivity ( clientFactory ) ; } return gpsFunctionalityVerfiedActiviy ; }
tr	2	@ Override public int getUniqueSerializerId ( ) { return 123499 ; }
tr	2	public synchronized int xgetD1InitialDelay ( ) { return d1ID ; }
tr	7	private void parseName ( String image_path ) { myName = image_path . split ( "/" ) [ 2 ] . split ( "\\." ) [ 0 ] ; }
tr	8	public static void qsort ( List < ? extends Comparable > list ) { qsort ( list , 0 , list . size ( ) - 1 ) ; }
tr	1	private SpecialOperations ( ) { }
tr	6	public void create ( ParkReservationFacade parkReservationFacade ) { em . persist ( parkReservationFacade ) ; }
tr	8	public Peer ( String ip , int port ) { this . ip = ip ; this . port = port ; }
tr	3	public PlayRound ( ) { initComponents ( ) ; currentCourse = null ; }
tr	7	public void append ( String s ) { append ( Color . WHITE , null , s ) ; }
tr	9	@ Override public void sendPacket ( DatagramPacket pkt ) throws IOException { synchronized ( sendLock ) { getDgSocket ( ) . send ( pkt ) ; } }
tr	5	public static void notNull ( Object object ) { notNull ( object , "[Assertion failed] - this argument is required; it must not be null" ) ; }
tr	7	@ Override public void windowDeactivated ( WindowEvent e ) { smile = false ; face . repaint ( ) ; }
tr	4	public void set_price ( double in ) { _price = in ; }
tr	7	public Font ( java . awt . Font f ) { this . f = f ; }
tr	7	Customer ( int i , int arvTime ) { num = i ; arriveTime = arvTime ; }
tr	10	private String getLinkContinueToken ( JsonObject result ) { for ( String token : CONTINUE_TOKEN_NAVIGATOR . navigate ( result ) ) return token ; return null ; }
tr	3	public String getId ( ) { return id ; }
tr	5	public void setPsm ( String psm ) { this . psm = psm ; }
tr	8	public void addFireByPixel ( int posX , int posY ) { addFire ( posX / tileDim , posY / tileDim ) ; }
tr	4	public File getScmFile ( ) { if ( this . isScmFile ( ) ) return this . scmFile ; return null ; }
tr	10	public int getNumberOfSell ( ) { int count = 0 ; for ( GeneratedSignal gs : genSigList ) { if ( gs . getType ( ) . equals ( "sell" ) ) { count ++ ; } } return count ; }
tr	10	public JSONObject element ( String arg0 , Map arg1 ) { return getJSONObject ( ) . element ( arg0 , arg1 ) ; }
tr	9	@ Override public void render ( Graphics2D g ) { g . setColor ( color ) ; super . render ( g ) ; }
tr	3	@ Test public void testGetSerialversionuid ( ) { fail ( "Not yet implemented" ) ; }
tr	3	public String getFromUserId ( ) { return fromUserId ; }
tr	7	public Builder searchBook ( List < Search > value ) { searchBook = value ; return this ; }
tr	7	@ Override public void sendMessage ( final String message ) { bukkitPlayer . sendMessage ( message ) ; }
tr	3	public String getMessage ( ) { return message ; }
tr	8	public MainPanel ( final Composite parent , final int style , final int formstyle ) { super ( parent , style , formstyle ) ; }
tr	4	public static void main ( String args [ ] ) { new ProjectileGui ( ) ; }
tr	9	private static void addParametrizedService ( String id , ParametrizedOperation op ) { parametrizedServices . put ( id , op ) ; }
tr	9	public RequestToken getOAuthRequestToken ( ) throws TBlogException { this . oauthToken = new RequestToken ( httpRequest ( requestTokenURL , null , true ) , this ) ; return ( RequestToken ) this . oauthToken ; }
tr	1	public S_Texto ( ) { super ( ) ; }
tr	10	public Writer writeBytes ( byte [ ] b ) throws IOException { if ( b == null ) { writeNull ( ) ; return this ; } return writeBytes ( b , 0 , b . length ) ; }
tr	9	public OAuth2AccessToken getOAuth2AccessTokenByCode ( String code ) throws TBlogException { return this . http . getOAuth2AccessTokenByCode ( code , redirectURL ) ; }
tr	3	public static void main ( String [ ] args ) { }
tr	5	public void setOMerchant ( Merchant merchant ) { oMerchant = merchant ; }
tr	4	private if ( BooleanExpression condition ) { this . condition = condition ; }
tr	1	public boolean reversible ( ) { return true ; }
tr	5	public WrappedCoroutine ( Coroutine coroutine ) { this . coroutine = coroutine ; }
tr	7	private JComboBox < SportDiscipline > getCB_Discipline ( ) throws SQLException , SQLDriverNotFoundException , SQLConnectionException { return getCB_Discipline ( null ) ; }
tr	9	< T > ClassSchema < T > getSchema ( class < T > type ) { return getSchema ( type , staticFieldPolicy ) ; }
tr	8	public void setNextTurnPlayer ( ) { IPlayer tempPlayer = playerTurn ; playerTurn = nextPlayerTurn ; nextPlayerTurn = tempPlayer ; }
tr	9	public static String copyStreamToString ( InputStream input ) throws IOException { return copyStreamToString ( input , input . available ( ) ) ; }
tr	8	public JSONArray put ( int index , double value ) throws JSONException { this . put ( index , new double ( value ) ) ; return this ; }
tr	7	public final void setDebugMode ( boolean debug ) { if ( debug != this . debug ) { this . debug = debug ; doSetDebugMode ( ) ; } }
tr	4	public Command clone ( ) { return new DecrementFontSizeCommand ( receiver ) ; }
tr	5	public String toString ( ) { return "CREATE " + ( temporary ? "TEMPORARY " : "" ) + "TABLE " + ( exists ? "IF NOT EXISTS " : "" ) + name ; }
tr	5	private byte [ ] toBytes ( String s ) { return s . getBytes ( ) ; }
tr	9	public static void main ( String [ ] args ) { Main main = new Main ( ) ; initApplication ( ) ; main . start ( ) ; }
tr	1	public All ( ) { super ( "+" ) ; }
tr	8	@ Override public void runQueryForAd ( Query processedQuery , int _numResults , ScoredDocs scoredAdDocs ) { throw new UnsupportedOperationException ( "should be implemented first" ) ; }
tr	9	public Channel ( Server server , String channel ) { this . server = server ; this . channel = channel ; }
tr	2	public final int [ ] getReverseBoard ( ) { return _reverseboard ; }
tr	3	public SendMessageResponse createSendMessageResponse ( ) { return new SendMessageResponse ( ) ; }
tr	4	public List < Note > getNotes ( ) { return notes ; }
tr	7	void load ( DataInput dis ) throws IOException { data = dis . readByte ( ) ; }
tr	7	public int hashCode ( ) { return ( x + height + 1 ) * ( y + width + 1 ) ^ x ^ y ; }
tr	4	public void setB ( float b ) { this . b = b ; }
tr	10	public RoadAgent ( int length , AID firstRoadEnd , AID secondRoadEnd ) { new RoadAgent ( length , firstRoadEnd , secondRoadEnd , 0 ) ; }
tr	1	public RetrieveCarDesignPartsFacade ( ) { }
tr	6	@ Override public void actionPerformed ( final ActionEvent e ) { setVisible ( false ) ; dispose ( ) ; }
tr	3	public String getArg1 ( ) { return arg1 ; }
tr	7	@ Override public void cerrarOrdenCompra ( ) { System . out . println ( "Orden codigo " + ordenCompra . getCodigo ( ) + " en estado cerrado" ) ; }
tr	7	public PositionAtom getAtomAt ( int row , int col ) { return atomsOnBoard [ row ] [ col ] ; }
tr	6	public MatchingPatternCube ( Geometry world , int dimension ) { super ( world , dimension ) ; }
tr	1	private Util ( ) { }
tr	6	public static byte update ( byte data , byte crc ) { return CRC8_TABLE [ crc ^ data ] ; }
tr	1	private Units ( ) { }
tr	8	public Particle ( double [ ] src ) { System . arraycopy ( src , 0 , position , 0 , src . length ) ; }
tr	5	public void setPageFooter ( Band newValue ) { pageFooter = newValue ; }
tr	4	public synchronized void commit ( ) throws SQLException { con . commit ( ) ; }
tr	10	public void addData ( long time , int hr , int load ) { testDatas . add ( new TestData ( time , hr , load ) ) ; }
tr	9	public ApnsServiceBuilder withDelegate ( ApnsDelegate delegate ) { this . delegate = delegate == null ? ApnsDelegate . EMPTY : delegate ; return this ; }
tr	8	public void removeRow ( int row ) { datas . removeElementAt ( row ) ; fireTableRowsDeleted ( row , row ) ; }
tr	4	public void setSensitivity ( float sensitivity ) { this . sensitivity = sensitivity ; }
tr	3	public String getStr ( ) { return str ; }
tr	8	@ Override public Auction retrieve ( long id ) { return ( Auction ) searches . get ( id ) ; }
tr	9	public void addNewItem ( ) throws Exception { T item = this . clazz . newInstance ( ) ; this . items . add ( item ) ; }
tr	10	@ Override public void createAppointment ( Room room , Course course ) { scheduleElement . createAppointment ( room , course ) ; }
tr	4	public void setCertmapMgId ( int certmapMgId ) { this . certmapMgId = certmapMgId ; }
tr	7	public DeltaRule setLearningRate ( double learningRate ) { if ( learningRate <= 0 ) throw new IllegalArgumentException ( "Must be greater than 0" ) ; this . learningRate = learningRate ; return this ; }
tr	10	@ Override public InputStream getInputStream ( ) throws IOException { switch ( failValue ) { case 0 : return new InputStream ( ) { @ Override public int read ( ) throws IOException { return 1 ; } } ; case 1 : return null ; default : throw new IOException ( ) ; } }
tr	6	@ Override public void setUpElement ( ) { addMouseListener ( this ) ; setOpaque ( opac ) ; selected = false ; }
tr	2	@ Override public int length ( ) { return 28 ; }
tr	3	public String getName ( ) { return name ; }
tr	4	public void setK ( int k ) { this . k = k ; }
tr	1	public FloatPatternFormat ( ) { }
tr	5	public void setTexture ( Texture texture ) { _texture = texture ; }
tr	5	public void setUri ( String uri ) { this . uri = uri ; }
tr	3	public void cargarDialogoCrearPersona ( ) { dialogoCrearPersona . setVisible ( true ) ; }
tr	3	public List < long > getStudentGroupIds ( ) { return studentGroupIds ; }
tr	4	public void setVolume ( double volume ) { this . volume = volume ; }
tr	2	public int getRudderPosition ( ) { return rudderPosition ; }
tr	6	@ Override public String toString ( ) { return id + "(" + dec . toString ( ) + ")" ; }
tr	6	@ Override public void windowClosing ( WindowEvent e ) { System . exit ( 0 ) ; }
tr	10	@ Override public void warn ( String msg ) { logger . warn ( msg + "\nPlease check it in " + getFilePath ( ) + ": at row=" + rowNum + "  col=" + colNum ) ; }
tr	6	private void recalculateEntries ( ) { ( ( ComplexGameOverviewModel ) view . getComplexgamelist ( ) . getModel ( ) ) . refillData ( ) ; }
tr	3	public String getUserAgent ( ) { return this . userAgent ; }
tr	3	public Color getColor ( ) { return color ; }
tr	6	public void setEntities ( ArrayList < GameEntity > param ) { entities = param ; }
tr	9	public void addNodeInfo ( int node , String info ) { gui . gp . addNodeInfo ( node , info ) ; }
tr	10	public void setPlayerScore ( final Integer score ) { EventQueue . invokeLater ( new Runnable ( ) { public void run ( ) { statusBar . setPlayerScoreValue ( score ) ; } } ) ; }
tr	1	private Constants ( ) { }
tr	2	public int getSalary ( ) { return salary ; }
tr	4	public boolean hasArgName ( ) { return argName != null && argName . length ( ) > 0 ; }
tr	10	public void clear ( ) { loaded = null ; loadedtype = null ; if ( oe != null ) { remove ( oe ) ; oe = null ; invalidate ( ) ; SwingUtilities . updateComponentTreeUI ( this ) ; } }
tr	1	public encoder ( ) { }
tr	8	public static class < ? > getUserClass ( Object instance ) { assert . notNull ( instance , "Instance must not be null" ) ; return getUserClass ( instance . getClass ( ) ) ; }
tr	9	public void clear ( int initialSize ) { array = new Object [ initialSize ] ; heapSize = 0 ; if ( indexes != null ) indexes . clear ( ) ; }
tr	9	private float [ ] add ( float [ ] v1 , float [ ] v2 ) { return new float [ ] { v1 [ 0 ] + v2 [ 0 ] , v1 [ 1 ] + v2 [ 1 ] , v1 [ 2 ] + v2 [ 2 ] } ; }
tr	1	public void unload ( ) { }
tr	8	@ Override public void actionPerformed ( ActionEvent evnt ) { if ( evnt . getSource ( ) == btnCerrar ) dispose ( ) ; }
tr	5	public String getGui_label ( ) { return otapiJNI . Contact_gui_label_get ( swigCPtr , this ) ; }
tr	9	@ Override public void run ( final Vehicle vehicle ) throws IOException { printVehicleStats ( vehicle , System . out ) ; }
tr	6	public void setRolle ( String rolle ) { this . rolle = replaceChar ( rolle ) ; }
tr	10	public int length ( ) { LinkedListNode iter = this ; int acc = 0 ; while ( iter != null ) { acc ++ ; iter = iter . next ; } return acc ; }
tr	1	public MenuException ( ) { }
tr	3	public String toString ( ) { return "Fruit-" + ( id ) ; }
tr	5	public void set_block_id ( String in ) { _block_id = in ; }
tr	4	public void setYOffset ( double param ) { yOffset = param ; }
tr	8	@ Override public Object getValueAt ( int arg0 , int arg1 ) { return data [ arg0 ] [ arg1 ] ; }
tr	6	public void setNomeTF ( String nomeTF ) { jTextField1 . setText ( nomeTF ) ; }
tr	10	public GameController ( ) { this . level = START_LEVEL ; if ( START_LEVEL > - 1 ) { this . playerHealth = 4 ; this . playerRange = 4 ; this . playerPower = this . level ; } this . enemyFactory = new EnemyFactory ( this ) ; }
tr	5	public void setPlatformName ( String platformName ) { this . platformName = platformName ; }
tr	2	public int getPoints ( ) { return points ; }
tr	9	@ Override public void windowClosing ( WindowEvent we ) { if ( miniGame . getDataModel ( ) . inProgress ( ) ) { } System . exit ( 0 ) ; }
tr	8	public void setPrefix ( String prefix ) { if ( prefix == null ) { setPrefix ( new String ( ) ) ; return ; } this . prefix = prefix ; }
tr	5	protected long statisticsFinishedLen ( ) { return LambdaUtils . reduce ( tasks , 0 , funcInStatistics ) ; }
tr	8	public int getRowSize ( int i ) { if ( i > rowSize . length || i < 0 ) { return - 1 ; } else { return rowSize [ i ] ; } }
tr	4	public void setHasTitle ( boolean param ) { hasTitle = param ; }
tr	4	public static KbUtils getInstance ( ) { return SingletonHolder . instance ; }
tr	8	private void effacer ( java . awt . event . ActionEvent evt ) { nomEtu . setText ( "" ) ; }
tr	8	public static void printlnDebug ( String debugString ) { if ( SHOW_DEBUG ) { System . out . println ( debugString ) ; } }
tr	7	private int getNextIndicator ( ) throws IOException { if ( this . indicator == 0 ) { this . indicator = in . read ( ) ; } return this . indicator ; }
tr	3	public String getYTitle ( ) { return yaxisTitle ; }
tr	1	public Announcements ( ) { }
tr	10	private void addNonNumericalToken ( String previousNumber , Token t ) { createAndAddNumber ( previousNumber ) ; this . m_tokenizedExpression . add ( t ) ; }
tr	8	public void setExternalDistance ( String accession , double extDist ) { extDistances . put ( accession , extDist ) ; }
tr	9	public Disparo ( Punto unaPosicion ) { super ( 50 , unaPosicion ) ; setColor ( Color . CYAN ) ; this . posicion = unaPosicion ; }
tr	7	public Quaternion conjugate ( ) { return new Quaternion ( - x , - y , - z , w ) ; }
tr	2	public int getApCost ( ) { return apCost ; }
tr	1	public Article ( ) { }
tr	5	@ Override public boolean isCellEditable ( int row , int column ) { return ( column < 2 ) ; }
tr	9	public Atribuicao ( String id , Expressao exp ) { this . id = id ; this . exp = exp ; }
tr	2	public int getStock ( ) { return stock ; }
tr	1	private SingletonOfConstantsS ( ) { }
tr	8	@ Override public void setFloat ( long i , float value ) { set ( i , float . toString ( value ) ) ; }
tr	4	public void setCurrentIndex ( int currentIndex ) { this . currentIndex = currentIndex ; }
tr	9	@ Override public Object uscitaPartita ( String token ) throws InvalidTokenException { return myLogica . doUscitaPartita ( token ) ; }
tr	5	public GenerateVideo ( String currDirectory ) { this . currDirectory = currDirectory ; }
tr	2	public long getTimeToWait ( ) { return this . timeToWait ; }
tr	8	public DefaultComboBoxModel getCbmodel ( NombreTablas tabla ) throws SQLException { setDataComboBoxModel ( tabla ) ; return cbmodel ; }
tr	1	public VertexParser ( ) { }
tr	8	public final void update ( Graphics g ) { if ( graphics == null ) graphics = g ; shouldClearScreen = true ; raiseWelcomeScreen ( ) ; }
tr	8	public GradeBook ( String name , int [ ] [ ] gradesArray ) { courseName = name ; grades = gradesArray ; }
tr	8	public void setRunMenuItemsEnabled ( boolean enable ) { for ( JMenuItem item : menuItemsDisabledDuringRun ) item . setEnabled ( enable ) ; }
tr	4	public void setMinRefreshPeriod ( double minRefreshPeriod ) { this . minRefreshPeriod = minRefreshPeriod ; }
tr	1	public ListenableConcurrentValue ( ) { super ( ) ; }
tr	1	private Science ( ) { }
tr	6	public JSONArray put ( boolean value ) { values . add ( value ) ; return this ; }
tr	3	public BigInteger getOrdernumber ( ) { return ordernumber ; }
tr	5	public void setUserPhoto ( String userPhoto ) { this . userPhoto = userPhoto ; }
tr	2	public boolean isBlsSpecialBonusAvailable ( ) { return blsSpecialBonusAvailable ; }
tr	1	public void playerFire ( ) { }
tr	7	public Point getMouseLocation ( ) { return new Point ( input . getMouseX ( ) , input . getMouseY ( ) ) ; }
tr	3	public EntityMarking ( ) { this ( EntityMarkingCharacterSet . ASCII , "" ) ; }
tr	2	@ Override public boolean isList ( ) { return false ; }
tr	4	public static void main ( String [ ] args ) { startEmbededSeleniumServer ( ) ; }
tr	1	private ActorManager ( ) { }
tr	8	public ReadOnlyRestrictedPropSource ( PropSource propSource , Set < String > propKeys ) { super ( propSource , propKeys ) ; }
tr	4	public CharArrayWrapper ( char [ ] data ) { this . data = data ; }
tr	8	@ Test public void testBottomUp ( ) { String [ ] anArr = new String [ ] { "U" , "F" , "A" , "R" , "D" , "P" , "G" , "V" , "J" , "B" } ; MergeSortBottomUp . sort ( anArr ) ; }
tr	2	public void remove ( ) { throw new UnsupportedOperationException ( ) ; }
tr	9	public void enable ( String name ) throws CommandException { new EnableCommand ( environment , DEFAULT_TARGET , name ) . execute ( ) ; }
tr	3	@ Override public byte [ ] getValue ( ) { return value ; }
tr	4	public double getThroughputPerSecond ( ) { return ( 1000000000d / time ) * docs ; }
tr	8	private String getRandomBannerMirror ( ) { return this . bannerMirrors . get ( ( int ) Math . random ( ) * this . bannerMirrors . size ( ) ) ; }
tr	10	public BaseComputer ( Match match , Side side ) { this . side = side ; this . board = match . getBoard ( ) ; }
tr	5	public void setTopicsService ( TopicsService topicsService ) { this . topicsService = topicsService ; }
tr	5	public void setBankSwiftNo ( String bankSwiftNo ) { this . bankSwiftNo = bankSwiftNo ; }
tr	1	public PlacementListToken ( ) { }
tr	7	public float length ( ) { return ( float ) Math . sqrt ( ( this . x * this . x ) + ( this . y * this . y ) ) ; }
tr	1	public ProcedureCall ( ) { this ( null , null ) ; }
tr	10	public boolean isLeaf ( Object Node ) { PasswordGroup group = ( PasswordGroup ) Node ; return ( group . getListGroup ( ) . size ( ) == 0 ) ; }
tr	10	public Map < String , String > statsJob ( Job j ) throws BeanstalkcException { return statsJob ( j . getId ( ) ) ; }
tr	10	public int getRowPosition ( int row ) { if ( row < 0 ) { row = getRowCount ( ) - row + 1 ; } row = row % getRowCount ( ) ; return row ; }
tr	9	public BIOSwitch ( String onString , String offString ) { super ( onString ) ; create ( ) ; setOffString ( offString ) ; }
tr	2	public int getCost ( ) { return cost ; }
tr	8	public LazyRMQTreap ( int val ) { this . val = val ; p = Math . random ( ) ; update ( ) ; }
tr	3	public String getSNumberOfPlacementsCode ( ) { return sNumberOfPlacementsCode ; }
tr	1	public TBlock_Z ( ) { super ( ) ; }
tr	5	public String toString ( ) { return "songName=" + songName + "  albumName=" + albumName + "  singerName=" + singerName ; }
tr	6	public void clear ( ) { clearArea ( 0 , 0 , data . getColumns ( ) , data . getRows ( ) ) ; }
tr	2	public synchronized static boolean localCache ( ) { return localCache ; }
tr	9	public boolean damage ( int amount ) { int temp = dmg ; this . dmg += amount ; return temp < maxHP && ! isAlive ( ) ; }
tr	3	public Value eval ( ) { return A ; }
tr	8	public OtpErlangFloat ( final OtpInputStream buf ) throws OtpErlangDecodeException , OtpErlangRangeException { super ( buf ) ; final float f = floatValue ( ) ; }
tr	6	@ JsonProperty ( "label" ) public void setLabel ( String label ) { this . label = label ; }
tr	2	public int getIdPackCanales ( ) { return idPackCanales ; }
tr	8	public ActionListener buildExitActionListener ( ) { return new ActionListener ( ) { public void actionPerformed ( ActionEvent e ) { System . exit ( 0 ) ; } } ; }
tr	2	public char nextChar ( ) { return ( char ) ( next ( 16 ) ) ; }
tr	8	public void setHealth ( int health ) { if ( health <= getMaxHealth ( ) ) this . health = health ; else this . health = getMaxHealth ( ) ; }
tr	9	public byte [ ] getData ( ) { byte [ ] actualData = new byte [ position ] ; System . arraycopy ( data , 0 , actualData , 0 , position ) ; return actualData ; }
tr	7	public void addAll ( Collection < Action > actions2 ) { actions . addAll ( actions2 ) ; }
tr	10	@ Test public void testExceptionMessageOnTransformWith1Param_CaseKo4 ( ) throws IOException , TemplateException , NoSuchMethodException , SecurityException , IllegalAccessException , IllegalArgumentException , InvocationTargetException { assertParseThrowsException ( "~$text:'charat<>~" , "Empty init list parameter before '>' at position '-:l1:c16'." ) ; }
tr	8	@ Override public void processMouseEvent ( MouseEvent event , MenuElement [ ] path , MenuSelectionManager manager ) { }
tr	5	public void setCohumulone ( BigDecimal value ) { this . cohumulone = value ; }
tr	8	public List getFeedback ( ) { return ( valueSource instanceof FeedbackEnabledValueSource ) ? valueSource . getFeedback ( ) : Collections . EMPTY_LIST ; }
tr	10	public static void main ( String [ ] args ) { GeoLogMain view = new GeoLogMain ( ) ; new MainController ( view ) ; view . setVisible ( true ) ; }
tr	7	public void dbgShowGameState ( boolean enabled ) { if ( enabled ) debugflags |= GAMESTATE_DEBUG ; else debugflags &= ~ GAMESTATE_DEBUG ; }
tr	1	public CategoryBean ( ) { super ( ) ; }
tr	4	@ Override public CommandNode getCopyOfInstance ( ) { return new OneOperandMathCommandNode ( ) ; }
tr	8	@ CRRCSimEditorNode ( name = "Simple Trusts" ) @ XmlElement ( name = "simpletrust" ) public ArrayList < SimpleTrust > getSimpleTrusts ( ) { return simpleTrusts ; }
tr	3	public IOutputtedNeuron [ ] getOutputNeurons ( ) { return this . outputNeurons ; }
tr	9	synchronized public E get ( int keyValue ) { key . set ( keyValue ) ; return map . get ( key ) ; }
tr	2	@ Override public void onCreation ( ) { }
tr	7	public KontoPost ( String name , String groupName ) { super ( name , groupName ) ; }
tr	10	public void drawLine ( double x1 , double y1 , double x2 , double y2 ) { drawLine ( x1 , y1 , x2 , y2 , true ) ; }
tr	3	public String get_route_text_color ( ) { return _route_text_color ; }
tr	6	public Kontak findOne ( int index ) { return kontaks . get ( index ) ; }
tr	4	@ Column ( name = "CATEGORY_ID" ) public long getCategoryId ( ) { return categoryId ; }
tr	10	public PluginLoader ( ) throws FileNotFoundException { pluginDirectory = new File ( "plugins/" ) ; if ( ! pluginDirectory . exists ( ) ) { throw new FileNotFoundException ( "Unable to find the plugins directory" ) ; } if ( ! pluginDirectory . isDirectory ( ) ) { throw new FileNotFoundException ( "Unable to find the plugins directory" ) ; } }
tr	8	public JSONArray put ( int index , double value ) throws JSONException { put ( index , new double ( value ) ) ; return this ; }
tr	8	public static void main ( String [ ] args ) { Skeleton skel = new Skeleton ( ) ; skel . setVisible ( true ) ; }
tr	5	public CsvParser ( ISplitStrategy splitStrategy ) { strategy = splitStrategy ; }
tr	5	public AppendableSummarizer ( Appendable a ) { this . a = a ; }
tr	6	public AddIngredientCommandIterator ( LinkedList < AddIngredientCommand > addIngredientCommands ) { this . addIngredientCommands = addIngredientCommands ; }
tr	8	@ Override public void run ( ) { try { while ( Settling . this . running ) { Thread . sleep ( 1 ) ; } } catch ( InterruptedException e ) { } }
tr	1	public void setMutables ( ) { }
tr	10	@ Override public void paintBorder ( EComponent c , Graphics2D g2 , int x , int y , int width , int height ) { }
tr	2	@ AfterClass public static void tearDownClass ( ) { }
tr	10	public static void ajouterBorne ( Borne borne ) { BorneDAO . insertBorne ( borne ) ; ConfigGlobale . bornes . add ( borne ) ; }
tr	3	public Axis getYAxis ( ) { return yAxis ; }
tr	6	@ Override public void run ( ) { if ( ServerUpdateChecker . Instance ( ) . GetResult ( ) ) new ServerUpdateFrame ( ) ; }
tr	1	public void bye ( ) { }
tr	9	public void setOperateButton ( ) { clearButton ( ) ; addButton ( "\u64A4\u9500" , ID_BUTTON_UNDO ) ; addButton ( "\u4FDD\u5B58" , ID_BUTTON_SAVE ) ; addButton ( "\u6807\u9898" , ID_BUTTON_TITLE ) ; calcButton ( ) ; }
tr	2	public void clearBBox ( ) { bbox = null ; }
tr	6	public boolean isUnflagged ( ) { return _field . getState ( ) . equals ( FieldState . UNFLAGGED ) ; }
tr	9	public void scale ( double x , double y , double z ) { m ( ) . scale ( x , y , z ) ; }
tr	1	public Flujo ( ) { }
tr	6	public scanner ( ) throws java . io . IOException { this ( System . in ) ; }
tr	10	@ Test public void testAdd ( ) { final double [ ] [ ] matrix = new double [ ] [ ] { { 5.0 , 5.0 , 5.0 } , { 7.0 , 7.0 , 7.0 } , { 9.0 , 9.0 , 9.0 } } ; assertTrue ( matrixA . add ( matrixB ) . equals ( new SquareMatrix < double > ( matrix ) ) ) ; }
tr	1	public int getPercent ( ) { return % ; }
tr	8	protected AssignmentHandler ( XMLReader reader ) { super ( ) ; this . reader = reader ; this . questions = new ArrayList < Question > ( 0 ) ; }
tr	10	@ ManyToOne ( fetch = FetchType . LAZY ) @ JoinColumn ( name = "mg_id" , nullable = false ) public MappingGroup getMappingGroup ( ) { return this . mappingGroup ; }
tr	7	@ Override public void appendMessage ( String msg ) { this . append ( "AVVISO (" + now ( ) + "): " + msg + ".\n" ) ; }
tr	4	public synchronized void setLineThickness ( float f ) { mLineThickness = f ; }
tr	5	public Map < Integer , DFAState > getTransition ( ) { return this . transition ; }
tr	4	public void setPos ( int pos ) { this . pos = pos ; }
tr	4	public void setSeccion ( int seccion ) { this . seccion = seccion ; }
tr	8	@ Override public Image getImage ( ) { if ( endPortal == this ) return grey ; return isOrange ? orange : blue ; }
tr	8	public static Direction getDirection ( String direction ) { return Direction . valueOf ( direction . toUpperCase ( ) ) ; }
tr	9	public String S ( byte [ ] b ) { try { return new String ( b , "utf-8" ) ; } catch ( UnsupportedEncodingException e ) { e . printStackTrace ( ) ; return null ; } }
tr	6	private void DirectoryButtonActionPerformed ( java . awt . event . ActionEvent evt ) { }
tr	9	private void onComplete ( ActionEvent event ) { for ( ActionListener listener : completeListeners ) { listener . actionPerformed ( event ) ; } }
tr	2	public int size ( ) { return this . size ; }
tr	9	public void putSymbol ( String string , Symbol symbol ) { symbols . put ( string , symbol ) ; }
tr	6	public void shuffle ( ) { Collections . shuffle ( sample , Globals . rng ) ; }
tr	3	public UUID getID ( ) { return fID ; }
tr	6	public Snapshot ( int size , int timeTaken ) { super ( size ) ; this . timeTaken = timeTaken ; }
tr	3	private boolean r_R1 ( ) { if ( ! ( I_p1 <= cursor ) ) { return false ; } return true ; }
tr	2	public boolean isAuthenticated ( ) { return authenticated ; }
tr	2	public double getPuberty ( ) { return puberty ; }
tr	2	@ After public void tearDown ( ) { }
tr	4	public void setCspace ( float Cspace ) { this . Cspace = Cspace ; }
tr	4	public boolean isLeap ( ) { return ( ( year % 4 == 0 ) && ( year % 100 != 0 ) || ( year % 400 == 0 ) ) ; }
tr	9	public Set < String > keySet ( ) { if ( mode == Mode . Map ) { return map . keySet ( ) ; } throw new PerlHashTypeException ( "Not a map" ) ; }
tr	5	public void validate ( ) throws org . apache . thrift7 . TException { }
tr	6	@ Override public String toString ( ) { return id + " - " + name + " - " + score ; }
tr	10	public Share ( String hash , long length ) { if ( length < 0 ) throw new IllegalArgumentException ( "Length is < 0" ) ; this . hash = hash ; this . length = length ; }
tr	7	static public List < Integer > asList ( String str ) { return asList ( str , " " ) ; }
tr	4	public void retirarProdutoEstoque ( int id , String nome ) { }
tr	4	public void setGroupId ( int groupId ) { this . groupId = groupId ; }
tr	1	public Port ( ) { }
tr	8	public Apartamento getApartamentoSeleccionado ( ) { long codigo = tblApartamentos . getIndiceFilaSeleccion ( 1 ) ; return Apartamento . buscar ( codigo ) ; }
tr	9	@ Override public void setMin ( ) { val = BigInteger . TEN . multiply ( BigInteger . TEN ) . negate ( ) ; }
tr	1	public BoardView ( ) { }
tr	6	public void addPOS ( POS pos ) { posArray . add ( pos ) ; }
tr	6	@ Override protected MicroBlock subBlockCopy ( int current_class ) { return new XMicroBlock ( this , current_class ) ; }
tr	7	private void activarActionPerformed ( java . awt . event . ActionEvent evt ) { activar_desactivarEstudiante ( 0 ) ; }
tr	3	@ BeforeMethod public void setUpMethod ( ) throws Exception { }
tr	4	public void setDiagId ( int diagId ) { this . diagId = diagId ; }
tr	4	public void setRecovery ( int recovery ) { this . recovery = recovery ; }
tr	10	protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { doPost ( request , response ) ; }
tr	6	private void jComboBox1ActionPerformed ( java . awt . event . ActionEvent evt ) { }
tr	5	static public float random ( float range ) { return random . nextFloat ( ) * range ; }
tr	4	public void dispose ( ) { super . dispose ( ) ; composite . dispose ( ) ; }
tr	4	public void setGold ( int oro ) { this . oro = oro ; }
tr	8	private void jMenuItem1ActionPerformed ( java . awt . event . ActionEvent evt ) { System . exit ( 0 ) ; }
tr	4	boolean isGapAfterPush ( ) { return gapAfter != null && gapAfter . getGapPush ( ) ; }
tr	10	@ Override public void onMouseDown ( BufferedImage image , int x , int y ) { lastMouseDownX = x ; lastMouseDownY = y ; }
tr	8	public boolean optBoolean ( int index , boolean defaultValue ) { try { return this . getBoolean ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
tr	10	public T categories ( List < Integer > categories ) { if ( categories != null ) { this . categories . addAll ( categories ) ; } return self ( ) ; }
tr	6	public void setDeliveryCollection ( Collection < Delivery > deliveryCollection ) { this . deliveries = deliveryCollection ; }
tr	5	@ Override public void commit ( ) { if ( currentTransaction != null ) currentTransaction . commit ( ) ; }
tr	5	public void setPlateau ( Plateau plateau ) { this . plateau = plateau ; }
tr	1	public LabeledItem ( ) { }
tr	10	public void setMnemonic ( int mnemonic ) { this . mnemonic = mnemonic ; renderButton . setMnemonic ( mnemonic ) ; editButton . setMnemonic ( mnemonic ) ; }
tr	3	public Controller getController ( ) { return myController ; }
tr	8	@ Override public final Impl parent ( Filter filter ) { return parents ( false , none ( ) , filter ) ; }
tr	2	public boolean hasDeveloper ( ) { return hasDeveLoper ; }
tr	2	boolean getTraceDrop ( ) { return TRACE_DROP ; }
tr	10	@ Override public boolean equals ( Object o ) { MLoc r = ( MLoc ) o ; return equals ( r ) ; }
tr	1	public AbstractDocumentTest ( ) { }
tr	7	public void removeListeners ( ) { b_menuprincipal . removeActionListener ( controleur ) ; b_boutonquitter . removeActionListener ( controleur ) ; }
tr	8	public void insertDataToTable ( String tName , String fields , String line ) throws Exception { }
tr	9	protected void definirSubmerged ( ) { raz ( ) ; panel_case . removeAll ( ) ; definirEtat ( "submerged" ) ; InterfaceEditeur . tab [ this . x ] [ this . y ] = this ; }
tr	4	public void setDrawAmount ( double a ) { drawAmount = a ; }
tr	4	public void setEmpNo ( int empNo ) { this . empNo = empNo ; }
tr	5	@ Override public void setTileHeight ( float tileHeight ) { this . tileHeight = tileHeight ; }
tr	3	public String getModificat ( ) { return modificat ; }
tr	10	public static < T > Iterable < Pair < T >> getCombinationsNonReflexive ( Iterable < T > objects ) { return getCombinations ( objects , false ) ; }
tr	5	public void setPortNumber ( int portNumber ) { this . portNumber = portNumber ; this . initializeSocket ( ) ; }
tr	7	public Coordenada ( int x , int y ) { this . x = x ; this . y = y ; }
tr	7	private void miEditarActionPerformed ( java . awt . event . ActionEvent evt ) { desbloquearCampos ( ) ; }
tr	8	public static int getHoursThisYear ( int driver ) { if ( driver == 0 ) throw new InvalidQueryException ( "Nonexistent driver" ) ; return database . busDatabase . get_int ( "driver" , driver , "hours_this_year" ) ; }
tr	10	public User showUser ( String screenName ) throws TBlogException { return new User ( http . get ( getBaseURL ( ) + "users/show/" + screenName + ".json" , true ) ) ; }
tr	2	public static void resetCounter ( ) { counter = 0 ; }
tr	6	public RowMapperLazyConditionConfigBuilder expression ( String expression ) { this . expression = expression ; return this ; }
tr	2	public boolean isNotifications ( ) { return notificationEnabled ; }
tr	6	public final void addWinListener ( GameWinListener listener ) { winListeners . add ( listener ) ; }
tr	5	public void setName ( String name ) { this . name = name ; }
tr	7	protected void fireChangeEvent ( ) { for ( ChangeListener l : getChangeListeners ( ) ) { l . stateChanged ( changeEvent ) ; } }
tr	6	public void addValueSource ( ValueSource valueSource ) { valueSources . add ( valueSource ) ; }
tr	10	public List < Accion > obtenerAccionesDePerfil ( int idPerfil ) { DAOPerfil perfilDAO = new DAOPerfil ( ) ; return perfilDAO . consultarAccionesDePerfil ( idPerfil ) ; }
tr	9	public User [ ] findWhereStatusUEquals ( String statusU ) throws UserDaoException { return findByDynamicSelect ( SQL_SELECT + " WHERE statusU = ? ORDER BY statusU" , new Object [ ] { statusU } ) ; }
tr	6	public Instance ( String identifier ) { super ( ) ; this . identifier = identifier ; label = null ; }
tr	4	@ Override public String toString ( ) { return "Pagina [nombre: " + nombre + "]" ; }
tr	9	public DATA getValue ( ) { if ( this . isEnabled ( ) ) return ( DATA ) this . model . getValue ( ) ; else return ( DATA ) this . fallbackSetting . getValue ( ) ; }
tr	8	public static boolean isDouble ( String s ) { try { double x = double . parseDouble ( s ) ; return true ; } catch ( NumberFormatException e ) { return false ; } }
tr	7	public boolean connected ( final int p , final int q ) { return id [ p ] == id [ q ] ; }
tr	1	private static short [ ] init__Scanner_trans_actions_0 ( ) { return new short [ ] { 0 , 0 , 13 , 49 , 49 , 13 , 13 , 49 , 13 , 49 , 19 , 19 , 19 , 19 , 0 , 0 , 19 , 19 , 0 , 0 , 19 , 0 , 19 , 19 , 19 , 19 , 0 , 0 , 19 , 0 , 19 , 19 , 19 , 0 , 0 , 0 , 19 , 19 , 19 , 19 , 19 , 0 , 0 , 23 , 23 , 0 , 0 , 19 , 19 , 19 , 0 , 0 , 3 , 34 , 34 , 31 , 0 , 19 , 19 , 1 , 0 , 5 , 37 , 37 , 37 , 37 , 37 , 0 , 19 , 19 , 19 , 19 , 19 , 0 , 0 , 0 , 7 , 40 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 7 , 0 , 0 , 0 , 0 , 0 , 0 , 3 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 19 , 19 , 19 , 0 , 0 , 19 , 0 , 19 , 19 , 19 , 0 , 0 , 0 , 19 , 19 , 19 , 19 , 19 , 0 , 0 , 23 , 23 , 0 , 0 , 0 , 19 , 19 , 19 , 0 , 0 , 3 , 34 , 34 , 31 , 0 , 19 , 19 , 1 , 0 , 5 , 37 , 37 , 37 , 37 , 37 , 0 , 19 , 19 , 19 , 19 , 19 , 0 , 0 , 0 , 7 , 40 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 7 , 0 , 0 , 0 , 0 , 0 , 0 , 3 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 19 , 19 , 0 , 0 , 19 , 0 , 19 , 19 , 19 , 52 , 17 , 174 , 0 , 17 , 17 , 17 , 0 , 0 , 61 , 19 , 19 , 19 , 0 , 0 , 43 , 9 , 159 , 9 , 9 , 9 , 19 , 19 , 19 , 19 , 0 , 0 , 64 , 21 , 25 , 189 , 21 , 21 , 21 , 0 , 19 , 19 , 19 , 19 , 19 , 0 , 0 , 23 , 23 , 0 , 0 , 27 , 127 , 19 , 19 , 19 , 0 , 0 , 3 , 34 , 34 , 31 , 0 , 19 , 19 , 1 , 0 , 5 , 37 , 37 , 37 , 37 , 37 , 0 , 19 , 19 , 19 , 19 , 19 , 0 , 0 , 0 , 7 , 40 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 7 , 0 , 0 , 0 , 0 , 0 , 0 , 3 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 64 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 43 , 0 , 0 , 0 , 0 , 0 , 0 , 52 , 0 , 0 , 0 , 0 , 0 , 88 , 29 , 234 , 29 , 29 , 29 , 0 , 0 , 0 , 88 , 0 , 0 , 0 , 0 , 0 , 52 , 17 , 103 , 107 , 17 , 17 , 17 , 0 , 0 , 11 , 15 , 17 , 17 , 17 , 17 , 0 , 88 , 29 , 151 , 155 , 29 , 29 , 29 , 43 , 9 , 91 , 95 , 9 , 9 , 9 , 64 , 21 , 25 , 115 , 119 , 21 , 21 , 21 , 27 , 70 , 73 , 64 , 0 , 19 , 19 , 19 , 0 , 147 , 85 , 224 , 229 , 85 , 85 , 85 , 147 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 27 , 0 , 19 , 88 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 58 , 43 , 0 , 19 , 19 , 19 , 0 , 139 , 79 , 204 , 209 , 79 , 79 , 79 , 139 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 52 , 0 , 19 , 19 , 19 , 0 , 143 , 82 , 214 , 219 , 82 , 82 , 82 , 143 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 9 , 9 , 9 , 9 , 21 , 25 , 21 , 21 , 21 , 0 , 0 , 0 , 64 , 0 , 19 , 19 , 19 , 0 , 123 , 67 , 194 , 199 , 67 , 67 , 67 , 123 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 27 , 0 , 19 , 19 , 19 , 0 , 76 , 29 , 131 , 135 , 29 , 29 , 29 , 76 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 58 , 43 , 0 , 19 , 19 , 19 , 0 , 99 , 46 , 164 , 169 , 46 , 46 , 46 , 99 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 52 , 0 , 19 , 19 , 19 , 0 , 111 , 55 , 179 , 184 , 55 , 55 , 55 , 111 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 88 , 0 , 19 , 19 , 0 , 0 , 0 , 0 } ; }
tr	9	private void displayBufferedImage ( BufferedImage image ) { this . setContentPane ( new JScrollPane ( new JLabel ( new ImageIcon ( image ) ) ) ) ; this . validate ( ) ; }
tr	9	public static void main ( String [ ] args ) { A a = new A ( ) ; a . main ( args [ 0 ] ) ; }
tr	8	public void adc ( Pesquisa o ) throws Exception { list = new PesquisaDAO ( ) . listar ( "" ) ; preencherTabela ( ) ; }
tr	2	public int GetX ( ) { return x ; }
tr	3	static Date getTimeWarp ( ) { return timeWarp ; }
tr	7	public boolean isReadOnly ( Point p ) { return getCells ( ) . get ( p ) . isReadOnly ( ) ; }
tr	4	private void setTxtColor ( final int txtColor ) { this . txtColor = txtColor ; }
tr	6	public void removeVertex ( Vertex point ) { vertices . removeVertex ( point ) ; }
tr	4	public static void main ( String [ ] args ) { print ( 4 ) ; }
tr	5	public static void setPassword ( String pass ) { password = pass ; }
tr	2	public boolean isIsconnectvalidatereq ( ) { return isconnectvalidatereq ; }
tr	10	@ Override public void write ( String [ ] fieldnames , Object [ ] values ) throws IOException { write ( null , fieldnames , values ) ; }
tr	3	public Set getDonviquanlies ( ) { return this . donviquanlies ; }
tr	7	public void addPCMProcessor ( PCMProcessor processor ) { synchronized ( pcmProcessors ) { pcmProcessors . add ( processor ) ; } }
tr	1	public DummyClass ( ) { }
tr	6	public void logout ( String username ) { sessions . removeSession ( username ) ; }
tr	7	@ Override public String accept ( final NodeVisitor visitor ) { return visitor . visit ( this ) ; }
tr	7	@ Override public String toString ( ) { return "Animal{" + "patas=" + patas + "  isMamifero=" + isMamifero + "  nombre=" + nombre + } ; }
tr	7	public Item ( int weight , int value ) { this . weight = weight ; this . value = value ; }
tr	2	public int getWidth ( ) { return width ; }
tr	5	public void setCredentials ( PropertiesCredentials credentials ) { this . credentials = credentials ; }
tr	8	@ Test public void test0 ( ) { String answers = "AAAAA" ; assertArrayEquals ( new int [ ] { 1 , 1 , 1 , 1 , 1 } , new CheatingQuiz ( ) . howMany ( answers ) ) ; }
tr	1	protected Professor ( ) { }
tr	5	public Gun ( SuperTank bot ) { this . bot = bot ; }
tr	5	public ErrorDataQueryResult ( String errorMessage ) { _errorMessage = errorMessage ; }
tr	3	public String getL3DiscntAmt ( ) { return l3DiscntAmt ; }
tr	4	@ Override protected EntityManager getEntityManager ( ) { return em ; }
tr	8	public void transportError ( Exception error ) { this . lastException = error ; setState ( STATE_INTERRUPTED ) ; reconnect ( ) ; }
tr	5	public void setConceptSchemeRef ( String conceptSchemeRef ) { this . conceptSchemeRef = conceptSchemeRef ; }
tr	8	public void pushPacket ( OutgoingPacket packet , String channelName ) { pushPacket ( packet , channelName , "" , 0 ) ; }
tr	9	private NeRecognizer ( ) { String serializedClassifier = Settings . get ( "CLASSIFIER_PATH_SEARCH_ENGINE" ) ; classifier = CRFClassifier . getClassifierNoExceptions ( serializedClassifier ) ; }
tr	1	public void create ( ) { }
tr	7	protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { }
tr	1	public int getSelectedOption ( ) { return - 1 ; }
tr	10	private void RequestNameFieldFocusGained ( java . awt . event . FocusEvent evt ) { if ( DBWorker . id == 0 ) { RequestNameField . setText ( "" ) ; } }
tr	3	@ XmlAttribute public float getI ( ) { return i ; }
tr	10	public String getOptionValue ( char opt , String defaultValue ) { return getOptionValue ( String . valueOf ( opt ) , defaultValue ) ; }
tr	1	public Dispatch ( ) { super ( ) ; }
tr	5	@ Override public Line getFirstLine ( ) { return this . getTitle ( ) . getLine ( ) ; }
tr	2	boolean isSelected ( ) { return selected ; }
tr	6	public LinearRing getLinearRing ( ) { if ( this . objectNode instanceof LinearRing ) { return ( LinearRing ) this . objectNode ; } return null ; }
tr	9	@ BeforeMethod public void setUp ( ) throws Exception { MockitoAnnotations . initMocks ( this ) ; crudService = Mockito . mock ( SoundCrudService . class ) ; }
tr	7	public static final int bitsInBytes ( int numBits ) { if ( numBits < 0 ) throw new IllegalArgumentException ( "numBits < 0" ) ; return ( int ) ( ( numBits + ( byte . SIZE - 1 ) ) / byte . SIZE ) ; }
tr	10	@ Override public void actionPerformed ( ActionEvent arg0 ) { this . vp . habilitarTodos ( ) ; this . vp . cambiarTipoDeDisparo ( 5 ) ; this . vp . deshabilitarbotonMinaSubConRetAlcTriple ( ) ; }
tr	5	public static boolean isDimmingModuleInstalled ( short expansionModules ) { return ( expansionModules & MODULE_DIMMING ) == MODULE_DIMMING ; }
tr	10	private int getInteger ( int min , int max ) { int flag = r . nextInt ( max - min + 1 ) + min ; return flag ; }
tr	10	public String serialize ( Object o ) throws IOException { return o == null ? "" : format . format ( ( Date ) o ) ; }
tr	1	public Feature ( ) { super ( ) ; }
tr	5	public void setPressed ( final boolean value ) { pressedProperty . set ( value ) ; }
tr	2	public int getId ( ) { return this . id ; }
tr	10	PacketFFKick ( DataInputStream in , PassthroughConnection ptc , KillableThread thread ) { super ( in , ptc , thread ) ; }
tr	10	public int size ( ) { lock . lock ( ) ; try { return map . size ( ) + handler . getDiskMap ( ) . size ( ) ; } finally { lock . unlock ( ) ; } }
tr	5	public void setVariacao51 ( Integer variacao51 ) { this . variacao51 = variacao51 ; }
tr	2	public int size ( ) { return size ; }
tr	3	@ Override public String getResourcePath ( ) { return "/info/usmans/QuranProject/resources/qurantext/quran-uthmani-different-tanween.xml" ; }
tr	5	public void setLastpublicnoteby ( String value ) { this . lastpublicnoteby = value ; }
tr	2	public boolean isVisible ( ) { return isVisible ; }
tr	3	public MouseListener getMouseListener ( ) { return mouseListener ; }
tr	5	public static int [ ] getValues ( ) { int [ ] values = { UNIFORM_COLOR , CAMOUFLAGE } ; return values ; }
tr	10	@ Test public void testDeleteByPhysicalClzObject ( ) { int i = dao . deleteByPhysical ( UserNotifyPO . class , 1 ) ; System . out . println ( "size:" + i ) ; }
tr	8	@ Test public void incrementingNumbers ( ) { assertMapped ( ( Integer x ) -> x + 2 , asList ( 1 , 2 , 3 ) , asList ( 3 , 4 , 5 ) ) ; }
tr	2	protected String getToolName ( ) { return "Pencil" ; }
tr	1	public Vector2f ( ) { }
tr	4	public static void main ( String [ ] args ) { new TerminalWindowIde ( ) ; }
tr	10	public void bindShader ( ) { Shader . prevShader = GL11 . glGetInteger ( GL20 . GL_CURRENT_PROGRAM ) ; GL20 . glUseProgram ( this . programId ) ; }
tr	3	public Region getRegion ( ) { return this . region ; }
tr	10	public static JSONObject exportApplicationDescription ( Application app , Timestamp ts ) throws DBException { return exportApplication ( app , ts , false ) ; }
tr	6	@ Override public int hashCode ( ) { return Objects . hash ( type , resources ) ; }
tr	3	public String get_stop_code ( ) { return _stop_code ; }
tr	8	public void setSize ( BoundSize size ) { if ( size != null ) size . checkNotLinked ( ) ; this . size = size ; }
tr	9	public BombermanServer ( int port ) { DebugConsole . Print ( "Initializing server  port: " + port ) ; this . port = port ; DebugConsole . Print ( "Initializing server done" ) ; }
tr	5	public ArrayList < Ticket > showAllTicket ( ) { return Ticket . showAll ( ) ; }
tr	3	public String getLastName ( ) { return lastName ; }
tr	3	public int getHeight ( ) { return size . getY ( ) ; }
tr	9	public void setMinSelectableDate ( Date min ) { jcalendar . setMinSelectableDate ( min ) ; dateEditor . setMinSelectableDate ( min ) ; }
tr	4	@ Override public String toString ( ) { return getDescricao ( ) ; }
tr	6	@ Test public void test3SortingTasks ( ) throws Exception { final int threads = 1 ; testImpl ( 1024 * 1024 * 3 , 1024 * 1024 * 1 * 4 , threads ) ; }
tr	3	protected Field getField ( ) { return field ; }
tr	4	@ Override public Card getModel ( ) { return this . model ; }
tr	8	public int getSkillValue ( Skill s ) { return Integer . parseInt ( this . skills . get ( s ) ) ; }
tr	10	@ Override public void actionPerformed ( ActionEvent ae ) { JanelaExtracaoCaracteristicas janela = new JanelaExtracaoCaracteristicas ( imagem ) ; janela . setVisible ( true ) ; }
tr	4	public Parler ( String message ) { this ( 0 , message ) ; }
tr	4	public void reset ( ) { buffer = null ; len = 0 ; pos = 0 ; }
tr	3	public void valueChanged ( ListSelectionEvent e ) { }
tr	10	@ Override public void hitEffectTo ( ShootingObject target ) { hittedObjects . add ( target ) ; target . damage ( getPower ( ) ) ; }
tr	4	public SineWaveSource ( ) { moduloOffset = ( int ) ( BUFFER_SIZE % FREQ ) ; }
tr	7	public String getPropertyName ( int index ) { return properties . get ( index ) . getName ( ) ; }
tr	9	private String decimalAsString ( String decimal ) { return decimal . substring ( decimal . indexOf ( . ) + 1 ) ; }
tr	5	public void setQuestRewardsDefault ( String questRewardsDefault ) { this . questRewardsDefault = questRewardsDefault ; }
tr	6	public void removeCreature ( ICreature creature ) { actionables . remove ( creature ) ; }
tr	5	public void setDateOfBirth ( String dateOfBirth ) { this . dateOfBirth = dateOfBirth ; }
tr	9	public static String askString ( String prompt ) { System . out . print ( prompt ) ; return readString ( ) ; }
tr	1	public int get_key_num ( ) { return 1 ; }
tr	4	public void setDirected ( boolean isDirected ) { this . isDirected = isDirected ; }
tr	1	public boolean isActive ( ) { return true ; }
tr	9	@ Override public AttributeSet getAttributes ( ) { if ( refreshAttributes ) { attributes = createAttributes ( ) ; refreshAttributes = false ; refreshProperties = false ; } return attributes ; }
tr	7	public void stop ( ) { if ( timer != null ) { timer . purge ( ) ; timer . cancel ( ) ; timer = null ; } }
tr	4	@ Override public void windowActivated ( WindowEvent e ) { return ; }
tr	1	public boolean reversible ( ) { return false ; }
tr	3	public String getPostBody ( ) { return body ; }
tr	1	public InboundSmsPricing ( ) { }
tr	3	public void rotateLeft ( ) { angle -= 0.1f ; }
tr	6	private FileIterator ( File start ) { files . add ( start ) ; }
tr	1	public Meat ( ) { super ( 3.0 , "meat" ) ; }
tr	9	@ When ( "I add <quantity> pc of product <product id> to the cart" ) public void whenIAddProductsToCartExamples ( @ Named ( "quantity" ) int quantity , @ Named ( "product id" ) int productId ) { addQuantityOfProductToCart ( quantity , productId ) ; }
tr	1	public boolean isNumeric ( ) { return false ; }
tr	2	public int getLevel ( ) { return level ; }
tr	3	public void clearFeedback ( ) { errorCollector . clear ( ) ; }
tr	9	public Object opt ( int index ) { return ( index < 0 || index >= length ( ) ) ? null : this . myArrayList . get ( index ) ; }
tr	7	public JavaCell getCellAtXY ( int x , int y ) { return map [ x ] [ y ] ; }
tr	6	public void setAcceptingStates ( Set < State > acceptingStates ) { this . acceptingStates = acceptingStates ; }
tr	10	@ Override public void handle ( MouseEvent event ) { if ( event . getEventType ( ) . equals ( MouseEvent . MOUSE_CLICKED ) ) { popupPane ( ) ; } }
tr	7	public static byte [ ] getValues ( ) { byte [ ] values = { ENCODED_VOICE , RAW_BINARY_DATA , APPLICATION_SPECIFIC_DATA , DATABASE_INDEX } ; return values ; }
tr	4	public void setTolerance ( double tolerance ) { this . tolerance = tolerance ; }
tr	3	@ Override public int getSize ( ) { return size ; }
tr	9	public void parseArgumentList ( final List < Tree > list ) { do { list . add ( parseArgument ( ) ) ; } while ( poll ( kComma ) ) ; }
tr	3	public String getDataPag ( ) { return dataPag ; }
tr	9	public void setPreferredSize ( Dimension d ) { super . setPreferredSize ( d ) ; this . main . setWidth ( ( int ) this . getPreferredSize ( ) . getWidth ( ) ) ; }
tr	9	public void setRotation ( float x , float y , float z ) { this . rotation = new Vector3f ( x , y , z ) ; }
tr	8	@ Override public void findClasses ( ) { possibleClasses = new ArrayList < > ( ) ; possibleClasses . add ( "0" ) ; possibleClasses . add ( "1" ) ; }
tr	5	public void setTxtMarca ( JTextField txtMarca ) { this . txtMarca = txtMarca ; }
tr	6	public static void main ( String [ ] args ) { System . out . println ( "Hello World!" ) ; }
tr	10	public void awaitTermination ( ) { try { latch . await ( ) ; } catch ( InterruptedException e ) { String message = "awaitTermination() method was interrupted!" ; throw new UnsupportedOperationException ( message , e ) ; } }
tr	10	public ArrayList < BeanMaterial > listMaterials ( String condition ) { return new Material ( client ) . getCrud ( ) . list ( condition ) ; }
tr	5	public void run ( ) { if ( program != null ) { program . execute ( this ) ; } else { defaultProgram ( ) ; } }
tr	10	public boolean method564 ( int i ) { for ( int k = 0 ; k < mapIndices1 . length ; k ++ ) if ( mapIndices3 [ k ] == i ) return true ; return false ; }
tr	5	@ Before ( "execution(* do*(..))" ) public void track ( ) { System . out . println ( ">>>> something is doing" ) ; }
tr	9	public T getCard ( T c ) { return cards . get ( cards . indexOf ( c ) ) ; }
tr	5	public LaunchFrame ( ) { this ( ConfigurationLoader . MAPS_PATH , ConfigurationLoader . SAVE_PATH ) ; }
tr	3	public String getFieldName ( ) { return _fieldName ; }
tr	5	public void setNameUser ( String nombreuser ) { this . nombreuser = nombreuser ; }
tr	6	@ Override public String visit ( IntegerNode node ) { return INTEGER ; }
tr	8	@ Override public String toString ( ) { return "CommandDescriptor{" + "commandName='" + commandName + ' + "  commandId=" + commandId + "  commandParameters=" + commandParameters + } ; }
tr	5	public String getFile ( ) { if ( file == null ) return null ; else return file . getName ( ) ; }
tr	1	private Singleton4 ( ) { }
tr	9	private static < T > boolean isAllElementsNull ( List < T > list ) { for ( Object object : list ) { if ( object != null ) return false ; } return true ; }
tr	8	@ ManyToOne @ JoinColumn ( name = "id_way" , referencedColumnName = "id" , nullable = false ) public Way getWayByIdWay ( ) { return wayByIdWay ; }
tr	6	@ Override public int executeUpdate ( String sql , int [ ] columnIndexes ) throws SQLException { return 0 ; }
tr	5	public void setDescription ( String description ) { this . description = description ; }
tr	10	public boolean shouldCollapse ( IJavaElement owner , int token ) throws JavaModelException { return shouldDo ( isEmpty ( ) , COLLAPSE , owner , token ) ; }
tr	6	@ Basic @ Column ( name = "comment" ) public String getComment ( ) { return comment ; }
tr	9	public int min_number_of_frames ( int streamsize ) { if ( h_vbr == true ) return h_vbr_frames ; else { if ( ( framesize + 5 - h_padding_bit ) == 0 ) return 0 ; else return ( streamsize / ( framesize + 5 - h_padding_bit ) ) ; } }
tr	1	public EvaluationUtilityTest ( ) { }
tr	2	public Person ( ) { name = "No name yet" ; }
tr	4	public String getConnectAddress ( ) { return connectAddress . getText ( ) ; }
tr	3	public boolean isZero ( ) { return compareTo ( ZERO ) == 0 ; }
tr	5	public int calculateXP ( ) { int temp = ( int ) ( this . getXpModifier ( ) * this . getLevel ( ) ) ; return temp ; }
tr	7	@ Override public Auction update ( Integer id , Auction a ) { return null ; }
tr	8	@ Override public void producerFinished ( Producer producer ) { Logger . log ( "Producer finished" ) ; consumerThread . interrupt ( ) ; }
tr	5	public void setSimbolo ( String simbolo ) { this . simbolo = simbolo ; }
tr	4	@ Before public void setUp ( ) { fakeFileSystem = new MockFileManager ( ) ; }
tr	7	public void entryChanged ( UserDefinedEntry entry ) { fireEvent ( entry , UserDefinedSettingsEvent . UPDATED ) ; }
tr	9	public static void main ( String [ ] args ) { ConnectionHandler handler = new ConnectionHandler ( "COM17" ) ; handler . addAProgrammerTask ( new EraseMemoryTask ( ) ) ; }
tr	8	public void removeListener ( EventSystem . Listener l ) { synchronized ( es ) { es . removeListener ( l ) ; } }
tr	6	public Builder id ( String id ) { this . id = id ; return this ; }
tr	3	@ Override public String getGrammarFileName ( ) { return "Enquanto.g4" ; }
tr	3	public String getOTHERTYPE ( ) { return othertype ; }
tr	8	public SlowEffectDef ( double speedup , double duration , double cooldown ) { super ( duration , cooldown ) ; this . speedup = speedup ; }
tr	9	String getString ( String name ) { synchronized ( syncObject ) { return new String ( databaseTable . get ( name ) ) ; } }
tr	8	public DataTableModel ( List < TestData > aDatas ) { super ( ) ; this . datas = aDatas ; columns = new String [ ] { "Time" , "Hr" , "Load" } ; }
tr	6	public void revisarVictoria ( JFrame frame ) { this . frame = frame ; this . revisarGane = true ; }
tr	5	public void dbgSetMessageFont ( JGFont font ) { debugmessage_font = font ; }
tr	10	@ Override public void solve ( final IUpdateInfo uInfo ) { if ( bodyA . isStatic ( ) ) { staticlagrangian ( uInfo ) ; } else { lagrangian ( uInfo ) ; } }
tr	8	public Session newSession ( Request request , Response response ) { return new MySession ( request ) ; }
tr	9	protected Entity ( HttpStatus statusCode , ModelMap body ) { super ( body , statusCode ) ; this . model = body ; }
tr	5	protected Page getPage ( ) { return linkedObjects . get ( 0 ) . getPage ( ) ; }
tr	9	public TimeSpan ( String begin , String end ) { this . begin = begin ; this . end = end ; }
tr	3	public Player getP2 ( ) { return p2 ; }
tr	9	public User [ ] findWhereEmailEquals ( String email ) throws UserDaoException { return findByDynamicSelect ( SQL_SELECT + " WHERE email = ? ORDER BY email" , new Object [ ] { email } ) ; }
tr	2	public char [ ] getPIN ( ) { return passVal ; }
tr	2	public boolean isReferenced ( ) { return referenced ; }
tr	7	public NFAState ( ) { super ( NFA . this , getAutoName ( ) + Integer . toString ( states . size ( ) , 10 ) ) ; }
tr	10	@ Override protected void postRenderState ( GameContainer container , Graphics g ) throws SlickException { if ( gui != null ) { gui . draw ( ) ; } }
tr	2	public int getPermissao ( ) { return this . profile ; }
tr	10	public static void main ( String [ ] args ) { MongodbDAO mongodbDAO = new MongodbDAO ( ) ; mongodbDAO . printData ( ) ; mongodbDAO . documentsCounter ( ) ; }
tr	2	public int asInt ( ) { return level ; }
tr	2	public long getRateAboutZAxis ( ) { return rateAboutZAxis ; }
tr	1	public User ( ) { }
tr	10	@ Test public void testText ( ) throws TemplateException { Text text = new Text ( "hello mister" , new Cursor ( "-:l1:c1" ) ) ; assertEquals ( "hello mister" , text . writeObject ( null , null , null ) ) ; }
tr	8	public List < Fornecedores > listarFornecedores ( Fornecedores fornecedor ) { return super . listar ( fornecedor . getClass ( ) ) ; }
tr	8	public void setDate ( Date x ) throws SQLException { this . ps . setDate ( parameterIndex ++ , x ) ; }
tr	10	@ Override public int compareTo ( BalanceEntry o ) { if ( price >= o . getPrice ( ) ) { return - 1 ; } else if ( price < o . getPrice ( ) ) { return 1 ; } else return 0 ; }
tr	5	@ Override public String toString ( ) { return gameComponent . toString ( ) ; }
tr	10	Materials ( double reflection , double transparency , double gloss ) { this . reflection = reflection ; this . transparency = transparency ; this . gloss = gloss ; }
tr	8	public void setCode ( CodeFragment code ) { if ( code == null ) code = new CodeFragment ( ) ; this . code = code ; }
tr	9	public void remove ( String a ) { if ( a != null && ! a . isEmpty ( ) ) areas . remove ( a ) ; }
tr	7	public static int [ ] intsFromSeparatedString ( String text ) { return ArraysExt . intsFromSeparatedString ( text , 	 ) ; }
tr	4	public void setX ( float x ) { this . x = x ; }
tr	8	public void setType ( String type ) { if ( type . toLowerCase ( ) . equals ( "digital" ) ) { isDigital = true ; } else { isDigital = false ; } }
tr	3	public HalfEdge getPrev ( ) { return prev ; }
tr	5	@ Override public void test ( ) { nm . println ( 9000 ) ; super . test ( ) ; }
tr	6	protected Object writeReplace ( ) throws ObjectStreamException { return ( ( JMSRemoteRef ) ref ) . getProxy ( ) ; }
tr	4	public void setWireframeMode ( boolean s ) { wireframeMode = s ; }
tr	4	BitReserve ( ) { offset = 0 ; totbit = 0 ; buf_byte_idx = 0 ; }
tr	5	public void setInternal ( T internal ) { this . internal = internal ; }
tr	2	public boolean hasNext ( ) { return this . hasMoreElements ( ) ; }
tr	6	@ Override public void mousePressed ( MouseEvent e ) { maybeShowPopup ( e ) ; }
tr	2	public int getIndex ( ) { return index ; }
tr	4	public static void main ( String [ ] args ) { new ConcentricSquaresFrame ( ) ; }
tr	8	public List < Categoria > encontrarEntidadesCategoria ( int maxResultados , int primerResultado ) { return encontrarEntidadesCategoria ( false , maxResultados , primerResultado ) ; }
tr	10	private void init ( ) { this . function = new Func ( ) ; this . submitB = new JButton ( ) ; this . staff = new Vector ( ) ; this . function . fillStaff ( staff ) ; }
tr	8	public static void sleep ( long timeToSleep ) { if ( timeToSleep <= 0 ) return ; try { Thread . sleep ( timeToSleep ) ; } catch ( InterruptedException e ) { } }
tr	2	public int getBlackTime ( ) { return this . blackTime ; }
tr	7	@ Override public SubSystemNames getSubSystem ( String subSystemId ) { return getValueOf ( subSystemId ) ; }
tr	3	public String getPhotoURL ( ) { return photoURL ; }
tr	10	@ Override public void sendRawMessage ( final String message ) { IRC . sendNotice ( sender , ColorUtils . formatGametoIRC ( message ) ) ; }
tr	3	public TimingThreadPool ( ) { super ( 1 , 1 , 0 , TimeUnit . SECONDS , null ) ; }
tr	8	@ Override protected void paintComponent ( Graphics g ) { super . paintComponent ( g ) ; draw_me ( g ) ; }
tr	8	public static boolean zipFolders ( File [ ] srcFolders , File destZipFile ) { return zipFolders ( srcFolders , destZipFile , "" ) ; }
tr	9	@ Test public void shouldRemoveId3v1Tag ( ) throws Exception { String filename = MP3_WITH_ID3V1_AND_ID3V23_AND_CUSTOM_TAGS ; testShouldRemoveId3v1Tag ( new Mp3File ( filename ) ) ; }
tr	3	public String getFname ( ) { return fname ; }
tr	8	@ Transactional public Volunteer getVolunteer ( Integer volunteerId ) { return volunteerDAO . getVolunteer ( volunteerId ) ; }
tr	8	public double getGravity ( final double altitude ) { final double radius = getRadius ( altitude ) ; return gravitationalParam / ( radius * radius ) ; }
tr	1	public TileDoor ( ) { super ( 3 ) ; }
tr	2	public int [ ] getForeignKeyPositions ( ) { return foreignKeyPositions ; }
tr	10	public static void $ ( final $int2d x , final $int2d y ) throws NRException { x . $ ( y . $ ( ) ) ; }
tr	2	public int getEvaluationDetail ( ) { return evaluationDetail ; }
tr	4	public List < City > getCities ( ) { return myCities ; }
tr	10	public Binary2Text ( String s ) { df . setTimeZone ( TimeZone . getTimeZone ( "UTC" ) ) ; setFile ( new File ( s ) ) ; }
tr	7	public String getOption ( int index ) { return options . get ( index ) . getText ( ) ; }
tr	6	static public String getErrorString ( int errorcode ) { return "Decoder errorcode " + Integer . toHexString ( errorcode ) ; }
tr	4	public void Medium ( ) { System . out . println ( "Ceiling fan medium speed" ) ; }
tr	1	public DataSent ( ) { }
tr	7	private static void sortNgramAndRemoveOutliers ( ) { NGramDriver . sortngramlist ( NGramDriver . getNgramlist ( ) ) ; NGramDriver . removeOutliers ( ) ; }
tr	8	@ Override public ResponseTIPPBuilder setCreator ( TIPPCreator creator ) { return ( ResponseTIPPBuilder ) super . setCreator ( creator ) ; }
tr	5	private DirectionTransitions ( Direction from ) { super ( ) ; this . from = from ; }
tr	7	public void onUnitDestroy ( Unit unit ) { if ( eventListener != null ) { eventListener . onUnitDestroy ( unit ) ; } }
tr	3	public String getApproved ( ) { return approved ; }
tr	6	public URL getProfileImageURL ( ) { try { return new URL ( profileImageUrl ) ; } catch ( MalformedURLException ex ) { return null ; } }
tr	3	public String getPass ( ) { return pass ; }
tr	4	private SerializationManager ( ) { if ( instance != null ) throw new IllegalStateException ( "Already instantiated" ) ; registerBuiltInSerializers ( ) ; }
tr	1	public ServerSideThread ( ) { }
tr	1	public int process_id ( ) { return 2 ; }
tr	3	public Arctg ( double acc ) { super ( acc ) ; }
tr	1	public Mouse ( ) { }
tr	7	public void setCurrency ( java . lang . String currency ) { this . currency = currency ; }
tr	2	public void doPassaTurno ( ) { turnoConfermato = false ; }
tr	1	private OrderManager ( ) { }
tr	9	public static String getNumber ( int driver ) { if ( driver == 0 ) throw new InvalidQueryException ( "Nonexistent driver" ) ; return database . busDatabase . get_string ( "driver" , driver , "number" ) ; }
tr	10	public boolean equals ( Object obj ) { if ( ! ( obj instanceof OptionMetadataImpl ) ) { return false ; } return ( ( ( OptionMetadataImpl ) obj ) . getIdentifier ( ) . equals ( getIdentifier ( ) ) ) ; }
tr	2	public int getProperties ( ) { return properties ; }
tr	7	@ Override public CallInfo getCallInfo ( String call ) throws Exception { throw new Exception ( "Not implemented" ) ; }
tr	1	public DataDaoTemplate ( ) { }
tr	2	public int level ( ) { return level ; }
tr	1	public boolean acceptsArguments ( ) { return true ; }
tr	1	public Carte ( ) { }
tr	2	public short [ ] [ ] action_table ( ) { return _action_table ; }
tr	1	public int getRowCount ( ) { return 6 ; }
tr	5	public void setBodyDesignSpec ( String bodyDesignSpec ) { this . bodyDesignSpec = bodyDesignSpec ; }
tr	5	public void setName ( String name ) { this . name = name ; }
tr	2	@ Override public void updateModelFromView ( ) { }
tr	4	void isiY ( double y1 ) { y = y1 ; }
tr	6	@ Override public Move getMove ( DraughtsState s ) { throw new UnsupportedOperationException ( "should never be called!!!" ) ; }
tr	6	static byte [ ] md5sum ( byte [ ] b ) { return Sys . getMessageDigest ( "MD5" ) . digest ( b ) ; }
tr	2	public int getId ( ) { return id ; }
tr	9	public long remove ( ) { long temp = queArray [ front ++ ] ; if ( front == maxiSize ) { front = 0 ; } nItems -- ; return temp ; }
tr	3	public Object getNextPanelDescriptor ( ) { return FINISH ; }
tr	6	public void removeColumn ( String columnID ) { htColumns . remove ( columnID ) ; }
tr	3	public String getTitle ( ) { return title ; }
tr	6	public deathVerifier ( Stockage . Machine m ) { this . m = m ; }
tr	4	public void setxAmplitude ( double xAmplitude ) { this . xAmplitude = xAmplitude ; }
tr	5	public void setCity ( String city ) { this . city = city ; }
tr	1	public class < ? > [ ] usedClasses ( ) default { } ;
tr	5	public FileTypeModel setId ( int id ) { this . id = id ; return this ; }
tr	2	public int getT1_slider_position ( ) { return t1_slider_position ; }
tr	1	public int bonusUniteAttaque ( ) { return 0 ; }
tr	9	public void flip ( ) { sim . isRunning = ! sim . isRunning ; playPause . setText ( sim . isRunning ? "Pause" : "Play" ) ; }
tr	2	public byte nextByte ( ) { return ( byte ) ( next ( 8 ) ) ; }
tr	9	public synchronized void delete ( ) { if ( swigCPtr != 0 ) { if ( swigCMemOwn ) { swigCMemOwn = false ; otapiJNI . delete_Server ( swigCPtr ) ; } swigCPtr = 0 ; } super . delete ( ) ; }
tr	6	public void addNewVersionListener ( NewVersionListener listener ) { listeners . add ( listener ) ; }
tr	2	public boolean isLocked ( ) { return lockLogique ; }
tr	9	public Attribute ( String key , String value ) { super ( ) ; this . key = key ; this . value = value ; }
tr	2	public int getNbTours ( ) { return nbTours ; }
tr	4	public void setPresenca ( boolean presenca ) { this . presenca = presenca ; }
tr	3	public OAuth2TokenType getType ( ) { return type ; }
tr	6	private void txtSalesp1ActionPerformed ( java . awt . event . ActionEvent evt ) { }
tr	8	public void disposeAllPackets ( ) { for ( ChannelInfo info : channelMap . values ( ) ) { info . channel . disposeAllPackets ( ) ; } }
tr	7	@ Override public String toString ( ) { return String . format ( "{%s = %s}" , this . name , this . value ) ; }
tr	4	private GOSUB ( int lineNumber ) { this . lineNumber = lineNumber ; }
tr	7	@ Override public WorldCoordinate clone ( ) { return new WorldCoordinate ( x , y , z ) ; }
tr	4	public GestionEmpleado ( ) { Conexion . GetInstancia ( ) . CadenaConexion ( ) ; }
tr	1	public CountdownJob15 ( ) { }
tr	1	public void setPlayerName ( ) { }
tr	2	private int getCapacidad ( ) { return capacidad ; }
tr	6	public void setGroupMemberList ( Collection < Participant > groupMemberList ) { this . groupMemberList = groupMemberList ; }
tr	8	protected boolean actualizarAnimacion ( long tiempoTranscurrido ) { return animaciones . get ( getEstadoActual ( ) . ordinal ( ) ) . actualizar ( tiempoTranscurrido ) ; }
tr	9	static HTML createHtml ( ) { HTML item = new HTML ( ) ; item . setStylePrimaryName ( PRIMARY_STYLE_TEXT ) ; return item ; }
tr	1	private External ( ) { }
tr	1	public Assignments ( ) { }
tr	3	public CheckGrp getCheckGrp ( ) { return checkGrp ; }
tr	10	private boolean isSubset ( Object subtree1 , Object subtree2 ) { return isSubset ( subtree1 , subtree2 , NEGATIVE_INFINITY , POSITIVE_INFINITY ) ; }
tr	10	public static String p2String ( int x , int y ) { String s ; s = "(" + x + " " + y + ") " ; return s ; }
tr	7	public boolean hasSmallFish ( ) { return ( fish != null && Size . LITTLE . equals ( fish . getSize ( ) ) ) ; }
tr	8	@ BeforeClass public static void setUpClass ( ) { testRule1 = new Rule ( "test rule" , "http://localhost/" , RULE1_TEST_REGEXP , true ) ; rdtpTestRule1 = new RuleDrivenTextParser ( testRule1 ) ; }
tr	10	@ Override public void setReply ( Object reply ) { this . reply = ( List < Map < String , Object >> ) reply ; }
tr	8	public Set < Individual > getIndividuals ( ) { return new EntityFilter < Individual > ( onto . listIndividuals ( ) . toSet ( ) , this ) ; }
tr	2	public String getQuestionTypeString ( ) { return "Picture-Response" ; }
tr	10	public void addChild ( AppJob child ) { addLink ( child , SIPHT . CODE + "_paralogues.txt" , ( ( SIPHT ) getApp ( ) ) . generateLong ( "CODE_paralogues.txt" ) ) ; }
tr	8	public WSClient ( IMediatorWSClient med ) { this . med = med ; infoRetriever = new FileInfoRetriever ( dbName ) ; }
tr	2	public int getEmbargoCount ( ) { return embargoCount ; }
tr	3	SHE ( ) { configured = false ; blockNo = 0 ; }
tr	6	@ Override public void exitCall_strlit ( @ NotNull DecafParser . Call_strlitContext ctx ) { }
tr	2	static synchronized void incResizeDirtyByte ( ) { resizeDirtyByte ++ ; }
tr	5	public void setName ( String name ) { this . name = name ; }
tr	1	public DoubtfulMoveToken ( ) { }
tr	8	public void copyFrom ( BoolContext ctx ) { super . copyFrom ( ctx ) ; this . _p = ctx . _p ; }
tr	2	public int getId ( ) { return this . id ; }
tr	2	public boolean hasMany ( ) { return hasMany ; }
tr	7	@ Override public void declareOutputFields ( OutputFieldsDeclarer outputFieldsDeclarer ) { outputFieldsDeclarer . declare ( new Fields ( "delta" , "time" , "imsi" ) ) ; }
tr	2	public boolean isWrapped ( ) { return wrapCount > 0 ; }
tr	1	public Event ( ) { }
tr	3	public Action getCloseAction ( ) { return closeAction ; }
tr	6	@ Override public void exitELogico ( @ NotNull EnquantoParser . ELogicoContext ctx ) { }
tr	7	private void cmdAbortActionPerformed ( java . awt . event . ActionEvent evt ) { dispose ( ) ; }
tr	10	public String getId ( ) { if ( StringUtils . isNotBlank ( object . optString ( "_id" ) ) ) { return object . optString ( "_id" ) ; } else { return object . optString ( "id" ) ; } }
tr	6	public void removeDetalle ( RemitoDetalle detalle ) { this . detalles . remove ( detalle ) ; }
tr	3	public Date getRegistrationDate ( ) { return registrationDate ; }
tr	3	public String getPostalCode ( ) { return postalCode ; }
tr	10	@ MapTo ( ) @ ApplyIf ( Bank . class ) public void mapRootNeverCalled ( ) { map ( "id" ) . from ( s -> "fakeId" ) ; map ( "name" ) . from ( s -> "fakeName" ) ; }
tr	8	public SoundDemo ( ) { initCanvas ( "Sound Demo" , 800 , 600 ) ; assetLoader = new AssetLoader ( this ) ; gongClip = assetLoader . loadSound ( "Sounds/gong.wav" ) ; setVisible ( true ) ; }
tr	5	public void setEngine2 ( Engine engine2 ) { this . engine2 = engine2 ; }
tr	5	public void setConnectionString ( String connectionString ) { this . connectionString = connectionString ; }
tr	8	public Item getItem ( int x , int y ) { return bufferBoard . getItem ( x , y ) ; }
tr	3	public ProyectoBusiness ( ) { this . proyectoDAO = new ProyectoDAO ( ) ; }
tr	8	public Henkilo valitaHenkiloOlio ( String nimi ) { return henkilo = henkilot . get ( nimi ) ; }
tr	9	@ Override public void enterRule ( ParseTreeListener listener ) { if ( listener instanceof DecafParserListener ) ( ( DecafParserListener ) listener ) . enterSentencia4 ( this ) ; }
tr	3	public String getNombre ( ) { return nombre ; }
tr	10	public Key ( BigInteger value , int load ) { this . value = new Identifier ( value ) ; this . owner = null ; this . load = load ; }
tr	4	@ Override public void mouseExited ( MouseEvent e ) { }
tr	4	public void setActive ( boolean active ) { this . active = active ; }
tr	7	@ Override public void toucher ( int value ) { toucherDmg = true ; setVie ( getVie ( ) - value ) ; }
tr	6	public void getMoney ( long amount ) { System . out . println ( "\u5411\u62DB\u5546\u94F6\u884C\u53D6\u51FA\u91D1\u989D:" + amount ) ; }
tr	2	public int getWidth ( ) { return width ; }
tr	3	public String getFrom_user ( ) { return from_user ; }
tr	10	public static void swap ( int a , int b ) { int t ; t = a ; a = b ; b = t ; }
tr	7	private CinemaDAOImpl ( ) { serializeDB = SerializeDB . getInstance ( ) ; cinemas = serializeDB . getCinemas ( ) ; }
tr	1	public int process_id ( ) { return 2 ; }
tr	6	public final String getBindUser ( ) { return this . properties . get ( LDAPResource . BIND_USER ) ; }
tr	7	public ParserIllegalColumnException ( String message , Throwable cause ) { super ( message , cause ) ; }
tr	6	protected boolean isKeyPressed ( int key ) { return ( key < 1024 && key >= 0 ) && keys [ key ] ; }
tr	4	public void setCampaignId ( long campaignId ) { this . campaignId = campaignId ; }
tr	1	public void stopScann ( ) { }
tr	2	public String toString ( ) { return "lra" ; }
tr	3	public int getStimTimer ( ) { return getStimTimer_native ( pointer ) ; }
tr	5	public void setCardGrp ( CardGrp value ) { this . cardGrp = value ; }
tr	9	public Comando crearAtacar ( final Direccion direccion , final Unidad unidad ) { return new Atacar ( direccion , unidad ) ; }
tr	10	@ SuppressWarnings ( "unused" ) protected void startElementSkip ( String uri , String localName , String qName , Attributes attributes ) { }
tr	1	public FinalPathElement ( ) { }
tr	9	public PayloadBuilder customFields ( final Map < String , ? extends Object > values ) { root . putAll ( values ) ; return this ; }
tr	6	public boolean hasPath ( PositionOrUnit target ) { return hasPath_native ( pointer , target ) ; }
tr	2	public int hashCode ( ) { return Cafe123 ; }
tr	9	public void closeWriter ( ) { try { this . writer . flush ( ) ; this . writer . close ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } }
tr	3	public boolean isEmpty ( ) { return contents . isEmpty ( ) ; }
tr	2	public boolean isEnableSound ( ) { return enableSound ; }
tr	3	public String getName ( ) { return this . name ; }
tr	6	@ Override public void setReciever ( String reciever ) { recieve = reciever ; }
tr	1	public CDoseList ( ) { super ( true ) ; }
tr	5	protected void init ( String filename ) { fFilename = filename ; }
tr	9	public Sphere ( float r ) { radius = r ; aabb . setHalfsize ( r , r , r ) ; }
tr	1	private ExceptionUtils ( ) { }
tr	3	public String getNom ( ) { return nom ; }
tr	2	public boolean isWhiteTurn ( ) { return this . whiteTurn ; }
tr	1	private bookkeeper ( ) { }
tr	10	public PredicateIterable ( Iterable < T > iterable , Predicate < T > predicate ) { set ( iterable , predicate ) ; }
tr	1	public ProgressPrinter ( ) { this ( - 1 , false , null ) ; }
tr	10	public final void add ( final User member ) { this . memberUids . add ( member . getDn ( ) ) ; this . members . add ( member ) ; }
tr	9	public static Vector3 pow ( Vector3 vector , float potency ) { return vector . clone ( ) . pow ( potency ) ; }
tr	4	@ Override public void gobble ( ) { mDuck . quack ( ) ; }
tr	9	private boolean horizontalRowWin ( ) { boolean won = false ; for ( int row = 0 ; row < 3 ; row ++ ) { if ( checkHorizontalRow ( row ) ) { won = true ; break ; } } return won ; }
tr	10	public boolean isOnRightPosition ( int index ) { return cardList . get ( index ) . value . equals ( sortedValues . get ( index ) ) ; }
tr	5	@ Override public void setEstado ( boolean estado ) { this . estado = estado ; }
tr	8	public void stop ( ) { started . set ( false ) ; shouldContinue = false ; thread . interrupt ( ) ; service . stop ( ) ; }
tr	9	public static void update ( ) { for ( String key : settings . keySet ( ) ) { settings . get ( key ) . update ( ) ; } }
tr	7	@ Override public String toString ( ) { return out . length ( ) == 0 ? null : out . toString ( ) ; }
tr	8	private void initCapacity ( int capacity ) { this . capacity = capacity ; x = new int [ capacity ] ; va = new double [ capacity ] ; }
tr	4	@ Override public String getName ( ) { return name ; }
tr	6	public static UnidadNombrada construirStubNombrado ( String nombre ) { return new UnidadNombrada ( nombre ) ; }
tr	10	@ Override public void description ( ) { System . out . println ( "You won!" ) ; Dungeon . getInstance ( ) . reset ( ) ; Tester . main ( null ) ; }
tr	8	public PrinterArch ( ) { _imp = getImplementation ( ) ; if ( _imp != null ) { _imp . setArch ( this ) ; } else { System . exit ( 1 ) ; } }
tr	2	public int get_y ( ) { return _y ; }
tr	1	public RubberBand ( ) { }
tr	1	public SongDAO ( ) { }
tr	4	public BoardInitException ( Throwable e ) { super ( e ) ; }
tr	1	private ButtCity ( ) { }
tr	3	@ Test public void testSetmNombre ( ) { fail ( "Not yet implemented" ) ; }
tr	3	public boolean cancelMorph ( ) { return cancelMorph_native ( pointer ) ; }
tr	1	public Configuracion ( ) { }
tr	5	public void editar ( Avaliacao objeto ) throws SQLException { throw new UnsupportedOperationException ( "Not supported yet." ) ; }
tr	4	public void close ( ) throws IOException { is . close ( ) ; }
tr	2	public int getTurn ( ) { return turn ; }
tr	3	public I_TableViewer getiTableViewer ( ) { return iTableViewer ; }
tr	2	public boolean useLeskNomalizer ( ) { return leskNormalize ; }
tr	4	public void testConnection ( ) throws NetworkIOException { prototype . testConnection ( ) ; }
tr	8	private String mk_header ( StringBuffer workingContents ) { return workingContents . substring ( 0 , workingContents . indexOf ( "\r\n" ) ) ; }
tr	3	public Vector2D getEndPosition ( ) { return endPosition ; }
tr	7	public Packet06ToggleInvisible ( int uniqueID , boolean invisible ) { super ( 06 ) ; this . uniqueID = uniqueID ; this . invisible = invisible ; }
tr	2	public double getSpeed ( ) { return speed ; }
tr	8	@ Override public String readMessageAsString ( ) throws IOException { byte [ ] buf = readMessageAsBytes ( ) ; return new String ( buf ) ; }
tr	6	public FunctionType ( final FunctionSymbol symbol ) { super ( symbol ) ; bases = new HashSet < > ( 1 ) ; }
tr	6	public final boolean isRegistered ( BytesKey key ) { return map . containsKey ( key ) ; }
tr	8	private void addFontColor ( Node node , String color ) { addStyleProperty ( node , "color: " + color ) ; }
tr	5	public void setSrc1 ( IntegerRegister src1 ) { Src1 = src1 ; }
tr	2	public boolean hasSequenceCommentOrString ( ) { return _maxLength > 0 ; }
tr	4	@ Override public void addAdjective ( String word ) { }
tr	4	public void setLastModified ( long lastModified ) { this . lastModified = lastModified ; }
tr	6	public void setNama ( String nama ) { namaTextField . setText ( nama ) ; }
tr	4	public static Automaton makeAnyChar ( ) { return BasicAutomata . makeAnyChar ( ) ; }
tr	10	static void init ( Panel p , UserTrees ut ) { parent = p ; userTrees = ut ; getTab ( ) ; }
tr	4	public void resetVariableList ( ) { repaintVariableList ( new ArrayList < Variable > ( ) ) ; }
tr	10	public Produtos ( java . awt . Frame parent , boolean modal ) { super ( parent , modal ) ; initComponents ( ) ; setLocationRelativeTo ( null ) ; }
tr	9	public ResultSet ( ) { mostFrequentWord = new HashMap < String , Integer > ( ) ; customWordCount = new HashMap < String , Integer > ( ) ; }
tr	1	public TokenizerPropertyEvent ( ) { this ( 0 , null ) ; }
tr	10	@ Override public void process ( Turtle turtle , double [ ] values ) { returnValue = turtle . setTowards ( values [ 0 ] , values [ 1 ] ) ; }
tr	9	public void with ( TweenController tween ) { if ( ! with . contains ( tween ) ) { with . add ( tween ) ; } }
tr	3	public void close ( ) { running = accepting = false ; }
tr	4	public void setYear ( int year ) { this . year = year ; }
tr	7	public static boolean isNull ( byte [ ] key ) { if ( key == null ) { return true ; } return isNull ( key , key . length ) ; }
tr	3	public String getMapName ( ) { return this . mapName ; }
tr	3	public String getReceiver ( ) { return receiver ; }
tr	3	public String getRMANLogDir ( ) { return RMANLogDir ; }
tr	2	public String getQuestionTypeString ( ) { return "Fill-in-the-Blank" ; }
tr	2	public long getCount ( ) { return count ; }
tr	6	public void addModelInput ( ModelInput model ) { modelInputs . add ( model ) ; }
tr	3	public String getProvincia ( ) { return provincia ; }
tr	6	@ Override public void enterExpr_methodCall ( @ NotNull DecafParser . Expr_methodCallContext ctx ) { }
tr	3	public static byte readByte ( ) { return scanner . nextByte ( ) ; }
tr	9	@ Override public JList < Edge > getEdges ( String label ) { return mapOfEdges . get ( label ) ; }
tr	3	public Decision getLastDecision ( ) { return getDecision ( ) ; }
tr	8	public RequestToken getOAuthRequestToken ( String callback_url ) throws WeiboException { return http . getOauthRequestToken ( callback_url ) ; }
tr	9	private void desabilitarCampos ( ) { tfHost . setEnabled ( false ) ; tfUsuario . setEnabled ( false ) ; pfSenha . setEnabled ( false ) ; snPorta . setEnabled ( false ) ; }
tr	6	public void addDocumentToProcess ( IncomingDocument document ) { documentsToProcess . add ( document ) ; }
tr	9	private void bntForwardActionPerformed ( java . awt . event . ActionEvent evt ) { i ++ ; btnPesquisarActionPerformed ( evt ) ; }
tr	4	public List < String > depends ( ) { return depends ( 0 , 25 ) ; }
tr	4	@ Override public int length ( ) { return contents . length ( ) ; }
tr	8	public static char byteToChar ( byte b ) { if ( b >= 0 && b < chars . length ) { return chars [ b ] ; } return 0 ; }
tr	6	@ Override public boolean esEquivalente ( Tipo t ) { return t instanceof TipoInt ; }
tr	2	public boolean isSplitter ( ) { return isSplitter ; }
tr	9	public ShaderBuilder recolour ( ) { _fsh . addVariable ( "uniform vec4" , "in_recolour = vec4(1  1  1  1)" ) ; _fsh . addFunction ( "void" , "recolour" , fn -> { fn . addLine ( "gl_FragData[0] = gl_FragData[0] * in_recolour;" ) ; } ) ; return this ; }
tr	5	@ Override public Collection < Match > getMatchList ( ) { return matchList ; }
tr	8	public static URI getProfileURI ( String login ) { return newURI ( PROTOCOL + LEPRA_HOSTNAME + "/users/" + login ) ; }
tr	9	@ Override public String toString ( ) { return new ToStringBuilder ( this ) . append ( "old" , old ) . append ( "now" , now ) . toString ( ) ; }
tr	5	public void setLastItem ( String lastItem ) { this . lastItem = lastItem ; }
tr	6	@ BeforeTest protected void setUp ( ) throws Exception { try { assert true == false ; throw new RuntimeException ( "Please enable assertions." ) ; } catch ( AssertionError e ) { } }
tr	7	public SecurityServiceException ( String code , String message ) { this ( code , message , null ) ; }
tr	5	public void setPin ( String pin ) { this . pin = pin ; }
tr	4	public Address ( ) { this . abonentId = abonentIdCreator . incrementAndGet ( ) ; }
tr	1	public TimedOutException ( ) { super ( ) ; }
tr	6	@ Test public void shouldNumberOfPlayersBeyondLimit ( ) { assertThat ( PlayerList . isCreatPlayerListSuccess ( "12345" ) , is ( false ) ) ; }
tr	5	public int getBlankPosition ( ) { return mPosition < HORIZONTAL_BLANK ? mPosition : HORIZONTAL_BLANK - 1 ; }
tr	1	public int process_id ( ) { return 2 ; }
tr	10	public void addNeighbour ( Country neighbour ) { if ( neighbours == null ) { neighbours = new LinkedList < Country > ( ) ; } this . neighbours . add ( neighbour ) ; }
tr	3	@ Override public int size ( ) { return size ; }
tr	7	public boolean connected ( int p , int q ) { return root ( p ) == root ( q ) ; }
tr	9	public HashThread ( RunAutomaton runAut , String init ) { aut = runAut ; pass = init ; }
tr	8	public static boolean isInteger ( String s ) { try { Integer . parseInt ( s ) ; } catch ( NumberFormatException e ) { return false ; } return true ; }
tr	10	public void processEvent ( AWTEvent e ) { if ( e . getID ( ) == Event . WINDOW_DESTROY ) { dispose ( ) ; } else { super . processEvent ( e ) ; } }
tr	1	private MarlinUtils ( ) { }
tr	7	public void zip ( JSONArray jsonarray ) throws JSONException { begin ( ) ; writeJSON ( jsonarray ) ; }
tr	4	public ArrayList < Tile > getBlockingTiles ( ) { return blockingTiles ; }
tr	2	public int getStyle ( ) { return style ; }
tr	10	public Object get_field ( String field_name ) { try { return results . getObject ( field_name ) ; } catch ( Exception ex ) { throw new InvalidQueryException ( "Database access failed" ) ; } }
tr	3	public int getX ( ) { return ( int ) this . getSqCoordinate ( ) . getX ( ) ; }
tr	2	public boolean isEmpty ( ) { return _top == null ; }
tr	4	public void setY ( double y ) { this . y = y ; }
tr	6	public void setDataTableModel ( List < TestData > aDatas ) { this . datas = aDatas ; }
tr	7	public SmoothGraph ( ISmoothColors colors , boolean repaintThread ) { this ( repaintThread ) ; this . colors = colors ; }
tr	2	public int getValue ( ) { return this . value ; }
tr	6	@ Override public boolean setPacketFields ( Map < String , Object > in ) { return true ; }
tr	4	public List < Topic > getThreads ( ) { return threads ; }
tr	1	public void keyEvent ( ) { }
tr	6	public void setPageSettings ( List < PageSettings > pageSettings ) { this . pageSettings = pageSettings ; }
tr	10	@ Override public int compareTo ( PathNode o ) { if ( cost < o . cost ) return - 1 ; if ( cost > o . cost ) return 1 ; return 0 ; }
tr	3	public void teleop ( ) { toucan . enableCanipede ( ) ; }
tr	5	private static int swapBits ( int number ) { return ( ( number & aaaaaaaa ) >> 1 ) | ( ( number & 55555555 ) << 1 ) ; }
tr	1	public SocketIO ( ) { }
tr	1	private Operation ( ) { }
tr	10	@ Test public void revers_on_empty_list_should_be_equals_to_itself ( ) { DoubleLinkedList list = new DoubleLinkedList ( ) ; assertEquals ( utils . reverse ( list ) , list ) ; }
tr	7	public ObjectInputStream getObjectInputStream ( InputStream in ) throws IOException { return new ObjectInputStream ( in ) ; }
tr	2	public byte [ ] get_Body ( ) { return _body ; }
tr	8	@ Override public String toString ( ) { switch ( type ) { case BLANK_ENGLISH : return "blank english" ; case BLANK_LOCAL : return "blank local" ; case EQUAL : return "equal" ; case DIFFERENT : default : return "different" ; } }
tr	7	@ NaturalId @ Column ( name = "YEAR_OF_ADMISSION" , nullable = false ) public Integer getYearOfAdmission ( ) { return yearOfAdmission ; }
tr	10	public Oppilas ( String etunimi , String sukunimi , Ryhma ryhma ) { this ( etunimi , sukunimi , ryhma , - 1 ) ; }
tr	4	public Player getTurnHolder ( ) { return gameTable . getTurnHolder ( ) ; }
tr	6	public Client ( Thread . UncaughtExceptionHandler h ) { this . h = h ; }
tr	1	public MpegVideoDecodeException ( ) { super ( ) ; }
tr	10	public static int waysRunUp ( int n ) { if ( n < 0 ) { return 0 ; } else if ( n == 0 ) { return 1 ; } return waysRunUp ( n - 1 ) + waysRunUp ( n - 2 ) + waysRunUp ( n - 3 ) ; }
tr	5	public void doWork ( ) { System . out . println ( "and now  working hard" ) ; doMessage ( ) ; }
tr	3	public StringBuffer getResult ( ) { return result ; }
tr	7	@ Override public final List < ChessMovement > getMovements ( ) { return Collections . unmodifiableList ( movements ) ; }
tr	6	@ Test ( timeout = TIMEOUT ) public void test_size_after_adding_many_same_num ( ) { addAndTestSize ( "" + dcClass + " should have size 1 after adding multiple 5" , new int [ ] { 5 , 5 , 5 } , 1 ) ; }
tr	4	public void setCD_prof ( float CD_prof ) { this . CD_prof = CD_prof ; }
tr	8	private static int toIndex ( Direction dir ) { switch ( dir ) { case SOUTH : return 0 ; case NORTH : return 1 ; case WEST : return 2 ; case EAST : return 3 ; } return 0 ; }
tr	1	public GenArrayList ( ) { this ( 10 ) ; }
tr	1	public RoleSchool ( ) { }
tr	9	TimeBO ( TimeDialog timeDialog , TimeListDialog timeListDialog ) { this . timeDialog = timeDialog ; this . timeListDialog = timeListDialog ; }
tr	2	public int getCurrentDefence ( ) { return this . currentDefence ; }
tr	5	public static boolean isWindows ( ) { return System . getProperty ( "os.name" ) . toLowerCase ( ) . contains ( "win" ) ; }
tr	2	public byte [ ] getATTACHMENT_DATA ( ) { return ATTACHMENT_DATA ; }
tr	2	private void initid_star_1_subGotoes ( ) { id_star_1_subGotoes = new int [ ] { - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , 8 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 } ; }
tr	5	public void setElement ( Element e ) { this . element = e ; }
tr	7	protected void writePrimitiveArray ( Object array ) throws IOException { writeArray ( convertPrimitiveArrayToObjectArray ( array ) ) ; }
tr	2	public int getRadius ( ) { return radius ; }
tr	8	public final Matrix rotateZ ( double theta ) { makeRotationMatrix ( tmp2 , 0 , 1 , theta ) ; return preMultiply ( tmp2 ) ; }
tr	7	public final String yytext ( ) { return new String ( zzBuffer , zzStartRead , zzMarkedPos - zzStartRead ) ; }
tr	9	final public String toString ( ) { return getClass ( ) . getName ( ) + ". Value=" + value + "  unit=" + unit + "  unitString: " + unitStr + "  oper=" + oper + "  isHor: " + isHor ; }
tr	7	public static int compareVersion ( String version ) { return compareVersion ( System . getProperty ( "java.version" ) , version ) ; }
tr	2	@ Override public boolean isLeaf ( ) { return false ; }
tr	3	public String getErrCode ( ) { return errCode ; }
tr	2	@ Override public int getNumberOfRows ( ) { return 0 ; }
tr	9	@ Test ( expected = InvalidIdentifierException . class ) public void testGetUserNullId ( ) throws DataBaseReadWriteException , IdentifierNotFoundException , InvalidIdentifierException { db . getUser ( null ) ; }
tr	5	public void setType ( VariableType type ) { this . type = type ; }
tr	2	public int getUserId ( ) { return this . userId ; }
tr	6	@ Test public void valuesMatchKnownTripletForThirty ( ) throws Exception { assertThat ( calculate ( 30 ) , is ( new int [ ] { 5 , 12 , 13 } ) ) ; }
tr	10	public RecordArticleStatAllTimeModel save ( RecordArticleStatAllTimeModel model ) { if ( model . getId ( ) != null ) { return updateRecordArticleStatAllTime ( model ) ; } else { return addRecordArticleStatAllTimeModel ( model ) ; } }
tr	9	public void setZin ( String zin ) { if ( ! zin . equals ( this . zin ) ) { this . zin = zin ; fireInvalidationEvent ( ) ; } }
tr	4	public void setStartX ( int startX ) { this . startX = startX ; }
tr	6	HttpHeaders ( ) { head . before = head . after = head ; }
tr	2	public byte getGpioOut ( ) { return gpio [ 1 ] ; }
tr	9	public PassageImpl ( String docId , String content ) { this . docId = docId ; this . content = content ; }
tr	9	@ Override protected void addValueToEstimator ( double x ) { sum = sum + x ; this . ar . add ( x ) ; }
tr	10	public Decision takeDecision ( PersonalEnvironment personalEnviroment , Habitat settlement ) { return getStrategy ( ) . takeDecision ( this , personalEnviroment , settlement ) ; }
tr	5	public ASPath getASPath ( ) { if ( this . updateAttr != null ) return this . updateAttr . getASPath ( ) ; return null ; }
tr	8	@ ManyToOne @ JoinColumn ( name = "survey_idsurvey" , referencedColumnName = "idsurvey" , nullable = false ) public Survey getSurveyBySurveyIdsurvey ( ) { return surveyBySurveyIdsurvey ; }
tr	6	public void tick ( ) { if ( absorbs < presses ) { absorbs ++ ; clicked = true ; } else { clicked = false ; } }
tr	6	public K toMappedValue ( E enumValue ) { return map ( enumValue ) ; }
tr	5	public static Complex complex ( double real ) { return complex ( real , 0.0 ) ; }
tr	4	public void setRinternationalimg2011 ( double rinternationalimg2011 ) { this . rinternationalimg2011 = rinternationalimg2011 ; }
tr	9	@ Override public void clear ( ) { for ( int i = 0 ; i < front ; i ++ ) array [ i ] = null ; front = 0 ; }
tr	3	public ScAxis getAxisY ( ) { return axisY ; }
tr	1	public GraphNodePriorityQueue ( ) { }
tr	1	public FractalShapeViewer ( ) { }
tr	4	public Rook ( Piece p ) { super ( p ) ; }
tr	5	public void setPropertyChange ( PropertyChangeSupport propertyChange ) { this . propertyChange = propertyChange ; }
tr	6	public List < long > getStudentIDs ( ) { if ( studentIDs == null ) { studentIDs = new ArrayList < long > ( ) ; } return this . studentIDs ; }
tr	1	public peek_result ( ) { }
tr	2	public long getGroupId ( ) { return groupId ; }
tr	2	public double getAmount ( ) { return amount ; }
tr	10	@ Override public Decision decide ( State s ) { if ( sample_size < 0 ) return decideByAssumption ( s ) ; else return decideBySampling ( s ) ; }
tr	10	private void checkForBurstOutput ( ) throws IOException { String output = null ; if ( ! ( output = this . getBurstOutput ( ) ) . isEmpty ( ) ) { this . outputWriter . write ( output ) ; } }
tr	6	public static void setNombre ( String mNombre ) { Conexion . mNombre = mNombre ; }
tr	4	public void setY ( int y ) { this . y = y ; }
tr	3	protected void disableLimits ( ) { sendCommand ( new DisableLimitsCommand ( ) ) ; }
tr	2	public int getLines ( ) { return lines ; }
tr	1	public MHMMax ( ) { super ( "Memoria Morfologica Heteroasociativa MAX" ) ; }
tr	5	public void setDialedCalls ( Call [ ] dialedCalls ) { this . dialedCalls = dialedCalls ; }
tr	5	private void exceptionOccured ( IOException exp ) { possibleException = exp ; }
tr	4	byte getState ( ) { super . setupFields ( ) ; return ( byte ) fields [ 0 ] . getValue ( ) ; }
tr	4	public PinNameState ( EvlComponentFSM fsm ) { super ( fsm ) ; }
tr	9	static void log ( int integer , int width ) { if ( width == 1 ) { log ( integer ) ; } else { log ( integer + ":" + width + " " ) ; } }
tr	6	public int paint ( Graphics g ) { return draw ( g , text ) ; }
tr	9	private final boolean doublec ( int j ) { if ( j < 1 ) return false ; if ( b [ j ] != b [ j - 1 ] ) return false ; return cons ( j ) ; }
tr	1	private Err ( ) { }
tr	6	void setTable ( List < TableEl > table ) { this . table = table ; }
tr	3	public UserSessionVO getUserSessionVO ( ) { return userSessionVO ; }
tr	8	void setMinLength ( int minLength ) { if ( type != SimpleType . STRING ) { throw new IllegalArgumentException ( "minLength can only be used for type: String" ) ; } this . minLength = minLength ; }
tr	7	private void print ( String string ) { System . out . println ( string ) ; }
tr	1	public GenericMatcher ( ) { }
tr	4	private void copy ( ) { TextComponentUtil . copy ( currentTextComponent ) ; }
tr	3	@ Override public String getDescription ( ) { return "Erreur 404" ; }
tr	9	public void start ( ) { myView . setDefaultCloseOperation ( JFrame . EXIT_ON_CLOSE ) ; myView . pack ( ) ; myView . setVisible ( true ) ; }
tr	9	@ Override public void setDebug ( boolean debug ) { plugin . config . setDebug ( debug ) ; plugin . refreshConfig ( ) ; }
tr	6	@ Override public Point2D . float getSize ( ) { return new Point2D . float ( getWidth ( ) , getHeight ( ) ) ; }
tr	2	public FormFuncionario ( ) { initComponents ( ) ; }
tr	10	public Control ( ) { register = new Register ( ) ; String [ ] fieldNames = register . getFieldNames ( ) ; mainWindow = new MainWindow ( this , fieldNames ) ; }
tr	7	public boolean isNull ( String key ) { return JSONObject . null . equals ( this . opt ( key ) ) ; }
tr	4	public Tanh ( double slope ) { this . slope = slope ; }
tr	3	public BColor getOldColor ( ) { return oldColor ; }
tr	10	public void create ( ) { persist ( PersistAction . CREATE , ResourceBundle . getBundle ( "/resoruces/Bundle" ) . getString ( "HardstateCreated" ) ) ; if ( ! JsfUtil . isValidationFailed ( ) ) { items = null ; } }
tr	6	@ XmlElement ( name = "shelf" ) public ArrayList < Shelf > getShelfList ( ) { return shelfList ; }
tr	9	public Agent ( Body body ) { _mind = null ; _body = body ; if ( _body != null ) _body . setAgent ( this ) ; }
tr	9	public FrizzleFeatherGene ( String genotype ) { this . genotype = genotype ; switch ( genotype ) { case "FF" : phenotype = "Normal" ; break ; case "Ff" : case "fF" : phenotype = "Frizzle" ; break ; case "ff" : phenotype = "Curly" ; break ; default : } }
tr	7	private void resizeTab ( ) { tab = Arrays . copyOf ( tab , tab . length * 2 ) ; }
tr	5	public WordCountInputFormat ( String filename ) throws IOException { super ( filename ) ; }
tr	5	public StatesBar ( boolean direction ) { if ( direction ) { this . getImage ( ) . mirrorHorizontally ( ) ; } }
tr	5	public void setValueAt ( Object arg0 , int arg1 , int arg2 ) { }
tr	4	public void setFocused ( boolean focused ) { this . focused = focused ; }
tr	5	public Iterator < ChannelUser > iterChannelUsers ( ) { return users . iterator ( ) ; }
tr	7	public static ClientState getState ( String id ) { return ids . get ( id ) ; }
tr	2	public int getTasksSize ( ) { return tasksSize ; }
tr	6	public ButtCity ( int row , int col ) { super ( IMAGE_PATH , row , col ) ; }
tr	4	protected void setIndex ( int index ) { this . index = index ; }
tr	10	public void paint ( Graphics g ) { g . setColor ( color ) ; g . fillOval ( ( int ) xLoc - 5 , ( int ) yLoc - 5 , 10 , 10 ) ; }
tr	6	@ Override public void enterRead ( @ NotNull SSTParser . ReadContext ctx ) { }
tr	1	public Zodiac ( ) { super ( "Zodiac" , 2 ) ; }
tr	10	@ Test public void sizeOfEmptyTreeIsZero ( ) { BinarySearchTree < Integer > tree = new BinarySearchTree < Integer > ( ) ; assertEquals ( 0 , tree . size ( ) ) ; }
tr	4	@ Override public String toString ( ) { return name ; }
tr	5	protected ConfigAdaptorImpl ( FODriverImpl driver ) { super ( driver , TYPE ) ; }
tr	1	public IllegalPropertyAccessException ( ) { }
tr	6	public static LOCTYPE fromValue ( String v ) { return valueOf ( v ) ; }
tr	5	public DeletedFieldImpl ( String fieldName ) { this . fieldName = fieldName ; }
tr	10	@ Override public void update ( MouseEvent e ) { getGraphics ( ) . fillArc ( e . getX ( ) , e . getY ( ) , 5 , 5 , 0 , 360 ) ; }
tr	10	protected static int intelInt ( int i ) { return ( ( i & ff ) << 24 ) + ( ( i & ff00 ) << 8 ) + ( ( i & ff0000 ) >> 8 ) + ( ( i >> 24 ) & ff ) ; }
tr	5	public ReservationSchedule ( BigDecimal id ) { this . id = id ; }
tr	1	public int recoverHealth ( ) { return 0 ; }
tr	1	private Injectors ( ) { }
tr	1	public SelfDiscoveryTest ( ) { super ( "runTests" ) ; }
tr	5	public HashMap < String , Integer > getQuestTracker ( ) { return questTracker ; }
tr	5	public void setChooseWordTest ( boolean selected ) { this . chooseWordTest . setSelected ( selected ) ; }
tr	9	public static void main ( String [ ] argumentVector ) { SchedulePlanner schedulePlanner = new SchedulePlanner ( argumentVector ) ; schedulePlanner . execute ( ) ; }
tr	1	private RobotPreProcessorsProvider ( ) { }
tr	3	public String getTypeName ( ) { return typeName ; }
tr	1	public PingSubsystem ( ) { }
tr	5	public Object getRecipient ( ) { if ( toName != null ) { return toName ; } return to ; }
tr	7	@ Override public List < CorpusUnit > getSentences ( ) { return Collections . singletonList ( ( CorpusUnit ) this ) ; }
tr	3	public Logger getLogger ( ) { return this . logger ; }
tr	3	public BigInteger getFOpen ( ) { return fOpen ; }
tr	9	@ Test public void TestTelekineticLeviationWithGravity ( ) { ap . activateTelekineticLevitation ( ) ; ap . activateGravity ( ) ; assertFalse ( ap . isTelekineticlyLevitated ( ) ) ; }
tr	6	public void setPrev ( Node < T > prev ) { this . prev = prev ; }
tr	3	public String getItem ( ) { return item ; }
tr	5	public void setBranchCode ( String branchCode ) { this . branchCode = branchCode ; }
tr	8	public CellEvent ( View v , EventObject aEv ) { super ( v ) ; this . action = aEv ; }
tr	6	public void addConversation ( Conversation c ) { conversations . add ( c ) ; }
tr	6	public ImagePanel ( String img ) { this ( new ImageIcon ( img ) . getImage ( ) ) ; }
tr	7	public static int getArea ( final World w ) { return w . getTileHeight ( ) * w . getTileWidth ( ) ; }
tr	7	public void setByte ( byte x ) throws SQLException { this . ps . setByte ( parameterIndex ++ , x ) ; }
tr	2	public int getRadialCols ( ) { return radialCols ; }
tr	4	public int getIntWidth ( ) { return ( int ) Math . ceil ( width ) ; }
tr	10	@ Override public void onFatalRejection ( RejectedHandler < ? > rejection , Object context ) { onFatalRejectionConsumer . accept ( rejection , context ) ; }
tr	2	public int getNumber ( ) { return number ; }
tr	8	public final void setHeight ( BoundSize size ) { this . height = size != null ? size : BoundSize . NULL_SIZE ; }
tr	1	public PoolThreadTaskExecutor ( ) { this ( 8 ) ; }
tr	10	public int size ( ) { return 1 + ( left == null ? 0 : left . size ( ) ) + ( center == null ? 0 : center . size ( ) ) + ( right == null ? 0 : right . size ( ) ) ; }
tr	4	@ Override public void mouseExited ( MouseEvent mouse ) { }
tr	3	public Mailbox getMailbox ( ) { return mailbox ; }
tr	6	public void setEnabled ( boolean enabled ) { Dispatch . put ( this , "Enabled" , new Variant ( enabled ) ) ; }
tr	6	@ Override public String toString ( ) { return "(" + x + "  " + y + "  " + z + ")" ; }
tr	7	public Range ( double min , double max ) { min_ = min ; max_ = max ; }
tr	4	public double optDouble ( int index ) { return this . optDouble ( index , double . NaN ) ; }
tr	1	public void setMutables ( ) { }
tr	1	public void readWorld ( ) { }
tr	1	public StringDumper ( ) { }
tr	8	WritingBuffer ( final Writer writer , final int bufferSize ) { this . writer = writer ; buffer = new char [ bufferSize ] ; }
tr	1	public int EOF_sym ( ) { return 0 ; }
tr	6	public static String getPassword ( String password ) { return getProperty ( "weibo4j.password" , password ) ; }
tr	1	public boolean isTerminated ( ) { return false ; }
tr	8	public Animal ( String raza , int patas ) { this . raza = raza ; this . patas = patas ; }
tr	4	@ Override public Color getLightFontColor ( ) { return new Color ( 76 , 96 , 145 ) ; }
tr	4	public void setX ( int i ) { this . X = i ; }
tr	6	@ Override public boolean apply ( Rule r ) { return r . hidden ; }
tr	8	@ Override public String toString ( ) { return "OutgoingCarrierRoutingMeta [previous=" + previous + "  totalCount=" + totalCount + "  offset=" + offset + "  limit=" + limit + "  next=" + next + "]" ; }
tr	9	public OrNode ( Node l , Node r ) { left = l ; right = r ; }
tr	9	public int roll ( ) { int ret = 0 ; for ( Die die : dice ) { ret += die . roll ( ) ; } return ret ; }
tr	5	public void updateString ( String level ) { lastProps = level ; }
tr	9	public void tag ( String tag ) { if ( ! tags . contains ( tag ) ) { tags . add ( tag ) ; } }
tr	8	public void fileSaveError ( String fileName ) { Log . info ( String . format ( "Unable to save '%s'\n" , fileName ) ) ; }
tr	5	public void setWorld ( String world ) { this . world = world ; }
tr	8	public static Object getUtility ( String name ) throws TransformException { return getUtilities ( ) . get ( name ) ; }
tr	3	public ProdCodeGrp getProdCodeGrp ( ) { return prodCodeGrp ; }
tr	6	public Integer apply ( Collection value ) { return value . size ( ) ; }
tr	7	protected String getCellAsString ( int col , int row ) { return getCell ( col , row ) ? "#" : "_" ; }
tr	7	@ Override public void controlChange ( ShortMessage event ) { System . out . println ( "la" ) ; }
tr	9	public boolean isAlive ( ) { if ( ! isAlive ) { if ( location != null ) { field . clear ( location ) ; location = null ; field = null ; } } return isAlive ; }
tr	10	private void buildTerritoires ( ) { territoires = SQLite . createTerritoires ( 2 ) ; for ( TerritoireCase t : territoires ) { getContentPane ( ) . add ( t ) ; } }
tr	10	@ Override public Dimension maximumLayoutSize ( Container target ) { return new Dimension ( Integer . MAX_VALUE , Integer . MAX_VALUE ) ; }
tr	5	public void setFilename ( String filename ) { this . filename = filename ; }
tr	5	public void setIndex ( int i ) { sen . index = i ; }
tr	3	public String getDescription ( ) { return description ; }
tr	6	public static SimpleObject getInstance ( ) { if ( simpleObject == null ) simpleObject = new SimpleObject ( ) ; return simpleObject ; }
tr	4	private int adjustedRow ( int row ) { return row + rowStart ; }
tr	5	public void setImg ( Image img ) { this . img = img ; }
tr	6	Rule AssignmentStatement ( ) { return Sequence ( Identifier ( ) , WhiteSpace ( ) , "<- " , Identifier ( ) ) ; }
tr	7	public static Range maxRange ( int start ) { return new Range ( start , Integer . MAX_VALUE ) ; }
tr	7	public void setComposite ( final int k ) { assert ( k >= 3 ) && ( ( k % 2 ) == 1 ) ; sieve . set ( ( k - 3 ) / 2 ) ; }
tr	6	public IntAdder ( JBlockingQueue < Integer > q ) { this . q = q ; }
tr	1	public Board ( ) { }
tr	1	public TagCompound ( ) { super ( null ) ; }
tr	2	public int getLevel ( ) { return level ; }
tr	9	public void setObjeto ( String objeto , short x , short y ) { mapa [ x ] [ y ] = objeto ; }
tr	3	static Object sharedMainFrame ( ) { throw new UnsupportedOperationException ( "Not supported yet." ) ; }
tr	2	private Varp ( ) { aBoolean713 = false ; }
tr	6	@ OneToMany ( mappedBy = "stationByIdStation1" ) public Collection < Way > getWaysById ( ) { return waysById ; }
tr	5	@ Override public String toString ( ) { return "" + getJvmID ( ) + "/" + getActorName ( ) ; }
tr	4	public DelegateView ( Element elem ) { super ( elem ) ; }
tr	3	public ToolsJP getToolsJP ( ) { return toolsJP ; }
tr	3	public String getDocumentNumber ( ) { return documentNumber ; }
tr	3	public void dropDatabase ( ) { db . dropDatabase ( ) ; }
tr	2	public boolean isEmpty ( ) { return N == 0 ; }
tr	8	protected String lowerOperationOnResult ( final String varNameForecast ) { return String . format ( "(%s$pred - %s$se)" , varNameForecast , varNameForecast ) ; }
tr	7	@ Override @ Inject public void setService ( ScheduleService service ) { this . service = service ; }
tr	1	public Create ( ) { }
tr	7	public Dictionary ( String path ) throws FileNotFoundException , IOException { loadDictionary ( path ) ; }
tr	8	public SQLiteImpl ( String name ) throws Exception { this . sTempDb = name ; class . forName ( sDriverName ) ; }
tr	4	@ Override public void keyReleased ( KeyEvent arg0 ) { }
tr	9	public void setCoord ( Coord newCoord ) { x = newCoord . getX ( ) ; y = newCoord . getY ( ) ; }
tr	9	public void initData ( ) { sellerInitializer . initSellers ( ) ; userInitializer . initUsers ( ) ; productInitializer . initProducts ( ) ; proposalInitializer . initProposals ( ) ; }
tr	5	public int getCurrSpAtk ( ) { return ( int ) ( spAtkStage . getStageModifier ( ) * stats . getSpAtk ( ) ) ; }
tr	8	public void set_shape_pt_lat ( double in ) { _shape_pt_lat = in ; mHashCode = genHashCode ( _shape_pt_lat , _shape_pt_lon ) ; }
tr	3	public String getJid ( ) { return jid ; }
tr	6	public void sendSelectedTuple ( String [ ] row ) { controller . setSelectedTuple ( row ) ; }
tr	5	public static double rawToNumber ( Object value ) { if ( value instanceof double ) return ( double ) value ; return null ; }
tr	6	public static SpaceRegion fromValue ( String v ) { return valueOf ( v ) ; }
tr	4	@ Override public void resize ( int width , int height ) { }
tr	10	@ Override protected int execute ( InputInterface input , OutputInterface output ) { this . input = input ; this . output = output ; return 0 ; }
tr	9	private void setStone ( ) { alive = false ; Stone stone = new Stone ( field , location ) ; location = null ; field = null ; }
tr	4	@ Override public boolean completesValidShape ( int x , int y ) { return true ; }
tr	6	public void delete ( ) throws DBException { DBTools . doDeleteID ( this . getTableName ( ) , id ) ; }
tr	4	public void setSante ( int sante ) { this . sante = sante ; }
tr	10	@ Test public void testPlayerLightGrenadeOnRightDown ( ) throws InvalidActionException { new MoveRightDown ( ) . doAction ( playerLightGrenade , gridLightGrenade ) ; assertEquals ( - 1 , playerLightGrenade . getRemainingTurns ( ) ) ; }
tr	10	@ Test public void doTest ( ) { adjMatrix = new int [ ] [ ] { { 0 , 7 , 9 , 0 , 0 , 14 } , { 7 , 0 , 10 , 15 , 0 , 0 } , { 9 , 10 , 0 , 11 , 0 , 2 } , { 0 , 15 , 11 , 0 , 6 , 0 } , { 0 , 0 , 0 , 6 , 0 , 9 } , { 14 , 0 , 2 , 0 , 9 , 0 } } ; countPaths ( ) ; for ( int aResult : result ) { System . out . println ( aResult ) ; } }
tr	7	private int genS ( ) { return ( int ) RandomGeneratorHelper . GaussDistribution ( sys . ServeMu , sys . ServeSigma ) ; }
tr	7	public void aumentar ( ) { xMax += 5 ; yMax += 5 ; zMax += 5 ; xMin -= 5 ; yMin -= 5 ; zMin -= 5 ; }
tr	4	public int cdlMorningDojiStarLookback ( double optInPenetration ) { return super . cdlMorningDojiStarLookback ( optInPenetration ) ; }
tr	1	protected MemberNamesMatchesArray ( ) { }
tr	1	public void run ( ) { }
tr	4	public void setNumItems ( final int numItems ) { this . numItems = numItems ; }
tr	1	public MFloat ( ) { }
tr	4	public final void println ( boolean x ) { println ( "" + x ) ; }
tr	2	public String contentType ( ) { return "text/html" ; }
tr	2	public boolean hasMind ( ) { return ( _mind != null ) ; }
tr	8	@ Override public String toString ( ) { return "DataEvent [socketChannel=" + socketChannel + "  data=" + Arrays . toString ( data ) + "  processedData=" + processedData + "]" ; }
tr	8	@ Override public int hashCode ( ) { int hash = 0 ; hash += ( id != null ? id . hashCode ( ) : 0 ) ; return hash ; }
tr	7	public void actionPerformed ( ActionEvent e ) { procurarUsuario . dispose ( ) ; Administrador . main ( null ) ; }
tr	3	@ AfterClass public static void tearDownClass ( ) throws Exception { }
tr	6	public XMLReaderDOM getDOMReader ( ) { if ( domReader == null ) { domReader = new XMLReaderDOM ( ) ; } return domReader ; }
tr	8	@ Override public void actionPerformed ( ActionEvent e ) { switch ( e . getActionCommand ( ) ) { case "Swap" : swapText ( ) ; break ; case "Exit" : exitWindow ( ) ; break ; } }
tr	9	public void removeEmail ( Email email ) { if ( this . emails . equals ( email ) ) { emails . remove ( email ) ; } }
tr	8	public Coord midTo ( Coord other ) { return add ( vecTo ( other ) . scale ( 0.5 ) ) ; }
tr	2	public synchronized long count ( ) { return count ; }
tr	5	public Builder setFontId ( int id ) { fontId = id ; return this ; }
tr	2	@ Override public float getS_Ext ( ) { return 0 ; }
tr	1	public Utils ( ) { }
tr	8	@ Override public void mouseExited ( MouseEvent e ) { ( ( TacticButton ) e . getSource ( ) ) . setHovered ( false ) ; }
tr	2	synchronized void clear ( ) { thread = null ; }
tr	8	@ Override public void visit ( Apple apple ) { System . out . println ( "\u6536\u94F6\u5458" + name + "\u7ED9\u82F9\u679C\u8FC7\u79E4\uFF0C\u7136\u540E\u8BA1\u7B97\u5176\u4EF7\u683C\u3002" ) ; }
tr	3	public GregCalPlus getStart ( ) { return start ; }
tr	9	public StringCustomer ( String id , String name ) { this . id = id ; this . name = name ; }
tr	10	@ Test public void memberTest ( ) { String member = APICall . getMemberProfile ( ResponseFormat . XML ) ; assertEquals ( member , "https://api.tradeking.com/v1/member/profile.xml" ) ; }
tr	4	public void setQmParentInstId ( int qmParentInstId ) { this . qmParentInstId = qmParentInstId ; }
tr	9	public CqCrippleAction ( Entity actor , int skillId , Thing dobj ) { super ( actor , skillId , dobj ) ; }
tr	6	private void formKeyPressed ( java . awt . event . KeyEvent evt ) { }
tr	3	@ Override public double getRotationDeg ( ) { return rotation ; }
tr	7	private Position ( int x , int y ) { this . x = x ; this . y = y ; }
tr	8	private void active ( ) { for ( MemcachedClient client : clients ) { try { client . getVersions ( ) ; } catch ( Exception e ) { } } }
tr	5	@ Override public boolean isFull ( ) { return ( elements == table . length ) ; }
tr	2	private boolean r_mark_ki ( ) { if ( ! ( eq_s_b ( 2 , "ki" ) ) ) { return false ; } return true ; }
tr	1	public DecodeMtxToINS ( ) { }
tr	7	public Transition ( char input , State target ) { super ( target ) ; this . symbol = input ; }
tr	7	void setProgressBar ( double pos ) { progress_bar = pos ; if ( ! is_initialised && initpainter != null ) repaint ( 100 ) ; }
tr	3	public Money getOCashbackAmount ( ) { return oCashbackAmount ; }
tr	9	@ Deprecated private boolean checkCondition ( String condition ) { if ( condition == null || condition . length ( ) == 0 ) { db . writeError ( "Skipping null or empty WHERE condition." , false ) ; return false ; } return true ; }
tr	3	public TARequestDetails createTARequestDetails ( ) { return new TARequestDetails ( ) ; }
tr	9	public HalfEdge ( Vertex v , Face f ) { vertex = v ; face = f ; }
tr	8	private final void bsFinishedWithStream ( ) throws IOException { while ( bsLive > 0 ) { int ch = ( bsBuff >> 24 ) ; bsBuff <<= 8 ; bsLive -= 8 ; bytesOut ++ ; } }
tr	8	public static void notGreaterThanCheck ( final int a , final int upperBound ) { if ( a > upperBound ) throw new IllegalArgumentException ( "Input argument " + a + " should not be greater than " + upperBound ) ; }
tr	10	public void close ( ) { setState ( State . DISCONNECTED ) ; sendQ . clear ( ) ; try { conn . close ( ) ; } catch ( Exception e ) { } }
tr	6	public void addTask ( Task t ) { pc . newTask ( t ) ; }
tr	7	public InvalidDataException ( int closecode , Throwable t ) { super ( t ) ; this . closecode = closecode ; }
tr	9	@ Test public void FIGHTING_attacking_GRASS ( ) { assertEquals ( 1.0 , tc . getWeaknessResistance ( Type . FIGHTING , Type . GRASS ) , 0.0 ) ; }
tr	4	public Caractere ( char caractere ) { this . caractere = caractere ; }
tr	4	public List < StateKeyboard > getStatesKeyboard ( ) { return statesKeyboards ; }
tr	7	public void actionPerformed ( ActionEvent e ) { administrador . dispose ( ) ; ProcurarUsuarioFrequencia . main ( null ) ; }
tr	9	public DefaultAreaTree ( AreaTree src ) { page = src . getPage ( ) ; root = src . getRoot ( ) ; }
tr	1	public int delMax ( ) { return 0 ; }
tr	7	public void deleteRepository ( String name ) throws Exception { rootCatalog . deleteRepository ( name ) ; }
tr	8	public final void setCurrentServerIndex ( int currentServer ) { if ( currentServer < Settings . serversCount ) this . serverBox . setSelectedIndex ( currentServer ) ; }
tr	2	public void resetFrames ( ) { frames = 0 ; }
tr	4	public void setLastMouseY ( int initY ) { lastMouseY = initY ; }
tr	4	public TextOutputPanelObservable ( ) { this . addObserver ( TextOutputPanel . getTextOutputPanel ( ) ) ; }
tr	6	public void setName ( String newName ) { cmdNameLabel . setText ( newName ) ; }
tr	4	public Node < E > getNext ( ) { return _next ; }
tr	6	public final int getIndex ( final K key ) { return this . keys . indexOf ( key ) ; }
tr	10	private void searchResultsMouseClicked ( java . awt . event . MouseEvent evt ) { downloadButton . setEnabled ( searchResults . getSelectedRow ( ) >= 0 ) ; }
tr	3	public Properties getHeaders ( ) { return headers ; }
tr	5	public void setCreatedDate ( Date createdDate ) { this . createdDate = createdDate ; }
tr	4	@ Override public String [ ] getTitles ( ) { return TITLES ; }
tr	5	@ Override protected void selectNumber ( ) { System . out . println ( "\u9009\u4E00\u4E2A\u4E2D\u56FD\u8054\u901A\u7535\u8BDD\u53F7" ) ; }
tr	6	private static ByteBuffer prepareTransportBuffer ( byte [ ] data ) { return ByteBuffer . wrap ( data ) ; }
tr	8	public NQuad next ( ) throws IOException { NQuad result = this . buffered ; this . preFetch ( ) ; return result ; }
tr	2	private double getLatestOutput ( ) { return this . latestoutput ; }
tr	2	public int getY ( ) { return y ; }
tr	4	public void setSequence_Id ( int sequenceId ) { sequence_Id = sequenceId ; }
tr	3	public ASTNode rightMatch ( ) { return matchedRightChild ; }
tr	3	public int cost ( ) { return beverage . cost ( ) ; }
tr	4	@ Override public double getPaymentAmount ( ) { return getQuantity ( ) * getPricePerItem ( ) ; }
tr	3	public Project getProject ( ) { return this . project ; }
tr	4	public void setIntField ( int intField ) { this . intField = intField ; }
tr	2	public long getId ( ) { return id ; }
tr	4	public void save ( ) { if ( this . id > 0 ) { update ( ) ; } else { insert ( ) ; } }
tr	7	public static Object getObject ( String key ) { return data . get ( key ) ; }
tr	1	public NoSuchColumnException ( ) { super ( ) ; }
tr	4	@ Override protected InputDefinition getNativeDefinition ( ) { return createDefinition ( ) ; }
tr	8	public Nota ( long codigo , String mensaje ) { this . codigo = codigo ; this . mensaje = mensaje ; }
tr	1	protected int getImpersonatorPort ( ) { return 2323 ; }
tr	6	public void setUser ( String user ) { if ( user == null ) return ; this . user = user ; }
tr	10	public Modele ( ) { this . joueurs = new ArrayList < Joueur > ( ) ; this . type = TypePartie . CLASSIQUE ; this . options = new Options ( ) ; this . indice_joueur_courant = 0 ; }
tr	2	public boolean isAck ( ) { return ack ; }
tr	9	@ Test public void GHOST_attacking_FIGHTING ( ) { assertEquals ( 1.0 , tc . getWeaknessResistance ( Type . GHOST , Type . FIGHTING ) , 0.0 ) ; }
tr	5	public final void setFirstPlayerInfo ( final PlayerInfo firstplayer ) { _firstplayer = firstplayer ; }
tr	9	@ BeforeMethod public void setUp ( ) throws Exception { MockitoAnnotations . initMocks ( this ) ; crudService = Mockito . mock ( HousePlannerCrudService . class ) ; }
tr	10	public boolean removeAll ( ) { if ( ! participants . isEmpty ( ) ) { int i = participants . size ( ) - 1 ; participants . clear ( ) ; fireIntervalRemoved ( this , 0 , i ) ; } return true ; }
tr	5	public void setName ( String value ) { this . name = value ; }
tr	8	@ Override public String getParams ( ) { StringBuilder params = new StringBuilder ( ) ; return params . toString ( ) ; }
tr	7	public Position ( final int column , final int row ) { this . column = column ; this . row = row ; }
tr	4	private NumberStringConverter ( boolean zeroOnError ) { this . zeroOnError = zeroOnError ; }
tr	10	public TasquesPendents ( String any , IClient client ) { this . client = client ; this . any = any ; initialize ( ) ; }
tr	9	@ Override public Point2D world2screen ( Point2D world ) { return wr . getWorldTransform ( ) . transform ( world , null ) ; }
tr	1	public Cube ( ) { this ( "cube" , 1 , 1 , 1 , 0 , false , true ) ; }
tr	1	public EchoRPC ( ) { super ( "echorpc" ) ; }
tr	4	public boolean bateauxPlaces ( ) { return flotte . equals ( bateaux_places ) ; }
tr	6	public void add_piece ( Piece piece ) { _pieces . add ( piece ) ; }
tr	10	@ JsonProperty ( "Endpoint" ) public void setEndpoint ( List < org . ogf . glue2 . Endpoint > Endpoint ) { this . Endpoint = Endpoint ; }
tr	8	@ JsonProperty ( "Contact" ) public List < org . ogf . glue2 . Contact > getContact ( ) { return Contact ; }
tr	3	public String getTitle ( ) { return _title ; }
tr	7	private void jButton1ActionPerformed ( java . awt . event . ActionEvent evt ) { this . dispose ( ) ; }
tr	6	public JSONArray ( String source ) throws JSONException { this ( new JSONTokener ( source ) ) ; }
tr	7	public boolean finished ( int turn ) { return ( done && TurnManager . followsRules ( turn , selected ) ) ; }
tr	10	public OrangePortalSkill ( MazeGame maze ) { super ( maze ) ; setCost ( 75 ) ; setCooldown ( 15000 ) ; setUsable ( true ) ; setKeyCode ( KeyEvent . VK_Y ) ; }
tr	10	public void unscheduleAll ( final ItemType item ) { for ( final int intervall : INTERVALS ) { unscheduleAt ( intervall , item ) ; } assert scheduledItemCount ( ) == 0 ; stop ( ) ; }
tr	4	public void setSequenceNumber ( int sentSequenceNumber ) { this . sequenceNumber = sentSequenceNumber ; }
tr	1	private Messages ( ) { }
tr	9	public static long shallowSizeOf ( Object instance ) { if ( instance == null ) return 0 ; return getWeakEnvironmentInstance ( ) . getSchema ( instance ) . shallowSize ( instance ) ; }
tr	6	public ComponentInput ( Component component ) { keyHandler = new ComponentKeyHandler ( component ) ; }
tr	8	public Ipv4Range andPrefixLength ( String prefix ) { return andPrefixLength ( Integer . parseInt ( prefix ) ) ; }
tr	7	public void incrementWinner ( ) throws TurnException { Player winner = this . getWinner ( ) ; winner . addTurnWin ( ) ; }
tr	6	public void settable_employeeListener ( MouseListener l ) { this . table_employee . addMouseListener ( l ) ; }
tr	7	@ Before public void setUp ( ) throws Exception { jsonCallEncoder = new JsonCallEncoder ( JsonParserBuilder . build ( null ) ) ; }
tr	7	void removeAll ( ) { for ( int i = 0 ; i < MAX_TILES ; i ++ ) { removeTile ( i , true ) ; } }
tr	10	@ CRRCSimEditorNode ( name = "DataIdle" ) @ XmlElement ( name = "data" ) @ XmlElementWrapper ( name = "data_idle" ) public ArrayList < EngineDataIdle > getDataIdle ( ) { return dataIdle ; }
tr	8	@ Override public SearchRequestBuilder withPhonebookRequestSortOption ( PhonebookSortOption phonebookSortOption ) { getPhonebookRequest ( ) . setSortBy ( phonebookSortOption ) ; return this ; }
tr	8	private boolean test ( String text ) { try { Integer . parseInt ( text ) ; return true ; } catch ( NumberFormatException e ) { return false ; } }
tr	1	public SimpleResponseBody ( ) { }
tr	8	public void setOutGoingConnections ( Map < Neuron , List < Connection >> outGoingConnections ) { this . outGoingConnections = outGoingConnections ; }
tr	7	public Deletion ( StateVector stateVec , int pos ) { super ( stateVec ) ; this . pos = pos ; }
tr	2	public int getEndMinute ( ) { return endMinute ; }
tr	8	public CustomTextFieldEvent ( CustomTextField source , String value ) { super ( source ) ; this . value = value ; }
tr	7	public JaxrsResources createJaxrsResourcesFromResourceList ( List < JaxrsResource > resources ) { return new JaxrsResources ( resources ) ; }
tr	10	protected String formatArea ( double area ) { long roundedArea = Math . round ( area / 10000 ) * 10000 ; return String . format ( "% d" , roundedArea ) ; }
tr	5	public void setTxtPot ( JTextField txtPot ) { this . txtPot = txtPot ; }
tr	1	public InformationTecnologyNGTest ( ) { }
tr	3	public OutputConnector getOutput ( ) { return output ; }
tr	2	@ Override public boolean isAccountedIntoSimulation ( ) { return false ; }
tr	3	public String getNick ( ) { return nick ; }
tr	9	@ Override public InetSocketAddress getLocalSocketAddress ( WebSocket conn ) { return ( InetSocketAddress ) getSocket ( conn ) . getLocalSocketAddress ( ) ; }
tr	9	public int getNumPicturesInCard ( ) { int temp = ff & statusTable [ 14 ] ; temp <<= 8 ; temp += ff & statusTable [ 15 ] ; return temp ; }
tr	7	protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { }
tr	2	public final int getBeatsPerMinute ( ) { return beatsPerMinute ; }
tr	5	public void setTo ( String value ) { this . to = value ; }
tr	8	public String getOptionalParam ( ParameterNames paramName ) { if ( params == null ) return null ; return params . get ( paramName ) ; }
tr	8	public OptPacker ( OptClass options ) throws OptPackException { if ( options == null ) { throw new OptPackException ( ) ; } this . options = options ; }
tr	9	public List < ProductModel > getProductsByName ( String name ) throws WebshopAppException { return productRepository . getProductByName ( name ) ; }
tr	7	public String format ( CommandLineConfiguration config ) { return format ( config , CommandLineFormatType . short ) ; }
tr	1	public User ( ) { this ( "mydrox" ) ; }
tr	2	public String getStateName ( ) { return "Mel" ; }
tr	9	protected int nextHop ( int hash , int iteration ) { return ( ( int ) ( hash + 0.5 * iteration + 0.5 * iteration * iteration ) ) & ( keys . length - 1 ) ; }
tr	6	public Range ( double minmax ) { this . min = minmax ; this . max = minmax ; }
tr	6	public final void addToOwned ( final WorldStruct struct ) { this . owned . add ( struct ) ; }
tr	2	public boolean isGraphicsRunning ( ) { return graphicsRunning ; }
tr	6	public void setUsers ( List < Users > users ) { this . users = users ; }
tr	6	public void setDetalles ( Set < OrdenPinturaDetalle > detalles ) { this . detalles = detalles ; }
tr	10	public static void main ( String [ ] arg ) { for ( int i = 0 ; i < SIZE ; i ++ ) { exec . execute ( new SerialChecker ( ) ) ; } }
tr	2	public synchronized boolean shouldTerminate ( ) { return terminate ; }
tr	1	protected boolean affectsPalettes ( ) { return false ; }
tr	9	@ Override public void addObject ( int index , MapObject object ) { data . insert ( index , object ) ; }
tr	5	public void setArmour ( String armour ) { this . armour = armour ; }
tr	4	public TimeStamp ( long t ) { this . t = t ; }
tr	7	private int getLastPageNumber ( ) { return elements . size ( ) / pageSize + ( ( elements . size ( ) % pageSize != 0 ) ? 1 : 0 ) ; }
tr	10	public void set ( int index , Object element ) throws illegalIndexException { if ( index < 0 ) { throw new illegalIndexException ( ) ; } tablica_stosu [ index ] = element ; }
tr	4	BeforePollingCycleEvent ( DirectoryPoller dp ) { super ( dp ) ; }
tr	3	public String getHamQTHPass ( ) { return hamQTHPass ; }
tr	4	@ Override public HandlerList getHandlers ( ) { return handlers ; }
tr	5	public static String escape ( String singularPluralVariations ) { return singularPluralVariations ; }
tr	3	public String asString ( ) { return name ; }
tr	4	@ Override public Type get ( ) { return m_type ; }
tr	3	@ Override public double getDiscountPct ( ) { return discountPct ; }
tr	3	public Building get_building ( ) { return _building ; }
tr	2	public long getTransitionOffTime ( ) { return transitionOffTime ; }
tr	7	public static void flipDirectionTo ( int x ) { if ( Proto . x > x ) setDirectionToLeft ( ) ; else setDirectionToRight ( ) ; }
tr	9	public static mVar m$piece ( mVar p$3 , Object object , Object object2 ) { throw new UnsupportedOperationException ( ) ; }
tr	6	@ Override public void setType ( String type ) { this . type = type ; }
tr	10	public final void yyclose ( ) throws java . io . IOException { zzAtEOF = true ; zzEndRead = zzStartRead ; if ( zzReader != null ) zzReader . close ( ) ; }
tr	2	public boolean isFinished ( ) { return isFinished ; }
tr	4	public MousepadListener ( ) { thread = null ; mouseX = mouseY = 0 ; }
tr	2	@ Override public boolean esProducto ( ) { return false ; }
tr	3	public String getNombre_usuario ( ) { return nombre_usuario ; }
tr	2	public boolean isStarted ( ) { return started ; }
tr	9	public double timesRestart ( Character c ) { if ( restart . containsKey ( c ) ) { return restart . getValue ( c ) ; } else { return 0 ; } }
tr	10	private boolean isKColorable ( int k ) { for ( HashSet < Value > edges : adjacencyList . values ( ) ) { if ( edges . size ( ) >= k ) { return false ; } } return true ; }
tr	8	public static JSONArray toJSONArray ( XMLTokener x ) throws JSONException { return ( JSONArray ) parse ( x , true , null ) ; }
tr	3	public void Clear ( ) { ClearKeys ( ) ; ClearMouse ( ) ; }
tr	1	static float [ ] [ ] zero ( ) { return new float [ ] [ ] { { 0 , 0 , 0 } , { 0 , 0 , 0 } , { 0 , 0 , 0 } } ; }
tr	6	public static short byte2tinyint ( byte b [ ] , int offset ) { return ( short ) ( b [ offset ] & ff ) ; }
tr	4	public ParserFailureException ( String msg ) { super ( msg ) ; }
tr	1	public Vertex ( ) { }
tr	10	public BoardItem ( Integer number , boolean positive ) { this . number = number ; this . positive = positive ; this . active = false ; this . visible = true ; }
tr	4	public final int getPercentCorrect ( ) { assert _statistics != null : "Question statistics is null" ; return _statistics . getPercentCorrect ( ) ; }
tr	9	public void deviceRemoved ( Device dev ) throws IOException { getBusOf ( dev ) . deviceRemoved ( dev , model ) ; }
tr	3	public String getMarket_code ( ) { return market_code ; }
tr	3	public static CharApp getInstance ( ) { return instance ; }
tr	8	public static void main ( String [ ] args ) { List < String > arrayList = new ArrayList < String > ( ) ; }
tr	6	public static LatLonFormat fromValue ( String v ) { return valueOf ( v ) ; }
tr	2	protected final String fsp_name ( ) { return "CONDITION" ; }
tr	10	@ Override public String generateID ( String descriptive ) { _counter += 1 ; return _start + descriptive + "-" + _origination + "-" + _counter ; }
tr	7	public String getFormattedTiePercentage ( int player ) { return formatter . format ( ties [ player ] ) ; }
tr	7	public static int getStats ( ) { if ( found == 0 || all == 0 ) return 0 ; int stats = ( int ) ( ( 100 * found ) / all ) ; return stats ; }
tr	7	public String getString ( String key ) throws vslConfigException { return getVal ( key ) ; }
tr	5	public void behaveAs ( Gravitable g ) { model = g ; }
tr	9	public Element ( int key , int value ) { this . value = value ; this . key = key ; this . next = null ; this . pre = null ; }
tr	6	@ After public void tearDown ( ) { passengerDAO = null ; ticketDAO = null ; trainDAO = null ; sirDAO = null ; }
tr	4	public synchronized boolean isAlive ( ) { return Thread . currentThread ( ) . isAlive ( ) ; }
tr	5	public void set_agency_fare_url ( String in ) { _agency_fare_url = in ; }
tr	3	public Expression getRight ( ) { return right ; }
tr	8	@ Override public void run ( ) { worldChanger . restoreWorld ( world ) ; timer . cancel ( ) ; cancel ( ) ; }
tr	1	public OutputFileManagerTest ( ) { }
tr	6	public int score ( String input ) { return Integer . parseInt ( input ) ; }
tr	8	public void addStopTime ( int in ) { if ( in == 0 ) { return ; } if ( mStartTime == 0 ) { mStartTime = in ; } mEndTime = in ; }
tr	9	public static String createJquery ( Chart < ? > chart , String divId ) { return createJquery ( chart , divId , null ) ; }
tr	7	private void jButton1ActionPerformed ( java . awt . event . ActionEvent evt ) { this . setVisible ( false ) ; }
tr	4	public ChipSeqExperimentNode ( Node n ) { super ( n ) ; }
tr	9	public ButtonListener ( JPanel currentPanel , String panelToShow ) { this . currentPanel = currentPanel ; this . panelToShow = panelToShow ; }
tr	6	public V get ( K key ) { return get ( key , null ) ; }
tr	1	public Employee ( ) { }
tr	8	@ Test public void nullTest ( ) { Point3d a = new Point3d ( 1.0 , 0.0 , 2.0 ) ; assertEquals ( false , a . equals ( null ) ) ; }
tr	3	public Profile getCurrentProfile ( ) { return currentProfile ; }
tr	3	public MousepadListener getMouseListener ( ) { return mouseListener ; }
tr	9	public void setOptions ( Set < Country > options ) { if ( options . size ( ) == 0 ) throw new RuntimeException ( "Options set is empty" ) ; this . options = options ; }
tr	8	@ Override public SearchRequestBuilder withWebRequestSearchOption ( WebSearchOption webSearchOption ) { getWebRequestOptions ( ) . add ( webSearchOption ) ; return this ; }
tr	9	public JSONArray put ( int index , int value ) throws JSONException { this . put ( index , new Integer ( value ) ) ; return this ; }
tr	5	public void setArrivalTime ( Time arrivalTime ) { this . arrivalTime = arrivalTime ; }
tr	8	public TimestampParser ( final VizPanel vPanel ) { super ( vPanel ) ; lastTime = null ; dataVisualizer = new SimpleDateFormat ( TIME_FORMAT_OUT ) ; }
tr	7	public GUI ( ChatClient client ) { this . client = client ; setTitle ( "Jingle Chat" ) ; initComponents ( ) ; }
tr	9	public Rect mul_ip ( double factor ) { min . mul_ip ( factor ) ; max . mul_ip ( factor ) ; return this ; }
tr	2	public int getTimeGreen ( ) { return timeGreen ; }
tr	4	public void setXzView ( boolean value ) { this . xzView = value ; }
tr	6	public static String truncateText ( String text ) { return truncateText ( text , 60 ) ; }
tr	2	public CreateIngredientDialog ( ) { setupActionListeners ( ) ; }
tr	2	public double getKnownProb ( ) { return knownProb ; }
tr	3	private int getAbilityBonus ( int score ) { return ( score / 2 ) - 5 ; }
tr	7	void setDimension ( byte value ) { super . setupFields ( ) ; ( ( UnitByte ) fields [ 3 ] ) . setValue ( value ) ; }
tr	8	@ Override public void warning ( String s ) { checkLevel ( ) ; super . warning ( s ) ; redrawInput ( ) ; }
tr	1	public CompileError ( ) { super ( "There was an unknown error compiling!" ) ; }
tr	1	public void hallo ( ) { }
tr	6	LazyTraverser ( final TreeTraverser < T > delegate ) { this . delegate = delegate ; }
tr	6	@ Override public void accept ( CommandVisitor visitor ) { visitor . visit ( this ) ; }
tr	8	public String informaNomeJogador ( int posicao ) { if ( posicao == 1 ) { return jogador1 . obterNome ( ) ; } else { return jogador2 . obterNome ( ) ; } }
tr	10	@ Override public Location translate ( Location location ) { return new Location ( location . row + 1 , location . column + 1 ) ; }
tr	10	private void crearLista ( int [ ] datos , boolean ordenado ) { for ( int i : datos ) { if ( ordenado ) this . insertarOrdenado ( i ) ; else this . insertarInicio ( i ) ; } }
tr	7	public void destroy ( ) { game . stopLWJGL ( ) ; if ( display_parent != null ) remove ( display_parent ) ; super . destroy ( ) ; }
tr	1	public SQLDriverNotFoundException ( ) { }
tr	1	public QuizAdminServlet ( ) { super ( ) ; }
tr	8	public int hashCode ( ) { int _hashCode = 0 ; if ( msgType != null ) { _hashCode = 29 * _hashCode + msgType . hashCode ( ) ; } return _hashCode ; }
tr	5	@ Override public String toString ( ) { return ToStringBuilder . reflectionToString ( this ) ; }
tr	1	public CreateAccountRequest ( ) { }
tr	7	public ButtonsJP ( ) { setBackground ( Color . WHITE ) ; setLayout ( new FlowLayout ( ) ) ; setElements ( ) ; }
tr	3	public String getUserAnswerName ( ) { return userAnswerName ; }
tr	1	public boolean isWrite ( ) { return true ; }
tr	6	public SurveyDAO getSurveyDAO ( ) { if ( surveyDAO == null ) { surveyDAO = new SurveyDAO ( ) ; } return surveyDAO ; }
tr	2	public void handlePreGameData ( int [ ] data ) { }
tr	4	@ Override public int getX2 ( ) { return getBounds ( ) . getX2 ( ) ; }
tr	10	public ImageBuffer ( int [ ] pixels , int w , int h ) { pix = pixels ; width = w ; height = h ; }
tr	3	public Paivitettava getPaivitettava ( ) { return this . piirto ; }
tr	8	public void setToken ( AccessToken accessToken ) { this . setToken ( accessToken . getToken ( ) , accessToken . getTokenSecret ( ) ) ; }
tr	3	public JTextField getTxtCombustivel ( ) { return txtCombustivel ; }
tr	4	@ Override public void onEntryActivated ( SourceTextEntry newEntry ) { }
tr	5	public java . lang . String getImei ( ) { return imei ; }
tr	4	public void setDoubleValue ( double doubleValue ) { this . doubleValue = doubleValue ; }
tr	4	public void setGrids ( int grids ) { this . grids = grids ; }
tr	8	public RecordTy ( int p , FieldList f ) { pos = p ; fields = f ; }
tr	7	public void setArriveBy ( boolean arriveBy ) { paramPush ( ARRIVE_BY , arriveBy ) ; this . arriveBy = arriveBy ; }
tr	4	public void setTotalLutas ( int numLutas ) { this . totalLutas = numLutas ; }
tr	4	public void setTrainNumber ( int trainNumber ) { this . trainNumber = trainNumber ; }
tr	5	public void setExp5 ( String exp5 ) { this . exp5 = exp5 ; }
tr	5	protected void setClient ( IMqttAsyncClient client ) { this . client = client ; }
tr	8	public NativeLibrary ( String libraryPath ) { NotNullException . assertValue ( libraryPath , "libraryPath" ) ; this . libraryPath = libraryPath ; }
tr	6	synchronized public String getString ( ) { try { wait ( ) ; } catch ( InterruptedException e ) { } return napis ; }
tr	9	@ Test public void ELECTRIC_attacking_ROCK ( ) { assertEquals ( 1.0 , tc . getWeaknessResistance ( Type . ELECTRIC , Type . ROCK ) , 0.0 ) ; }
tr	4	public RoomNotAccessibleException ( String message ) { super ( message ) ; }
tr	1	public int process_id ( ) { return 0 ; }
tr	7	private boolean whenToken ( TokenType t ) { if ( testToken ( t ) ) { data . pop ( ) ; return true ; } else { return false ; } }
tr	10	static boolean isValue ( Object v ) { return ( v instanceof Map && ( ( Map < String , Object > ) v ) . containsKey ( "@value" ) ) ; }
tr	6	public void setWriteStatus ( String s ) { lblWriteStatus . setText ( s ) ; }
tr	9	public static void main ( String [ ] args ) throws Exception { SQLServerTest myDbTest = new SQLServerTest ( ) ; myDbTest . displayDbProperties ( ) ; }
tr	8	public void removeModel ( AbstractPageModel model ) { registeredModels . remove ( model ) ; model . removePropertyChangeListener ( this ) ; }
tr	4	public MersenneTwisterFast ( final int [ ] array ) { setSeed ( array ) ; }
tr	7	public ResultBuilder setPlayers ( ArrayList < PlayerProfile > players ) { this . players = players ; return this ; }
tr	8	private void replaceTop ( Scope topOfStack ) { stack . set ( stack . size ( ) - 1 , topOfStack ) ; }
tr	5	public void setWebsite ( String website ) { this . website = website ; }
tr	7	public void setInicio ( java . sql . Time inicio ) { this . inicio = inicio ; }
tr	4	@ Override public Controller getController ( ) { return ctrl ; }
tr	3	public String [ ] getTicks ( ) { return ticks ; }
tr	6	public double op ( vOpF < Vec3f > operator ) { return operator . performOp ( this ) ; }
tr	8	public MVertex ( Vertex vertex , boolean left ) { this . vertex = vertex ; this . left = left ; }
tr	8	public Tile getLocation ( ) { Tile Location = Players . getLocal ( ) . getLocation ( ) ; return Location ; }
tr	9	public Rectangle setLocation ( Point p ) { return setLocation ( p . x ( ) , p . y ( ) ) ; }
tr	8	public static void print ( double [ ] array ) { System . out . println ( ArraysExt . toString ( array ) ) ; }
tr	2	public int getHeight ( ) { return this . height ; }
tr	1	public Point ( ) { }
tr	3	public void windowDeiconified ( WindowEvent e ) { }
tr	5	public java . lang . String getInstrument ( ) { return instrument ; }
tr	3	public static void main ( String [ ] args ) { }
tr	10	public void pintar ( Graphics g ) { g . drawImage ( imagen , 0 , 0 , SIZE . width , SIZE . height , null ) ; }
tr	3	public void mouseExited ( MouseEvent e ) { }
tr	1	public AnchorLayout ( ) { super ( ) ; }
tr	9	@ Override public void previousFrame ( ) { for ( GSprite sprite : sprites . values ( ) ) { if ( sprite != null ) { sprite . previousFrame ( ) ; } } }
tr	7	public boolean allEquivalent ( ) { return ks [ wildcard_ordinal ] == size || countEquivalent ( arbitraryNonWildcard ( ) ) == size ; }
tr	5	public void setStream_size ( String stream_size ) { this . stream_size = stream_size ; }
tr	2	public int getPeopleOnStation ( ) { return peopleOnStation ; }
tr	4	@ Override public int hashCode ( ) { return this . resource . hashCode ( ) ; }
tr	8	@ Test @ Ignore ( "Find the solution" ) public void sumOfMultipliesOf3Or5UpTo1000 ( ) throws Exception { assertThat ( Problems . sumOfMultipliesOf3Or5 ( 1000 ) , is ( 1000 ) ) ; }
tr	5	public void reset ( ) { binCode . clear ( ) ; erorrs . clear ( ) ; }
tr	2	public boolean isSchoolAnnouncements ( ) { return schoolAnnouncements ; }
tr	1	public boolean supportsCustomEditor ( ) { return true ; }
tr	4	public void setSuppressGrades ( boolean value ) { this . suppressGrades = value ; }
tr	2	public int getT ( ) { return t ; }
tr	9	@ Test public void FIGHTING_attacking_DRAGON ( ) { assertEquals ( 1.0 , tc . getWeaknessResistance ( Type . FIGHTING , Type . DRAGON ) , 0.0 ) ; }
tr	1	public Frontpage ( ) { super ( ) ; }
tr	1	public int get_key_num ( ) { return 1 ; }
tr	6	public static Command waitAngle ( short angle ) { return WaitCommand . waitAngle ( angle ) ; }
tr	5	public void setPackingSlipFormat ( String value ) { this . packingSlipFormat = value ; }
tr	1	public OlaMundo ( ) { super ( ) ; }
tr	10	public double sum ( ) { double sum = 0.0 ; for ( int i = 0 ; i < n ; i ++ ) sum += x [ i ] ; return sum ; }
tr	7	public void assignColor ( final int curve , final Color color ) { this . color [ curve ] = color ; }
tr	3	public String getRstReceived ( ) { return rstReceived ; }
tr	6	public List < UserModel > getAllUsers ( ) throws WebshopAppException { return userRepository . getAllUsers ( ) ; }
tr	5	ClientFileTableModel ( File [ ] files ) { this . files = files ; }
tr	4	public DataTable ( ) { Rows = new DataRowCollection < T > ( ) ; }
tr	5	public void setCourse ( Course c ) { thisCourse = c ; }
tr	9	@ Override public T visitExpr_binOp ( @ NotNull DecafParser . Expr_binOpContext ctx ) { return visitChildren ( ctx ) ; }
tr	3	public OfferGrp createOfferGrp ( ) { return new OfferGrp ( ) ; }
tr	5	@ Override public PersistentList < Object > rest ( ) { throw new NoSuchElementException ( ) ; }
tr	10	public ChangeTurtleAction ( ) { super ( getLiteral ( "ChangeTurtle" ) ) ; putValue ( ACCELERATOR_KEY , KeyStroke . getKeyStroke ( KeyEvent . VK_T , ActionEvent . ALT_MASK ) ) ; }
tr	6	public static boolean getButtonDown ( int button ) { return getButton ( button ) && ! lastButton [ button ] ; }
tr	6	public SimpleReader ( Reader r ) { br = new BufferedReader ( r ) ; }
tr	9	protected void addParamConstraint ( String name , int type , boolean isOptional ) { this . addParamConstraint ( name , type , "" , isOptional ) ; }
tr	10	public KeyBuilder then ( KeyComponent ... components ) { this . components . add ( new CompositeComponent ( Arrays . asList ( components ) ) ) ; return this ; }
tr	10	public int [ ] x ( ) { int [ ] xx = new int [ size ] ; if ( size > 0 ) System . arraycopy ( x , 0 , xx , 0 , size ) ; return xx ; }
tr	7	public void putInt ( String key , int num ) { put ( key , num ) ; }
tr	7	CommaTok ( Cursor cursor ) { super (   , cursor . clone ( ) ) ; }
tr	4	public void setSlash ( ) { if ( System . getProperty ( "os.name" ) . contains ( "Window" ) ) this . / = "\\" ; else this . / = "/" ; }
tr	10	@ Override public RejectPageBuilder alertIf ( boolean condition , AlertIfHandler then ) { return builder . alertIf ( condition , then ) ; }
tr	2	public int y ( ) { return y ; }
tr	9	public void setRegulariationParameters ( double [ ] params ) { variances = new ArrayList < double > ( ) ; for ( double d : params ) { variances . add ( d ) ; } }
tr	3	public String getAuthor ( ) { return author ; }
tr	3	public void actionPerformed ( ActionEvent ex ) { }
tr	5	@ Override public String toString ( ) { return name + ": " + score ; }
tr	8	public static String [ ] getMonths ( final boolean shortened ) { if ( shortened ) { return DATE_FORMAT_SYMBOLS . getShortMonths ( ) ; } else { return DATE_FORMAT_SYMBOLS . getMonths ( ) ; } }
tr	4	public void setDrawSegmentBufferP ( boolean drawSegmentBufferP ) { this . drawSegmentBufferP = drawSegmentBufferP ; }
tr	3	public String getInstructorName ( ) { return instructorName ; }
tr	8	public int get ( int index ) throws NoSuchElementException { if ( index >= _size ) throw new NoSuchElementException ( ) ; return _array [ index ] ; }
tr	3	protected Logger getLogger ( ) { return this . logger ; }
tr	9	@ Test ( expected = NullObjectInsertionException . class ) public void shouldRaiseExceptionForAddingNullCashOffice ( ) { Cinema cinema = new Cinema ( ) ; cinema . addCashOffice ( null ) ; }
tr	1	public PlayerMovementServer ( ) { }
tr	2	public boolean isEmpty ( ) { return empty ; }
tr	8	public static URL getURL ( String filName ) { return staticSound . getClass ( ) . getResource ( filName ) ; }
tr	2	@ Override public int [ ] getSortedRanks ( ) { return null ; }
tr	6	private void txtExercicioActionPerformed ( java . awt . event . ActionEvent evt ) { }
tr	1	private Base64 ( ) { }
tr	7	public void setDayColor ( int day , Color c ) { dayColors [ day ] = c ; }
tr	4	public CellEditorFloat ( final JTextField textField ) { super ( textField ) ; }
tr	5	@ Override public List < Symbol > typeParameters ( ) { throw new UnsupportedOperationException ( "Ambiguous" ) ; }
tr	4	@ Override public Dough createDouch ( ) { return new ThinCrustDough ( ) ; }
tr	9	public Iterator < Tree < String >> iterator ( ) { return new ConcatenationIterator < Tree < String >> ( new TreeIteratorIterator ( files ) ) ; }
tr	1	public GraphvizDrawer ( ) { }
tr	10	@ Test public void testEqualsDifferentType ( ) { MonthInYear m1 = MonthInYear . valueOf ( "JANUARY" ) ; assertFalse ( m1 . equals ( new Object ( ) ) ) ; }
tr	4	@ Override public void keyTyped ( KeyEvent keyEvent ) { }
tr	1	protected GetShellReply ( ) { }
tr	4	@ Override public IGameController getController ( ) { return controller ; }
tr	8	public boolean isSameElementAs ( State other ) { return StringUtils . equals ( name , other . name ) ; }
tr	4	public void setKeepAliveInterval ( long interval ) { this . keepAlive = interval ; }
tr	10	@ Override public ToastBuilder toastIf ( boolean condition , ToastIfHandler then ) { return toastIf ( condition , then , ToastIfHandler . null ) ; }
tr	4	@ Before public void runBeforeEveryTest ( ) { AIDebuggingOutput . debugOn = false ; }
tr	8	public boolean isOpen ( ) { assert ( readystate == READYSTATE . OPEN ? ! flushandclosestate : true ) ; return readystate == READYSTATE . OPEN ; }
tr	9	public IndexFieldDefinition ( String name , IndexValueType type ) { this ( name , type , Order . ASCENDING ) ; }
tr	5	public void setLabel ( String label ) { this . label = label ; }
tr	5	public Node < String , Integer > getRoot ( ) { return root ; }
tr	5	public void setValor ( Integer valor ) { this . valor = valor ; }
tr	5	public TableRowTransferHandler ( JTable table ) { this . table = table ; }
tr	4	@ Override public String getName ( ) { return name ; }
tr	5	public FunctionalRequirement ( BigDecimal idFunctionalRequirement ) { this . idFunctionalRequirement = idFunctionalRequirement ; }
tr	5	public void setApellidoPaterno ( String apellidoPaterno ) { this . apellidoPaterno = apellidoPaterno ; }
tr	2	protected void takeDown ( ) { doDelete ( ) ; }
tr	3	public EventRegistration getRegistration ( ) { return registration ; }
tr	9	public void addError ( String error ) { history . add ( new Command ( error , CommandType . ERROR ) ) ; }
tr	1	private RetentionWord ( ) { super ( ) ; }
tr	2	public double getTotalTime ( ) { return total_t ; }
tr	7	public void setMobsTagged ( HashMap < Integer , String > mobsTagged ) { this . mobsTagged = mobsTagged ; }
tr	2	public final int yystate ( ) { return zzLexicalState ; }
tr	10	@ Override public BitSet createQueryFingerprint ( final String strSmiles , final boolean isCanonSmiles ) { return createFingerprint ( strSmiles , isCanonSmiles , m_settingsQueryFps ) ; }
tr	8	public Turret ( int x , int y ) { super ( ) ; setPosition ( new Vec2i ( x , y ) ) ; instantiate ( ) ; }
tr	8	public LuaException ( String message , Object cause ) { super ( message ) ; this . luaCause = cause ; }
tr	1	public void startStartLevel ( ) { }
tr	2	public int getTick ( ) { return tick ; }
tr	3	public AltitudeModeEnum getAltitudeMode ( ) { return altitudeMode ; }
tr	9	public void setReportees ( ArrayList < Employee > reportees ) { for ( Employee reportee : reportees ) { this . addReportee ( reportee ) ; } }
tr	7	private void downloadFilesMultihostActionPerformed ( java . awt . event . ActionEvent evt ) { downloadFiles ( true ) ; }
tr	3	public void applyAbilities ( Player player ) { }
tr	10	public void addAll ( Collection < ? extends PersonalData > values ) { if ( values != null ) for ( PersonalData data : values ) { add ( data ) ; } }
tr	3	public Integer getNum ( ) { return num ; }
tr	4	public PlayerDifficulty getPlayerDifficulty ( ) { return this . gameState . playerDifficulty ; }
tr	4	public void incrementNodeQuantity ( int increment ) { nodeQuantity += increment ; }
tr	4	public static Test suite ( ) { return new TestSuite ( AppTest . class ) ; }
tr	1	public int getArgCount ( ) { return 2 ; }
tr	8	public static boolean isText ( int c ) { if ( isEnd ( c ) || isBreak ( c ) || isSpecial ( c ) ) return false ; return true ; }
tr	8	public static JSONArray toJSONArray ( String string ) throws JSONException { return toJSONArray ( new JSONTokener ( string ) ) ; }
tr	4	public void setScaleX ( double scaleX ) { this . scaleX = scaleX ; }
tr	4	public LHSMSBState ( EvlAssignFSM fsm ) { super ( fsm ) ; }
tr	4	public void print ( ) { System . out . println ( "Outer class instance print!" ) ; }
tr	7	private int [ ] getGaps ( boolean isHor , boolean isTL ) { return gaps [ getGapIx ( isHor , isTL ) ] ; }
tr	3	public String getRaavareNavn ( ) { return raavareNavn ; }
tr	3	@ Before public void setUp ( ) throws Exception { }
tr	1	public RBF_multiquadric ( ) { this ( 1.0 ) ; }
tr	10	protected BasePageHandle ( HandleContext < T > ctx , T handle ) { this . context = ctx ; this . iterator = handle ; }
tr	2	public int getLineBufferSize ( ) { return lineBufferSize ; }
tr	7	@ Override protected PuzzleCellEditor createCellEditor ( Options options ) { return new SamuraiPuzzleCellEditor ( options ) ; }
tr	9	public LHC_Analysis_Panel1_Descriptor ( ) { lhcAnalysisPanel1 = new LHC_Analysis_Panel1 ( ) ; lhcAnalysisPanel1 . addCheckBoxActionListener ( this ) ; setPanelDescriptorIdentifier ( IDENTIFIER ) ; setPanelComponent ( lhcAnalysisPanel1 ) ; }
tr	9	@ Test public void inorder_testComplete3LevelTree ( ) { test ( COMPLETE_3_LEVEL_TREE , Order . INORDER , ImplType . RECUSRIVE , COMPLETE_3_LEVEL_TREE_INORDER ) ; }
tr	2	public double getStamina ( ) { return stamina ; }
tr	3	public Date getDataReserva ( ) { return dataReserva ; }
tr	2	public final boolean readBoolean ( ) { return readBoolean ( null ) ; }
tr	3	public int getFirstLineNumber ( ) { return lines . firstKey ( ) ; }
tr	4	@ Override public void reset ( ) { actual = first ; }
tr	1	public void initNewLife ( ) { }
tr	2	public void clearTracker ( ) { this . setQuestTracker ( null ) ; }
tr	7	@ Override public void removeFocusListener ( EngineFocusListener l ) { focusListeners . remove ( l ) ; }
tr	1	public ColorDisplay ( ) { }
tr	2	public static int getMailCount ( ) { return mailCount ; }
tr	1	public MapLayerChangeEvent ( ) { super ( ) ; }
tr	4	@ Override public String getKey ( ) { return id ; }
tr	6	public void addAfterExplosion ( Entity e ) { this . toPlace . add ( e ) ; }
tr	3	public BufferedImage getImage ( ) { return image ; }
tr	9	public void setFileWatchDirectory ( String directory ) { if ( watcherThread . isAlive ( ) ) { stopFileWatcher ( ) ; } fileSystemWatcher . setPathLocation ( directory ) ; }
tr	4	public void setRing ( boolean ring ) { this . ring = ring ; }
tr	3	public String getName ( ) { return name ; }
tr	4	public boolean open ( ) { System . out . println ( "The door swings open." ) ; return true ; }
tr	8	public ServiceBImpl ( ServiceA serviceA ) { this . serviceA = serviceA ; System . out . println ( "calling constructor of ServiceBImpl" ) ; }
tr	10	public SwarmFunctionSignature ( SwarmFunctionSignatureInputs inputs , SwarmDeclaration output ) { myInputs = inputs . getInputs ( ) ; myOutput = output ; }
tr	6	public static boolean isValidHtml ( byte [ ] html ) { return isValidHtml ( new InputSource ( new ByteArrayInputStream ( html ) ) ) ; }
tr	10	@ Override public void mouseReleased ( MouseEvent e ) { try { onMouseReleased ( e ) ; } catch ( Throwable t ) { throwableGenerated ( "onMouseReleased" , t ) ; } }
tr	9	public BigInteger degree ( ) { if ( degrees . isEmpty ( ) ) return BigInteger . ONE . negate ( ) ; return degrees . first ( ) ; }
tr	10	public Entry ( Student . Grade grade , String message ) { this . grade = grade ; this . message = message ; }
tr	6	Profile setWeightDice ( Dice weightDice ) { this . weightDice = weightDice ; return this ; }
tr	4	public void setCode ( int code ) { this . code = code ; }
tr	9	public LindenmayerRule ( String from , String to ) { this . findThis = from ; this . replaceWith = to ; }
tr	2	public boolean isDrawing ( ) { return drawing ; }
tr	10	public final Option addLongOption ( char shortForm , String longForm ) { return addOption ( new Option . LongOption ( shortForm , longForm ) ) ; }
tr	1	public NullObjectInsertionException ( ) { this ( "Null object cannot be added" ) ; }
tr	9	public JR ( int instr_addr , String ac , String [ ] ac_split ) { super ( instr_addr , ac , ac_split ) ; }
tr	8	public String getDisplay ( ) { return String . format ( DISPLAY_PATTERN , temperature , humidity , pressure ) ; }
tr	6	private void firePeerReady ( ) { for ( PeerActivityListener listener : this . listeners ) { listener . handlePeerReady ( this ) ; } }
tr	8	public void setWord ( String word ) { this . word = word ; this . wordLength = word . length ( ) ; }
tr	6	public long getTimeRunning ( class < ? extends Event > type ) { return this . timeRunning . get ( type ) ; }
tr	1	public boolean getScrollableTracksViewportHeight ( ) { return false ; }
tr	7	public static void notNull ( Object object , RuntimeException throwIfAssertFail ) { if ( object == null ) { throw throwIfAssertFail ; } }
tr	7	@ Override public Option newOption ( ) { Option opOption = new RecOption ( ) ; return opOption ; }
tr	7	private static boolean isNegativeKeyword ( String str ) { return str . equals ( "\u10D0\u10E0\u10D0" ) || str . equals ( "\u10D0\u10E0" ) ; }
tr	8	public void saveMappable ( Properties props , Mappable mappable ) { saveMappable ( props , 0 , mappable ) ; }
tr	9	public MessageThread ( Message message , IMessageObserver observer ) { this . message = message ; this . observer = observer ; }
tr	4	@ JsonProperty ( "Owner" ) public String getOwner ( ) { return Owner ; }
tr	9	@ Override public void setReply ( Object reply ) { boolean bool = ( boolean ) reply ; this . reply = bool . booleanValue ( ) ; }
tr	7	final protected RepetitionParser oneOrMore ( final Parser parser ) { return Parsers . oneOrMore ( parser ) ; }
tr	10	@ Override public boolean equalsTo ( Type t ) { return t instanceof StructType && dec == ( ( StructType ) t ) . dec ; }
tr	1	public Player ( ) { }
tr	1	public EntityType ( ) { this ( ( short ) 0 , ( short ) 0 , 0 , ( short ) 0 , ( short ) 0 , ( short ) 0 , ( short ) 0 ) ; }
tr	9	public Object [ ] formatoTabela ( AreaFormacao areaformacao ) { return new Object [ ] { areaformacao . getId ( ) , areaformacao . getNome ( ) } ; }
tr	8	@ Override public double measureTemperature ( final Person p ) { if ( ! canMeasureTemperature ) { throw new RuntimeException ( "Shouldn't be measuring!" ) ; } else { return Person . NORMAL_TEMP + 7 ; } }
tr	7	public Curve ( double x , double h ) { this . h = h ; this . x = x ; }
tr	2	public int obtenirVie ( ) { return vie ; }
tr	1	public SGFTree ( ) { }
tr	10	@ Override public final int hashCode ( ) { int result = start . hashCode ( ) ; result = 31 * result + end . hashCode ( ) ; return result ; }
tr	9	public Diff ( Operation operation , String text ) { this . operation = operation ; this . text = text ; }
tr	10	public static void clear ( ) { int i = width * height ; for ( int j = 0 ; j < i ; j ++ ) pixels [ j ] = 0 ; }
tr	1	public TableRowAuctionConverter ( ) { }
tr	3	public ItemModel ( int id ) { this ( "" , id , "" , 0 , 0 , 0 , 0 , 0 ) ; }
tr	8	public static File getOutputFile ( Target target ) throws OverwriteException , TransformException { return getOutputFile ( target , null ) ; }
tr	2	public int getVersion ( ) { return version ; }
tr	8	private UserManager ( ) { system = new User ( "System" ) ; ownUser = new User ( "USER" ) ; remoteUsers = new ArrayList < User > ( ) ; }
tr	8	@ Override public int hashCode ( ) { return this . e1 . hashCode ( ) + this . e2 . hashCode ( ) + this . e3 . hashCode ( ) ; }
tr	8	public Event ( long time , T data ) { this . time = time ; this . data = data ; }
tr	5	SocketListener ( JmDNSImpl jmDNSImpl ) { this . jmDNSImpl = jmDNSImpl ; }
tr	10	public Elf ( Elf e ) { this ( e . gameToNotice ) ; e . health /= 2 ; this . health = e . health ; }
tr	9	public static boolean EraseValueByKey ( String strFolder , String oneStr ) { return otapiJNI . EraseValueByKey__SWIG_2 ( strFolder , oneStr ) ; }
tr	6	private void showToolBar ( ) { add ( toolBar , BorderLayout . NORTH ) ; revalidate ( ) ; }
tr	9	@ Test public void ICE_attacking_NO_TYPE ( ) { assertEquals ( 1.0 , tc . getWeaknessResistance ( Type . ICE , Type . NO_TYPE ) , 0.0 ) ; }
tr	1	public OutgoingCarrierRoutingFactory ( ) { }
tr	6	public GetAccountPolicyRequest withAccountName ( String accountName ) { setAccountName ( accountName ) ; return this ; }
tr	1	public int statDrop ( ) { return 0 ; }
tr	1	public DepThree ( ) { }
tr	6	@ Test public void test_0207_IMG_ALT ( ) throws Exception { doTest ( getClass ( ) . getResource ( "/w3.org/WAI/UA/TS/html401/cp0207/0207-IMG-ALT.html" ) ) ; }
tr	5	static public String nowAsString ( ) { return formatDate ( TIME_FORMAT , new Date ( ) ) ; }
tr	10	@ Test public void sizeOfSingleNodeIsOne ( ) { BasicNode < Integer > node = new BasicNode < Integer > ( 50 ) ; assertEquals ( 1 , node . size ( ) ) ; }
tr	10	@ ManyToOne ( fetch = FetchType . LAZY ) @ JoinColumn ( name = "loc_id" , nullable = false ) public LocationTbl getLocationTbl ( ) { return this . locationTbl ; }
tr	8	public UsuarioDao ( enum . Connection tipoConexion ) throws Exception { oMysql = new Mysql ( ) ; enumTipoConexion = tipoConexion ; }
tr	4	public JLabel getShowPort ( ) { return startPanel . getShowPort ( ) ; }
tr	5	public void setInstantAnswer ( InstantAnswerResponse value ) { this . instantAnswer = value ; }
tr	10	@ Override public void setAllowedNatures ( Collection < Nature > natures ) { allowedNatures = Collections . synchronizedSet ( new HashSet < > ( natures ) ) ; }
tr	9	public GUIProgress ( double x , double y , double width , double height ) { super ( "" , x , y , width , height ) ; }
tr	1	private HttpResponse ( ) { }
tr	3	public TriggerTiming getWhen ( ) { return when ; }
tr	7	public int getLeft ( ) { return Dispatch . get ( this , "Left" ) . changeType ( Variant . VariantInt ) . getInt ( ) ; }
tr	1	public ArrayIndex ( ) { this ( 100 ) ; }
tr	8	private void onConnect ( ) { if ( onconnect ) { addToPrintQueue ( GCodeFactory . getGCode ( "M42 P6 S255" , - 42 ) , true ) ; addToPrintQueue ( GCodeFactory . getGCode ( "M42 P7 S255" , - 42 ) , true ) ; } }
tr	10	public synchronized void remove ( Connection connection ) { if ( connections_ . remove ( connection ) ) { PluginManager . Instance . disconnect ( connection ) ; } }
tr	10	public String getValue ( String defaultValue ) { String value = getValue ( ) ; return ( value != null ) ? value : defaultValue ; }
tr	2	public IITTrackCollection ( ) { super ( componentName ) ; }
tr	4	public void setAgility ( int agi ) { this . agility = agi ; }
tr	4	@ Override public void onCollision ( Collidable [ ] colliders ) { }
tr	8	@ Override public void onFXThreadSuccess ( Backup backup ) { mBackup = backup ; mStage . close ( ) ; }
tr	1	private HumanrResources ( ) { }
tr	7	public MuteListener ( RootViewModel m , RootView v ) { super ( m , v ) ; }
tr	7	public void setWeekdayForeground ( Color weekdayForeground ) { this . weekdayForeground = weekdayForeground ; drawDayNames ( ) ; drawDays ( ) ; }
tr	2	public int getId ( ) { return dataId ; }
tr	7	public static int [ ] link ( final int src , final int dst , final int widx ) { return new int [ ] { src , dst , widx } ; }
tr	4	@ Override protected String [ ] tables ( ) { return new String [ ] { "segment" } ; }
tr	1	public Comentari ( ) { }
tr	9	public synchronized void reset ( ) throws IOException { try { this . digest = MessageDigest . getInstance ( "MD5" ) ; } catch ( NoSuchAlgorithmException localNoSuchAlgorithmException ) { } this . in . reset ( ) ; }
tr	8	private void ButtonRendreActionPerformed ( java . awt . event . ActionEvent evt ) { ctrlLV . RendrePerformed ( ) ; }
tr	6	public static int getArg ( Object obj ) { return ( ( Integer ) obj ) . intValue ( ) ; }
tr	2	public int getIconHeight ( ) { return height ; }
tr	2	public int getPuntaje ( ) { return puntaje ; }
tr	1	public FileTest ( ) { }
tr	10	public void executeImport ( String file ) { if ( imported . contains ( file ) ) return ; addedImports . add ( file ) ; execute ( ) ; }
tr	9	public static List < String > getIgnoreStartWith ( ) throws DocumentException { return getProperties ( getXMLRootElementByDom4j ( RULE_CONFIG ) . element ( "ignore" ) . element ( "start-with" ) ) ; }
tr	5	protected void checkKey ( K k ) { if ( k == null ) { throw new InvalidKeyException ( "Invalid key: null." ) ; } }
tr	8	@ Override public void actionPerformed ( ActionEvent e ) { match . popLastPoints ( ) ; scoreDisplay . update ( ) ; }
tr	8	@ Override public String toString ( ) { switch ( this ) { case uneEtoile : return "\u2605" ; case deuxEtoiles : return "\u2605\u2605" ; case troisEtoiles : return "\u2605\u2605\u2605" ; case quatreEtoiles : return "\u2605\u2605\u2605\u2605" ; case cinqEtoiles : return "\u2605\u2605\u2605\u2605\u2605" ; } return null ; }
tr	9	@ SuppressWarnings ( { "unchecked" , "varargs" } ) public static < T > String join ( T ... values ) { return joinWithDelimiter ( DEFAULT_ARRAY_DELIMITER , values ) ; }
tr	9	@ Override public boolean contains ( K key ) { if ( key == null ) { throw new IllegalArgumentException ( ) ; } return get ( root , key ) != null ; }
tr	7	@ Override public void deleteExam ( Exam exam ) { examDAO . delete ( exam ) ; }
tr	9	public String getOperator ( ) { if ( operator == null ) { synchronized ( this ) { operator = properties . getProperty ( "operator" ) ; if ( operator == null ) throw new IllegalArgumentException ( "Please set a valid operator." ) ; } } return operator ; }
tr	7	@ Override public String toString ( ) { return String . format ( "(%d %d)" , getX ( ) , getY ( ) ) ; }
tr	3	public String value ( ) { return value ; }
tr	3	public TileCoordinate [ ] [ ] getRect ( ) { return rect ; }
tr	3	public AckCode getAck ( ) { return ack ; }
tr	10	private void protocolT0RadioActionPerformed ( java . awt . event . ActionEvent evt ) { protocolT0Radio . setSelected ( true ) ; protocolT1Radio . setSelected ( false ) ; }
tr	8	@ Override public boolean cancelAllResearvations ( ) throws NullPointerException { if ( ! isInitialized ) { throw new NullPointerException ( "Passenger List has not been initialized" ) ; } this . initialize ( numOfRows , numOfColumns ) ; return true ; }
tr	8	public JSONArray ( Collection collection ) { this . myArrayList = ( collection == null ) ? new ArrayList ( ) : new ArrayList ( collection ) ; }
tr	3	public String getClassName ( ) { return className ; }
tr	2	public void markDirty ( ) { this . dirty = true ; }
tr	6	@ Test ( expected = IllegalArgumentException . class ) public void shouldNotContainDoubleColonsMoreThanOnce ( ) { Ipv6 . parse ( "2001:db8::aaaa::0:1" ) ; }
tr	7	public String test3 ( ) throws RemoteException { System . out . println ( "MyRemoteObject3: test3 called" ) ; return param ; }
tr	10	public boolean canPlaceCOP ( TilePosition target , boolean checkCanIssueCommandType , boolean checkCommandibility ) { return canPlaceCOP_native ( pointer , target , checkCanIssueCommandType , checkCommandibility ) ; }
tr	7	public void setSellModifier ( float sellModifier ) { this . sellModifier = sellModifier ; derivedSellPrice = this . basePrice * sellModifier ; }
tr	7	public void send ( ) { try { this . sendMsgs ( ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; this . close ( ) ; } }
tr	2	public int getTurnRadius ( ) { return turnRadius ; }
tr	8	protected void handleAnnotationEnumValue ( final String name , final String key , final String value ) { throw newUnimplementedException ( ) ; }
tr	9	public Msg [ ] findWhereRecipientEquals ( String recipient ) throws MsgDaoException { return findByDynamicSelect ( SQL_SELECT + " WHERE recipient = ? ORDER BY recipient" , new Object [ ] { recipient } ) ; }
tr	2	public boolean isInterested ( ) { return this . interested ; }
tr	2	public Baconian ( ) { Init_map ( ) ; }
tr	3	public String getNames ( ) { return names ; }
tr	4	public boolean isMigrable ( ) { return currentStatus == Status . RUNNING ; }
tr	6	@ Override public void run ( DataHolder dataholderHandler ) { unknownWordBootstrapping ( dataholderHandler ) ; }
tr	7	@ Override public Shape getShape ( int shapeIndex ) { return myShapePalette . getShape ( shapeIndex ) ; }
tr	8	public String getPasswort ( ) { String passwort = new String ( this . passwordField . getPassword ( ) ) ; return passwort ; }
tr	3	private BoardBuilder createBoardBuilder ( ) { return new BoardBuilder ( ) ; }
tr	4	public void setMinute ( int minute ) { this . minute = minute ; }
tr	6	public GUIElement getElement ( int ID ) { return compositeElements . get ( ID ) ; }
tr	4	@ Override public void eat ( ) { logger . debug ( "Ey! I am a human! I need to EAT!!" ) ; }
tr	4	FileFormatException ( String s ) { super ( "Bad file format: " + s ) ; }
tr	1	protected byte getMessageInfo ( ) { return 0 ; }
tr	4	public void setCount ( int count ) { this . count = count ; }
tr	10	public DirectoryPollerBuilder addPolledDirectory ( PolledDirectory directory ) { if ( directory == null ) { throw new NullPointerException ( NULL_ARGUMENT_ERROR_MESSAGE ) ; } directories . add ( directory ) ; return this ; }
tr	7	private void restartGame ( ) { gameChooser . changeGameState ( GameState . INITIALIZING ) ; changedGame = gameChooser ; }
tr	1	public PhotographTest ( ) { }
tr	10	private int numberOfDigits ( int n ) { Preconditions . checkArgument ( n > 0 ) ; int count = 0 ; while ( n > 0 ) { n /= 10 ; count ++ ; } return count ; }
tr	8	@ Override public int hashCode ( ) { int hash = 0 ; hash += ( id != null ? id . hashCode ( ) : 0 ) ; return hash ; }
tr	4	public void setPages ( int pages ) { this . pages = pages ; }
tr	4	public void setId ( long id ) { this . id = id ; }
tr	9	public static void main ( String [ ] args ) { C c = new C ( ) ; c . main ( args [ 0 ] ) ; }
tr	3	public spDAO getMyDao ( ) { return myDao ; }
tr	7	public static ImageIcon getBrushIcon ( String key ) { return Resources . getIconForKey ( "brushes" , "OptionComponent." + key ) ; }
tr	3	public boolean jogador1EhVencedor ( ) { return jogador1 . ehVencedor ( ) ; }
tr	9	protected static String getMethodSource ( Member member ) { return member . getName ( ) + "@" + member . getDeclaringClass ( ) . getSimpleName ( ) ; }
tr	9	private void setAttribLocation ( String attributeName , int location ) { glBindAttribLocation ( resource . getProgram ( ) , location , attributeName ) ; }
tr	5	public void actionPerformed ( ActionEvent event ) { Main . newSet ( ) ; }
tr	6	Icon getNextFinishButtonIcon ( ) { return ( Icon ) buttonIconHashmap . get ( NEXT_FINISH_BUTTON_ICON_PROPERTY ) ; }
tr	2	public int getHopCount ( ) { return hopCount ; }
tr	7	private boolean isWeapon ( ItemStack item ) { return weapons . contains ( item . getType ( ) ) ; }
tr	2	public int getConnectionTimeout ( ) { return this . connectionTimeout ; }
tr	2	public boolean getModalResult ( ) { return modalResult ; }
tr	7	public void setTradedQuantity ( java . math . BigDecimal tradedQuantity ) { this . tradedQuantity = tradedQuantity ; }
tr	5	public JSONTokener ( String s ) { this ( new StringReader ( s ) ) ; }
tr	10	public ServerNotificationModel ( NotificationType type , UserModel given_to , MeetingModel regards_meeting ) { super ( type , given_to , regards_meeting ) ; }
tr	10	@ Test public void testIsCrossable ( ) { for ( Direction dir : Direction . values ( ) ) { assertFalse ( testTile . isCrossable ( dir ) ) ; } }
tr	2	@ Override public void preCompute ( ) { }
tr	6	public boolean processingPending ( final ItemType item ) { return toProcess . contains ( item ) ; }
tr	10	public void createTicketPrice ( TicketPrice ticketPrice , int i ) { this . ticketPrices . set ( i , ticketPrice ) ; serializeDB . saveData ( ) ; }
tr	5	public void setRc5KNXValue ( Integer rc5knxValue ) { rc5KNXValue = rc5knxValue ; }
tr	10	private void writeObject ( java . io . ObjectOutputStream s ) throws java . io . IOException { super . writeObject ( s , false ) ; }
tr	6	public PaintScreenGridManager ( final double width , final double height ) { update ( width , height ) ; }
tr	2	public short [ ] [ ] production_table ( ) { return _production_table ; }
tr	8	static void register ( CommandID id ) { reverse . put ( id . getId ( ) , id ) ; }
tr	3	public JSONObject ( ) { this . map = new HashMap ( ) ; }
tr	10	public LoginUserModel LoginUserInfo ( String userloginName ) { LoginUserModel loginUserModel = loginUserDao . FindloginUser ( userloginName ) ; return loginUserModel ; }
tr	2	public static int getAxisLabelOffset ( ) { return axisLabelOffset ; }
tr	1	public Gato ( ) { super ( "Gato" , 4 ) ; }
tr	1	public NotConfiguredException ( ) { }
tr	1	private EmailChannel ( ) { }
tr	8	public void setY2 ( final int y ) { if ( this . y2 != null && this . y2 == y ) return ; this . y2 = y ; this . refresh ( ) ; }
tr	3	protected Options getOptions ( ) { return options ; }
tr	1	public SystemPreferences ( ) { }
tr	7	public int write ( ByteBuffer src ) throws IOException { return channel . write ( src ) ; }
tr	3	public String getAvaliationCriteria ( ) { return avaliationCriteria ; }
tr	4	public void setIsRecorded ( boolean r ) { this . isRecorded = r ; }
tr	10	public void changeOwner ( final Player player ) { if ( this . player == player ) { return ; } oldPlayer = this . player ; this . player = player ; this . fadeCounter = 0 ; }
tr	8	public boolean canGather ( Unit targetUnit , boolean checkCanTargetUnit ) { return canGather_native ( pointer , targetUnit , checkCanTargetUnit ) ; }
tr	8	@ Override @ Transactional public void updateContent ( Content a ) { contentDao . updateContent ( a ) ; }
tr	6	private void jTextField1ActionPerformed ( java . awt . event . ActionEvent evt ) { }
tr	1	public int statBoost ( ) { return 0 ; }
tr	9	public void commute ( DateTime leaveHome , DateTime workStart ) { strategy . execute ( leaveHome , workStart ) ; }
tr	2	public double getPrice ( ) { return price ; }
tr	5	public void setDescription ( String description ) { this . description = description ; }
tr	4	public static List < String > RedirectList ( ) { return redirectList ; }
tr	8	public final void setPackHeight ( BoundSize size ) { packH = size != null ? size : BoundSize . NULL_SIZE ; }
tr	5	public void frameFinished ( ) { lastx = x ; lasty = y ; }
tr	1	public boolean reinseignerHoraires ( ) { return false ; }
tr	4	@ Override public void ownershipRevoked ( ) { logger . debug ( "ownershipRevoked" ) ; }
tr	9	private String initBuildManager ( ) { BuildManager bm = new BuildManager ( "src/com/dysnomia/build.props" ) ; return String . valueOf ( bm . getBuild ( ) ) ; }
tr	1	private NeedlemanWunsch ( ) { super ( ) ; }
tr	10	public Loop loop ( Loop loop ) { loop . setContext ( getContext ( ) ) ; loops . add ( loop ) ; return this ; }
tr	9	protected void setUp ( ) { td = new TestData ( ) ; ea = td . getEa ( ) ; testEdbss = td . createEnsemblDBsData ( ) ; }
tr	2	public boolean isCloakable ( ) { return cloakable ; }
tr	8	FieldRef ( String name , long ref ) { this . name = name ; this . ref = ref ; }
tr	10	private void performDragPan ( int dx , int dy ) { for ( IZoomListener l : zoomListeners ) { l . dragPan ( dx , dy ) ; } }
tr	5	public AddMaterialCommand ( Material material ) { this . material = material ; }
tr	4	@ Override protected EntityManager getEntityManager ( ) { return em ; }
tr	3	public Object getTree ( ) { return tree ; }
tr	5	public void setName ( String name ) { this . name = name ; }
tr	5	@ Override public Key getKey ( ) { return Key . PartOfSpeech ; }
tr	4	public void setButtonFunction ( int buttonFunction ) { this . buttonFunction = buttonFunction ; }
tr	5	@ Override public int hashCode ( ) { return id != null ? id . hashCode ( ) : 0 ; }
tr	10	private void txtApeMatKeyTyped ( java . awt . event . KeyEvent evt ) { pac . validarNombres ( txtApeMat , evt ) ; }
tr	4	public Pizza getPizza ( ) { return pizzabuilder . getPizza ( ) ; }
tr	6	public RendererOptions rendererOptionsInstance ( ) { if ( rendererOptions == null ) { this . rendererOptions = new RendererOptions ( ) ; } return rendererOptions ; }
tr	4	@ Override public int getY ( ) { return location . y ; }
tr	4	public void setComId ( int comId ) { this . comId = comId ; }
tr	6	@ Override public boolean hasTopBorder ( ) { return topBorder . getStyle ( ) != Style . NONE ; }
tr	4	@ Override public Dimension getWindowSize ( ) { return new Dimension ( 200 , 200 ) ; }
tr	6	public Integer get ( String entityReference ) { return get ( entityReference , false ) ; }
tr	1	public void setMutables ( ) { }
tr	9	static public float log ( float a , float x ) { return ( float ) ( Math . log ( x ) / Math . log ( a ) ) ; }
tr	9	public void setActionListener ( ActionListener lis ) { BotModificar . addActionListener ( lis ) ; BotNuevo . addActionListener ( lis ) ; }
tr	4	public Collection < OsobyHasStaje > getOsobyHasStajeCollection ( ) { return osobyHasStajeCollection ; }
tr	2	public boolean isLocked ( ) { return lockStatus ; }
tr	10	@ Override public UrlBuilder fragment ( String fragment , String encoding ) { addFragment ( fragment , encoding ) ; return this ; }
tr	2	public int getNbColumns ( ) { return cols ; }
tr	4	@ Override public void mouseClicked ( MouseEvent e ) { }
tr	1	public void animationCycled ( ) { }
tr	4	@ Override public MyDatabase getMysql ( ) { return mysql ; }
tr	9	public LatencyMonitor ( final int sampleSize , final TimeUnit timeUnit ) { this . samples = new ConcurrentCircularBuffer < long > ( long . class , sampleSize ) ; this . timeUnit = timeUnit ; }
tr	3	@ Override public float getBlockOutPerSec ( ) { return BlockOutPerSec ; }
tr	3	public Route getRoute ( ) { return _route ; }
tr	4	public final void startup ( ) { if ( ! running ) { running = true ; doStartup ( ) ; } }
tr	3	public String getSharename ( ) { return sharename ; }
tr	2	public boolean isInitialized ( ) { return name != null ; }
tr	1	public CasaDeCambioTest ( ) { }
tr	3	@ Override public long getValue ( ) { return value ; }
tr	4	public TileWoodWall ( ) { super ( TileID . WOOD_WALL ) ; isSolid = true ; }
tr	2	@ Override public void performCSE ( ) { return ; }
tr	8	public lecMSMomentum ( ) { counting = 0 ; arrayIsFull = false ; mode = BUY_MODE ; average = 0 ; shareQuantity = 0 ; lastAverage = 0 ; }
tr	7	public Iterator < TextBlob > iterator ( int ii ) { return blobs . listIterator ( ii ) ; }
tr	6	void setChanges ( List < Event > changes ) { this . changes = changes ; }
tr	5	public void copyFrom ( Assign_opContext ctx ) { super . copyFrom ( ctx ) ; }
tr	10	@ EventHandler ( priority = EventPriority . LOWEST ) public void onWorldLoad ( final WorldLoadEvent event ) { this . loadIndex ( event . getWorld ( ) ) ; }
tr	9	@ Override protected void configure ( ) { super . configure ( ) ; install ( new FactoryModuleBuilder ( ) . build ( new TypeLiteral < GenericJobFactory < SimpleTestJob >> ( ) { } ) ) ; }
tr	1	public Lambda ( ) { }
tr	9	public KiitosValikkoKuuntelija ( KiitosValikko valikko , JButton painike ) { this . takaisinValikkoonPainike = painike ; this . valikko = valikko ; }
tr	5	@ JsonProperty ( "WaitingJobs" ) public void setWaitingJobs ( long WaitingJobs ) { this . WaitingJobs = WaitingJobs ; }
tr	7	public QueryException ( final String message , final Throwable caughtException ) { super ( message , caughtException ) ; }
tr	7	@ Override public void printJobCanceled ( PrintJobEvent pje ) { System . out . println ( "4" ) ; }
tr	10	public void setData ( Vector rows ) { log . finer ( "Entered method" ) ; data = rows ; fireTableRowsInserted ( 0 , data . size ( ) ) ; }
tr	9	public Match ( Participant participantA , Participant participantB ) { this . participantA = participantA ; this . participantB = participantB ; }
tr	1	public AriadnaMember ( ) { }
tr	6	@ SuppressWarnings ( "unused" ) boolean frighten ( int d ) { System . out . println ( "arrrgh" ) ; return true ; }
tr	7	public Color getTabUnselectedColor ( ) { return ( blackTabbedPaneUI . colorUnSel == null ) ? new Color ( 192 , 192 , 192 ) : blackTabbedPaneUI . colorUnSel ; }
tr	1	public ProjectUser ( ) { }
tr	3	public JTextField getTextFieldUserName ( ) { return txtUserName ; }
tr	5	public void setCustomerPhone2 ( String value ) { this . customerPhone2 = value ; }
tr	7	private void setComparerForCurrentVersusPreviousListedFiles ( ) { mapComparer = new HashMapComparer < String , CachedFileElement > ( previousListedFiles , currentListedFiles ) ; }
tr	4	public void setCurrentJob ( ) { currentJobAddress . setText ( currentJobStr ) ; }
tr	8	default public < T > ImmutableList < T > immutableList ( T object ) { return new ImmutableList < > ( object ) ; }
tr	8	private void addFlowerIfNecessary ( ) { if ( FPSManager . totalFrame ( ) % ( FPS / flowerBornPerSecond ) == 0 ) { add ( new FlowerCharacter ( flowerTexture ) ) ; } }
tr	6	@ Override public boolean gameOverTick ( Game game ) { fQLearning . gameOver ( ) ; return false ; }
tr	6	public void setChildren ( List < Row > children ) { this . children = children ; }
tr	6	public boolean getFeature ( String name ) { return f . getFeature ( name ) ; }
tr	7	public STO ( Processor cpu , Memory memory ) { super ( cpu , memory ) ; }
tr	2	public void testApp ( ) { assertTrue ( true ) ; }
tr	7	public void ReInit ( java . io . InputStream dstream ) { ReInit ( dstream , 1 , 1 , 4096 ) ; }
tr	6	public void setCategory ( String category ) { Dispatch . put ( this , "Category" , category ) ; }
tr	7	public static boolean isValidPropertyState ( String state ) { try { parsePropertyState ( state ) ; } catch ( IllegalArgumentException e ) { return false ; } return true ; }
tr	5	public void setGame ( Game game ) { this . game = game ; }
tr	1	public Messenger ( ) { super ( ) ; }
tr	10	@ SuppressWarnings ( "UseOfSystemOutOrSystemErr" ) private void printBoard ( java . io . PrintStream p ) { System . out . println ( toString ( ) ) ; }
tr	4	@ AfterClass public static void tearDownAfterClass ( ) throws Exception { datatype = null ; }
tr	7	public Range ( int start , int end ) { this . start = start ; this . end = end ; }
tr	3	protected Location getLocation ( ) { return location ; }
tr	1	public CharTypeTree ( ) { }
tr	8	private void abrirCadTelefones ( ) { telefonesGUI = new TelefonesGUI ( ) ; telefonesGUI . setLocationRelativeTo ( this . getParent ( ) ) ; telefonesGUI . setVisible ( true ) ; }
tr	4	public void setDepartment ( int department ) { this . department = department ; }
tr	2	public void setInactive ( ) { active = false ; }
tr	5	@ Override public PageType getType ( ) { return PageType . FRONTPAGE ; }
tr	9	public String getKeterangan ( ) { char idx = getIndex ( ) ; switch ( idx ) { case A : return "Sangat Baik" ; case B : return "Baik" ; case C : return "Cukup" ; case D : return "Kurang" ; default : return "Sangat Kurang" ; } }
tr	3	public LearningDataModel getLearningData ( ) { return learningData ; }
tr	3	public JobConf getJobConf ( ) { return jobConf ; }
tr	7	public static boolean isMediaUrl ( String input ) { return isRtmpUrl ( input ) || isHttpUrl ( input ) ; }
tr	10	public static int howMany2 ( int maxAdd , int goal , int next ) { if ( ( goal - next + 1 ) % ( maxAdd + 1 ) == 0 ) return - 1 ; return ( goal - next + 1 ) % ( maxAdd + 1 ) ; }
tr	9	public void set_transfer_type ( String in ) { try { _transfer_type = Integer . parseInt ( in ) ; } catch ( NumberFormatException e ) { ; } }
tr	3	public boolean isDecoupler ( ) { return getModule ( "ModuleDecouple" ) != null || getModule ( "ModuleAnchoredDecoupler" ) != null ; }
tr	6	@ Override public void setLevelStage ( final Integer levelStage ) { this . levelStage = levelStage ; }
tr	9	public Game ( CurrentGameState cgs , GameHandler gameHandler ) { this . cgs = cgs ; this . gameHandler = gameHandler ; }
tr	7	public UnidadLevementeHerida ( Integer saludMaxima ) { this . establecerSaludMaxima ( saludMaxima ) ; this . recibirGolpe ( ( int ) ( saludMaxima * 0.1 ) ) ; }
tr	10	public AreaConhecimentoControl ( AreaConhecimentoView v , AreaConhecimentoTabela t ) throws Exception { this . view = v ; this . tabela = t ; }
tr	7	public DualWedgeB ( final Material [ ] materials , final int orientation ) { super ( materials , true , true , true , true , true , true ) ; this . orientation = orientation ; }
tr	6	@ BeforeClass public static void setUpBeforeClass ( ) throws Exception { System . out . println ( "before test##############################################################" ) ; }
tr	9	public Moves ( String name , String UserIn ) { this . name = name ; this . UserIn = UserIn ; }
tr	10	public static PushNotificationPayload fromJSON ( final String rawJSON ) throws JSONException { final PushNotificationPayload payload = new PushNotificationPayload ( rawJSON ) ; return payload ; }
tr	7	public Object remove ( String key ) { return this . map . remove ( key ) ; }
tr	10	private void close ( ) { try { if ( connection != null ) connection . close ( ) ; } catch ( SQLException e ) { System . err . println ( e ) ; } }
tr	6	@ Override public List < ProjectilesData . SingleProjectileData > getSubs ( ) { return projectiles ; }
tr	9	public long optLong ( String key , long defaultValue ) { try { return getLong ( key ) ; } catch ( Exception e ) { return defaultValue ; } }
tr	3	public String getXMLEncoding ( ) { return XMLEncoding ; }
tr	8	private EnumInventories ( String name , class < ? > clazz ) { this . name = name ; this . clazz = clazz ; }
tr	3	public Value getResult ( ) { return value ; }
tr	3	public GetAllSatellitesResponse createGetAllSatellitesResponse ( ) { return new GetAllSatellitesResponse ( ) ; }
tr	5	public void setPlatform ( Platforms platform ) { this . platform = platform ; }
tr	8	public BaseJDialog ( java . awt . Frame parent , boolean modal ) { super ( parent , modal ) ; }
tr	8	public StatusView ( Player player ) { this . player = player ; this . setSize ( 400 , 200 ) ; this . setVisible ( true ) ; repaint ( ) ; }
tr	10	public File getConfigFile ( ) { File pluginsFolder = plugin . getDataFolder ( ) . getParentFile ( ) ; return new File ( new File ( pluginsFolder , "PluginMetrics" ) , "config.yml" ) ; }
tr	8	public boolean unloadAll ( Position target , boolean shiftQueueCommand ) { return unloadAll_native ( pointer , target , shiftQueueCommand ) ; }
tr	3	public void undo ( ) { light . on ( ) ; }
tr	1	public OneSpaceTileAction ( ) { }
tr	9	public void reset ( ) { EnemyLocator . reset ( ) ; map . reset ( ) ; obs . reset ( ) ; uniqueInstance = new Dungeon ( ) ; }
tr	6	public Vector3d scaleToLength ( float length ) { scaleBy ( length / this . length ( ) ) ; return this ; }
tr	4	public String toString ( ) { return "Pair[" + this . fst + " " + this . snd + "]" ; }
tr	3	public String getPassword ( ) { return password ; }
tr	3	public boolean isConnected ( ) { return clientConnection . isConnected ( ) ; }
tr	7	@ Override public E actual ( ) { if ( actual == null ) { throw new NullPointerException ( "Error: no se puede acceder el dato actual!" ) ; } return actual . getDato ( ) ; }
tr	8	public static void x ( String message ) { process ( new LogRecord ( LogType . EXCEPTION , message ) ) ; }
tr	10	public MessageView ( String message ) { super ( ) ; this . label = new JLabel ( message ) ; this . isGo = false ; this . isPopup = false ; this . controleur = new MessageController ( this ) ; }
tr	10	GenericDescriptor ( Descriptor buf , int offset , Device d ) { super ( buf , offset ) ; dev = d ; }
tr	1	private void paintCar ( ) { }
tr	3	public Integer getProfessorId ( ) { return professorId ; }
tr	1	public MultiLabelPerceptronNERClassifier ( ) { }
tr	8	@ Override public Object get ( Object key ) { return super . get ( toLowerCase ( key ) ) ; }
tr	5	public void setSomeData ( String value ) { this . someData = value ; }
tr	9	public JSTextFileUtility ( String filename ) { this . filename = filename ; if ( ! fileExists ( filename ) ) createNewFile ( filename ) ; }
tr	4	public TestList ( int x ) { this . x = x ; }
tr	4	public ContentStoreException ( String s ) { super ( s ) ; }
tr	10	public void processPCM ( ByteData pcm ) { try { wav . writePCM ( pcm ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } }
tr	1	private void readDataFromFile ( ) { }
tr	5	public void setModel ( ExternalBFieldModel value ) { this . model = value ; }
tr	4	public InvalidRuleException ( String msg ) { super ( msg ) ; }
tr	6	public void setOutputs ( ArrayList < Connection > param ) { outputs = param ; }
tr	2	public double m23 ( ) { return m23 ; }
tr	3	public ExpressionList arguments ( ) { return args ; }
tr	3	public Type getType ( ) { return type ; }
tr	3	public BufferedReader getBufferedReader ( ) { return this . in ; }
tr	5	@ Override public PermissionType getType ( ) { return PermissionType . RCON ; }
tr	8	public Cliente getResponsableSeleccionado ( ) { int index = cbxResponsable . getSelectedIndex ( ) ; return mdlResponsable . getElementAt ( index ) ; }
tr	10	void setupMnemonicAndAccelerator ( KeyStroke keystroke ) { putValue ( MNEMONIC_KEY , keystroke . getKeyCode ( ) ) ; putValue ( ACCELERATOR_KEY , keystroke ) ; }
tr	2	public short getStartPosition ( ) { return startPosition ; }
tr	1	public Patient ( ) { super ( "" , "" , "" ) ; }
tr	10	public static Move move ( Mark mark , int row , int col ) { return new Move ( mark , row , col ) ; }
tr	3	public GameVector PlusX ( ) { ++ this . xIndex ; return this ; }
tr	1	public int getColumnCount ( ) { return 1 ; }
tr	2	public int getExpGained ( ) { return this . exp_gained ; }
tr	2	public int getPatas ( ) { return patas ; }
tr	5	public void mouseMoved ( Graphics g , MouseEvent e ) { }
tr	6	@ Override public int hashCode ( ) { return key . hashCode ( ) * 31 + value . hashCode ( ) ; }
tr	9	private ReadNode readParser ( ) { read ( READ , "READ" ) ; return test ( STR ) ? new ReadNode ( string ( ) ) : new ReadNode ( ) ; }
tr	4	public void setTimeSignNumerator ( int i ) { this . timeSignNumerator = i ; }
tr	10	private static void updatePressedFrameCount ( ) { for ( Key key : Key . values ( ) ) { if ( key . state != STATE_NOTOUCH ) { key . state ++ ; } } }
tr	1	public RemitoDetalle ( ) { }
tr	10	public void remove ( Object element ) { int i = indexOf ( element ) ; if ( - 1 != i ) { set [ i ] = null ; -- occupied ; } }
tr	1	public boolean isPlayer ( ) { return false ; }
tr	10	protected void clearCanvas ( Graphics graphicContext ) { graphicContext . setColor ( backgroundColor ) ; graphicContext . fillRect ( 0 , 0 , canvasWidth , canvasHeight ) ; }
tr	4	public ByteOverflowException ( String message ) { super ( message ) ; }
tr	5	public void setAgencyID ( String agencyID ) { this . agencyID = agencyID ; }
tr	1	public Vendedor ( ) { }
tr	10	@ Override public void setDim ( int dim ) throws ConnectException { this . dim = dim ; outputY . setDim ( dim ) ; reset ( ) ; }
tr	3	public int size ( ) { return dataPoints . size ( ) ; }
tr	4	Gesture ( double d ) { value = d ; }
tr	7	@ JsonProperty ( "EndpointID" ) public void setEndpointID ( List < String > EndpointID ) { this . EndpointID = EndpointID ; }
tr	2	public int getX ( ) { return x ; }
tr	6	private void jTextField9ActionPerformed ( java . awt . event . ActionEvent evt ) { }
tr	9	private void init ( ) { prevValueList = new ArrayList < double > ( ) ; pdf = new PrintDataFile ( VALUEITERATIONFOLDER ) ; pdf . delete_Files ( VALUEITERATIONFOLDER ) ; }
tr	3	public BigDecimal getUnitPrice ( ) { return unitPrice ; }
tr	8	public List < Status > favorites ( String id ) throws WeiboException { return getFavorites ( id ) ; }
tr	4	public List < Group_schedule > getSchedule ( ) { return this . group_schedule ; }
tr	2	public int getViewLevels ( ) { return levels ; }
tr	6	public static void setDirectionalLight ( DirectionalLight directionalLight ) { WorldShader . directionalLight = directionalLight ; }
tr	4	@ Override public String toString ( ) { return toString ( 0 ) ; }
tr	6	@ Override public void addMoveCompleteListener ( MoveCompleteListener listener ) { moveCompleteListener = listener ; }
tr	5	public void addScore ( int score ) { this . score = this . score + score ; }
tr	8	@ Override public String toString ( ) { return "[c:#" + a . hashCode ( ) + "<->#" + b . hashCode ( ) + "  t=" + type + "]" ; }
tr	8	public static boolean isValidWeekInMonthCode ( final int code ) { switch ( code ) { case FIRST_WEEK_IN_MONTH : case SECOND_WEEK_IN_MONTH : case THIRD_WEEK_IN_MONTH : case FOURTH_WEEK_IN_MONTH : case LAST_WEEK_IN_MONTH : return true ; default : return false ; } }
tr	3	public String getPasswort ( ) { return this . passwort ; }
tr	1	public boolean isTaunting ( ) { return false ; }
tr	2	public double getValorProduto ( ) { return valorProduto ; }
tr	6	public Labels getLabels ( ) { if ( labels == null ) { labels = new Labels ( ) ; } return labels ; }
tr	1	public void endColumn ( ) { }
tr	9	public NavalgoBattle ( Posicion maxPos , Jugador jugador ) { this ( ) ; this . setJugador ( jugador ) ; this . setMaximaPosicion ( maxPos ) ; }
tr	9	public SendEvent ( String valueHolderName , V value , int nextRunningInvocationCount ) { super ( valueHolderName , value , nextRunningInvocationCount ) ; }
tr	1	public NotEnoughMarketData ( ) { }
tr	7	public NullOrEmptyArrayException ( String message , Throwable cause ) { super ( message , cause ) ; }
tr	5	public void setChapters ( String chapters ) { this . chapters = chapters ; }
tr	8	public StringTag ( String name , String value ) { super ( name ) ; this . value = value ; }
tr	3	public boolean isCoffee ( ) { return type . equals ( "coffee" ) ; }
tr	3	public Object getOwner ( ) { return owner ; }
tr	5	@ Override public ITimeSeries < T > getLower ( ) { return this . tsLower ; }
tr	2	public int getBiFollowersCount ( ) { return biFollowersCount ; }
tr	8	public void testStringConstructorParseFail ( ) { try { new JSONArray ( "[" ) ; fail ( ) ; } catch ( JSONException e ) { } catch ( StackOverflowError e ) { fail ( "Stack overflowed on input: \"[\"" ) ; } }
tr	10	public static BasicSingleton getInstance ( ) { if ( instance == null ) { synchronized ( BasicSingleton . class ) { if ( instance == null ) { instance = new BasicSingleton ( ) ; instance . increment ( ) ; } } } return instance ; }
tr	5	public void setSession ( Session session ) { this . session = session ; }
tr	3	public ResourceBundle getResources ( ) { return myResources ; }
tr	2	public int getLabelInAssembler ( ) { return labelInAssembler ; }
tr	2	public int getWalkingRightHandY ( ) { return walkingRightHandY ; }
tr	8	private SimpleAttributeSet buildTableCellBox ( TableCellBox box ) { return commonBuild ( box , Constants . TABLE_CELL_BOX ) ; }
tr	4	public void writeSpace ( ) throws IOException { writer . write (   ) ; }
tr	2	public double getBalance ( ) { return balance ; }
tr	5	public final void EstablecerNombres ( String entrada_Nombres ) { this . Nombres = entrada_Nombres ; }
tr	7	public static void require ( final boolean requirement , final String message ) { if ( ! requirement ) { throw new IllegalArgumentException ( message ) ; } }
tr	8	private void CopiarBotonActionPerformed ( java . awt . event . ActionEvent evt ) { areaPrincipal . copy ( ) ; }
tr	9	public void set_wheelchair_boarding ( String in ) { try { _wheelchair_boarding = Integer . parseInt ( in ) ; } catch ( NumberFormatException e ) { ; } }
tr	1	public void DrawGameBase ( ) { }
tr	1	public Manager ( ) { super ( "Default" , "User" ) ; }
tr	10	private Object idGenRel ( String descriptive , String ... attributes ) { if ( _nameRelations ) { return idGen ( descriptive , attributes ) ; } else { return null ; } }
tr	9	public int root ( int value ) { while ( value != root ( value ) ) { value = root [ value ] ; } return value ; }
tr	4	public void setWeight ( int weight ) { this . weight = weight ; }
tr	8	public ServiceLocatorException ( String message , Exception exception ) { super ( message ) ; this . exception = exception ; return ; }
tr	1	public static final int StateInit ( ) { return 0 ; }
tr	8	public void setImage ( String imgname ) { this . imgname = imgname ; imgbbox = null ; anim = null ; animid = null ; }
tr	10	public ConfigurationNode getNode ( String path , ConfigurationNode def ) { return getOf ( path , nodeLB , def ) ; }
tr	2	public long getId ( ) { return id ; }
tr	4	@ Override public String toString ( ) { return text ; }
tr	4	public void setInitialPrice ( double initialPrice ) { this . initialPrice = initialPrice ; }
tr	7	public void mousePressed ( MouseEvent e ) { tools [ selectedTool ] . mousePressed ( e ) ; }
tr	5	public void setEndDate ( Date endDate ) { this . endDate = endDate ; }
tr	1	public Prenotazione ( ) { super ( ) ; }
tr	4	@ Override public String toString ( ) { return "HostRef [hostId=" + hostId + "]" ; }
tr	9	@ Override public byte [ ] retrieve ( Pointer pointer ) throws IOException { return pointer . getStorageBlock ( ) . retrieve ( pointer ) ; }
tr	3	public int getSpeedX ( ) { return speed . moveX ( 0 , 1 ) ; }
tr	4	public void setPaidAmount ( double paidAmount ) { this . paidAmount = paidAmount ; }
tr	6	public boolean containsFamily ( String family ) { return families . contains ( family ) ; }
tr	4	@ Override public String getName ( ) { return name ; }
tr	5	public String createProgress ( String data ) { return "0 " + data ; }
tr	5	public void setPropertyName ( String propertyName ) { this . propertyName = propertyName ; }
tr	3	public ExprList getExprList ( ) { return exprList ; }
tr	8	@ Test public void testSkipAll ( ) { assertEquals ( 0 , Enumerable . create ( new Integer [ ] { 1 , 2 , 3 , 4 } ) . skip ( 4 ) . size ( ) ) ; }
tr	3	public String getCapkhenthuong ( ) { return this . capkhenthuong ; }
tr	2	public double getValue ( ) { return value ; }
tr	1	protected void setEmbeddableKeys ( ) { }
tr	6	public void setFilters ( List < BufferedImageOp > filters ) { this . filters = filters ; }
tr	2	public int getMagicNumber ( ) { return magicNumber ; }
tr	9	protected BTPos < E > createNode ( E element , int i ) { return new BTPos < > ( element , i ) ; }
tr	4	public void setRating ( long rating ) { this . rating = rating ; }
tr	7	public static Shell getShell ( ) { Shell shell = new Shell ( display ) ; return shell ; }
tr	4	public ArrayList < String > getPotentials ( ) { return potentials ; }
tr	5	public void setShapeDrawer ( ShapeDrawer shapeDrawer ) { this . shapeDrawer = shapeDrawer ; }
tr	4	public Matrix m ( ) { return matrix [ top ] ; }
tr	4	@ Inject public Example ( String helloworld ) { }
tr	3	public String getsCategory ( ) { return sCategory ; }
tr	3	public void readModel ( String file ) { }
tr	5	public FunctionPrototype ( StaticFunctionSignature signature ) { this . signature = signature ; }
tr	8	public static $double2d $ ( final double [ ] [ ] t ) { $double2d r = new Double2DRef ( t ) ; return r ; }
tr	4	public void setMFS ( boolean mfs ) { this . mfs = mfs ; }
tr	9	public Sentient getNextEvent ( ) { float timePassed = timeQueue . remove ( 0 ) ; this . adjustPriority ( - timePassed ) ; return sentientQueue . remove ( 0 ) ; }
tr	3	public String getOriginal ( ) { return original ; }
tr	8	public boolean isBuildable ( TilePosition position , boolean includeBuildings ) { return isBuildable_native ( pointer , position , includeBuildings ) ; }
tr	6	public boolean isCompatible ( Key key ) { return this . key . equals ( key ) ; }
tr	4	@ Override public void mouseEntered ( MouseEvent e ) { }
tr	1	public void init ( ) { }
tr	10	public void recv_delete_queue ( ) throws org . apache . thrift7 . TException { delete_queue_result result = new delete_queue_result ( ) ; receiveBase ( result , "delete_queue" ) ; return ; }
tr	6	@ Override public void enterCompare ( @ NotNull MagicParser . CompareContext ctx ) { }
tr	7	public HtmlRender ( Cube < T > cube ) { super ( cube ) ; this . comparator = new NaturalKeyComparator ( ) ; }
tr	7	public void testMethodInvocationDistTo ( Tester t ) { t . checkInexactMethod ( "Success: Inexact check distance to - success" , 4.998 , 0.001 , pt , "distTo" , new CartPtDouble ( 7.0 , 7.0 ) ) ; }
tr	9	public void click ( Object node , Object parent ) { this . modificator . modify ( node , parent ) ; }
tr	2	public int getOro ( ) { return this . oro ; }
tr	6	public Column ( IndividualsGroup genotypeWithAge ) { this . genotype = null ; this . genotypeWithAge = genotypeWithAge ; }
tr	9	public void put ( JsonObject source , String sourceAndDestinationKey ) { put ( source , sourceAndDestinationKey , sourceAndDestinationKey ) ; }
tr	7	public int playersInScourge ( ) { int c = 0 ; for ( int i : scourge ) { if ( i != 0 ) c ++ ; } return c ; }
tr	1	public EngineeringNGTest ( ) { }
tr	4	public List < Calificacion > getCalificaciones ( ) { return calificaciones ; }
tr	8	public String getLastRelease ( ) { StringTokenizer stk = new StringTokenizer ( getLastLine ( ) ) ; return stk . nextToken ( ) ; }
tr	4	public void setSeq ( int aSeq ) { this . seq = aSeq ; }
tr	10	public Comment ( String id , ArrayList < double > vec ) { this . comment_id = id ; this . vector = new ArrayList < double > ( vec ) ; }
tr	8	@ Override public void accountChanged ( String id ) throws IOException { handler . accountChanged ( id ) ; }
tr	2	public int getRemainingUpgradeTime ( ) { return remainingUpgradeTime ; }
tr	2	public long getLastModified ( ) { return lastModified ; }
tr	7	public ServiceLocationException ( final short errcode , final String message ) { super ( message ) ; errorCode = errcode ; }
tr	5	public void setSManualCashbackStatusDescription ( String manualCashbackStatusDescription ) { sManualCashbackStatusDescription = manualCashbackStatusDescription ; }
tr	4	@ Override final public boolean isRecurrent ( ) { return this . structure . recurrent ; }
tr	7	public boolean isDefined ( ) { return ( this . x1 != null && this . x2 != null && this . y1 != null && this . y2 != null && this . z1 != null && this . z2 != null ) ; }
tr	6	public String getKeyDesc ( int key ) { return JREEngine . getKeyDescStatic ( key ) ; }
tr	4	public String toString ( ) { return state . toString ( ) ; }
tr	5	@ Override public String toString ( ) { return getName ( ) + "=" + getValue ( ) ; }
tr	7	@ Override public void processCommand ( Command command , int parameter , boolean hasParameter , boolean optional ) { }
tr	1	public Downloader ( ) { }
tr	4	public void setPosX ( int posX ) { this . posX = posX ; }
tr	1	public void aboutToDisplayPanel ( ) { }
tr	8	@ Override public void deactivate ( ) { logger . trace ( "ConsumerActor deactivate: %s" , this ) ; DefaultActorTest . dumpMessages ( messages ) ; super . deactivate ( ) ; }
tr	5	public void setClusterRef ( ClusterRef clusterRef ) { this . clusterRef = clusterRef ; }
tr	3	public Decision getDecision ( ) { return decision ; }
tr	2	public boolean getFadeTooltip ( ) { return fadeTooltip ; }
tr	9	@ Override public int compareTo ( CategoryDetails t ) { return t . getCategoryName ( ) . compareTo ( t . getCategoryName ( ) ) ; }
tr	2	public int getLeftValue ( ) { return leftValue ; }
tr	7	protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { }
tr	10	public ScheduleSelection ( int userID , boolean editable ) { this . userID = userID ; this . editable = editable ; initComponents ( ) ; setSchedule ( userID ) ; }
tr	4	public java . lang . long getId ( ) { return id ; }
tr	10	private void addEnumerationRunnerActions ( final JButton button , final EnumerationRunner r ) { button . addActionListener ( new OnClickEnumerationExecutionButton ( button , r ) ) ; }
tr	4	public Object getNextPanelDescriptor ( ) { return OAT_Analysis_Panel3_Descriptor . IDENTIFIER ; }
tr	1	public Style ( ) { this ( null , null , null , null ) ; }
tr	5	public void setProgressCharacter ( String ch ) { progressChar = ch ; }
tr	2	public boolean isEmtpyTMProposals ( ) { return emtpy_tm_proposals ; }
tr	5	@ XmlTransient public Collection < Keyvalue > getKeyvalueCollection ( ) { return keyvalueCollection ; }
tr	5	private void clearAddTaxPanel ( ) { addTaxNameField . setText ( "" ) ; addTaxRateField . setText ( "" ) ; }
tr	1	public Meta ( ) { }
tr	9	public void notify ( List < Object > l ) { logger . trace ( "Processor was notified by ResponseResolver." ) ; if ( l != null ) { workOnList ( l ) ; } }
tr	7	public static String toString ( char what ) { switch ( what ) { case EPSILON : return "eps" ; case else : return "else" ; case BLANK : return "blank" ; default : return "" + what ; } }
tr	7	private void getBoarders ( ) { output . setStroke ( new BasicStroke ( profile . getBoarderMax ( ) ) ) ; getSide ( ) ; }
tr	5	public HashMap < String , Avion > getAvions ( ) { return this . avions ; }
tr	8	public DefaultCellAttribute ( int numRows , int numColumns ) { columnSize = numColumns ; rowSize = numRows ; setSize ( ) ; }
tr	5	CLI ( AuthServer server ) { this . server = server ; }
tr	7	private void bFecharActionPerformed ( java . awt . event . ActionEvent evt ) { dispose ( ) ; }
tr	2	public int getZ ( ) { return zLoc ; }
tr	10	public MenuRetornarPartida ( ) { super ( "Menu Partida" , new ArrayList < ItemMenu > ( ) { private static final long serialVersionUID = - 2202065529317389240 ; { add ( new ItemMenu ( "REINICIAR" , "Retorna uma partida" ) ) ; add ( new ItemMenu ( "APAGAR" , "Apagar uma partida" ) ) ; add ( new ItemMenu ( "RETORNAR" , "Retornar ao menu principal" ) ) ; } } ) ; }
tr	6	@ SuppressWarnings ( "unused" ) private void setHandle ( long handle ) { this . handle . set ( handle ) ; }
tr	6	@ Override public boolean contains ( K key ) { return get ( key ) != null ; }
tr	9	@ Override public void enterRule ( ParseTreeListener listener ) { if ( listener instanceof EnquantoListener ) ( ( EnquantoListener ) listener ) . enterEscreva ( this ) ; }
tr	1	public InboundVoicePricing ( ) { }
tr	7	public StringValue ( final String value ) { this ( value . getBytes ( Bencode . UTF8 ) ) ; }
tr	7	public GameObject ( int type , int name ) { this . type = type ; this . name = name ; }
tr	2	public int size ( ) { return size ; }
tr	10	public int get ( long index ) { if ( ! map . containsKey ( index ) ) throw new ArrayIndexOutOfBoundsException ( "index is " + index ) ; return map . get ( index ) ; }
tr	3	public boolean isClockRunning ( ) { synchronized ( LOCK ) { return runSimulation ; } }
tr	5	public ElementShape ( BasicShape shape ) { this . shape = shape ; }
tr	8	@ Override public INDISwitchElement getElement ( String name ) { return ( INDISwitchElement ) super . getElement ( name ) ; }
tr	8	protected VariableDeclaration ( Modifiers mods , List < Annotation > annot ) { super ( mods , annot ) ; }
tr	10	@ Test public void shouldCreateANewBinaryMinHeap ( ) { BinaryMinHeap < Integer > bmh = new BinaryMinHeap < Integer > ( Integer . class ) ; assertNotNull ( bmh ) ; }
tr	9	public void handle ( ) throws PacketException { byte respHeader = response [ 0 ] ; if ( respHeader == SERVER_PACKET_HEADER_OK ) return ; if ( respHeader == SERVER_PACKET_HEADER_FAIL ) { throw new PacketException ( "Failed to request version info." ) ; } }
tr	7	public String getHealthText ( ) { double health = getHealth ( ) ; if ( health > 0.75 ) { return "excellently" ; } else if ( health > 0.50 ) { return "well" ; } else if ( health > 0.25 ) { return "decently" ; } else { return "poorly" ; } }
tr	10	@ Override public boolean equals ( Object o ) { return o instanceof Task && ( ( Task ) o ) . getId ( ) == this . getId ( ) ; }
tr	9	public double mutate ( double val , double div ) { double r = ( rand . nextDouble ( ) - .5 ) * div ; return val + r ; }
tr	9	public double valueDouble ( ) { final long now = System . nanoTime ( ) ; final double ns = now - this . value ; return ns * FACTOR_MILLI ; }
tr	7	public float length2 ( ) { return ( this . x * this . x ) + ( this . y * this . y ) + ( this . z * this . z ) ; }
tr	4	public void setX ( double x ) { this . x = x ; }
tr	3	@ Override public Integer contar ( ) { return null ; }
tr	6	@ BeforeClass public static void setUp ( ) throws Exception { client = ConnectionHelper . create ( ) ; }
tr	10	public ShipShieldAbility ( World world ) { super ( world ) ; length = 4 ; coolDownTime = 10 ; isCooledDown = true ; isCoolingDown = false ; needsLocation = false ; isReady = false ; }
tr	7	private void jMenuItemEditSelectAllActionPerformed ( java . awt . event . ActionEvent evt ) { selectAll ( ) ; }
tr	6	@ Override public void invalidate ( ) { manaCrystal . removeCollector ( ( Collector ) unit ) ; }
tr	5	public void setJobStatus ( JobStatus status ) { jobStatus = status ; }
tr	8	@ Override protected void setEstadoEdicao ( ) { jTFChamado . setEditable ( true ) ; jTFFerramenta . setEditable ( true ) ; jTFChamado . requestFocusInWindow ( ) ; }
tr	2	public long getItemId ( ) { return itemId ; }
tr	9	public static MySQLConnectionPool getInstance ( ) throws ConnectionException , DataStoreException , NotConfiguredException { if ( instance == null ) { instance = new MySQLConnectionPool ( ) ; } return instance ; }
tr	1	public QuestionPhoto ( ) { super ( ) ; }
tr	6	@ Override public List < Bid > getBids ( ) { return BidManager . getBids ( ) ; }
tr	1	public ShareItem ( ) { }
tr	10	public void setPosition ( Vec2i position ) { this . position = position ; this . setLocation ( position . x , position . y ) ; }
tr	3	public Object getObject ( ) { return v ; }
tr	10	public void print ( String padding ) { System . out . println ( padding + "return" ) ; expr . print ( padding + "\t" ) ; }
tr	10	public ModeChannelCodec ( String userChannel , List < ChannelMode > modes ) { this . userChannel = userChannel ; this . modes = modes ; }
tr	5	public void setObject ( String object ) { this . object = object ; }
tr	4	public void setFinalGrades ( boolean value ) { this . finalGrades = value ; }
tr	9	@ Override public int hashCode ( ) { int hash = 7 ; hash = 23 * hash + ( this . id != null ? this . id . hashCode ( ) : 0 ) ; return hash ; }
tr	3	@ Override protected void onPause ( ) { super . onPause ( ) ; }
tr	9	private void writeObject ( ObjectOutputStream out ) throws IOException { if ( getClass ( ) == UnitValue . class ) LayoutUtil . writeAsXML ( out , this ) ; }
tr	1	public Multitasker ( ) { }
tr	10	public static short [ ] getValues ( ) { short [ ] values = { OTHER , ENTITY_INFORMATION_INTERACTION , WARFARE , LOGISTICS , RADIO_COMMUNICATION , SIMULATION_MANAGEMENT , DISTRIBUTED_EMISSION_REGENERATION } ; return values ; }
tr	2	public int getTotalPacketsNumber ( ) { return this . totalPackets ; }
tr	10	private int derivateZ ( int N_max ) { return ( ceil ( ( double ) Kt / SystematicIndices . KL ( N_max , MAX_SIZE_BLOCK , ALIGN_PARAM , T ) ) ) ; }
tr	6	public void setJobs ( ArrayList < String > jobNames ) { this . jobs = jobNames ; }
tr	8	public StatusModel newStatus ( ) { StatusModel sta = new StatusModel ( ) ; this . statusmodel = sta ; return sta ; }
tr	7	private void cancelButtonActionPerformed ( java . awt . event . ActionEvent evt ) { this . dispose ( ) ; }
tr	3	public HTTPMessage getMessage ( ) { return msg ; }
tr	7	public AbstractDataWriter ( ExportOptions options , Writer out ) { super ( options , out ) ; }
tr	6	public static void main ( String [ ] args ) throws IOException { new StudentUI ( ) . run ( ) ; }
tr	7	public List < Edge > getEdges ( int vertex ) { return vertices [ vertex ] . getEdges ( ) ; }
tr	6	public static String collectionToCommaDelimitedString ( Collection < ? > coll ) { return collectionToDelimitedString ( coll , " " ) ; }
tr	9	public Sender ( File file , String ip ) { this . file = file ; this . ip = ip ; }
tr	5	public void setOAuthAccessToken ( AccessToken token ) { this . oauthToken = token ; }
tr	9	private void close ( boolean restart ) { bot . close ( ) ; if ( ! restart ) { dispose ( ) ; bots . remove ( bot ) ; return ; } }
tr	7	public void setAltitudeMode ( String value ) { this . altitudeMode = value ; this . isAltitudeModeDirty = true ; setDirty ( ) ; }
tr	3	public String getName ( ) { return name ; }
tr	10	@ Test public void testChangingBaseStatsAndEVsChangesOutput ( ) { assertEquals ( 47 , spDefCalculator . calculate ( 5 , 4 , nature ) ) ; assertEquals ( 609 , spDefCalculator . calculate ( 255 , 252 , nature ) ) ; }
tr	9	public RankAction ( Console console , ListManager manager ) { this . console = console ; this . manager = manager ; }
tr	3	public String getName ( ) { return name ; }
tr	5	public void setName ( String name ) { this . name = name ; }
tr	10	public String resultingJson ( JSONArray input ) { String jSONArray = input . toString ( ) ; return resultingJson ( jSONArray ) ; }
tr	7	public Currency getCurrency ( ) { if ( ! isA ( VariantCurrency ) ) illegal ( "getCurrency" , "VariantCurrency" ) ; return ( Currency ) value ; }
tr	3	@ AfterClass public static void tearDownClass ( ) throws Exception { }
tr	5	public void setVersionName ( String value ) { this . versionName = value ; }
tr	7	private Activity getCompassActivity ( ) { if ( compassFunctionalityVerfiedActivity == null ) { compassFunctionalityVerfiedActivity = new CompassFunctionalityVerfiedActivity ( clientFactory ) ; } return compassFunctionalityVerfiedActivity ; }
tr	4	@ XmlElement public String getSourceURL ( ) { return sourceURL ; }
tr	6	@ Override public int hashCode ( ) { return Objects . hash ( this . port , this . host ) ; }
tr	8	public JoueurAction ( String nom , int choixB ) { super ( nom ) ; choixBouton = choixB ; this . addMouseListener ( this ) ; }
tr	10	private Message sendMessage ( String operationName , String ... params ) throws DeadNodeException { return sendMessage ( operationName , 0 , params ) ; }
tr	8	public Set < Faction > findGroupsByFounder ( String founderName ) { return this . dao . findGroupsByFounder ( founderName ) ; }
tr	10	private static int binarySearchHi ( Object [ ] ary , int hi ) { int bin_srch_res = binarySearch ( ary , hi ) ; return bin_srch_res >> BIN_SEARCH_INDEX_SHIFT ; }
tr	4	public void setLevel ( int newLevel ) { this . level = newLevel ; }
tr	5	public Stopper ( Brains brains ) { this . brains = brains ; }
tr	4	@ SuppressWarnings ( "rawtypes" ) public static ArrayList getEnemys ( ) { return MovingEntitys ; }
tr	4	public void deselect ( ) { underlinecolor = Color . cyan ; }
tr	9	@ Override public int hashCode ( ) { int hash = 5 ; hash = 23 * hash + ( this . attendID != null ? this . attendID . hashCode ( ) : 0 ) ; return hash ; }
tr	3	public int getCompletionTime ( ) { return convertTime ( completionTime ) ; }
tr	1	public OutgoingCarrierFactory ( ) { }
tr	1	private SingleTon ( ) { }
tr	6	public boolean contains ( E e ) { return bs . search ( e ) ; }
tr	10	public void addFirst ( Node newNode ) { newNode . setNext ( head ) ; head = newNode ; size = size + 1 ; }
tr	9	public void update ( Graphics g ) { for ( StatPanel panel : panels ) panel . paint ( g ) ; }
tr	5	@ JsonProperty ( "PreLRMSWaitingJobs" ) public void setPreLRMSWaitingJobs ( long PreLRMSWaitingJobs ) { this . PreLRMSWaitingJobs = PreLRMSWaitingJobs ; }
tr	1	public BeanActividadesAlumno ( ) { }
tr	10	@ Override public boolean removeLogicable ( Logical logicable ) { if ( logicable != null ) { return logicablesToChange . add ( new Tuple < Logical , boolean > ( logicable , false ) ) ; } return false ; }
tr	3	public boolean isNADefault ( ) { return "" . equals ( namingAuthority ) ; }
tr	10	public Flac2PcmAudioInputStream ( InputStream in , AudioFormat format , long length ) { this ( in , format , length , DEFAULT_BUFFER_SIZE ) ; }
tr	8	@ Override public void setSleepTime ( long sleepTime ) { if ( sleepTime < 0 ) { throw new IllegalArgumentException ( "sleepTime must not be less zero: " + sleepTime ) ; } this . sleepTime = sleepTime ; }
tr	9	@ Override public void exitRule ( ParseTreeListener listener ) { if ( listener instanceof DecafParserListener ) ( ( DecafParserListener ) listener ) . exitSentencia5 ( this ) ; }
tr	7	@ Override public long getLong ( int offset ) { return col . getLong ( index , offset ) ; }
tr	9	@ Override @ Transactional ( propagation = Propagation . SUPPORTS ) public Waves find ( String s ) { return null ; }
tr	6	@ Test public void testGetInput ( ) { assertEquals ( "getInput() returns the current input instance" , "bar" , tester . getInput ( ) . getArgument ( "foo" ) ) ; }
tr	7	public static void print ( double x ) { out . print ( x ) ; out . flush ( ) ; }
tr	10	@ Override public List < String > getGroupInheritance ( String group ) { return plugin . config . getGroupInheritance ( group ) ; }
tr	5	public void setCommonGrp ( CommonGrp value ) { this . commonGrp = value ; }
tr	9	public double removeKey ( E key ) { double d = entries . remove ( key ) ; return ( d == null ? 0.0 : d ) ; }
tr	4	@ Override public double distanceFrom ( Gravitable g ) { return 1000000 ; }
tr	8	public void set_data ( byte [ ] data ) { set_data ( data == null ? ( ByteBuffer ) null : ByteBuffer . wrap ( data ) ) ; }
tr	1	public void run ( ) { }
tr	1	public float getTimeFrame ( ) { return 0 ; }
tr	1	public SuperTank ( ) { }
tr	6	@ JsonProperty ( "HealthStateInfo" ) public void setHealthStateInfo ( String HealthStateInfo ) { this . HealthStateInfo = HealthStateInfo ; }
tr	9	public AIDuelSupporter ( Model model , AiDuelOptionsWindow optionsWindow ) { this . model = model ; this . optionsWindow = optionsWindow ; }
tr	10	void embarcar ( String [ ] passageiros ) { passageiros = new String [ ] { "Panthro" , "Lion" } ; passageiros [ 1 ] = "klaus" ; System . out . println ( passageiros [ 1 ] ) ; }
tr	5	public void setStateVector ( StateVector stateVector ) { this . stateVector = stateVector ; }
tr	4	public boolean isHigh ( ) { if ( state == NetState . HIGH ) { return true ; } else { return false ; } }
tr	9	@ Test public void ID3v2PopmFrameDataIsNotEqualNull ( ) throws Exception { ID3v2PopmFrameData iD3v2PopmFrameData = new ID3v2PopmFrameData ( false , 0 ) ; assertFalse ( iD3v2PopmFrameData . equals ( null ) ) ; }
tr	10	@ Override public < T > T selectHandler ( HandlerContext < T > ctx , ConnectionHolder conn ) throws SQLException { return null ; }
tr	1	public void init ( ) { }
tr	4	@ Override protected void mutate ( Individual i ) { }
tr	8	public static int randInt ( int min , int max ) { return ( rand . nextInt ( ( max - min ) + 1 ) + min ) ; }
tr	1	public Query ( ) { }
tr	9	private Architecture ( final String name , final String ... aliases ) { this . name = name ; this . aliases = aliases ; }
tr	3	public Date getBeginPeriod ( ) { return beginPeriod ; }
tr	1	protected void execute ( ) { }
tr	2	public boolean isDebug ( ) { return debug ; }
tr	6	public Line ( SDOShape shape ) { this . shape = shape ; init ( ) ; }
tr	10	@ Override public Type add ( Type that ) { return equivalent ( that ) ? new FloatType ( ) : super . add ( that ) ; }
tr	10	protected void addComponents ( ) { myMenuBar = new MenuBarView ( this ) ; myTabbedPane = new JTabbedPane ( ) ; setJMenuBar ( myMenuBar ) ; EasyGridFactory . layoutHorizontal ( this , myTabbedPane ) ; }
tr	5	public void setHero ( Hero hero ) { this . hero = hero ; }
tr	8	public void setState ( int state ) { unloadState ( currentState ) ; currentState = state ; loadState ( currentState ) ; }
tr	3	public Source getSource ( ) { return source ; }
tr	8	public void hide ( ) { object . setHidden ( ) ; for ( ObjectController oc : controllers ) { oc . hide ( ) ; } }
tr	7	public void setChannel ( java . lang . String channel ) { this . channel = channel ; }
tr	6	public void readinit ( byte [ ] buf , int bytes ) { readinit ( buf , 0 , bytes ) ; }
tr	4	public List < Word > getWords ( ) { return this . words ; }
tr	3	public String getGender ( ) { return gender ; }
tr	3	public Demographics getDemographics ( ) { return demographics ; }
tr	9	public void render ( Screen screen ) { screen . render ( ( int ) x , ( int ) y - ( int ) z , tile , false ) ; }
tr	2	public void setStatusToRequiresAuthorizedClient_401 ( ) { this . status = 401 ; }
tr	9	public List < AuthorModel > getAuthorsByName ( String name ) throws WebshopAppException { return authorRepository . getAuthorsByName ( name ) ; }
tr	6	@ Override public int hashCode ( ) { return 29 * super . hashCode ( ) + ( this . data != null ? this . data . hashCode ( ) : 0 ) ; }
tr	4	public Polygon getPolygon ( ) { return getPolygon_native ( pointer ) ; }
tr	1	public void remove ( ) { }
tr	8	public static int search ( int [ ] a , int value ) { return search ( a , 0 , a . length - 1 , value ) ; }
tr	10	@ Override public int build ( MyLevel level ) { return buildingTool . build ( start , lenght , floor , level ) ; }
tr	5	@ Override public String toString ( ) { return "CorrelationResult: sessionId=" + getSessionId ( ) + " taskId=" + getTaskId ( ) ; }
tr	1	public Estado ( ) { }
tr	1	public Description ( ) { }
tr	5	public void setCardHolderCountryCode ( String value ) { this . cardHolderCountryCode = value ; }
tr	5	public void save ( Node node ) { super . save ( node ) ; }
tr	3	public int getGameTime ( ) { return gameTimer . getTimeSec ( ) ; }
tr	9	public ArrayPlace at ( NumericExpression i , NumericExpression j ) { return new ArrayPlace ( this , i , j ) ; }
tr	1	public Node ( ) { }
tr	2	public int get_shape_pt_sequence ( ) { return _shape_pt_sequence ; }
tr	9	public void testChoiceStringIntInt ( ) { choice = new Choice ( "When to meet" , 1 , 1 ) ; assert ( choice . getName ( ) == "When to meet" ) ; assert ( choice . getOrder ( ) == 1 ) ; assert ( choice . getFinalDecisionOrder ( ) == 1 ) ; }
tr	9	public Condition equalTo ( @ NotNull Value < Integer > value ) { return condition ( Operator . = , this , value ) ; }
tr	3	public Widget close ( ) { isOpen = false ; return this ; }
tr	1	public SingleQuestionServlet ( ) { super ( ) ; }
tr	5	public void setProdCodeGrp ( ProdCodeGrp value ) { this . prodCodeGrp = value ; }
tr	4	public Object getBackPanelDescriptor ( ) { return ChooseMethodDescriptor . IDENTIFIER ; }
tr	4	public void setValorVenta ( double valorVenta ) { this . valorVenta = valorVenta ; }
tr	8	private static JShape getShape ( SDOShape shape ) { return shape . getShapeType ( ) . getJShape ( shape ) ; }
tr	3	public boolean alreadyReceivedScoreEvents ( ) { return this . currentTurn . alreadyReceivedScoreEvents ; }
tr	1	private void GameUtilites ( ) { }
tr	2	public static void test ( ) { test ( 50 ) ; }
tr	9	@ Override public void enterRule ( ParseTreeListener listener ) { if ( listener instanceof DecafParserListener ) ( ( DecafParserListener ) listener ) . enterMethod_decl ( this ) ; }
tr	8	@ Test public void without_argument_should_have_1_size ( ) { ArrayImpl list = new ArrayImpl ( ) ; assertEquals ( list . size ( ) , 1 ) ; }
tr	7	public IntCartesian ( int x , int y ) { this . x = x ; this . y = y ; }
tr	10	@ Override public void windowClosing ( WindowEvent e ) { if ( ClientFrame . this . client . isConnected ( ) ) { ClientFrame . this . client . disconnect ( ) ; } }
tr	5	public void loadImage ( ) { favicon = getImage ( "favicon" ) ; titleImage = getImage ( "title" ) ; }
tr	9	public void paintComponent ( Graphics gr ) { if ( _graph != null ) { _graph . draw ( gr , _index1 , _index2 ) ; } }
tr	6	public void setAttributeList ( List < Attribute > attList ) { this . attList = attList ; }
tr	8	public int getPixel ( int x , int y ) { return image . getRGB ( x , y ) & FF ; }
tr	10	public String depthFirst ( Object searchData ) { this . searchData = searchData ; v = new DataListener ( searchData ) ; return getDepthFirstS ( ) ; }
tr	1	public boolean blocksLineOfSight ( ) { return false ; }
tr	5	public void swap ( ArrayImpl list , int x , int y ) { }
tr	7	public double mag ( ) { return Math . sqrt ( x * x + y * y ) ; }
tr	1	public ProgramRoot ( ) { }
tr	5	@ Override public String toString ( ) { return "InsertQueryResult [querySuccessfullyExecuted=" + querySuccessfullyExecuted + "  rowsInserted=" + rowsInserted + "]" ; }
tr	7	private MqttPublish createPublish ( MqttMessage message ) { return new MqttPublish ( this . getName ( ) , message ) ; }
tr	4	public List < ScheduleElementImpl > getScheduleElements ( ) { return scheduleElements ; }
tr	9	public static NEQ NEQ ( NumericExpression expression1 , Number number ) { return new NEQ ( expression1 , new const ( number ) ) ; }
tr	6	public static synchronized SondageDao getInstance ( ) { if ( instance == null ) instance = new SondageDao ( ) ; return instance ; }
tr	2	public static boolean isCreateServer ( ) { return createServer ; }
tr	5	public void setStart ( Date start ) { this . start = start ; }
tr	2	short getNumber ( ) { return number ; }
tr	3	public String getInfo ( ) { return info ; }
tr	6	@ Override public void act ( ) { System . out . println ( "Action: " + actionText ) ; }
tr	3	public String getIconHref ( ) { return iconHref ; }
tr	8	@ Test public void shouldChoosePresentTwoObtain200InPoints ( ) { player . chooseGift ( 2 ) ; assertThat ( player . getPoints ( ) , is ( 200 ) ) ; }
tr	2	public long getMinInterval ( ) { return minInterval ; }
tr	4	public ArrayList < Integer > getADiceResults ( ) { return aDiceResults ; }
tr	6	public int lastIndexOf ( AS as ) { return this . path . lastIndexOf ( as ) ; }
tr	5	public void saveSetting ( String settingName , String settingValue ) { }
tr	9	public TestIdComboBoxListener ( JComboBox testIdComboBox , CloudPanel cloudPanel ) { this . testIdComboBox = testIdComboBox ; this . cloudPanel = cloudPanel ; }
tr	7	public K getKey ( V value ) { return valueToKey . get ( value ) ; }
tr	9	@ Override public void get ( byte [ ] buffer ) { bt . copy ( struct , 0 , buffer , 0 , struct . length ) ; }
tr	5	public BitOutputStream ( OutputStream out ) { this . out = out ; }
tr	1	public Audio ( ) { }
tr	2	public int getIdp ( ) { return this . idp ; }
tr	7	private void visitEdge ( Edge e ) { System . out . println ( "Visiting edge " + e ) ; }
tr	8	@ Override public MyDatabase getSgd ( ) { if ( client == null ) { return SgdBase . getSgd ( ) ; } else { return client . getSgd ( ) ; } }
tr	2	public int getTicksMissed ( ) { return ticksMissed ; }
tr	8	public static String groupDigits ( long l , String grouper ) { return groupDigits ( l , ( byte ) 3 , grouper ) ; }
tr	3	public String getFarmacia ( ) { return farmacia ; }
tr	6	public void componentAdded ( ContainerEvent e ) { addKeyAndContainerListenerRecursively ( e . getChild ( ) ) ; }
tr	2	@ Override public void reset ( ) { }
tr	7	public void updatePositionWithStep ( int step ) { position = PositionUpdate . getCurrentPositionWithDistance ( position , step ) ; }
tr	5	public void setEngine ( PresidentialRescue game ) { this . game = game ; }
tr	3	public String getSku ( ) { return sku ; }
tr	6	public void setBGImage ( String bgimg ) { el . setBGImage ( bgimg , 0 , true , true ) ; }
tr	7	public Node ( String data ) { this . left = null ; this . right = null ; this . data = data ; }
tr	1	public SingleEvent ( ) { }
tr	2	public int getIdClase ( ) { return idClase ; }
tr	7	@ Override public boolean containsValue ( Object value ) { return map . containsValue ( value ) ; }
tr	6	public boolean attack ( Position target ) { return attack_native ( pointer , target ) ; }
tr	2	public int getDelay ( ) { return delay ; }
tr	2	public int getDdd ( ) { return ddd ; }
tr	6	@ Override public void actionPerformed ( ActionEvent e ) { myWindow . changePenColor ( ) ; }
tr	7	@ Override public double get ( int col , int row ) { return this . matrix [ row ] [ col ] ; }
tr	10	public Vec2f op ( vvOpV < Vec2f > operator , Vec2f operand2 ) { return operator . performOp ( this , operand2 ) ; }
tr	6	@ Inject private void setPrivateMethod ( Aaa privateMethod ) { this . privateMethod = privateMethod ; }
tr	1	public SyncDispatch ( ) { super ( ) ; }
tr	4	public void land ( ) { System . out . println ( "Eagle: land" ) ; }
tr	1	public PoblacioTest ( ) { }
tr	8	public static void main ( String [ ] args ) { Animate gui = new Animate ( ) ; gui . go ( ) ; }
tr	1	public HiloBean ( ) { }
tr	5	public Edge getEdge ( int index ) { return edges [ index ] ; }
tr	4	public void setVn ( int vn ) { this . vn = vn ; }
tr	1	protected GamePanel ( ) { super ( ) ; }
tr	4	@ Override public void Lands ( Player P ) { }
tr	3	@ Override public boolean isProducing ( ) { return isProducing ; }
tr	10	public void log ( final Object data ) { if ( timeStamped ) { this . log ( logType , data ) ; } else { this . logTimeless ( logType , data ) ; } }
tr	4	public Collection < String > getCategories ( ) { return categories ; }
tr	10	@ Override public void init ( Headquater hq ) { super . init ( hq ) ; sp = InsightShortestPath . require ( hq ) ; }
tr	5	public void updateUI ( ) { this . editorPane . getSelectedComponent ( ) . repaint ( ) ; this . updateInspector ( ) ; }
tr	9	public boolean getPoint ( int x , int y , double [ ] xyz ) { return render . getPoint ( x , y , xyz ) ; }
tr	6	public void selectNone ( ) { for ( Mark mark : marks ) { mark . setSelected ( false ) ; } }
tr	6	public RowMapperClobFieldConfigBuilder field ( Field field ) { this . field = field ; return this ; }
tr	6	@ Override public void accept ( FSPSpecVisitor v ) { v . visit ( this ) ; }
tr	5	public void setHandler ( ClientHandler handler ) { this . handler = handler ; }
tr	7	public static void input ( float delta ) { if ( nextScene != null ) { updateLoadScene ( ) ; } rootNode . input ( delta ) ; }
tr	9	public BinaryTree ( K key , V value ) { this . key = key ; this . value = value ; }
tr	2	public static boolean isCreateClient ( ) { return createClient ; }
tr	5	public void request ( ) { lobby . joinGame ( view . getSelectedRow ( ) ) ; }
tr	10	public void write ( String str ) throws IOException { indent ( ) ; myWriter . write ( str ) ; myWriter . write ( "\n" ) ; }
tr	8	@ Override public void updateAsciiStream ( String columnLabel , InputStream x , long length ) throws SQLException { }
tr	10	public static void $$$operadorNewChamada2 ( mContext m$ ) { m$ . newVar ( m$ . var ( "pedido" ) ) ; m$ . var ( "pedido" ) . set ( "chamada2" ) ; }
tr	6	private String score ( ) { return PLAYER_1 + ": " + player1Score + "  " + PLAYER_2 + ": " + player2Score ; }
tr	8	private void cancelButtonActionPerformed ( java . awt . event . ActionEvent evt ) { viewController . tanca ( ) ; }
tr	10	public WIBrowser login ( String name , String password ) { getLoginDialog ( ) . login ( name , password ) ; return this ; }
tr	9	public QueueJobs ( String queueName , JQlessClient client ) { this . _queueName = queueName ; this . _client = client ; }
tr	9	public void setData ( byte [ ] data ) { this . data = data ; if ( data == null ) dataLength = 0 ; else dataLength = data . length ; }
tr	5	public void setEstudis ( String estudis ) { this . estudis = estudis ; }
tr	4	@ Override public String getVarName ( ) { return this . name ; }
tr	2	public int hashCode ( ) { return super . hashCode ( ) ; }
tr	2	public int getRating ( ) { return rating ; }
tr	2	private ImageIcon getImageIcon ( ) { return null ; }
tr	7	public StationVoisine ( ControleurStationVoisine aThis ) { initComponents ( ) ; ctrlSV = aThis ; this . setLocationRelativeTo ( null ) ; }
tr	7	public String format ( int season ) { return String . format ( format , season ) ; }
tr	1	public boolean key_need ( ) { return false ; }
tr	3	public Color getForeground ( ) { return this . foreground ; }
tr	1	protected int size ( ) { return 5 ; }
tr	7	protected ControlAcceso ( Empresa e ) { this . empresa = e ; this . usuarioActivo = null ; this . inicioSistema = false ; }
tr	2	public ConnectionManager ( ) { super ( ConnectionListener . class ) ; }
tr	8	@ After public void tearDown ( ) throws Exception { busch . stop ( ) ; if ( tcpNet != null ) tcpNet . close ( ) ; }
tr	6	public void actionPerformed ( ActionEvent ex ) { dispose ( ) ; new SimonMenu ( ) . setVisible ( true ) ; }
tr	9	public CalendarEventManager ( String headerText , String icon ) { this . headerText = headerText ; this . icon = icon ; }
tr	3	public boolean isCheckBoxSelected ( ) { return analysisFinishedIndicator . isSelected ( ) ; }
tr	1	public Attribute ( ) { }
tr	1	public Os ( ) { }
tr	5	double getRight ( ) { return origin . x + size . x ; }
tr	7	public int compareTo ( Accession a ) { return name . compareTo ( a . name ) ; }
tr	9	public void moveTo ( int newX , int newY ) { setX ( getX ( ) + newX ) ; setY ( getY ( ) + newY ) ; }
tr	8	@ After public void tearDown ( ) throws Exception { graph . remove ( ) ; graph = null ; quadtree = null ; map = null ; }
tr	7	public Waypoint ( double x , double y ) { this ( ) ; position = new Vec ( x , y ) ; }
tr	8	public void setController ( Controller ctrl ) { this . ctrl = ctrl ; jPanelGPSConfigScaleMap . setController ( ctrl ) ; }
tr	4	public void setBlocSize ( int t ) { m_t = t ; }
tr	2	public String getSrcText ( ) { return "" ; }
tr	6	public static String getUserSize ( int UsId ) { String sUserSize = "198" ; return sUserSize ; }
tr	1	protected RSession ( ) { }
tr	3	public EvaluationType getEvaluationType ( ) { return evaluationType ; }
tr	1	public Passenger ( ) { }
tr	1	public void play ( ) { }
tr	5	BuildResults ( MultiServerMultiQueueSystem mysys ) { sys = mysys ; }
tr	3	public TrickPhaseState getTrickPhaseState ( ) { return this . trickPhaseState ; }
tr	5	public void changeToRecordMode ( ) { startRecord ( ) ; mode = Mode . RECORDING ; }
tr	5	@ Override public void readFully ( byte [ ] b ) throws IOException { throw new NotImplementedException ( ) ; }
tr	3	public int getRowCount ( ) { return data . length ; }
tr	8	public JSONArray put ( Collection < Object > value ) { this . put ( new JSONArray ( value ) ) ; return this ; }
tr	5	public void setIdProfesor ( String idProfesor ) { this . idProfesor = idProfesor ; }
tr	4	public void setMaxMwt ( float value ) { this . maxMwt = value ; }
tr	5	public Chara getMyDog ( ) { return _dogs . get ( _index ) ; }
tr	7	public static < T > void checkNotEmptyOrNull ( T [ ] reference ) { checkNotEmptyOrNull ( reference , "Reference is " + reference == null ? " null" : " empty" ) ; }
tr	4	public ExtensionException ( String arg0 ) { super ( arg0 ) ; }
tr	6	public SimpleProcess ( ProcessAction pa ) { daemon = false ; this . pa = pa ; }
tr	9	public OptionButton ( String text , Dimension dim ) { super ( text , dim ) ; setPreferredSize ( dim ) ; }
tr	9	@ Override public void actionPerformed ( ActionEvent e ) { update ( e ) ; if ( updated ( ) ) { lastUpdate = new Date ( ) ; } }
tr	6	void sendMessage ( String msg ) { sendQueue . add ( msg ) ; }
tr	5	public List < double > getBestSolution ( ) { return swarm . getBestParticle ( ) . getBestLocation ( ) ; }
tr	2	public STA ( ) { start ( ) ; }
tr	6	public static String getProxyPassword ( String password ) { return getProperty ( "tblog4j.http.proxyPassword" , password ) ; }
tr	1	public Region ( ) { }
tr	9	public PlanBB ( int nc , String n , boolean fs ) { super ( nc , n ) ; fullSocial = fs ; }
tr	3	public void removeTreeModelListener ( TreeModelListener l ) { }
tr	5	public void setCodpostal ( String codpostal ) { this . codpostal = codpostal ; }
tr	10	public UserInfo byEmail ( String email ) { try { return users . byEmail ( email ) . getInfo ( ) ; } catch ( NoEmailException e ) { return null ; } }
tr	2	public int getUserScore ( ) { return userScore ; }
tr	5	public poison ( SimpleExtras plugin ) { this . plugin = plugin ; }
tr	7	@ Override public void mouseWheelMoved ( MouseWheelEvent e ) { zoom ( e . getWheelRotation ( ) < 0 ) ; }
tr	7	public ActionList ( boolean loop ) { this . actions = new LinkedList < Action > ( ) ; this . loop = loop ; }
tr	4	@ Override public void windowDeactivated ( WindowEvent e ) { }
tr	2	public Connection getConnection ( ) { return this ; }
tr	6	public static boolean isEmpty ( CharSequence s ) { return s == null || s . length ( ) == 0 ; }
tr	4	public final boolean isOverride ( ) { return ( flags & ACC_OVERRIDE ) == ACC_OVERRIDE ; }
tr	9	public float length ( ) { return ( float ) Math . sqrt ( x * x + y * y + z * z ) ; }
tr	2	public static int getFoxBreedingAge ( ) { return BREEDING_AGE ; }
tr	5	public void setValue ( final String value ) { this . value = value ; }
tr	3	public int length ( ) { return this . map . size ( ) ; }
tr	10	public void store ( List < StrawEventHandler > handlers ) { if ( handlers == null ) { return ; } for ( StrawEventHandler handler : handlers ) { this . store ( handler ) ; } }
tr	7	@ Override public void gameFinished ( Player winnerPlayer , List < Player > players ) { }
tr	9	public void setHeader ( final String name , final Iterable < ? > values ) { headers . setHeader ( name , values ) ; }
tr	6	public int getBoton ( Botones boton ) { return this . boton . get ( boton ) ; }
tr	10	public StringBuilder display ( StringBuilder currentCode , CrossRef table ) { return currentCode . append ( pdfShortHeader ( ) ) . append ( "[ /PDF /Text ]\nendobj\n" ) ; }
tr	7	public NewCounts getNewCounts ( ) throws TBlogException { return new NewCounts ( http . get ( getBaseURL ( ) + "statuses/check.json" , true ) ) ; }
tr	6	private void option2ActionPerformed ( java . awt . event . ActionEvent evt ) { }
tr	7	@ Override public void setNature ( Nature nature ) { this . nature = nature ; reCalcStats ( ) ; }
tr	10	private void init ( ) { this . classCount = new HashMap < Object , double > ( ) ; this . ke = new HashMap < Object , HashMap < Integer , KernelEstimator >> ( ) ; }
tr	3	public int getSongCount ( ) { return getFirstFreeEntryOffset ( ) / SONG_ENTRY_SIZE ; }
tr	3	public final String getAlbumArtist ( ) { return albumArtist ; }
tr	1	private DateResultSetMapper ( ) { }
tr	5	public void setIndId ( Integer indId ) { this . indId = indId ; }
tr	3	public Player [ ] getPlayers ( ) { return this . players ; }
tr	5	private void zero ( ) throws JSONException { if ( probe ) { log ( 0 ) ; } write ( 0 , 1 ) ; }
tr	10	public Maquina ( String nome , TipoCorJogador cor , TipoJogador tipoJogador ) { super ( nome , cor , tipoJogador ) ; }
tr	8	@ Override public TO_VALUE put ( KEY key , TO_VALUE value ) { throw new UnsupportedOperationException ( ) ; }
tr	4	public void setEarlyStopping ( final boolean value ) { this . earlystop = value ; }
tr	1	public GenderBean ( ) { super ( ) ; }
tr	5	public static void resetTestVars ( ) { calledMakePixel = false ; makePixelR = - 1 ; makePixelG = - 1 ; makePixelB = - 1 ; }
tr	5	public void setRootNodePrefix ( String rootNodePrefix ) { this . rootNodePrefix = rootNodePrefix ; }
tr	6	public void setHabs ( Set < TipusHabInformation > habs ) { this . habs = habs ; }
tr	6	public boolean addGCMKey ( String key ) { return gcmKeys . add ( key ) ; }
tr	4	public void setProjectId ( int projectId ) { this . projectId = projectId ; }
tr	10	public CharacterDimensions ( int width , int height , int lineSpacing ) { m_width = width ; m_height = height ; m_lineSpacing = lineSpacing ; }
tr	1	public ClearQuizServlet ( ) { super ( ) ; }
tr	1	public AlphebeticFilter ( ) { this ( false ) ; }
tr	5	public String toString ( ) { return isEndOfTurn ( ) ? "[Move end of turn]" : "[Move " + attackingCountry + " attacks " + defendingCountry + "]" ; }
tr	2	public boolean finishWrite ( ) { return this . fileSizeLeft > 0 ? false : true ; }
tr	7	@ Subscribe public void handleAnalyzingStateEnterEvent ( AnalyzingStateEnterEvent event ) { displayLetter ( event . getCurrentWord ( ) ) ; }
tr	10	public void setHttpProxy ( String proxyHost , int proxyPort ) { http . setProxyHost ( proxyHost ) ; http . setProxyPort ( proxyPort ) ; }
tr	2	public int getMinuteTickMarkFrequency ( ) { return minuteTickMarkFrequency ; }
tr	2	public long getDocumentAuthorId ( ) { return documentAuthorId ; }
tr	4	@ Override public void removeListDataListener ( ListDataListener arg0 ) { }
tr	10	public void append ( float af [ ] ) { for ( int i = 0 ; i < af . length ; i ++ ) append ( af [ i ] ) ; }
tr	6	public boolean inGameStateNextFrame ( String state ) { return el . inGameStateNextFrame ( state ) ; }
tr	10	public void initFrame ( ) { super . initFrame ( ) ; setTitle ( "Show Class Attendance Report" ) ; mainPanel . setLayout ( ( LayoutManager ) new BoxLayout ( mainPanel , BoxLayout . PAGE_AXIS ) ) ; }
tr	6	public void addCritere ( Critere c ) { criteres . add ( c ) ; }
tr	1	public Turn ( ) { }
tr	6	public void setCenters ( List < List < double >> centers ) { this . centers = centers ; }
tr	3	void start ( ) { cBg . start ( ) ; }
tr	1	public MassInertia ( ) { }
tr	6	public synchronized void registerPlayerListener ( AllPlayerStepListener listener ) { listeners . add ( listener ) ; }
tr	4	public double getMinLon ( ) { if ( _minLon == null ) calcExtremes ( ) ; return _minLon ; }
tr	1	private Singleton ( ) { }
tr	10	public void setNodeID ( String newNodeID ) { this . nodeID = newNodeID ; this . xmlTools = new SSAP_XMLTools ( ) ; this . xmlTools . nodeID = newNodeID ; }
tr	8	private void btnAjouterActionPerformed ( java . awt . event . ActionEvent evt ) { this . ajouterComp ( ) ; afficherNoyauFonctionnel ( ) ; }
tr	4	public MsgSubject ( ) { this . observers = new ArrayList < Observer > ( ) ; }
tr	9	public Entry ( K key , V value ) { this . key = key ; this . value = value ; }
tr	5	protected PropertyAdaptorImpl ( FODriverImpl driver ) { super ( driver , TYPE ) ; }
tr	4	public void setCosto ( double costo ) { this . costo = costo ; }
tr	9	void setField ( String className , String fieldName ) { this . className = className ; this . fieldName = fieldName ; }
tr	4	public void setEventType ( int eventType ) { this . eventType = eventType ; }
tr	2	public double getEnd ( ) { return end ; }
tr	2	public void populateWorld ( ) { setUpBox2D ( ) ; }
tr	5	public InputStream getAsciiStream ( int columnIndex ) throws SQLException { throw new UnsupportedOperationException ( "Not supported yet." ) ; }
tr	2	public int getShieldExpireStamp ( ) { return this . shieldExpireStamp ; }
tr	10	public GizmoAboutBox ( java . awt . Frame parent ) { super ( parent ) ; initComponents ( ) ; getRootPane ( ) . setDefaultButton ( closeButton ) ; }
tr	10	public void addBifPointers ( CellElement e1 , CellElement e2 ) { PairCellList . add ( new NCellPair ( e1 , e2 ) ) ; }
tr	8	public void markForUpdateByPixel ( int pixelX , int pixelY ) { markForUpdate ( pixelX / tileDim , pixelY / tileDim ) ; }
tr	4	public void onAttack ( AttackComponent p ) { if ( ! dead ) { } }
tr	7	public MultiByteInteger ( long value , int length ) { this . value = value ; this . length = length ; }
tr	1	public static boolean isSigned_interval ( ) { return false ; }
tr	3	public String getCategoria ( ) { return categoria ; }
tr	10	@ Override public String getInfo ( ) { return "Name: " + getPart ( ) . name ( ) + "\n Identifier: " + name + "\n Length: " + getLength ( ) + ":0x" + String . format ( "%04X" , getLength ( ) ) ; }
tr	1	SecretarAddMaterie ( ) { }
tr	2	public static synchronized void InitSTA ( ) { InitSTA ( false ) ; }
tr	7	public List < Association > getOneToOne ( ) { return getAssociations ( Association . Multiplicity . OneToOne ) ; }
tr	8	@ Override public LogicalArea getChildArea ( int index ) throws ArrayIndexOutOfBoundsException { return ( LogicalArea ) getChildAt ( index ) ; }
tr	5	public String getGui_label ( ) { return otapiJNI . Acct_gui_label_get ( swigCPtr , this ) ; }
tr	9	@ Override public T visitBlock ( @ NotNull DecafParser . BlockContext ctx ) { return visitChildren ( ctx ) ; }
tr	1	public ExpreList ( ) { }
tr	3	public String getIsExternalReference ( ) { return isExternalReference ; }
tr	6	public SWIGTYPE_p_uint32_t getPasswordSize ( ) { return new SWIGTYPE_p_uint32_t ( otapiJNI . OTPassword_getPasswordSize ( swigCPtr , this ) , true ) ; }
tr	7	private static void log ( String message ) { if ( DEBUG ) { log . debug ( message ) ; } }
tr	4	public byte getRegisteredDelivery ( ) { return byte . parseByte ( "0" + registeredDelivery . getText ( ) , 10 ) ; }
tr	1	public void inorder_testIncomplete3LevelTree ( ) { }
tr	3	public boolean targetsAir ( ) { return targetsAir_native ( pointer ) ; }
tr	8	public void openCompetitionFrame ( Competition competition ) { this . competition . setCompetition ( competition ) ; this . competition . openFrame ( ) ; }
tr	9	public ReceiverPDU ( PDUHeader header ) { super ( header ) ; if ( header . getPDUType ( ) != PDUType . RECEIVER ) throw new IllegalStateException ( "Invalid PDUType in Header" ) ; }
tr	1	public boolean isCheckBoxSelected ( ) { return false ; }
tr	1	public SuggestionText ( ) { }
tr	2	public boolean isSplitting ( ) { return split ; }
tr	5	public BattleShipClient ( BattleShipProtocol parent ) { this ( ) ; this . parent = parent ; }
tr	8	public void addTexture ( Texture texture ) { textures . put ( texture . getName ( ) , texture ) ; }
tr	1	public CtrlHotelTest ( ) { }
tr	6	public DisallowCommand ( ) { super ( "Disallow Player" ) ; setDescription ( "Removes a player from a group" ) ; setUsage ( "/ctdisallow \u00A78<group-name> <player-name>" ) ; setArgumentRange ( 2 , 2 ) ; setIdentifiers ( new String [ ] { "ctdisallow" , "ctd" } ) ; }
tr	8	public JGPoint getImageSize ( String imgname ) { return ( JGPoint ) image_orig_size . get ( imgname ) ; }
tr	1	public EstadoEditable ( ) { }
tr	9	public EventUndoListener ( Console console , Entry entry ) { this . console = console ; this . entry = entry ; }
tr	3	public Aaa getPrivateMethod ( ) { return privateMethod ; }
tr	8	public static StrategyCoward require ( Personality ps ) { return ( StrategyCoward ) ps . requireStrategy ( new StrategyCoward ( ) ) ; }
tr	9	public synchronized Environment addFullGlobalTree ( Object g ) { iterateDeep ( g , deepGlobalSetter ) ; return addGlobalInstance ( g ) ; }
tr	5	private Role ( Strategy s ) { associatedStrategy = s ; }
tr	10	@ Override protected void setUp ( ) throws Exception { weatherData = new WeatherData ( ) ; display = new CurrentConditionsDisplay ( ) ; weatherData . addObserver ( display ) ; }
tr	2	public double getTimePressed ( ) { return timePressed ; }
tr	7	public void set ( int x , int y ) { grid [ maxx * y + x ] = 1 ; }
tr	5	public void setDescricao ( String descricao ) { this . descricao = descricao ; }
tr	4	public int getValor ( ) { return Integer . parseInt ( getText ( ) ) ; }
tr	6	public void addDependantNode ( Task task ) { dependentNodes . add ( task ) ; }
tr	3	public void setRecursiveNotDirty ( ) { super . setRecursiveNotDirty ( ) ; this . isWidthDirty = false ; }
tr	10	@ Override public void setPosicion ( int x , int y ) { this . posicion . x = x ; this . posicion . y = y ; }
tr	1	private AddressFactory ( ) { }
tr	6	public void setSide ( AList < Song > s ) { this . songs = s ; }
tr	10	public JFrameGUI ( ) { initComponents ( ) ; musicTime . setDisplays ( measureDisplay , beatDisplay , tempoDisplay ) ; new Timer ( ) ; new Console ( ) ; new WSSListener ( ) ; }
tr	5	protected BooleanBean create ( boolean value ) { return new BooleanBean ( value ) ; }
tr	9	public static Soundmanager getInstance ( ) { if ( Soundmanager . instance == null ) { Soundmanager . instance = new Soundmanager ( ) ; } return Soundmanager . instance ; }
tr	9	public Housewife ( String HousewifeName , Messenger messenger ) { this . HousewifeName = HousewifeName ; messenger . registerClient ( this ) ; }
tr	9	public Object opt ( int index ) { return ( index < 0 || index >= this . length ( ) ) ? null : this . myArrayList . get ( index ) ; }
tr	1	public SendBox ( ) { super ( ) ; }
tr	4	public String getLogName ( ) { return CommunicatorTest . class . getName ( ) ; }
tr	8	@ Override public T pop ( ) { if ( isEmpty ( ) ) throw new EmptyStackException ( ) ; top -- ; return dElements [ top ] ; }
tr	10	protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { this . doPost ( request , response ) ; }
tr	6	public DefaultSSLWebSocketClientFactory ( SSLContext sslContext ) { this ( sslContext , Executors . newSingleThreadScheduledExecutor ( ) ) ; }
tr	8	public List < EWICBalInfoGrp > getEWICBalInfoGrp ( ) { if ( ewicBalInfoGrp == null ) { ewicBalInfoGrp = new ArrayList < EWICBalInfoGrp > ( ) ; } return this . ewicBalInfoGrp ; }
tr	8	protected void installHandler ( YSAXHandler o ) { this . handlers . add ( o ) ; o . installParent ( this ) ; }
tr	10	private void formWindowClosing ( java . awt . event . WindowEvent evt ) { parent . setEnabled ( true ) ; parent . setVisible ( true ) ; }
tr	5	private void incrementAge ( ) { age ++ ; if ( age > MAX_AGE ) { setDead ( ) ; } }
tr	8	public boolean delete ( ) { try { return file . delete ( ) ; } catch ( NullPointerException e ) { System . out . println ( "COnfigure el archivo primero" ) ; } return false ; }
tr	5	public void setNome ( String nome ) { this . nome = nome ; }
tr	7	public void InitGUI ( ) { this . setPreferredSize ( new Dimension ( 120 , 120 ) ) ; this . setText ( this . carte . obtenirNom ( ) ) ; this . addActionListener ( this ) ; }
tr	3	public int numberOfPhotosBelongingTo ( ) { return this . photosInAlbum . size ( ) ; }
tr	4	public void setUserId ( long userId ) { this . userId = userId ; }
tr	1	protected AbstractInstanciator ( ) { }
tr	10	public Object unserialize ( String s ) throws IOException { return ( s == null || s . length ( ) == 0 ) ? null : new Integer ( s ) ; }
tr	10	public boolean isInCircum ( Vector v ) { v = v . subtract ( circumCenter ) ; return v . lengthSquared ( ) <= rSquared ; }
tr	3	public Node23 getRightchild ( ) { return rightchild ; }
tr	1	protected void setupInitialState ( ) { }
tr	7	public T getEntity ( int index ) { return ( T ) entityList . get ( index ) ; }
tr	6	public int getMenuID ( MenuClass menu ) { return menuDB . getMenuID ( menu ) ; }
tr	5	public boolean isAlive ( ) { return ( Globals . gameTime . getElapsedMillis ( ) < this . expirationTime ) ; }
tr	4	public void setRunning ( boolean state ) { running = state ; }
tr	9	public Turn ( int type , ArrayList < Vector2 > result ) { this . type = type ; this . hits = result ; }
tr	5	public void setClientSocket ( Socket sock ) { this . sock = sock ; }
tr	6	public List < Accession > getBestCore ( ) { return population . get ( 0 ) . getCore ( ) ; }
tr	5	public void setUserPassword ( String userPassword ) { this . userPassword = userPassword ; }
tr	1	public void getNewAbility ( ) { }
tr	8	public void setHasSelectedTrain ( boolean hasSelectedTrain ) { this . hasSelectedTrain = hasSelectedTrain ; if ( ! hasAlreadyChangedCriteria ) { f_pdvWay = - 1 ; listPointToDraw = null ; fireModelGPSChanged ( 6 ) ; } }
tr	7	private void init ( ) { table_fullticket . getColumnModel ( ) . getColumn ( 2 ) . setCellRenderer ( new ImageRenderer ( ) ) ; initTable ( ) ; }
tr	8	public Biblioteca ( ) { try { new File ( "library" ) . mkdir ( ) ; rBooks = new RandomAccessFile ( "library/books.boo" , "rw" ) ; reloadList ( ) ; } catch ( IOException e ) { } }
tr	5	public synchronized List getList ( ) { return ( List ) completedThreads . clone ( ) ; }
tr	9	public int getIntComponent1 ( int x , int y ) { return Colors . getG ( img . getRGB ( x , y ) ) ; }
tr	7	public void addFirst ( Object o ) { addBefore ( o , header . next ) ; }
tr	10	public String getAbsolutePath ( Object pkg_obj , String filename ) { return el . getAbsolutePath ( pkg_obj , filename ) ; }
tr	4	public AccessDeniedException ( String message ) { super ( message ) ; }
tr	3	public Date getDTransactionDate ( ) { return dTransactionDate ; }
tr	5	public void setSeminarDAO ( SeminarDAO seminarDAO ) { this . seminarDAO = seminarDAO ; }
tr	4	public FiltroSaldoMenorQue100Reais ( Filtro outroFiltro ) { super ( outroFiltro ) ; }
tr	4	@ Override public void processLoan ( ) { loanMediator . askForLoan ( ) ; }
tr	10	@ Override public String toString ( ) { return "LED '" + textOn + "' " + AddrTranslator . getAdrString ( eibObj [ 0 ] ) + " " + AddrTranslator . getAdrString ( eibObj [ 1 ] ) ; }
tr	9	RequestToken ( Response res , HttpClient httpClient ) throws TBlogException { super ( res ) ; this . httpClient = httpClient ; }
tr	7	public String getUpdateID ( String xml ) { return getParameterElement ( xml , "name" , "update_id" ) . getValue ( ) ; }
tr	4	public void setAddressId ( int value ) { addressId = value ; }
tr	3	public void display ( ) { dllist . printDLList ( ) ; }
tr	6	public static BasicRelation getEquivalenceRelation ( ) { BasicRelation rel = new BasicRelation ( "=" ) ; return rel ; }
tr	2	public boolean isStarted ( ) { return started ; }
tr	4	public void setIFeedTransactionId ( int feedTransactionId ) { iFeedTransactionId = feedTransactionId ; }
tr	4	public void setAno ( int ano ) { this . ano = ano ; }
tr	10	public boolean setGroup ( String newGroup ) { if ( Group . existGroup ( newGroup ) ) { group = newGroup . toLowerCase ( ) ; dirty = true ; return true ; } return false ; }
tr	3	int getBlockSize ( ) { return topFrame ( ) . getBlockSize ( ) ; }
tr	5	public PackedWorld ( PackedWorld prev ) { super ( prev ) ; cells = 0 ; }
tr	9	@ Override @ Transactional ( propagation = Propagation . SUPPORTS ) public Sound find ( String s ) { return null ; }
tr	2	void clear ( ) { stack = "" ; }
tr	3	public Date getFechaIngreso ( ) { return fechaIngreso ; }
tr	9	@ Override public void exitRule ( ParseTreeListener listener ) { if ( listener instanceof EnquantoListener ) ( ( EnquantoListener ) listener ) . exitExiba ( this ) ; }
tr	5	public void setMonth ( Date month ) { this . month = month ; }
tr	2	public DriverLogin ( ) { initComponents ( ) ; }
tr	4	public void setEdat ( int edat ) { this . edat = edat ; }
tr	2	public String toString ( ) { return "a group" ; }
tr	7	public static SchemeObject caar ( SchemeObject obj ) { return car ( car ( obj ) ) ; }
tr	2	public IITURLTrack ( ) { super ( componentName ) ; }
tr	9	private static void handleSystemProperties ( ) { Properties sysprops = System . getProperties ( ) ; sysprops . list ( System . out ) ; }
tr	5	Messages ( String message ) { this . message = message ; }
tr	10	AdderBox ( SynthCanvas pa ) { super ( pa , IDENT ) ; Input in = new Input ( this , null , false , true , false ) ; addInput ( in ) ; }
tr	6	@ Override public void update ( long elapsedTime ) { playfield . update ( elapsedTime ) ; }
tr	7	private void miEditarActionPerformed ( java . awt . event . ActionEvent evt ) { desbloquearCampos ( ) ; }
tr	8	protected void log ( String message ) { System . out . println ( toString ( ) + ": " + message ) ; }
tr	5	public void setChosenAnswer ( String chosenAnswer ) { this . chosenAnswer = chosenAnswer ; }
tr	4	public boolean isPause ( int f ) { return pauseData [ f ] ; }
tr	1	protected UnknownFileTyp ( ) { super ( false ) ; }
tr	2	public int getTotalBits ( ) { return totalBits ; }
tr	3	private boolean testStandardTypes ( ) { return testToken ( STANDARD_TYPES ) ; }
tr	5	private static void assertNotNull ( Object o ) { if ( o == null ) { throw new RuntimeException ( "expected no null value" ) ; } }
tr	1	public Randomizer ( ) { }
tr	1	static final public void enable_tracing ( ) { }
tr	1	public StringObject ( ) { this ( "" ) ; }
tr	6	public static GTHome getHome ( ) { if ( home == null ) home = new GTHomeImpl ( ) ; return home ; }
tr	8	public Integer executeHql ( String hql ) { return this . getCurrentSession ( ) . createQuery ( hql ) . executeUpdate ( ) ; }
tr	8	public boolean teclaPresionada ( ) { for ( EstadoTecla estado : teclas . values ( ) ) { if ( estado == EstadoTecla . PRESIONADA ) return true ; } return false ; }
tr	3	public boolean stop ( ) { return stop_native ( pointer ) ; }
tr	5	String stringifyRoads ( ) { return BitSetPorter . bitsToString ( roads ) ; }
tr	2	public boolean regenerates ( ) { return this == REGENERATOR ; }
tr	8	Type getType ( ) { return type == Type . kAny ? Type . kBase : type ; }
tr	6	public Map < String , Download > getSessionDownloads ( ) { synchronized ( sessionDownloads ) { return sessionDownloads ; } }
tr	4	public NumberCode ( byte [ ] base ) { super ( base ) ; this . code = 0 ; }
tr	2	public boolean getShowTotalPayoff ( ) { return showTotalPayoff ; }
tr	1	public VersionValueCreator ( ) { super ( ) ; }
tr	10	public void keyPressed ( int key , char c ) { super . keyPressed ( key , c ) ; switch ( key ) { case Input . KEY_ESCAPE : paused = false ; break ; } }
tr	7	DataFile ( File file , int number ) throws IOException { this ( file , number , false ) ; }
tr	6	@ Test public void testMovelNl2 ( ) { write ( "hello\nmister\njohn doe" ) ; cursor . movel ( "\nmister\njohn doe" , 0 ) ; assertPosition ( "-:l1:c5" ) ; }
tr	2	public int getMin ( ) { return min ; }
tr	8	public void eliminarItem ( ) { if ( ConexionServidor . estaConectado ( ) ) { comando = new EliminarItem ( ) ; setMomento ( ) ; } else Inventario . setStatusBarText ( "No esta conectado!!!" ) ; }
tr	9	public DebugCheckboxAction ( ) { super ( TITLE_DEBUG , DESC_DEBUG , MNEMONIC_DEBUG , ICON_SMALL_DEBUG , null , ACCELERATOR_DEBUG ) ; putValue ( SELECTED_KEY , debugMode ) ; }
tr	4	public HelpDeskMainFrame ( ) { initComponents ( ) ; landingPage . setVisible ( false ) ; }
tr	8	public static String rectify ( String text ) { return text . toLowerCase ( ) . replaceAll ( "v" , "u" ) . replaceAll ( "j" , "i" ) ; }
tr	10	public void addClient ( InetAddress a , String cmnty ) { clients . add ( new Client ( a , cmnty ) ) ; }
tr	10	public String getPwmAString ( ) { return new String ( String . format ( "%d%c" , pwmA . getData ( ) , DecimalFormatSymbols . getInstance ( ) . getPercent ( ) ) ) ; }
tr	7	@ Override public Tipo validarSemantica ( ) { return InfSemantica . getInstancia ( ) . tablaTipos . get ( "int" ) ; }
tr	10	public void dim ( int level ) { this . level = level ; if ( level == 0 ) { off ( ) ; } else { System . out . println ( "Light is dimmed to " + level + "%" ) ; } }
tr	6	public void setAdmins ( ArrayList < Administrator > a ) { this . admins = a ; }
tr	4	public void setHeight ( int height ) { this . height = height ; }
tr	10	@ Override public boolean evaluate ( T t ) { if ( firstSearchString . evaluate ( t ) && secondSearchString . evaluate ( t ) ) { return true ; } else { return false ; } }
tr	3	public Device getDevice ( ) { return dev ; }
tr	10	public void snapToGrid ( JGPoint p , int gridsnapx , int gridsnapy ) { el . snapToGrid ( p , gridsnapx , gridsnapy ) ; }
tr	6	public void defineMedia ( String filename ) { el . defineMedia ( this , filename ) ; }
tr	7	public Synapse ( INeuron presynaptic , INeuron postsynaptic ) { this ( presynaptic , postsynaptic , 0 ) ; }
tr	10	public NotebookCurrentMonthPanelView ( NotebookCurrentMonthPanelController controller , Logger logger ) { super ( logger ) ; this . controller = controller ; initComponents ( ) ; setPanel ( ) ; }
tr	10	public boolean canUseTechPosition ( TechType tech , boolean checkCanIssueCommandType , boolean checkCommandibility ) { return canUseTechPosition_native ( pointer , tech , checkCanIssueCommandType , checkCommandibility ) ; }
tr	1	public Assignment ( ) { this ( null , null , null ) ; }
tr	5	public ValueListener ( Event1 returnValue ) { this . returnValue = returnValue ; }
tr	9	public void exit ( ) { try { driver . disconnect ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } System . exit ( 0 ) ; }
tr	7	private void jButton5ActionPerformed ( java . awt . event . ActionEvent evt ) { limpiar ( ) ; }
tr	6	public void setAIChannel ( byte channel , short value ) { aiChannels [ channel ] = value ; }
tr	5	public Hardstate ( Integer idstate ) { this . idstate = idstate ; }
tr	3	public void stopTest ( ) { testController . stopTest ( ) ; }
tr	9	public MnuDictionary ( FrmMainWindowDictionary frmMainWindow ) { this . frmMainWindow = frmMainWindow ; this . add ( getMnuFile ( ) ) ; this . add ( getMnuCoise ( ) ) ; }
tr	10	public JSONArray put ( int index , Collection value ) throws JSONException { this . put ( index , new JSONArray ( value ) ) ; return this ; }
tr	5	public MytxtbuddySoapApi_Service ( URL wsdlLocation ) { super ( wsdlLocation , SERVICE ) ; }
tr	1	private ClassifierHelper ( ) { }
tr	4	public void setId_etude ( int id_etude ) { this . id_etude = id_etude ; }
tr	8	public void set ( int x , int y , float value ) { m [ x ] [ y ] = value ; }
tr	5	protected void setCommunicator ( Communicator communicator ) { this . communicator = communicator ; }
tr	1	public AbstractView ( ) { this ( "images/fond_accueil.jpg" ) ; }
tr	7	public Kill ( Point killed , int prio ) { super ( prio ) ; killedEntity = killed ; }
tr	1	public boolean supprimerVoyage ( ) { return false ; }
tr	8	public boolean equals ( Object obj ) { if ( obj instanceof boolean ) return ( java . lang . boolean ) obj == value ; else return false ; }
tr	4	public ArrayList < Integer > getOutputNums ( ) { return outputNums ; }
tr	6	public WriterTask ( Deque < Event > deque ) { super ( ) ; this . deque = deque ; }
tr	8	@ Test public void testTagAllSentence ( ) { assertEquals ( "tagAllSentenceHelper" , "word1 word2" , tester . tagAllSentencesHelper ( "word1 <tag> word2" ) ) ; assertEquals ( "tagAllSentenceHelper" , "3_nerved   cup_shaped   3 - 5 ( - 7 ) _nerved" , tester . tagAllSentencesHelper ( " \t 3  - nerved  cup- shaped  3-5 (-7) -nerved\t\t " ) ) ; }
tr	3	public int getComponetType ( boolean disregardScrollPane ) { return TYPE_CONTAINER ; }
tr	1	class < ? > [ ] groups ( ) default { } ;
tr	9	public void set_location_type ( String in ) { try { _location_type = Integer . parseInt ( in ) ; } catch ( NumberFormatException e ) { ; } }
tr	2	public static long getSerialversionuid ( ) { return serialVersionUID ; }
tr	1	public int process_id ( ) { return 2 ; }
tr	2	public int getPlays ( ) { return this . plays ; }
tr	4	@ Override public float getX ( ) { return this . pos . x ; }
tr	3	public void mouseClicked ( MouseEvent me ) { }
tr	5	public WindowHandler ( Game game ) { this . game = game ; }
tr	10	@ Override protected void configure ( ) { bind ( ITask . class ) . to ( Task . class ) ; bind ( ITaskService . class ) . to ( TaskService . class ) ; }
tr	6	public Type or ( Type that ) { return new ErrorType ( "Cannot compute " + this + " or " + that + "." ) ; }
tr	3	public MinPriorityQImpl1 ( ) { dlist = new DoublyLinkedList ( ) ; }
tr	1	public Object3 ( ) { }
tr	9	public void stopSong ( boolean playAnotherSong ) { if ( player != null ) { state . stopSong ( ) ; } if ( ! playAnotherSong ) { state = initialState ; } clearPlaylist ( ) ; }
tr	8	public CreateEventReturnObject ( boolean created , String message ) { super ( ) ; this . created = created ; this . message = message ; }
tr	6	@ Override public void actionPerformed ( ActionEvent arg0 ) { machine . loadFile ( ) ; }
tr	8	public boolean containsMutable ( String s ) { if ( getNameID ( s ) != - 1 ) { if ( mutables [ getNameID ( s ) ] != null ) { return true ; } } return false ; }
tr	9	public void start ( ) { this . setPlayingOrder ( player1 , player2 ) ; this . board . clearTheBoard ( ) ; this . setStatus ( Game . NEW_GAME ) ; }
tr	6	@ Override public BSTNode < K , E > getRoot ( ) { return this . root ; }
tr	5	@ BeforeClass public static void before ( ) throws Exception { a = new Account ( ) ; }
tr	1	public Contact ( ) { }
tr	2	public int getComparisonCount ( ) { return comparisonCount ; }
tr	3	public String getH2 ( ) { return h2 ; }
tr	10	public void setPosition ( final float x , final float y , final float z ) { affineTransform . setTranslation ( x , y , z ) ; updateTranslation = true ; }
tr	9	public NewCollectionDialog ( java . awt . Frame parent , boolean modal ) { super ( parent , modal ) ; initComponents ( ) ; }
tr	5	public Vat ( Integer vatId ) { this . vatId = vatId ; }
tr	4	public void setY ( float y ) { this . y = y ; }
tr	9	public HumanPlayer ( String name , int num , Color c ) { super ( name , num , c ) ; }
tr	5	public void setSqlLoginPassword ( String sqlLoginPassword ) { this . sqlLoginPassword = sqlLoginPassword ; }
tr	8	public Track ( String name , int length ) { this . name = name ; this . length = length ; }
tr	9	public static void main ( String [ ] args ) throws Exception { UWCANDataset dataset = new UWCANDataset ( "/media/disk/master/Master/datasets/WU-CAN/webdata" ) ; dataset . loadDocuments ( ) ; }
tr	6	@ Override public String getServerHost ( ) { return ( ( AppleNotificationServer ) getServer ( ) ) . getNotificationServerHost ( ) ; }
tr	7	public final void testGetName ( ) { Player player = new Player ( "Fred" ) ; assert . assertEquals ( player . getName ( ) , "Fred" ) ; }
tr	7	private Field getField ( String modelField ) { return getModelFields ( ) . get ( modelField ) ; }
tr	1	public Person ( ) { }
tr	10	public void setHilitedMinimum ( double min ) { hilitedMinValue = min ; if ( hilitedMaxValue < hilitedMinValue ) hilitedMaxValue = hilitedMinValue ; sanitiseLimits ( ) ; layoutMyButtons ( ) ; }
tr	6	public Dimension getPreferredSize ( ) { return new Dimension ( keyboardW , keyH + 2 * margin ) ; }
tr	6	public JSONWriter value ( double d ) throws JSONException { return this . value ( new double ( d ) ) ; }
tr	3	public PhonebookSortOption getSortBy ( ) { return sortBy ; }
tr	5	public void setDate_registration ( Date date_registration ) { this . date_registration = date_registration ; }
tr	8	public long optLong ( int index , long defaultValue ) { try { return getLong ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
tr	10	public void setAllLinkColorNoRepaint ( Color colour ) { for ( drawLink L : links . values ( ) ) { L . color = colour ; } }
tr	2	public boolean hasToChargeMove ( ) { return chargingMoveCount > 0 ; }
tr	8	@ Override public String toString ( ) { return "GitSettings{" + "gitPath='" + gitPath + ' + "  defaultFileCharset=" + defaultFileCharset + "  failFast=" + failFast + } ; }
tr	3	public String getUsernameRaw ( ) { return usernameRaw ; }
tr	2	@ Override public void close ( ) { }
tr	4	@ Override public int hashCode ( ) { return contents . hashCode ( ) ; }
tr	7	public CommonKeyAttributes ( byte [ ] id , byte [ ] usage ) { this . id = id ; this . usage = usage ; }
tr	4	public Iterator < ? > iterator ( ) { outprint += "iterator()\n" ; return new HashSetIterator ( ) ; }
tr	5	public void setMappingGroup ( MappingGroup mappingGroup ) { this . mappingGroup = mappingGroup ; }
tr	1	public TestModel ( ) { this ( null , null ) ; }
tr	9	@ Override public boolean equals ( Object other ) { if ( other instanceof NewId ) { return this . equals ( ( NewId ) other ) ; } return false ; }
tr	5	@ Override public String toString ( ) { return "MetricData [timestamp=" + timestamp + "  value=" + value + "]" ; }
tr	2	public int getId ( ) { return id ; }
tr	2	public boolean isOrganic ( ) { return organic ; }
tr	7	@ Override protected Connection getConnection ( ) throws SQLException { return DataSourceUtils . getConnection ( dataSource ) ; }
tr	2	public int getClazz ( ) { return clazz ; }
tr	1	public int statDrop ( ) { return 0 ; }
tr	8	public void translateDown ( float translation_Value ) { pobj . translate ( 0.0f , - translation_Value , 0.0f ) ; updateAbstraction ( ) ; }
tr	10	public Frontend ( MessageSystem ms ) { this . messageSystem = ms ; messageSystem . addService ( this ) ; messageSystem . getAddressService ( ) . addAddress ( this ) ; }
tr	2	public int toInt ( ) { return mInt ; }
tr	2	@ Override public boolean isList ( ) { return false ; }
tr	2	public boolean isZ ( ) { return z ; }
tr	9	public Object run ( ) throws Exception { return Util . getWorkingDirectory ( ) + File . separator + "bin" + File . separator ; }
tr	10	public List < Entry > getPiecesForFile ( Path file ) { if ( file == null ) { throw new NullPointerException ( ) ; } return filesToPieces . get ( file ) ; }
tr	3	public Setting < ? > getDefaultSetting ( ) { return fallbackSetting ; }
tr	1	public Stack ( ) { }
tr	7	void setEmpty ( long value ) { this . empty = true ; this . fromIndex = value ; this . toIndex = value ; }
tr	9	@ Override public Iterator < TO > iterator ( ) { return AdapterLibrary . adaptIterator ( _source . iterator ( ) , _adapter ) ; }
tr	6	public ArrayList < Quiz > retrieveFriendsQuizzes ( int userID ) { return getQuizzesWithQuery ( "select * from quizzes where creator in (select friend2ID from friends_join where friend1ID=" + userID + ") order by date_created limit 5" ) ; }
tr	9	public synchronized void paint ( Graphics g ) { g . drawLine ( xstartpos , ystartpos , xendpos , yendpos ) ; }
tr	10	@ Override public String toString ( ) { return "SHEBlock [blockNo=" + blockNo + "  text=" + Arrays . toString ( text ) + "  IV=" + Arrays . toString ( IV ) + "]" ; }
tr	3	public String getCpf ( ) { return cpf ; }
tr	2	public boolean getDefaultShared ( ) { return defaultShared ; }
tr	4	public void setNillable ( boolean nillable ) { this . nillable = nillable ; }
tr	3	public PlayerInterface getPlayer ( ) { return who ; }
tr	10	@ Override public void put ( String name , String value ) { map . put ( name , value ) ; }
tr	8	private DebugLevel ( int level , String s ) { mInt = level ; mString = s ; }
tr	6	public void renewBoard ( CampaignView view ) { this . removeAll ( ) ; setBoard ( view ) ; }
tr	7	public double [ ] [ ] getTerm ( int index ) { if ( vars . isEmpty ( ) ) return null ; return vars . get ( index ) ; }
tr	5	public void setCreatedAt ( Date createdAt ) { this . createdAt = createdAt ; }
tr	7	public static byte [ ] fullyZoomOut ( ) { byte [ ] message = { ClientMessageTable . getValue ( ClientMessageTable . fullyZoomOut ) } ; return message ; }
tr	4	public void cancelRegraph ( ) { this . m_regraphThread . interrupt ( ) ; reflectNonGraphingState ( ) ; }
tr	8	public Point3D ( int x , int y , int z ) { super ( x , y ) ; this . z = z ; }
tr	5	public void setCreatedDate ( Date createdDate ) { this . createdDate = createdDate ; }
tr	5	public void setStatus ( String status ) { this . status = status ; }
tr	3	public Console getConsole ( ) { return console ; }
tr	9	public void mover ( ) { if ( ! this . puedoMover ( ) ) this . espejarDireccion ( ) ; for ( ParteNave parte : this . partes ) { parte . mover ( this . direccion ) ; } }
tr	5	@ Override public void setHeight ( float height ) { this . height = height ; }
tr	6	public synchronized void removeEventListener ( SocketListener listener ) { _listeners . remove ( listener ) ; }
tr	4	public void setTextHeight ( int textHeight ) { this . textHeight = textHeight ; }
tr	7	public boolean contains ( int pentagonal ) { computeUpTo ( pentagonal ) ; return set . contains ( pentagonal ) ; }
tr	5	@ Override public void releaseSavepoint ( Savepoint savepoint ) throws SQLException { }
tr	1	public UserBean ( ) { super ( ) ; }
tr	8	@ Override public void beforeHeaderRow ( Table table ) { println ( ) ; print ( getTextExportOptions ( ) . getDelimiter ( ) ) ; }
tr	6	public void setRememberBookmark ( boolean rememberBookmark ) { Dispatch . put ( this , "RememberBookmark" , new Variant ( rememberBookmark ) ) ; }
tr	4	public void setLeft ( boolean left ) { isLeft = left ; }
tr	7	@ Override public void gotTouched ( AbstractEntity e ) { strategy . gotTouched ( e ) ; }
tr	10	public long get ( long index ) { if ( ! map . containsKey ( index ) ) throw new ArrayIndexOutOfBoundsException ( "index is " + index ) ; return map . get ( index ) ; }
tr	9	public static void main ( String [ ] args ) { D d = new D ( ) ; d . main ( args [ 0 ] ) ; }
tr	3	public String getColor ( ) { return color ; }
tr	3	public String getTeacher ( ) { return this . teacher ; }
tr	5	public Builder buying ( double price ) { this . price = price ; return this ; }
tr	7	@ Override public String toString ( ) { return "MineralInputImpl{" + "minerals=" + Arrays . toString ( minerals ) + } ; }
tr	3	@ Override public int getCurrentTMProposals ( ) { return current_tm_proposal ; }
tr	10	@ Override public void handleDiscardPhaseCompleted ( Player winningPlayer ) { for ( GameHandler gh : gameHandlers ) { gh . handleDiscardPhaseCompleted ( winningPlayer ) ; } }
tr	9	private Matrix4f getParentMatrix ( ) { if ( parent != null && parent . hasChanged ( ) ) parentMatrix = parent . getTransformation ( ) ; return parentMatrix ; }
tr	2	public int intensity_stereo_bound ( ) { return h_intensity_stereo_bound ; }
tr	9	public float det ( Vecteur v ) { return x * v . y - y * v . x ; }
tr	3	public IRCPluginHandler getPluginHandler ( ) { return ph ; }
tr	5	public Actuacio ( final IClient client ) { this . client = client ; }
tr	6	public void addResetButtonListener ( ActionListener reset ) { resetButton . addActionListener ( reset ) ; }
tr	3	public String value ( ) { return value ; }
tr	5	CarCriterion ( Evaluator evaluator ) { this . evaluator = evaluator ; }
tr	10	public Object get ( String column , Object obj ) { return get ( column , obj , _clazz ) ; }
tr	4	public static int extractSymbolSize ( long commonFecOTI ) { return unsignSymbolSize ( ( int ) commonFecOTI ) ; }
tr	6	public static ServiceFactory getInstance ( ) { if ( instance == null ) instance = new ServiceFactory ( ) ; return instance ; }
tr	6	@ Override public void addSpace ( BoxSpace boxSpace ) { super . addSpace ( boxSpace ) ; }
tr	8	public Dimension getOriginalSize ( ) { Dimension size = new Dimension ( originalWidth , originalHeight ) ; return size ; }
tr	2	public long getLastCollideTime ( ) { return lastCollideTime ; }
tr	3	public String getFirstName ( ) { return firstName ; }
tr	10	@ Override public void run ( ) { for ( int i = 0 ; i < 50 ; ++ i ) { final long number = sequence . nextNumber ( ) ; addNumber ( number ) ; } }
tr	8	private void monCheckActionPerformed ( java . awt . event . ActionEvent evt ) { applyButton . setEnabled ( true ) ; }
tr	8	@ SuppressWarnings ( "unchecked" ) public List < String > getTags ( ) { return ( List < String > ) _attributes . get ( "tags" ) ; }
tr	2	public double getZeroStaminaHockeyistEffectivenessFactor ( ) { return zeroStaminaHockeyistEffectivenessFactor ; }
tr	9	private static MidiEvent createNoteOffEvent ( int nKey , long lTick ) { return createNoteEvent ( ShortMessage . NOTE_OFF , nKey , 0 , lTick ) ; }
tr	8	private static class < ? > getPrimitiveClass ( final class < ? > componentType ) { if ( Integer . class . isAssignableFrom ( componentType ) ) { return int . class ; } if ( double . class . isAssignableFrom ( componentType ) ) { return double . class ; } throw new UnsupportedOperationException ( "Mapping not implemented" ) ; }
tr	3	public String getName ( ) { return name ; }
tr	7	public IntersectionInfo ( HashMap < String , Integer [ ] > roadIntersections ) { this . roadIntersections = roadIntersections ; }
tr	6	public void setCoVariateTypes ( List < CoVariateType > coVariateTypes ) { this . coVariateTypes = coVariateTypes ; }
tr	9	public ShootingObjectImpl ( ShootingScene scene , float power ) { this . parentScene = scene ; this . power = power ; this . undead = true ; }
tr	4	public void setY ( int y ) { this . y = y ; }
tr	5	public void setDegree ( String degree ) { this . degree = degree ; }
tr	1	public ResizeableTableHeader ( ) { this ( null ) ; }
tr	3	public float getColorTolerance ( ) { return ( float ) toleranceSlider . getValue ( ) / 10 ; }
tr	5	public OperacionNumerica ( Lista sentencias ) { super ( sentencias ) ; setPosfijo ( ) ; }
tr	4	@ Override public void keyPressed ( KeyEvent e ) { }
tr	3	public Conta getConta ( ) { return conta ; }
tr	1	public DashedHorizontalLine ( ) { }
tr	4	public TableColumnAdjuster ( JTable table ) { this ( table , 6 ) ; }
tr	5	public void setPINGrp ( PINGrp value ) { this . pinGrp = value ; }
tr	3	public String getName ( ) { return name ; }
tr	5	public void setType ( String type ) { this . type = type ; }
tr	3	Point ( ) { x = 0 ; y = 0 ; }
tr	8	public QuestionDescription getQuestionDesc ( int num ) { return DaoFactory . getInstance ( ) . getQuestionDao ( ) . find ( num ) ; }
tr	9	public static boolean approxNull ( final float value , final float errorbound ) { return Math . abs ( value ) < Math . abs ( errorbound ) ; }
tr	5	public void setTextDecoded ( String textDecoded ) { this . textDecoded = textDecoded ; }
tr	9	@ Override public T visitSstinput ( @ NotNull SSTParser . SstinputContext ctx ) { return visitChildren ( ctx ) ; }
tr	10	protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { this . doPost ( request , response ) ; }
tr	1	public ApiMacroTransformation ( ) { super ( "api" ) ; }
tr	1	public int getColumnCount ( ) { return 2 ; }
tr	10	public Direction getRightDirection ( ) { switch ( this ) { case NORTH : return EAST ; case SOUTH : return WEST ; case WEST : return NORTH ; case EAST : return SOUTH ; default : return this ; } }
tr	5	public void setTitle ( String title ) { this . title = title ; }
tr	9	public boolean isSet ( _Fields field ) { if ( field == null ) { throw new IllegalArgumentException ( ) ; } switch ( field ) { case GET_LANG : return isSetGetLang ( ) ; } throw new IllegalStateException ( ) ; }
tr	10	public static void setRedPieces ( int x , int y ) { m_Pieces [ x ] [ y ] . setPieceColour ( Piece . ConnectFourPieceColour . RED ) ; }
tr	4	public static void main ( String [ ] args ) throws ParseException { }
tr	8	public static double distance ( FPoint2 p1 , FPoint2 p2 ) { return p2 . distanceFrom ( p1 ) ; }
tr	2	public double getNomNetto ( ) { return nomNetto ; }
tr	10	public int getKills ( String progress ) { if ( ! isValid ( progress ) ) throw new IllegalArgumentException ( "progress is not valid" ) ; return Integer . parseInt ( progress . split ( " " ) [ 0 ] ) ; }
tr	8	public void clearAndHide ( ) { textAlphabet . setText ( null ) ; textClocksToReset . setText ( null ) ; textGuard . setText ( null ) ; setVisible ( false ) ; }
tr	6	public Customer findById ( int id ) { return daoCustomer . find ( id ) ; }
tr	9	@ Override public T visitBin_op ( @ NotNull DecafParser . Bin_opContext ctx ) { return visitChildren ( ctx ) ; }
tr	3	public CellValueGenerator getCellValueGenerator ( ) { return cellValueGenerator ; }
tr	3	public Rectangle getRect ( ) { return rect ; }
tr	4	public String getColumnName ( int column ) { switch ( column ) { case 0 : return "Game" ; case 1 : return "\u21BB" ; default : return "" ; } }
tr	5	public void setSessionFactory ( SessionFactory sessionFactory ) { this . sessionFactory = sessionFactory ; }
tr	3	@ BeforeClass public static void setUpClass ( ) throws Exception { }
tr	5	private static byte method228 ( Class32 class32 ) { return ( byte ) method230 ( 8 , class32 ) ; }
tr	7	public void apply ( Mob mob ) { def . apply ( mob , caster ) ; }
tr	5	public void setSshUrl ( String sshUrl ) { this . sshUrl = sshUrl ; }
tr	2	public float getX ( ) { return x ; }
tr	7	public void forEach ( Consumer < ? super T > action ) { contents . forEach ( action ) ; }
tr	8	public int optInt ( int index , int defaultValue ) { try { return getInt ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
tr	4	public boolean isEnabled ( ) { return ( ( JDateChooser ) components [ 0 ] ) . isEnabled ( ) ; }
tr	5	public void setAnswer ( String answer ) { this . answer = answer ; }
tr	2	public void update ( long timePassed ) { }
tr	7	private void jMenuItem1ActionPerformed ( java . awt . event . ActionEvent evt ) { new MenuOptions ( ) ; }
tr	1	protected byte getMessageInfo ( ) { return 0 ; }
tr	4	public void setActive ( boolean active ) { this . active = active ; }
tr	6	public StatementContext statement ( int i ) { return getRuleContext ( StatementContext . class , i ) ; }
tr	7	@ Override public boolean holds ( Variable var ) { return rule . violates ( var ) ; }
tr	1	protected void interrupted ( ) { }
tr	2	public double getSurveyCost ( ) { return this . surveyCost ; }
tr	7	public Dimension maximumLayoutSize ( Container parent ) { return new Dimension ( short . MAX_VALUE , short . MAX_VALUE ) ; }
tr	9	private void doSelectGoal ( ) { if ( board . setGoal ( this . boardPosition ) ) { selectGoal = false ; board . setRobots ( currentPosition ) ; updateBoardGetRobots ( ) ; } }
tr	5	public void setBody ( String body ) { this . body = body ; }
tr	3	public Integer getProvinceID ( ) { return provinceID ; }
tr	5	MARKET ( String ... urlStrings ) { this . urlStrings = urlStrings ; }
tr	3	public String getDesc ( ) { return description ; }
tr	10	public void set_label ( ) { label3 . setIcon ( new ImageIcon ( "image//banner.jpg" ) ) ; label3 . setText ( "PNR Java Media Player" ) ; label3 . setHorizontalTextPosition ( SwingConstants . CENTER ) ; }
tr	3	public String getBrightpointOrderNumber ( ) { return brightpointOrderNumber ; }
tr	3	public VectorialMemories ( ) { super ( "VectorialMemories" ) ; setDistance ( new EuclideanDistance ( ) ) ; }
tr	6	@ Override public int getNoticeStartTiming ( ) { return convertToNuturalNumber ( getProPertyAsInt ( NOTICE_START_TIMING , DEFAULT_NOTICE_START_TIMING ) ) ; }
tr	10	private static Endpoint getEndpointByID ( int id ) { for ( Endpoint e : endpoints ) { if ( e . getId ( ) == id ) { return e ; } } return null ; }
tr	1	public void startStartGame ( ) { }
tr	8	public static void exit ( ) { DebugUtils . info ( "Closing application" ) ; moduleManager . unloadAllModules ( ) ; desktop . getFrame ( ) . dispose ( ) ; }
tr	7	public DutchAuctionBehaviour ( final AuctionAgent agent , final AuctionData auctionData ) { super ( agent , auctionData ) ; }
tr	7	public static MediumFormat valueOf ( String code ) { return valueOf ( MediumFormat . class , code ) ; }
tr	7	private static void print ( String str ) { System . out . println ( str ) ; }
tr	7	@ Override public int hashCode ( ) { int hash = 3 ; hash = 79 * hash + this . type ; return hash ; }
tr	6	public static PrintWriter getFilePrintWriter ( String fn ) { return getFilePrintWriter ( fn , false ) ; }
tr	4	public int getLineNumber ( ) { return TokenStream . this . getLineNumber ( beg ) ; }
tr	8	public Profile [ ] findWherePictEquals ( byte [ ] pict ) throws ProfileDaoException { return findByDynamicSelect ( SQL_SELECT + " WHERE pict = ? ORDER BY pict" , new Object [ ] { pict } ) ; }
tr	9	private boolean r_Step_5b ( ) { ket = cursor ; if ( ! ( eq_s_b ( 1 , "l" ) ) ) { return false ; } bra = cursor ; if ( ! r_R2 ( ) ) { return false ; } if ( ! ( eq_s_b ( 1 , "l" ) ) ) { return false ; } slice_del ( ) ; return true ; }
tr	8	@ Override public void setFrameNumber ( int frameNumber ) throws IndexOutOfBoundsException { if ( backgroundSprite != null ) { backgroundSprite . setFrameNumber ( frameNumber ) ; } }
tr	4	protected static SettingsManager getSettingsManager ( ) { return MonsterIRC . settings ; }
tr	6	public void setInitial ( State < C > state ) { _initial = state ; }
tr	4	public void setAppearanceGroup ( int appearanceGroup ) { this . appearanceGroup = appearanceGroup ; }
tr	6	public void resetGame ( ) { gl = new GameLogic ( null ) ; grid = gl . getGrid ( ) ; }
tr	1	public HostList ( ) { super ( ) ; }
tr	3	public Integer getTitle_number ( ) { return title_number ; }
tr	2	public int getOutside ( ) { return outside ; }
tr	2	public int getPars ( ) { return pars ; }
tr	8	@ Override public String toString ( ) { return String . format ( "%s (%d)" , this . type . toString ( ) , this . time ) ; }
tr	5	public void setAddress ( Address address ) { this . address = address ; }
tr	8	public void setShare ( Share share ) { this . sharename = share . getSharename ( ) ; this . share = share ; }
tr	2	public int getHeight ( ) { return this . height ; }
tr	9	public int hashCode ( ) { int result = 17 ; result = 37 * result + this . getId ( ) ; result = 37 * result + this . getIdcategoria ( ) ; return result ; }
tr	2	public int getType ( ) { return PRINTER ; }
tr	2	public boolean isIncrementing ( ) { return incrementing ; }
tr	4	public DraughtsState getState ( ) { return NodeLVL3 . ds ; }
tr	8	public void addNode ( Node node ) { if ( ! nodeAlreadyExists ( node ) ) nodes . add ( node ) ; }
tr	3	public Iterator iterator ( ) { return new LItr ( ) ; }
tr	2	public void unsetName ( ) { this . name = null ; }
tr	3	public void windowDeiconified ( WindowEvent e ) { }
tr	7	public BigDecimal getBigDecimal ( int columnIndex ) throws SQLException { return rs . getBigDecimal ( columnIndex ) ; }
tr	2	public int getIbo ( ) { return ibo ; }
tr	9	private static int [ ] zzUnpackTrans ( ) { int [ ] result = new int [ 11868 ] ; int offset = 0 ; offset = zzUnpackTrans ( ZZ_TRANS_PACKED_0 , offset , result ) ; return result ; }
tr	1	public PayLoad ( ) { }
tr	7	public static DBHandler getInstance ( ) { if ( instance == null ) instance = new DBHandler ( ) ; return DBHandler . instance ; }
tr	6	public boolean isOpPost ( ) { return Arrays . equals ( this . parentHash , EncryptionProvider . EMPTY_HASH_SHA256 ) ; }
tr	7	public static String [ ] getNextSection ( Channel ch ) throws IOException { return getNextSection ( null , ch ) ; }
tr	2	public int getCategory ( ) { return category ; }
tr	3	public static Inventario getInstance ( ) { return INSTANCE ; }
tr	5	public void setContext ( String value ) { this . context = value ; }
tr	5	public void setGenre ( String genre ) { this . genre = genre ; }
tr	6	@ Override public void configDecoder ( AuthDecoder decoder ) { decoder = new AuthSimpleDecoder ( ) ; }
tr	8	public static String giftInfoShow ( ) { String info = "\u793C\u54C1" + "\t" + "\u7F16\u53F7" + "\n" ; info += "\u5956\u91D1" + "\t" + "1" + "\n" ; info += "\u70B9\u6570\u5361" + "\t" + "2" + "\n" ; info += "\u798F\u795E" + "\t" + "3" + "\n" ; return info ; }
tr	5	public void setLocname ( String locname ) { this . locname = locname ; }
tr	7	public static int EruptionOrWaterSpout ( Pokemon attacker ) { return 150 * ( attacker . getCurrHp ( ) / attacker . getMaxHp ( ) ) ; }
tr	1	public Vecteur ( ) { super ( ) ; }
tr	1	public int getMaxRange ( ) { return 10 ; }
tr	2	public long getTpUdhi ( ) { return tpUdhi ; }
tr	1	public RayTriHitInfo ( ) { this ( false , null , 0 , 0 ) ; }
tr	5	@ Override public Folder [ ] getPersonalNamespaces ( ) throws MessagingException { throw new UnsupportedOperationException ( ) ; }
tr	2	public HugeNumber ( ) { mostSig = null ; }
tr	10	@ Override public boolean equals ( Object that ) { if ( that == null ) return false ; if ( that instanceof abort_result ) return this . equals ( ( abort_result ) that ) ; return false ; }
tr	10	public void append ( byte a ) { byte [ ] b = new byte [ 1 ] ; b [ 0 ] = a ; data = ByteArrayUtils . concat ( data , b ) ; }
tr	4	@ Override public boolean isAsleep ( ) { return status . isAsleep ( ) ; }
tr	4	public static void main ( String [ ] args ) { new RoboGame ( ) ; }
tr	7	@ Override public void setLevel ( int level ) { this . level = level ; this . setChanged ( ) ; this . notifyObservers ( ) ; }
tr	8	public void keyPressed ( KeyEvent e ) { if ( e . getKeyCode ( ) == KeyEvent . VK_ENTER ) { validerQuantite ( ) ; } }
tr	6	public void setPieceX ( int x ) { if ( ! m_dropping ) { m_pieceX = x ; repaint ( ) ; } }
tr	2	public int getCVDResult ( ) { return cvdResult ; }
tr	9	@ Override @ Transactional ( propagation = Propagation . SUPPORTS ) public HousePlanner find ( String s ) { return null ; }
tr	4	public ASTSizeExp ( ASTNode e ) { super ( "Size" , e ) ; }
tr	8	public static boolean allPrime ( long ... nums ) { for ( long num : nums ) { if ( ! sieve . primes . contains ( num ) ) { return false ; } } return true ; }
tr	7	@ Override public void execute ( ) { ambiente . put ( id , exp . getValor ( ) ) ; }
tr	7	@ Override public TileEntity getTileEntity ( Tile parent ) { return new TileDoorEntity ( parent ) ; }
tr	3	public Screen getScreen ( ) { return screen ; }
tr	8	Type ( int code , String text ) { this . code = code ; this . textRepresentation = text ; }
tr	8	public static void main ( String [ ] args ) { MiniMusicPlayer2 player = new MiniMusicPlayer2 ( ) ; player . go ( ) ; }
tr	10	@ Override public int hashCode ( ) { final int prime = 31 ; int result = 1 ; result = prime * result + this . id . hashCode ( ) ; return result ; }
tr	10	public boolean isOpen ( int row , int col ) { validate ( row ) ; validate ( col ) ; return isOpenV ( row , col ) ; }
tr	10	public Material ( float pRestitution , float pStaticFriction , float pDynamicFriction ) { restitution = pRestitution ; staticFriction = pStaticFriction ; dynamicFriction = pDynamicFriction ; }
tr	9	public static void log ( Collection < String > ss ) { for ( String s : ss ) { log ( s ) ; } }
tr	9	public Random ( int initialValue ) { if ( initialValue < 0 ) initialValue += M ; state = initialValue ; if ( state == 0 ) state = 1 ; }
tr	4	public static String name ( ) { return prefs . name ( ) ; }
tr	2	public double getX ( ) { return this . x ; }
tr	6	public IRI ( String iri ) { super ( ) ; put ( "type" , "IRI" ) ; put ( "value" , iri ) ; }
tr	8	public BinarySearchTree ( Comparator < ? super E > c ) { overallRoot = null ; size = 0 ; comparator = c ; }
tr	3	public double getAngle ( ) { return getAngle_native ( pointer ) ; }
tr	6	public ItemPlayerHelp ( ) { super ( Material . MAGMA_CREAM ) ; this . setName ( ChatColor . DARK_GREEN + "Player Help" ) ; }
tr	5	public void setPassword ( String password ) { this . password = password ; }
tr	6	private void copyCurrentListedFilesToPrevious ( ) { previousListedFiles . clear ( ) ; previousListedFiles . putAll ( currentListedFiles ) ; }
tr	5	public DateAction ( JDateChooser date ) { this . date = date ; }
tr	6	protected void addNotification ( final Notification notification ) { this . notifications . add ( notification ) ; }
tr	10	@ Override public Object get ( int pos ) { if ( pos < 0 || pos > size ) throw new IndexOutOfBoundsException ( ) ; return elements [ pos ] ; }
tr	2	public String getQuestionTypeString ( ) { return "Question-Response" ; }
tr	3	public static final boolean StateIsCharState ( int index ) { return index < 7 ; }
tr	4	@ Override public void execute ( ) { light . on ( ) ; }
tr	1	public JMonthChooser ( ) { this ( true ) ; }
tr	7	@ Override public void mousePressed ( MouseEvent e ) { parent . parent . userSelectingLocation = true ; }
tr	9	public User ( String userName , String password ) { this . userName = userName ; this . password = password ; }
tr	10	private void btnProdutosActionPerformed ( java . awt . event . ActionEvent evt ) { this . setEnabled ( false ) ; CadastroProdutos . getInstace ( ) . setVisible ( true ) ; }
tr	6	@ Override public String visit ( AssignmentExpressionNode node ) { return EMPTY ; }
tr	2	public boolean isShutdown ( ) { return m_bShutdown ; }
tr	1	public HistorialBean ( ) { }
tr	2	public int getCurrentQueueSize ( ) { return this . currentQueueSize ; }
tr	4	@ Override public EOF getEOF ( ) { return this . eof ; }
tr	3	public Policy getPolicy ( ) { return policy ; }
tr	7	public Performance ( Connection con , String id ) { super ( con , id ) ; }
tr	9	private void restart ( ) { model . restart ( ) ; play . setVisible ( true ) ; restart . setVisible ( false ) ; backgroundSound . stop ( ) ; }
tr	7	private boolean hasOutput ( ) { return method . equals ( "POST" ) || method . equals ( "PUT" ) && ! data . isEmpty ( ) ; }
tr	3	@ Override public String getName ( ) { return "Exhaustive Inference" ; }
tr	5	public void setStartDate ( Date startDate ) { this . startDate = startDate ; }
tr	5	public GraafinenKayttoliittyma ( JShakkirunko peli ) { this . peli = peli ; }
tr	5	public void setMessage ( BaseMessage message ) { this . message = message ; }
tr	4	@ Override public void keyTyped ( KeyEvent ke ) { }
tr	10	public boolean equals ( Object o ) { return ( o instanceof Note ) && ( ( Note ) o ) . text . equals ( text ) ; }
tr	9	@ Test public void POISON_attacking_ICE ( ) { assertEquals ( 1.0 , tc . getWeaknessResistance ( Type . POISON , Type . ICE ) , 0.0 ) ; }
tr	8	public void horizontalAlignCenter ( int y1 , int y2 ) { this . setY ( y1 + ( y2 - y1 ) / 2 - this . getHeight ( ) / 2 ) ; }
tr	9	public UserHomeState ( AuctionService as , String name ) { this . name = name ; this . as = as ; }
tr	9	public ErrorResult ( String id , String message ) { this . code = id ; this . message = message ; }
tr	7	private void jButton2ActionPerformed ( java . awt . event . ActionEvent evt ) { this . dispose ( ) ; }
tr	6	private IStatusManager createStatusManager ( ) { return new StatusManager ( managers . messageManager , gpioUtility ) ; }
tr	7	public void displayMenu ( ) { System . out . println ( "Manager Menu" ) ; System . out . println ( "1.Manage Menu\n2.View Table and View Customer Queue\n3.Staff Schedule" ) ; }
tr	8	private static void setMetaOp ( int op , String meta ) { opMetaNames [ op - META_OP_OFFSET ] = meta ; }
tr	5	@ Override public bank . Bank getBank ( ) { return bank ; }
tr	7	public Field fieldAfterLabel ( String label ) { return getField ( new FieldIdentifier ( label ) ) ; }
tr	3	public String getId ( ) { return id ; }
tr	3	public float getPercent ( ) { return mainManager . getProgress ( ) ; }
tr	7	private void jButton1ActionPerformed ( java . awt . event . ActionEvent evt ) { this . setVisible ( false ) ; }
tr	4	public void setMean ( double mean ) { this . mean = mean ; }
tr	8	public EvolutionCandidate ( T obj , int fitness ) { super ( ) ; this . obj = obj ; this . fitness = fitness ; }
tr	4	public UIDList ( Object [ ] array ) { super ( array ) ; }
tr	7	public void addReferenceGroup ( ReferenceGroup referenceGroup ) { sessionFactory . getCurrentSession ( ) . save ( referenceGroup ) ; }
tr	5	public void setName ( String value ) { this . name = value ; }
tr	1	DummyClass ( ) { }
tr	1	protected void layoutRootPane ( ) { }
tr	7	public synchronized void processSteps ( ) { if ( processing ) { return ; } try { processing = true ; while ( steps . size ( ) > 0 ) { processStepsGuarded ( ) ; } } finally { processing = false ; } }
tr	3	public void start ( ) { if ( isRunning ) return ; run ( ) ; }
tr	8	public void verticalAlignCenter ( int x1 , int x2 ) { this . setX ( x1 + ( x2 - x1 ) / 2 - this . getWidth ( ) / 2 ) ; }
tr	7	private boolean whenToken ( TokenType [ ] t ) { if ( testToken ( t ) ) { data . pop ( ) ; return true ; } else { return false ; } }
tr	6	@ XmlAttribute public void setFilename ( String filename ) { this . filename = filename ; }
tr	5	private void tick ( ) { game . tick ( ) ; playerView . tick ( ) ; }
tr	10	public void addBoardListener ( BoardListener listener ) { if ( listener == null ) return ; if ( this . listeners == null ) this . listeners = new LinkedList < > ( ) ; this . listeners . add ( listener ) ; }
tr	5	@ Override public HashSet < IEnvironment > getLinkedEnvironments ( ) { return linkedEnvironments ; }
tr	5	public void updateReturned ( int row ) { ordersTable . setValueAt ( "Yes" , row , 5 ) ; }
tr	6	@ Override public void setView ( CardCreateView view ) { this . view = view ; }
tr	8	public String getColumnName ( int c ) { switch ( c ) { case COL_RANK : return "#" ; case COL_NAME : return "Name" ; case COL_PRESENT : return "Present" ; case COL_BIDS : return "Bids" ; default : return "" ; } }
tr	1	public ClassComparisonResultEntry ( ) { super ( ) ; }
tr	2	public double getRadius ( ) { if ( launched ) return 0 ; return 15 ; }
tr	3	@ Test public void testStationInList ( ) throws Exception { }
tr	7	@ Override public String accept ( final NodeVisitor visitor ) { return visitor . visit ( this ) ; }
tr	10	private void listContactosMouseClicked ( java . awt . event . MouseEvent evt ) { int no ; no = listContactos . getSelectedIndex ( ) ; }
tr	7	public Hipodromo seleccionarHipodromo ( Hipodromo hipodromo ) { return ssHipodromos . seleccionarHipodromo ( hipodromo ) ; }
tr	3	public String getContentTransferEncoding ( ) { return contentTransferEncoding ; }
tr	3	public Person ( ) { dob = new Date ( ) ; }
tr	6	private void valider ( java . awt . event . ActionEvent evt ) { }
tr	8	private PerfProfile ( PerfProfileBuilder builder ) { buckets = ImmutableList . copyOf ( builder . buckets ) ; }
tr	9	@ Override public void onMementoAdded ( String mementoRes ) { mementoGui . addMemento ( mementoRes ) ; topPanel . setExclShown ( true ) ; }
tr	7	@ Test public void testDotProduct ( ) { assertTrue ( matrixA . dotProduct ( matrixB ) . equals ( 32.0 ) ) ; }
tr	1	protected void initialize ( ) { }
tr	6	public SequenceTypist ( Typist < T > singleTypist ) { super ( ) ; this . singleTypist = singleTypist ; }
tr	5	public void setProduto ( Produto produto ) { this . produto = produto ; }
tr	3	public String toString ( ) { return this . get_nom ( ) ; }
tr	2	public void kill ( ) { closeServerSocket ( ) ; }
tr	7	private void updatePortionsLabel ( ) { if ( portions == 1 ) { portionsLabel . setText ( "1 portion" ) ; } else { portionsLabel . setText ( portions + " portions" ) ; } }
tr	9	public Type parse ( int i ) { switch ( i ) { case 1 : return HASHTAG ; case 2 : return USER ; case 3 : return EMOTICON ; case 4 : return URL ; } return OTHER ; }
tr	7	protected RejectPageBuilder reject ( String viewName ) { return WebPageUtils . reject ( viewName ) ; }
tr	1	public TestSetup ( ) { }
tr	1	public TaitoTest ( ) { }
tr	8	private void setTreeLineas ( ) { jScrollPane1 . setVerticalScrollBarPolicy ( JScrollPane . VERTICAL_SCROLLBAR_ALWAYS ) ; Utilitaria . setTreeLineas ( treeLineas ) ; }
tr	10	public void update ( ) { if ( XboxController . controller != null ) XboxController . update ( ) ; if ( gameStates [ currentState ] != null ) gameStates [ currentState ] . update ( ) ; }
tr	9	public void each ( P1 < M > p1 , Connection conn ) { each ( p1 , conn , null ) ; }
tr	2	public EnPrestamo ( ) { super ( ) ; super . setNombre ( "En Prestamo" ) ; }
tr	9	private boolean isTitleWord ( String firstOccur ) { String first = firstOccur . split ( "_" ) [ 0 ] ; if ( first . equalsIgnoreCase ( "0" ) ) return true ; return false ; }
tr	5	public QueryResults ( ResultSet rs ) { this . rs = rs ; }
tr	10	@ Override public void setHostname ( String hostname ) { if ( hostname == null || hostname . length ( ) == 0 ) throw new DatabaseException ( "Hostname cannot be null or empty." ) ; this . hostname = hostname ; }
tr	10	Grad ( double x , double y , double z ) { this . x = x ; this . y = y ; this . z = z ; }
tr	6	private void BotonActualizarEmpleadoActionPerformed ( java . awt . event . ActionEvent evt ) { }
tr	7	public void setDescription ( String value ) { this . description = value ; this . isDescriptionDirty = true ; setDirty ( ) ; }
tr	9	public ConstNode ( IdentNode ident , AbstractNode exp2 ) { this . ident = ident ; this . exp = exp2 ; }
tr	1	public Function1D ( ) { }
tr	8	@ Test public void testGetParkingLotNumbersOfColor ( ) throws Exception { initialize ( ) ; assertEquals ( 0 , command . getParkingLotNumbersOfColor ( "GreenWhite" ) . size ( ) ) ; }
tr	3	public String getScope ( ) { return scope ; }
tr	5	public void setPublicProtection ( String date ) { this . publicProtection = date ; }
tr	1	public boolean copiesRaster ( ) { return true ; }
tr	9	public void addParam ( String key , String value ) { params . put ( key , value ) ; }
tr	1	public int get_key_num ( ) { return 1 ; }
tr	6	@ Override public void changeLevel ( int newLevel ) { this . model . setLevel ( newLevel ) ; }
tr	4	public EndGameException ( String string ) { super ( string ) ; }
tr	10	public XmlSerializer text ( String text ) throws IOException , IllegalArgumentException , IllegalStateException { return xs . text ( text ) ; }
tr	5	public void setOrderNum ( String value ) { this . orderNum = value ; }
tr	6	public static SelectParameter Select ( String parameterName ) { return new SelectParameter ( parameterName ) ; }
tr	8	public void setSelectedAnswer ( int i ) { if ( i >= this . answers . size ( ) || i < 0 ) return ; this . selectedAnswer = i ; }
tr	2	public int getPages ( ) { return pages ; }
tr	6	public ArgumentListTest ( java . lang . String testName ) { super ( testName ) ; }
tr	5	public Date getDate ( int columnIndex ) throws SQLException { throw new UnsupportedOperationException ( "Not supported yet." ) ; }
tr	6	public Creditos ( ) { JOptionPane . showMessageDialog ( null , message , "About..." , JOptionPane . INFORMATION_MESSAGE ) ; }
tr	4	public void setValorReembolso ( double valorReembolso ) { this . valorReembolso = valorReembolso ; }
tr	9	public LivingEntity ( int id , String name , PredictableLocation loc ) { super ( id , name , loc ) ; }
tr	3	public void mouseExited ( final MouseEvent mouseEvent ) { }
tr	1	public ReinforcementManager ( ) { }
tr	10	public void translate ( Vector amount ) { setLocation ( getX ( ) + amount . getXChange ( ) , getY ( ) + amount . getYChange ( ) ) ; }
tr	10	public void setParameters ( Generator freq , Generator phase , Generator & ) { super . setParameters ( triangleWave , freq , phase , & , true ) ; }
tr	10	public String getStats ( ) { String result = "" ; result += Util . ProbStats ( "Test HH" , test_calls , test_hash_hits ) ; return result ; }
tr	2	public final int getPaddingRight ( ) { return paddingRight ; }
tr	3	public static int getPlayer1Score ( ) { return m_player [ 0 ] . getScore ( ) ; }
tr	9	@ Override public void enterRule ( ParseTreeListener listener ) { if ( listener instanceof DecafParserListener ) ( ( DecafParserListener ) listener ) . enterId1 ( this ) ; }
tr	3	public boolean canMove ( ) { return canMove_native ( pointer ) ; }
tr	10	@ Test public void testDiv ( ) { BigDecimal eval = new Expression ( "8/2" ) . eval ( ) ; assertTrue ( expected . equals ( eval ) ) ; }
tr	4	public void setDescendsLinks ( boolean newValue ) { descendLinks = newValue ; }
tr	3	public Declaracion getD1 ( ) { return d1 ; }
tr	7	@ Override public void removeCharacter ( String character ) { game . removeCharacter ( character ) ; }
tr	3	public static String getLocalIdentifier ( ) { return localIdentifier ; }
tr	4	@ Override public void keyPressed ( int i , char c ) { }
tr	7	@ Override public BoundedValue clone ( ) { return new BoundedValue ( _min , _max , _value ) ; }
tr	4	public void SetTemperature ( ) { System . out . println ( "Hot tub temperature set" ) ; }
tr	4	public void setOriginY ( float originY ) { this . originY = originY ; }
tr	5	public void setItemType ( String value ) { this . itemType = value ; }
tr	10	@ WebEndpoint ( name = "MGReplyWSPort" ) public MGReplyWS getMGReplyWSPort ( WebServiceFeature ... features ) { return super . getPort ( new QName ( "http://MGReply.me.org/" , "MGReplyWSPort" ) , MGReplyWS . class , features ) ; }
tr	6	public void setEventHandlers ( final Set < EventHandler < ? >> eventHandlers ) { this . eventHandlers = eventHandlers ; }
tr	6	private void updateOrdersTable ( ) { order_view . updateReturned ( row ) ; m_order_view . dispose ( ) ; }
tr	5	public TCPClient ( Socket socket ) { this . socket = socket ; }
tr	10	public void set ( double x , double y , double z ) { this . x = x ; this . y = y ; this . z = z ; }
tr	6	@ Override public void exitId2 ( @ NotNull DecafParser . Id2Context ctx ) { }
tr	10	ValidatablePoolThread ( Pool < T > pool , ValidationConfig config ) { this . pool = pool ; this . config = config ; }
tr	4	@ Override public void keyTyped ( final KeyEvent arg0 ) { }
tr	2	public static int getClock ( ) { return Clock ; }
tr	10	public void addAnimationSet ( AnimationSet set ) { animationSets . add ( set ) ; set . editorData = this ; fireAnimationSetAdded ( set ) ; }
tr	1	public int getColumnCount ( ) { return 1 ; }
tr	2	public long getUsed ( ) { return used ; }
tr	4	@ Override public byte [ ] getData ( ) { return ( "17" + name ) . getBytes ( ) ; }
tr	9	@ Override public int hashCode ( ) { int hash = 7 ; hash = 41 * hash + ( this . name != null ? this . name . hashCode ( ) : 0 ) ; return hash ; }
tr	8	public temporaire ( ) { scfsi = new int [ 4 ] ; gr = new gr_info_s [ 2 ] ; gr [ 0 ] = new gr_info_s ( ) ; gr [ 1 ] = new gr_info_s ( ) ; }
tr	8	@ Override public void processItem ( IItem item ) { getLogger ( ) . debug ( item . toString ( ) ) ; }
tr	5	public void setSmall_pic ( String small_pic ) { this . small_pic = small_pic ; }
tr	4	public List < Ant > getAnts ( ) { return ants ; }
tr	2	@ Override public int getSize ( ) { return 0 ; }
tr	4	@ Override public int hashCode ( ) { return name . hashCode ( ) ; }
tr	1	public CSha1Hash ( ) { }
tr	1	public void initDefaultCommand ( ) { }
tr	4	public void setObstaclesExpanded ( boolean expansion ) { this . obstacles_expanded = expansion ; }
tr	10	public ReverseList ( ) { insert ( 1 ) ; insert ( 2 ) ; insert ( 3 ) ; insert ( 4 ) ; insert ( 5 ) ; insert ( 6 ) ; insert ( 7 ) ; printList ( head ) ; }
tr	5	public int getDate ( ) { return stupid . get ( Calendar . DAY_OF_MONTH ) ; }
tr	7	public void setLazyValues ( List < LazyValue < ? extends Object >> lazyValues ) { this . lazyValues = lazyValues ; }
tr	1	public UMBELWebServiceURLS ( ) { }
tr	10	public Map < NFAState , Set < Integer >> getInverseTransition ( ) { return new Function < Integer , NFAState > ( ) . getInverseOneToMany ( this . transition ) ; }
tr	7	@ Override public void mousePressed ( final MouseEvent me ) { button = me . getButton ( ) ; }
tr	7	public JSONException ( Throwable cause ) { super ( cause . getMessage ( ) ) ; this . cause = cause ; }
tr	2	public int getMoney ( ) { return money ; }
tr	1	public DeliveryPacket ( ) { }
tr	3	@ Override protected void setupInitialState ( ) { this . sessionKey = null ; }
tr	8	public List < String > getWarnings ( ) { if ( this . _warnings == null ) { this . _warnings = new ArrayList < String > ( ) ; } return _warnings ; }
tr	1	public Table ( ) { }
tr	8	public static boolean check ( ) { try { MessageDigest md = MessageDigest . getInstance ( HASH_FUNCTION ) ; return true ; } catch ( NoSuchAlgorithmException ex ) { return false ; } }
tr	4	public Make ( Model model ) { super ( model ) ; }
tr	1	private AboutJDialog ( ) { }
tr	6	public Geometry getBone ( int v ) { if ( bones == null ) return null ; return bones [ v ] ; }
tr	3	public Date getDate ( ) { return date ; }
tr	7	@ Override public void RemoveLogHander ( Handler h ) { logger . removeHandler ( h ) ; }
tr	5	public void setInternalModel ( InternalBFieldModel value ) { this . internalModel = value ; }
tr	6	static public IconCache zam56 ( HttpCache hc ) { return new IconCache ( hc , 56 , 1 , "http://wow.zamimg.com/images/wow/icons/large/$.jpg|dir=56" ) ; }
tr	3	public String getJob ( ) { return job ; }
tr	2	public Form2 ( ) { initComponents ( ) ; }
tr	9	public void drawCharacter ( char c , int x , int y ) { imp . drawCharacter ( c , x , y ) ; }
tr	3	@ Override public void add ( ) { acceptCurrentView ( ) ; }
tr	8	static private final int jjStopAtPos ( int pos , int kind ) { jjmatchedKind = kind ; jjmatchedPos = pos ; return pos + 1 ; }
tr	5	public void setValue ( String value ) { this . value = value ; }
tr	7	public void setPlasmidMap ( String value ) { node . setProperty ( PLASMID_MAP_PROPERTY , value ) ; }
tr	1	public Settings ( ) { }
tr	9	public void modifySlime ( Slime s ) { s . setNumbers ( slowDwarf , slowHobbit , slowElf , slowMan ) ; }
tr	7	public ClasesCollection getClasesCollection ( ) { if ( clasesCollection == null ) { clasesCollection = new ClasesCollection ( ( IClient ) this ) ; } return clasesCollection ; }
tr	9	@ Test public void itDisregardsQueryStringParametersInRequestURI ( ) { request = new HttpRequest ( "GET /parameters?blah HTTP/1.1\r\n\r\n" ) ; assertThat ( request . getRequestURI ( ) , is ( equalTo ( "/parameters" ) ) ) ; }
tr	5	public void setSexe ( String sexe ) { this . sexe = sexe ; }
tr	9	@ Override public void handleGameWon ( Team winningTeam ) { System . out . println ( winningTeam . getTeamName ( ) + " Win!" ) ; }
tr	4	@ Override public void onBulletMiss ( BulletMissEvent e ) { }
tr	8	@ Override public void mousePressed ( MouseEvent e ) { if ( e . isPopupTrigger ( ) ) { doPop ( e ) ; } }
tr	5	public void setLogoutput ( String logoutput ) { this . logoutput = logoutput ; }
tr	6	private void readData ( ) { Buffer . add ( ( NetworkPacket ) MainConnection . readObject ( ) ) ; }
tr	2	public int obtenirNombreDeTourEtat ( ) { return this . nombreDeTourEtat ; }
tr	10	protected void readScaleFactors ( ) { for ( int i = 0 ; i < num_subbands ; ++ i ) subbands [ i ] . read_scalefactor ( stream , header ) ; }
tr	10	public PostParameter ( String name , int value ) { this . name = name ; this . value = String . valueOf ( value ) ; }
tr	9	private class < ? > toBeanType ( int type ) { class < ? > clz = typesMap . get ( type ) ; return clz == null ? String . class : clz ; }
tr	7	private void debug ( String s ) { System . out . println ( s ) ; }
tr	5	@ Override public boolean isNOT ( ) { return this . type == OperatorType . NOT ; }
tr	4	TriangulateMonotoneStage ( TriangulationAlgorithm algorithm ) { super ( algorithm ) ; }
tr	4	public void setPlotWidth ( float plotWidth ) { this . plotWidth = plotWidth ; }
tr	1	private UrlUtils ( ) { }
tr	6	private void closeWinMouseExited ( java . awt . event . MouseEvent evt ) { }
tr	8	public boolean checkForFever ( final Person p , final Megameter m ) { return m . isBreathing ( p ) ; }
tr	9	public Tile ( Status iv_status ) { this . initTile ( iv_status ) ; this . shipStatus = Ship . Type . NOSHIP ; }
tr	8	public List < SchoolVO > getSchools ( ) { if ( schools == null ) { schools = new ArrayList < SchoolVO > ( ) ; } return this . schools ; }
tr	8	public int compare ( InetAddress ia1 , InetAddress ia2 ) { return compara ( ia1 , ia2 ) ; }
tr	6	public void setTriggers ( ArrayList < ITrigger > triggers ) { this . triggers = triggers ; }
tr	8	public Axis < T > axesDefaultsInstance ( ) { if ( axesDefaults == null ) { axesDefaults = new Axis < T > ( ) ; } return axesDefaults ; }
tr	2	public float getMinDesolvPolar ( ) { return minDesolvPolar ; }
tr	8	protected static void assertFileCreated ( File file ) { assertTrue ( "file created" , file . isFile ( ) && file . length ( ) > 0 ) ; }
tr	9	public IITOperationStatus convertTracks ( Variant iTracksToConvert ) { return new IITOperationStatus ( Dispatch . call ( this , "ConvertTracks" , iTracksToConvert ) . toDispatch ( ) ) ; }
tr	4	public int getRowCount ( ) { if ( pluginList == null ) { return 0 ; } else { return pluginList . size ( ) ; } }
tr	8	@ Override public Object getValueAt ( int rowIndex , int columnIndex ) { return this . filasColumnasTabla [ rowIndex ] [ columnIndex ] ; }
tr	3	public DriverCreationJP getDriverCreationJP ( ) { return driverCreationJP ; }
tr	3	@ Override public String toString ( ) { return "la salida" ; }
tr	3	public String getDescription ( ) { return description ; }
tr	5	@ Before public void setUp ( ) { DB . setDataSource ( new SQLite ( ) ) ; }
tr	3	public String getNewName ( ) { return newName ; }
tr	1	public GenericException ( ) { }
tr	8	public CountryObject ( int _countryId , String _countryName ) { this ( ) ; countryId = _countryId ; countryName = _countryName ; }
tr	1	public SeparatorImpl ( ) { }
tr	2	@ Override public boolean hasLineOfSight ( ) { return false ; }
tr	5	public String toString ( ) { if ( getFormula ( ) . length ( ) > 0 ) return "Effect:" + getFormula ( ) ; else return "" ; }
tr	2	public double getX ( ) { return this . x ; }
tr	6	public String toString ( ) { return this . mode == d ? this . writer . toString ( ) : null ; }
tr	5	@ SuppressWarnings ( "unused" ) private void setNotGettable ( short notGettable ) { this . notGettable = notGettable ; }
tr	7	public static String Message_GetUsageCredits ( String THE_MESSAGE ) { return otapiJNI . OTAPI_Basic_Message_GetUsageCredits ( THE_MESSAGE ) ; }
tr	5	EventExposingDirectoryPoller ( DirectoryPoller directoryPoller ) { dp = directoryPoller ; }
tr	6	private static boolean isDiffLegal ( long toCheck , long ref ) { return ( ( toCheck - ref ) % TIME_UNIT ) == 0 ; }
tr	8	private void jButtonCreateTopicActionPerformed ( java . awt . event . ActionEvent evt ) { getPresenter ( ) . createTopic ( ) ; }
tr	8	void set_up ( ) { fAttacks . add ( new Smash ( ) ) ; fAttacks . add ( new Dagger ( ) ) ; fGold = 20 ; }
tr	9	protected void addButton ( JButton button ) { buttons . add ( button ) ; button . addActionListener ( this ) ; refreshButtons ( ) ; }
tr	3	public VeterinariaTest ( ) { veterinaria = new Veterinaria ( ) ; }
tr	6	@ Override public void setDividerLocationSplitPane ( int i_dividerLocation ) { splitPane . setDividerLocation ( i_dividerLocation ) ; }
tr	1	public Topic ( ) { }
tr	5	public void reset ( ) { setDrawing ( true ) ; setKeyHandling ( true ) ; setMouseHandling ( true ) ; clearComps ( ) ; }
tr	4	@ Override public String toString ( ) { return getName ( ) ; }
tr	9	@ Override public boolean isValidTarget ( String ... strings ) { if ( strings . length != 4 ) return false ; try { return strings [ 0 ] != null ; } catch ( Exception e ) { return false ; } }
tr	10	@ Override public boolean accept ( File file ) { if ( file . isDirectory ( ) ) { return true ; } return file . getName ( ) . endsWith ( extension ) ; }
tr	8	@ ManyToOne @ JoinColumn ( name = "id_route" , referencedColumnName = "id" , nullable = false ) public Route getRouteByIdRoute ( ) { return routeByIdRoute ; }
tr	9	public TaskSelectionAction ( JTable table , TaskTableModel tableModel ) { this . table = table ; this . tableModel = tableModel ; }
tr	4	@ Override public void mouseExited ( EngineMouseMoveEvent event ) { }
tr	4	@ PostConstruct public void init ( ) { super . setFacade ( ejbFacade ) ; }
tr	3	public TAGrp getTAGrp ( ) { return taGrp ; }
tr	8	public boolean removeAlbum ( AlbumBean album ) { albums . remove ( album ) ; if ( albums . isEmpty ( ) ) { return true ; } return false ; }
tr	9	public LinearVariation ( Crossover < > > crossover , Mutation < > > mutation ) { this . crossover = crossover ; this . mutation = mutation ; }
tr	3	public String getDescription ( ) { return description ; }
tr	2	public int getYearswithdrivinglicense ( ) { return yearswithdrivinglicense ; }
tr	3	public boolean isNotEmpty ( ) { return sentMessages > 0 && receivedMessages > 0 ; }
tr	8	public static void main ( String [ ] args ) { System . out . println ( new Fibonacci_9 ( ) . getFibonacci ( 6 ) ) ; }
tr	7	protected final int getParentHeight ( ) { return parent == null ? activity . getCanvas ( ) . getHeight ( ) : parent . measuredHeight ; }
tr	1	public static void about ( ) { }
tr	4	@ AfterClass public void tearDown ( ) { driver . quit ( ) ; }
tr	6	protected static long getCPtr ( SWIGTYPE_p_uint32_t obj ) { return ( obj == null ) ? 0 : obj . swigCPtr ; }
tr	10	@ Before public void setUp ( ) { playerOne = new Player ( ) ; playerTwo = new Player ( ) ; tennisGame = new TennisGame ( playerOne , playerTwo ) ; }
tr	10	@ ChattingAnnotation ( feature = "History" , type = "method" ) public String retriveChatHistory ( String sender ) { return _imp . retriveChatHistory ( sender ) ; }
tr	6	public void removePostProcessor ( InterpolationPostProcessor postProcessor ) { postProcessors . remove ( postProcessor ) ; }
tr	2	public Discriminator ( ) throws TypeException { super ( ) ; }
tr	10	@ Test ( expected = IllegalArgumentException . class ) public void testInvalidCacheConfig ( ) { CacheConfig config = new CacheConfig ( ) . setCapacityPerBlock ( 12 ) . setConcurrencyLevel ( 2345 ) . setInitialNumberOfBlocks ( 27 ) ; }
tr	1	public void execute ( ) { }
tr	3	public FiltroGauss ( int tamanho ) { super ( tamanho ) ; }
tr	2	public boolean isPosition ( ) { return position != null ; }
tr	6	public void setLocation ( AIPoint location ) { this . location . set ( location ) ; }
tr	10	@ Override @ Transactional ( readOnly = false ) public Account save ( Account account ) { return this . accountRepository . save ( account ) ; }
tr	2	public final int getSolutionMemoryMegabytes ( ) { return this . solutionMemoryMegabytes ; }
tr	4	public void setEncodeXMLDeclaration ( boolean xmlDeclaration ) { this . xlmDeclaration = xmlDeclaration ; }
tr	9	@ Test public void testSimpleElement ( ) { Quicksort sorter = new Quicksort ( ) ; int [ ] test = { 7 , 1 , 4 , 3 , 5 } ; sorter . sort ( test ) ; }
tr	2	public long getAvailableTime ( ) { return availableTime ; }
tr	3	public Id getName ( ) { return name ; }
tr	1	public AlphaLabel ( ) { super ( ) ; }
tr	3	public X_BS_ACL getAcl ( ) { return this . acl ; }
tr	6	@ Override protected void unbindSelf ( ) { this . messageManager . unbind ( this ) ; this . connectionManager . unbind ( this ) ; }
tr	6	public void removeView ( TEView view ) { this . collection . remove ( view ) ; }
tr	8	private void CloseProgram ( java . awt . event . ActionEvent evt ) { System . exit ( 0 ) ; }
tr	7	public Card getCard ( int x ) { return ( x < 0 || x > 9 ) ? null : cards [ x ] ; }
tr	6	@ Override public void render ( Graphics g , Camera cam ) { }
tr	3	public Date getDate ( ) { return d ; }
tr	1	public void stop ( ) { }
tr	3	protected void disableAuthorizationHeader ( ) { requestHeaders . remove ( "Authorization" ) ; }
tr	1	public void begin ( ) { }
tr	5	public void setId ( Integer id ) { this . id = id ; }
tr	5	@ Override public String typeCheck ( ) { return firstBody . typeCheck ( ) ; }
tr	6	public boolean equals ( Auction auction ) { if ( this . id == auction . id ) { return true ; } else { return false ; } }
tr	8	@ Test public void testGetThreadName ( ) { Communicator comm = new Communicator ( 12010 ) ; assertEquals ( comm . getThreadName ( ) , "Communicator" ) ; }
tr	10	private AST lookup ( AST t ) { return ( AST ) ( symtab . get ( ( ( IdTree ) t ) . getSymbol ( ) ) ) ; }
tr	7	@ Override public String toString ( ) { return getClass ( ) . getName ( ) + "[" + x + "/" + y + "]" ; }
tr	4	public Color getTableForeground ( ) { return this . table . getForeground ( ) ; }
tr	7	public boolean isNull ( String key ) { return JSONObject . null . equals ( opt ( key ) ) ; }
tr	4	public NotFoundException ( String s ) { super ( s ) ; }
tr	4	public void setTipoDeTitulo ( int mTipoDeTitulo ) { this . mTipoDeTitulo = mTipoDeTitulo ; }
tr	8	private static String getVelocityStr ( Velocity v ) { return "velocity[" + v . getX ( ) + " " + v . getY ( ) + "]" ; }
tr	6	public int tier ( ) { return ( int ) Math . sqrt ( bitsPerCollection ) - Parameters . MIN_TIER ; }
tr	2	@ Override protected int getCellSize ( ) { return 50 ; }
tr	9	public double [ ] [ ] getNormalizedSimilarityMatrix ( String [ ] words1 , String [ ] words2 ) { return MatrixCalculator . getNormalizedSimilarityMatrix ( words1 , words2 , this ) ; }
tr	9	public Object [ ] formatoTabela ( FonteFinanciamento fontefinanciamento ) { return new Object [ ] { fontefinanciamento . getId ( ) , fontefinanciamento . getNome ( ) } ; }
tr	1	protected void end ( ) { }
tr	3	public void keyTyped ( KeyEvent e ) { }
tr	1	public NoExisteCPException ( ) { super ( "El Codigo Postal ingresado no es valido" ) ; }
tr	9	@ Override public T visitId2 ( @ NotNull DecafParser . Id2Context ctx ) { return visitChildren ( ctx ) ; }
tr	7	public Employee ( String name , int id ) { super ( name ) ; this . id = id ; }
tr	1	public void doCancel ( ) { }
tr	2	public char [ ] getReplaceList ( ) { return alphabetString ; }
tr	7	final int nextInt ( ) { if ( 0 == count -- ) { isaac ( ) ; count = SIZE - 1 ; } return ( rsl [ count ] ) ; }
tr	10	public void fullscreen_toggle ( ) { fullscreen = ! fullscreen ; try { Display . setFullscreen ( fullscreen ) ; } catch ( LWJGLException e ) { e . printStackTrace ( ) ; } }
tr	1	public OperacaoLog ( ) { }
tr	9	public void addAll ( Collection < R > ranges ) { for ( R range : ranges ) { add ( range ) ; } }
tr	9	public DataSetXY ( double [ ] x , double [ ] y ) { dataX . set ( x ) ; dataY . set ( y ) ; }
tr	6	public void sendPacket ( Stream s ) { this . stream = s ; sendPacket ( ) ; }
tr	1	public get ( ) { super ( "get" ) ; }
tr	5	public void setDateTimeValue ( Date dateTimeValue ) { this . dateTimeValue = dateTimeValue ; }
tr	1	private static short [ ] init__Scanner_indicies_0 ( ) { return new short [ ] { 0 , 2 , 3 , 4 , 5 , 6 , 8 , 9 , 7 , 0 , 7 , 7 , 7 , 1 , 10 , 11 , 10 , 10 , 10 , 10 , 10 , 1 , 12 , 13 , 12 , 12 , 12 , 12 , 12 , 1 , 14 , 15 , 16 , 17 , 18 , 19 , 21 , 22 , 20 , 14 , 20 , 20 , 20 , 1 , 23 , 25 , 24 , 24 , 24 , 24 , 1 , 27 , 26 , 26 , 26 , 26 , 1 , 28 , 29 , 31 , 30 , 32 , 30 , 30 , 30 , 1 , 34 , 33 , 33 , 33 , 33 , 1 , 35 , 36 , 36 , 38 , 39 , 40 , 35 , 37 , 1 , 42 , 41 , 1 , 43 , 44 , 42 , 43 , 41 , 1 , 45 , 46 , 45 , 1 , 21 , 47 , 49 , 48 , 21 , 48 , 48 , 48 , 1 , 51 , 50 , 50 , 50 , 50 , 1 , 52 , 53 , 53 , 50 , 54 , 51 , 55 , 53 , 50 , 53 , 53 , 52 , 50 , 50 , 50 , 50 , 1 , 56 , 57 , 57 , 58 , 59 , 57 , 57 , 57 , 56 , 1 , 60 , 1 , 61 , 62 , 63 , 64 , 66 , 65 , 61 , 65 , 65 , 65 , 1 , 67 , 68 , 69 , 70 , 72 , 71 , 67 , 71 , 71 , 71 , 1 , 73 , 74 , 75 , 73 , 73 , 1 , 76 , 77 , 76 , 1 , 78 , 59 , 78 , 1 , 73 , 79 , 74 , 75 , 73 , 73 , 80 , 73 , 80 , 73 , 80 , 73 , 73 , 1 , 74 , 75 , 73 , 73 , 73 , 1 , 74 , 75 , 73 , 73 , 81 , 73 , 81 , 73 , 81 , 73 , 73 , 1 , 74 , 75 , 73 , 73 , 82 , 73 , 82 , 73 , 82 , 73 , 73 , 1 , 74 , 75 , 73 , 73 , 83 , 73 , 83 , 73 , 83 , 73 , 73 , 1 , 74 , 75 , 73 , 73 , 84 , 73 , 84 , 73 , 84 , 73 , 73 , 1 , 74 , 75 , 73 , 73 , 85 , 73 , 85 , 73 , 85 , 73 , 73 , 1 , 74 , 75 , 73 , 73 , 73 , 1 , 86 , 74 , 87 , 86 , 86 , 1 , 86 , 88 , 74 , 87 , 86 , 86 , 89 , 86 , 89 , 86 , 89 , 86 , 86 , 1 , 74 , 87 , 86 , 86 , 86 , 1 , 74 , 87 , 86 , 86 , 90 , 86 , 90 , 86 , 90 , 86 , 86 , 1 , 74 , 87 , 86 , 86 , 91 , 86 , 91 , 86 , 91 , 86 , 86 , 1 , 74 , 87 , 86 , 86 , 92 , 86 , 92 , 86 , 92 , 86 , 86 , 1 , 74 , 87 , 86 , 86 , 93 , 86 , 93 , 86 , 93 , 86 , 86 , 1 , 74 , 87 , 86 , 86 , 94 , 86 , 94 , 86 , 94 , 86 , 86 , 1 , 74 , 87 , 86 , 86 , 86 , 1 , 96 , 95 , 95 , 95 , 95 , 1 , 76 , 95 , 96 , 77 , 95 , 76 , 95 , 95 , 95 , 95 , 1 , 95 , 95 , 95 , 97 , 97 , 97 , 95 , 1 , 98 , 95 , 96 , 77 , 95 , 98 , 99 , 99 , 95 , 99 , 95 , 95 , 1 , 98 , 95 , 96 , 77 , 95 , 98 , 100 , 100 , 95 , 100 , 95 , 95 , 1 , 98 , 95 , 96 , 77 , 95 , 98 , 101 , 101 , 95 , 101 , 95 , 95 , 1 , 98 , 95 , 96 , 77 , 95 , 98 , 102 , 102 , 95 , 102 , 95 , 95 , 1 , 98 , 95 , 96 , 77 , 95 , 98 , 103 , 103 , 95 , 103 , 95 , 95 , 1 , 98 , 95 , 96 , 77 , 95 , 98 , 95 , 95 , 95 , 95 , 1 , 50 , 50 , 50 , 104 , 104 , 104 , 50 , 1 , 105 , 53 , 53 , 50 , 54 , 51 , 55 , 53 , 50 , 53 , 53 , 105 , 106 , 106 , 50 , 106 , 50 , 50 , 1 , 105 , 53 , 53 , 50 , 54 , 51 , 55 , 53 , 50 , 53 , 53 , 105 , 107 , 107 , 50 , 107 , 50 , 50 , 1 , 105 , 53 , 53 , 50 , 54 , 51 , 55 , 53 , 50 , 53 , 53 , 105 , 108 , 108 , 50 , 108 , 50 , 50 , 1 , 105 , 53 , 53 , 50 , 54 , 51 , 55 , 53 , 50 , 53 , 53 , 105 , 109 , 109 , 50 , 109 , 50 , 50 , 1 , 105 , 53 , 53 , 50 , 54 , 51 , 55 , 53 , 50 , 53 , 53 , 105 , 110 , 110 , 50 , 110 , 50 , 50 , 1 , 105 , 53 , 53 , 50 , 54 , 51 , 55 , 53 , 50 , 53 , 53 , 105 , 50 , 50 , 50 , 50 , 1 , 111 , 44 , 112 , 112 , 111 , 1 , 111 , 112 , 112 , 111 , 1 , 112 , 112 , 113 , 1 , 43 , 44 , 43 , 113 , 1 , 114 , 1 , 115 , 1 , 116 , 1 , 43 , 44 , 43 , 1 , 117 , 1 , 116 , 1 , 33 , 33 , 33 , 118 , 118 , 118 , 33 , 1 , 119 , 119 , 119 , 120 , 120 , 120 , 119 , 1 , 121 , 123 , 122 , 122 , 122 , 122 , 1 , 123 , 122 , 122 , 122 , 122 , 1 , 122 , 122 , 122 , 124 , 124 , 124 , 122 , 1 , 125 , 125 , 125 , 126 , 126 , 126 , 125 , 1 , 26 , 26 , 26 , 127 , 127 , 127 , 26 , 1 , 128 , 128 , 128 , 129 , 129 , 129 , 128 , 1 , 130 , 125 , 125 , 125 , 125 , 1 , 131 , 131 , 131 , 132 , 132 , 132 , 131 , 1 , 133 , 133 , 133 , 134 , 134 , 134 , 133 , 1 , 135 , 137 , 136 , 136 , 136 , 136 , 1 , 139 , 138 , 138 , 138 , 138 , 1 , 140 , 141 , 143 , 142 , 144 , 142 , 142 , 142 , 1 , 146 , 145 , 145 , 145 , 145 , 1 , 147 , 148 , 148 , 150 , 151 , 152 , 147 , 149 , 1 , 154 , 153 , 1 , 155 , 156 , 154 , 155 , 153 , 1 , 157 , 158 , 157 , 1 , 159 , 160 , 162 , 161 , 159 , 161 , 161 , 161 , 1 , 164 , 163 , 163 , 163 , 163 , 1 , 165 , 166 , 166 , 163 , 167 , 164 , 168 , 166 , 163 , 166 , 166 , 165 , 163 , 163 , 163 , 163 , 1 , 169 , 170 , 170 , 171 , 172 , 170 , 170 , 170 , 169 , 1 , 173 , 1 , 174 , 175 , 176 , 177 , 179 , 178 , 174 , 178 , 178 , 178 , 1 , 180 , 181 , 182 , 183 , 185 , 184 , 180 , 184 , 184 , 184 , 1 , 186 , 187 , 188 , 186 , 186 , 1 , 189 , 190 , 189 , 1 , 191 , 172 , 191 , 1 , 186 , 192 , 187 , 188 , 186 , 186 , 193 , 186 , 193 , 186 , 193 , 186 , 186 , 1 , 187 , 188 , 186 , 186 , 186 , 1 , 187 , 188 , 186 , 186 , 194 , 186 , 194 , 186 , 194 , 186 , 186 , 1 , 187 , 188 , 186 , 186 , 195 , 186 , 195 , 186 , 195 , 186 , 186 , 1 , 187 , 188 , 186 , 186 , 196 , 186 , 196 , 186 , 196 , 186 , 186 , 1 , 187 , 188 , 186 , 186 , 197 , 186 , 197 , 186 , 197 , 186 , 186 , 1 , 187 , 188 , 186 , 186 , 198 , 186 , 198 , 186 , 198 , 186 , 186 , 1 , 187 , 188 , 186 , 186 , 186 , 1 , 199 , 187 , 200 , 199 , 199 , 1 , 199 , 201 , 187 , 200 , 199 , 199 , 202 , 199 , 202 , 199 , 202 , 199 , 199 , 1 , 187 , 200 , 199 , 199 , 199 , 1 , 187 , 200 , 199 , 199 , 203 , 199 , 203 , 199 , 203 , 199 , 199 , 1 , 187 , 200 , 199 , 199 , 204 , 199 , 204 , 199 , 204 , 199 , 199 , 1 , 187 , 200 , 199 , 199 , 205 , 199 , 205 , 199 , 205 , 199 , 199 , 1 , 187 , 200 , 199 , 199 , 206 , 199 , 206 , 199 , 206 , 199 , 199 , 1 , 187 , 200 , 199 , 199 , 207 , 199 , 207 , 199 , 207 , 199 , 199 , 1 , 187 , 200 , 199 , 199 , 199 , 1 , 209 , 208 , 208 , 208 , 208 , 1 , 189 , 208 , 209 , 190 , 208 , 189 , 208 , 208 , 208 , 208 , 1 , 208 , 208 , 208 , 210 , 210 , 210 , 208 , 1 , 211 , 208 , 209 , 190 , 208 , 211 , 212 , 212 , 208 , 212 , 208 , 208 , 1 , 211 , 208 , 209 , 190 , 208 , 211 , 213 , 213 , 208 , 213 , 208 , 208 , 1 , 211 , 208 , 209 , 190 , 208 , 211 , 214 , 214 , 208 , 214 , 208 , 208 , 1 , 211 , 208 , 209 , 190 , 208 , 211 , 215 , 215 , 208 , 215 , 208 , 208 , 1 , 211 , 208 , 209 , 190 , 208 , 211 , 216 , 216 , 208 , 216 , 208 , 208 , 1 , 211 , 208 , 209 , 190 , 208 , 211 , 208 , 208 , 208 , 208 , 1 , 163 , 163 , 163 , 217 , 217 , 217 , 163 , 1 , 218 , 166 , 166 , 163 , 167 , 164 , 168 , 166 , 163 , 166 , 166 , 218 , 219 , 219 , 163 , 219 , 163 , 163 , 1 , 218 , 166 , 166 , 163 , 167 , 164 , 168 , 166 , 163 , 166 , 166 , 218 , 220 , 220 , 163 , 220 , 163 , 163 , 1 , 218 , 166 , 166 , 163 , 167 , 164 , 168 , 166 , 163 , 166 , 166 , 218 , 221 , 221 , 163 , 221 , 163 , 163 , 1 , 218 , 166 , 166 , 163 , 167 , 164 , 168 , 166 , 163 , 166 , 166 , 218 , 222 , 222 , 163 , 222 , 163 , 163 , 1 , 218 , 166 , 166 , 163 , 167 , 164 , 168 , 166 , 163 , 166 , 166 , 218 , 223 , 223 , 163 , 223 , 163 , 163 , 1 , 218 , 166 , 166 , 163 , 167 , 164 , 168 , 166 , 163 , 166 , 166 , 218 , 163 , 163 , 163 , 163 , 1 , 224 , 156 , 225 , 225 , 224 , 1 , 224 , 225 , 225 , 224 , 1 , 225 , 225 , 226 , 1 , 155 , 156 , 155 , 226 , 1 , 227 , 1 , 228 , 1 , 229 , 1 , 155 , 156 , 155 , 1 , 230 , 1 , 229 , 1 , 145 , 145 , 145 , 231 , 231 , 231 , 145 , 1 , 232 , 232 , 232 , 233 , 233 , 233 , 232 , 1 , 234 , 236 , 235 , 235 , 235 , 235 , 1 , 236 , 235 , 235 , 235 , 235 , 1 , 235 , 235 , 235 , 237 , 237 , 237 , 235 , 1 , 238 , 238 , 238 , 239 , 239 , 239 , 238 , 1 , 138 , 138 , 138 , 240 , 240 , 240 , 138 , 1 , 241 , 241 , 241 , 242 , 242 , 242 , 241 , 1 , 243 , 243 , 243 , 244 , 244 , 244 , 243 , 1 , 245 , 245 , 245 , 246 , 246 , 246 , 245 , 1 , 248 , 247 , 247 , 247 , 247 , 1 , 247 , 247 , 247 , 249 , 249 , 249 , 247 , 1 , 250 , 251 , 252 , 253 , 254 , 255 , 257 , 258 , 256 , 250 , 256 , 256 , 256 , 1 , 259 , 260 , 259 , 259 , 259 , 259 , 259 , 1 , 261 , 262 , 263 , 264 , 265 , 266 , 267 , 268 , 264 , 261 , 264 , 264 , 264 , 264 , 1 , 269 , 270 , 269 , 1 , 271 , 273 , 272 , 272 , 272 , 272 , 1 , 275 , 274 , 274 , 274 , 274 , 1 , 276 , 277 , 278 , 274 , 279 , 280 , 281 , 275 , 274 , 276 , 274 , 274 , 274 , 274 , 1 , 282 , 284 , 283 , 285 , 283 , 283 , 283 , 1 , 287 , 286 , 286 , 286 , 286 , 1 , 288 , 289 , 290 , 291 , 286 , 292 , 293 , 294 , 287 , 286 , 288 , 286 , 286 , 286 , 286 , 1 , 295 , 296 , 296 , 298 , 299 , 300 , 295 , 297 , 1 , 302 , 301 , 1 , 303 , 304 , 302 , 303 , 301 , 1 , 305 , 306 , 305 , 1 , 307 , 251 , 308 , 254 , 255 , 257 , 307 , 1 , 257 , 309 , 311 , 310 , 257 , 310 , 310 , 310 , 1 , 313 , 312 , 312 , 312 , 312 , 1 , 314 , 315 , 315 , 312 , 316 , 313 , 317 , 315 , 312 , 315 , 315 , 314 , 312 , 312 , 312 , 312 , 1 , 318 , 319 , 319 , 320 , 321 , 319 , 319 , 319 , 318 , 1 , 322 , 1 , 323 , 324 , 325 , 326 , 328 , 327 , 323 , 327 , 327 , 327 , 1 , 329 , 330 , 331 , 332 , 334 , 333 , 329 , 333 , 333 , 333 , 1 , 335 , 336 , 337 , 335 , 335 , 1 , 338 , 339 , 338 , 1 , 340 , 321 , 340 , 1 , 335 , 341 , 336 , 337 , 335 , 335 , 342 , 335 , 342 , 335 , 342 , 335 , 335 , 1 , 336 , 337 , 335 , 335 , 335 , 1 , 336 , 337 , 335 , 335 , 343 , 335 , 343 , 335 , 343 , 335 , 335 , 1 , 336 , 337 , 335 , 335 , 344 , 335 , 344 , 335 , 344 , 335 , 335 , 1 , 336 , 337 , 335 , 335 , 345 , 335 , 345 , 335 , 345 , 335 , 335 , 1 , 336 , 337 , 335 , 335 , 346 , 335 , 346 , 335 , 346 , 335 , 335 , 1 , 336 , 337 , 335 , 335 , 347 , 335 , 347 , 335 , 347 , 335 , 335 , 1 , 336 , 337 , 335 , 335 , 335 , 1 , 348 , 336 , 349 , 348 , 348 , 1 , 348 , 350 , 336 , 349 , 348 , 348 , 351 , 348 , 351 , 348 , 351 , 348 , 348 , 1 , 336 , 349 , 348 , 348 , 348 , 1 , 336 , 349 , 348 , 348 , 352 , 348 , 352 , 348 , 352 , 348 , 348 , 1 , 336 , 349 , 348 , 348 , 353 , 348 , 353 , 348 , 353 , 348 , 348 , 1 , 336 , 349 , 348 , 348 , 354 , 348 , 354 , 348 , 354 , 348 , 348 , 1 , 336 , 349 , 348 , 348 , 355 , 348 , 355 , 348 , 355 , 348 , 348 , 1 , 336 , 349 , 348 , 348 , 356 , 348 , 356 , 348 , 356 , 348 , 348 , 1 , 336 , 349 , 348 , 348 , 348 , 1 , 358 , 357 , 357 , 357 , 357 , 1 , 338 , 357 , 358 , 339 , 357 , 338 , 357 , 357 , 357 , 357 , 1 , 357 , 357 , 357 , 359 , 359 , 359 , 357 , 1 , 360 , 357 , 358 , 339 , 357 , 360 , 361 , 361 , 357 , 361 , 357 , 357 , 1 , 360 , 357 , 358 , 339 , 357 , 360 , 362 , 362 , 357 , 362 , 357 , 357 , 1 , 360 , 357 , 358 , 339 , 357 , 360 , 363 , 363 , 357 , 363 , 357 , 357 , 1 , 360 , 357 , 358 , 339 , 357 , 360 , 364 , 364 , 357 , 364 , 357 , 357 , 1 , 360 , 357 , 358 , 339 , 357 , 360 , 365 , 365 , 357 , 365 , 357 , 357 , 1 , 360 , 357 , 358 , 339 , 357 , 360 , 357 , 357 , 357 , 357 , 1 , 312 , 312 , 312 , 366 , 366 , 366 , 312 , 1 , 367 , 315 , 315 , 312 , 316 , 313 , 317 , 315 , 312 , 315 , 315 , 367 , 368 , 368 , 312 , 368 , 312 , 312 , 1 , 367 , 315 , 315 , 312 , 316 , 313 , 317 , 315 , 312 , 315 , 315 , 367 , 369 , 369 , 312 , 369 , 312 , 312 , 1 , 367 , 315 , 315 , 312 , 316 , 313 , 317 , 315 , 312 , 315 , 315 , 367 , 370 , 370 , 312 , 370 , 312 , 312 , 1 , 367 , 315 , 315 , 312 , 316 , 313 , 317 , 315 , 312 , 315 , 315 , 367 , 371 , 371 , 312 , 371 , 312 , 312 , 1 , 367 , 315 , 315 , 312 , 316 , 313 , 317 , 315 , 312 , 315 , 315 , 367 , 372 , 372 , 312 , 372 , 312 , 312 , 1 , 367 , 315 , 315 , 312 , 316 , 313 , 317 , 315 , 312 , 315 , 315 , 367 , 312 , 312 , 312 , 312 , 1 , 373 , 304 , 374 , 374 , 373 , 1 , 373 , 374 , 374 , 373 , 1 , 374 , 374 , 375 , 1 , 303 , 304 , 303 , 375 , 1 , 376 , 1 , 377 , 1 , 378 , 1 , 303 , 304 , 303 , 1 , 379 , 1 , 378 , 1 , 286 , 286 , 286 , 380 , 380 , 380 , 286 , 1 , 381 , 289 , 290 , 291 , 286 , 292 , 293 , 294 , 287 , 286 , 381 , 382 , 382 , 286 , 382 , 286 , 286 , 1 , 381 , 289 , 290 , 291 , 286 , 292 , 293 , 294 , 287 , 286 , 381 , 383 , 383 , 286 , 383 , 286 , 286 , 1 , 381 , 289 , 290 , 291 , 286 , 292 , 293 , 294 , 287 , 286 , 381 , 384 , 384 , 286 , 384 , 286 , 286 , 1 , 381 , 289 , 290 , 291 , 286 , 292 , 293 , 294 , 287 , 286 , 381 , 385 , 385 , 286 , 385 , 286 , 286 , 1 , 381 , 289 , 290 , 291 , 286 , 292 , 293 , 294 , 287 , 286 , 381 , 386 , 386 , 286 , 386 , 286 , 286 , 1 , 381 , 289 , 290 , 291 , 286 , 292 , 293 , 294 , 287 , 286 , 381 , 286 , 286 , 286 , 286 , 1 , 288 , 289 , 290 , 291 , 286 , 292 , 293 , 294 , 287 , 286 , 387 , 288 , 286 , 286 , 286 , 286 , 1 , 288 , 289 , 290 , 291 , 286 , 292 , 293 , 294 , 287 , 286 , 388 , 288 , 286 , 286 , 286 , 286 , 1 , 288 , 289 , 291 , 286 , 292 , 293 , 294 , 287 , 286 , 288 , 286 , 286 , 286 , 286 , 1 , 274 , 274 , 274 , 389 , 389 , 389 , 274 , 1 , 390 , 277 , 278 , 274 , 279 , 280 , 281 , 275 , 274 , 390 , 391 , 391 , 274 , 391 , 274 , 274 , 1 , 390 , 277 , 278 , 274 , 279 , 280 , 281 , 275 , 274 , 390 , 392 , 392 , 274 , 392 , 274 , 274 , 1 , 390 , 277 , 278 , 274 , 279 , 280 , 281 , 275 , 274 , 390 , 393 , 393 , 274 , 393 , 274 , 274 , 1 , 390 , 277 , 278 , 274 , 279 , 280 , 281 , 275 , 274 , 390 , 394 , 394 , 274 , 394 , 274 , 274 , 1 , 390 , 277 , 278 , 274 , 279 , 280 , 281 , 275 , 274 , 390 , 395 , 395 , 274 , 395 , 274 , 274 , 1 , 390 , 277 , 278 , 274 , 279 , 280 , 281 , 275 , 274 , 390 , 274 , 274 , 274 , 274 , 1 , 264 , 264 , 264 , 396 , 396 , 396 , 264 , 1 , 397 , 262 , 263 , 264 , 265 , 266 , 267 , 268 , 264 , 397 , 398 , 398 , 264 , 398 , 264 , 264 , 1 , 397 , 262 , 263 , 264 , 265 , 266 , 267 , 268 , 264 , 397 , 399 , 399 , 264 , 399 , 264 , 264 , 1 , 397 , 262 , 263 , 264 , 265 , 266 , 267 , 268 , 264 , 397 , 400 , 400 , 264 , 400 , 264 , 264 , 1 , 397 , 262 , 263 , 264 , 265 , 266 , 267 , 268 , 264 , 397 , 401 , 401 , 264 , 401 , 264 , 264 , 1 , 397 , 262 , 263 , 264 , 265 , 266 , 267 , 268 , 264 , 397 , 402 , 402 , 264 , 402 , 264 , 264 , 1 , 397 , 262 , 263 , 264 , 265 , 266 , 267 , 268 , 264 , 397 , 264 , 264 , 264 , 264 , 1 , 403 , 404 , 405 , 406 , 407 , 408 , 403 , 1 , 410 , 409 , 409 , 409 , 409 , 1 , 403 , 404 , 405 , 409 , 406 , 407 , 408 , 410 , 409 , 403 , 409 , 409 , 409 , 409 , 1 , 409 , 409 , 409 , 411 , 411 , 411 , 409 , 1 , 412 , 404 , 405 , 409 , 406 , 407 , 408 , 410 , 409 , 412 , 413 , 413 , 409 , 413 , 409 , 409 , 1 , 412 , 404 , 405 , 409 , 406 , 407 , 408 , 410 , 409 , 412 , 414 , 414 , 409 , 414 , 409 , 409 , 1 , 412 , 404 , 405 , 409 , 406 , 407 , 408 , 410 , 409 , 412 , 415 , 415 , 409 , 415 , 409 , 409 , 1 , 412 , 404 , 405 , 409 , 406 , 407 , 408 , 410 , 409 , 412 , 416 , 416 , 409 , 416 , 409 , 409 , 1 , 412 , 404 , 405 , 409 , 406 , 407 , 408 , 410 , 409 , 412 , 417 , 417 , 409 , 417 , 409 , 409 , 1 , 412 , 404 , 405 , 409 , 406 , 407 , 408 , 410 , 409 , 412 , 409 , 409 , 409 , 409 , 1 , 418 , 419 , 420 , 421 , 243 , 422 , 423 , 420 , 424 , 425 , 243 , 420 , 418 , 243 , 243 , 243 , 243 , 1 , 426 , 15 , 16 , 427 , 428 , 17 , 18 , 19 , 427 , 21 , 22 , 20 , 427 , 426 , 20 , 20 , 20 , 1 , 418 , 429 , 420 , 421 , 131 , 430 , 431 , 420 , 432 , 433 , 131 , 420 , 418 , 131 , 131 , 131 , 131 , 1 , 434 , 435 , 436 , 437 , 438 , 439 , 436 , 440 , 436 , 434 , 1 , 441 , 442 , 443 , 444 , 26 , 445 , 446 , 443 , 447 , 27 , 26 , 443 , 441 , 26 , 26 , 26 , 26 , 1 , 448 , 449 , 450 , 451 , 452 , 33 , 453 , 454 , 451 , 455 , 34 , 33 , 451 , 448 , 33 , 33 , 33 , 33 , 1 , 456 , 15 , 457 , 458 , 18 , 19 , 457 , 21 , 457 , 456 , 1 , 459 , 449 , 450 , 451 , 452 , 33 , 453 , 454 , 451 , 455 , 34 , 33 , 451 , 459 , 460 , 460 , 33 , 460 , 33 , 33 , 1 , 448 , 449 , 450 , 16 , 451 , 452 , 461 , 453 , 454 , 451 , 455 , 463 , 462 , 451 , 448 , 33 , 462 , 462 , 462 , 1 , 448 , 449 , 450 , 451 , 452 , 33 , 453 , 454 , 451 , 455 , 464 , 119 , 451 , 448 , 33 , 119 , 119 , 119 , 1 , 465 , 466 , 450 , 467 , 468 , 119 , 469 , 470 , 467 , 471 , 464 , 119 , 467 , 465 , 119 , 119 , 119 , 119 , 1 , 472 , 466 , 450 , 467 , 468 , 119 , 469 , 470 , 467 , 471 , 464 , 119 , 467 , 472 , 473 , 473 , 119 , 473 , 119 , 119 , 1 , 465 , 466 , 450 , 16 , 467 , 468 , 462 , 469 , 470 , 467 , 471 , 463 , 462 , 467 , 465 , 119 , 462 , 462 , 462 , 1 , 472 , 466 , 450 , 467 , 468 , 119 , 469 , 470 , 467 , 471 , 464 , 119 , 467 , 472 , 474 , 474 , 119 , 474 , 119 , 119 , 1 , 472 , 466 , 450 , 467 , 468 , 119 , 469 , 470 , 467 , 471 , 464 , 119 , 467 , 472 , 475 , 475 , 119 , 475 , 119 , 119 , 1 , 472 , 466 , 450 , 467 , 468 , 119 , 469 , 470 , 467 , 471 , 464 , 119 , 467 , 472 , 476 , 476 , 119 , 476 , 119 , 119 , 1 , 472 , 466 , 450 , 467 , 468 , 119 , 469 , 470 , 467 , 471 , 464 , 119 , 467 , 472 , 477 , 477 , 119 , 477 , 119 , 119 , 1 , 472 , 466 , 450 , 467 , 468 , 119 , 469 , 470 , 467 , 471 , 464 , 119 , 467 , 472 , 119 , 119 , 119 , 119 , 1 , 459 , 449 , 450 , 451 , 452 , 33 , 453 , 454 , 451 , 455 , 34 , 33 , 451 , 459 , 478 , 478 , 33 , 478 , 33 , 33 , 1 , 459 , 449 , 450 , 451 , 452 , 33 , 453 , 454 , 451 , 455 , 34 , 33 , 451 , 459 , 479 , 479 , 33 , 479 , 33 , 33 , 1 , 459 , 449 , 450 , 451 , 452 , 33 , 453 , 454 , 451 , 455 , 34 , 33 , 451 , 459 , 480 , 480 , 33 , 480 , 33 , 33 , 1 , 459 , 449 , 450 , 451 , 452 , 33 , 453 , 454 , 451 , 455 , 34 , 33 , 451 , 459 , 481 , 481 , 33 , 481 , 33 , 33 , 1 , 459 , 449 , 450 , 451 , 452 , 33 , 453 , 454 , 451 , 455 , 34 , 33 , 451 , 459 , 33 , 33 , 33 , 33 , 1 , 456 , 15 , 457 , 458 , 122 , 18 , 19 , 457 , 21 , 123 , 122 , 457 , 456 , 122 , 122 , 122 , 122 , 1 , 482 , 15 , 457 , 458 , 122 , 18 , 19 , 457 , 21 , 123 , 122 , 457 , 482 , 483 , 483 , 122 , 483 , 122 , 122 , 1 , 456 , 15 , 16 , 457 , 458 , 484 , 18 , 19 , 457 , 21 , 22 , 20 , 457 , 456 , 122 , 20 , 20 , 20 , 1 , 456 , 15 , 457 , 458 , 122 , 18 , 19 , 457 , 21 , 130 , 125 , 457 , 456 , 122 , 125 , 125 , 125 , 1 , 434 , 435 , 436 , 437 , 125 , 438 , 439 , 436 , 440 , 130 , 125 , 436 , 434 , 125 , 125 , 125 , 125 , 1 , 485 , 435 , 436 , 437 , 125 , 438 , 439 , 436 , 440 , 130 , 125 , 436 , 485 , 486 , 486 , 125 , 486 , 125 , 125 , 1 , 434 , 435 , 16 , 436 , 437 , 20 , 438 , 439 , 436 , 440 , 22 , 20 , 436 , 434 , 125 , 20 , 20 , 20 , 1 , 485 , 435 , 436 , 437 , 125 , 438 , 439 , 436 , 440 , 130 , 125 , 436 , 485 , 487 , 487 , 125 , 487 , 125 , 125 , 1 , 485 , 435 , 436 , 437 , 125 , 438 , 439 , 436 , 440 , 130 , 125 , 436 , 485 , 488 , 488 , 125 , 488 , 125 , 125 , 1 , 485 , 435 , 436 , 437 , 125 , 438 , 439 , 436 , 440 , 130 , 125 , 436 , 485 , 489 , 489 , 125 , 489 , 125 , 125 , 1 , 485 , 435 , 436 , 437 , 125 , 438 , 439 , 436 , 440 , 130 , 125 , 436 , 485 , 490 , 490 , 125 , 490 , 125 , 125 , 1 , 485 , 435 , 436 , 437 , 125 , 438 , 439 , 436 , 440 , 130 , 125 , 436 , 485 , 125 , 125 , 125 , 125 , 1 , 482 , 15 , 457 , 458 , 122 , 18 , 19 , 457 , 21 , 123 , 122 , 457 , 482 , 491 , 491 , 122 , 491 , 122 , 122 , 1 , 482 , 15 , 457 , 458 , 122 , 18 , 19 , 457 , 21 , 123 , 122 , 457 , 482 , 492 , 492 , 122 , 492 , 122 , 122 , 1 , 482 , 15 , 457 , 458 , 122 , 18 , 19 , 457 , 21 , 123 , 122 , 457 , 482 , 493 , 493 , 122 , 493 , 122 , 122 , 1 , 482 , 15 , 457 , 458 , 122 , 18 , 19 , 457 , 21 , 123 , 122 , 457 , 482 , 494 , 494 , 122 , 494 , 122 , 122 , 1 , 482 , 15 , 457 , 458 , 122 , 18 , 19 , 457 , 21 , 123 , 122 , 457 , 482 , 122 , 122 , 122 , 122 , 1 , 448 , 449 , 450 , 451 , 452 , 33 , 453 , 454 , 451 , 455 , 34 , 33 , 495 , 451 , 448 , 33 , 33 , 33 , 33 , 1 , 448 , 449 , 450 , 451 , 452 , 33 , 453 , 454 , 451 , 455 , 34 , 33 , 496 , 451 , 448 , 33 , 33 , 33 , 33 , 1 , 448 , 449 , 497 , 451 , 452 , 33 , 453 , 454 , 451 , 455 , 34 , 33 , 451 , 448 , 33 , 33 , 33 , 33 , 1 , 498 , 442 , 443 , 444 , 26 , 445 , 446 , 443 , 447 , 27 , 26 , 443 , 498 , 499 , 499 , 26 , 499 , 26 , 26 , 1 , 441 , 442 , 16 , 443 , 444 , 500 , 445 , 446 , 443 , 447 , 502 , 501 , 443 , 441 , 26 , 501 , 501 , 501 , 1 , 441 , 442 , 443 , 444 , 26 , 445 , 446 , 443 , 447 , 503 , 128 , 443 , 441 , 26 , 128 , 128 , 128 , 1 , 504 , 505 , 506 , 507 , 128 , 508 , 509 , 506 , 510 , 503 , 128 , 506 , 504 , 128 , 128 , 128 , 128 , 1 , 511 , 505 , 506 , 507 , 128 , 508 , 509 , 506 , 510 , 503 , 128 , 506 , 511 , 512 , 512 , 128 , 512 , 128 , 128 , 1 , 504 , 505 , 16 , 506 , 507 , 501 , 508 , 509 , 506 , 510 , 502 , 501 , 506 , 504 , 128 , 501 , 501 , 501 , 1 , 511 , 505 , 506 , 507 , 128 , 508 , 509 , 506 , 510 , 503 , 128 , 506 , 511 , 513 , 513 , 128 , 513 , 128 , 128 , 1 , 511 , 505 , 506 , 507 , 128 , 508 , 509 , 506 , 510 , 503 , 128 , 506 , 511 , 514 , 514 , 128 , 514 , 128 , 128 , 1 , 511 , 505 , 506 , 507 , 128 , 508 , 509 , 506 , 510 , 503 , 128 , 506 , 511 , 515 , 515 , 128 , 515 , 128 , 128 , 1 , 511 , 505 , 506 , 507 , 128 , 508 , 509 , 506 , 510 , 503 , 128 , 506 , 511 , 516 , 516 , 128 , 516 , 128 , 128 , 1 , 511 , 505 , 506 , 507 , 128 , 508 , 509 , 506 , 510 , 503 , 128 , 506 , 511 , 128 , 128 , 128 , 128 , 1 , 498 , 442 , 443 , 444 , 26 , 445 , 446 , 443 , 447 , 27 , 26 , 443 , 498 , 517 , 517 , 26 , 517 , 26 , 26 , 1 , 498 , 442 , 443 , 444 , 26 , 445 , 446 , 443 , 447 , 27 , 26 , 443 , 498 , 518 , 518 , 26 , 518 , 26 , 26 , 1 , 498 , 442 , 443 , 444 , 26 , 445 , 446 , 443 , 447 , 27 , 26 , 443 , 498 , 519 , 519 , 26 , 519 , 26 , 26 , 1 , 498 , 442 , 443 , 444 , 26 , 445 , 446 , 443 , 447 , 27 , 26 , 443 , 498 , 520 , 520 , 26 , 520 , 26 , 26 , 1 , 498 , 442 , 443 , 444 , 26 , 445 , 446 , 443 , 447 , 27 , 26 , 443 , 498 , 26 , 26 , 26 , 26 , 1 , 521 , 429 , 420 , 421 , 131 , 430 , 431 , 420 , 432 , 433 , 131 , 420 , 521 , 522 , 522 , 131 , 522 , 131 , 131 , 1 , 418 , 429 , 16 , 420 , 421 , 523 , 430 , 431 , 420 , 432 , 525 , 524 , 420 , 418 , 131 , 524 , 524 , 524 , 1 , 418 , 429 , 420 , 421 , 131 , 430 , 431 , 420 , 432 , 526 , 133 , 420 , 418 , 131 , 133 , 133 , 133 , 1 , 527 , 528 , 529 , 530 , 133 , 531 , 532 , 529 , 533 , 526 , 133 , 529 , 527 , 133 , 133 , 133 , 133 , 1 , 534 , 528 , 529 , 530 , 133 , 531 , 532 , 529 , 533 , 526 , 133 , 529 , 534 , 535 , 535 , 133 , 535 , 133 , 133 , 1 , 527 , 528 , 16 , 529 , 530 , 524 , 531 , 532 , 529 , 533 , 525 , 524 , 529 , 527 , 133 , 524 , 524 , 524 , 1 , 534 , 528 , 529 , 530 , 133 , 531 , 532 , 529 , 533 , 526 , 133 , 529 , 534 , 536 , 536 , 133 , 536 , 133 , 133 , 1 , 534 , 528 , 529 , 530 , 133 , 531 , 532 , 529 , 533 , 526 , 133 , 529 , 534 , 537 , 537 , 133 , 537 , 133 , 133 , 1 , 534 , 528 , 529 , 530 , 133 , 531 , 532 , 529 , 533 , 526 , 133 , 529 , 534 , 538 , 538 , 133 , 538 , 133 , 133 , 1 , 534 , 528 , 529 , 530 , 133 , 531 , 532 , 529 , 533 , 526 , 133 , 529 , 534 , 539 , 539 , 133 , 539 , 133 , 133 , 1 , 534 , 528 , 529 , 530 , 133 , 531 , 532 , 529 , 533 , 526 , 133 , 529 , 534 , 133 , 133 , 133 , 133 , 1 , 521 , 429 , 420 , 421 , 131 , 430 , 431 , 420 , 432 , 433 , 131 , 420 , 521 , 540 , 540 , 131 , 540 , 131 , 131 , 1 , 521 , 429 , 420 , 421 , 131 , 430 , 431 , 420 , 432 , 433 , 131 , 420 , 521 , 541 , 541 , 131 , 541 , 131 , 131 , 1 , 521 , 429 , 420 , 421 , 131 , 430 , 431 , 420 , 432 , 433 , 131 , 420 , 521 , 542 , 542 , 131 , 542 , 131 , 131 , 1 , 521 , 429 , 420 , 421 , 131 , 430 , 431 , 420 , 432 , 433 , 131 , 420 , 521 , 543 , 543 , 131 , 543 , 131 , 131 , 1 , 521 , 429 , 420 , 421 , 131 , 430 , 431 , 420 , 432 , 433 , 131 , 420 , 521 , 131 , 131 , 131 , 131 , 1 , 441 , 544 , 443 , 444 , 138 , 545 , 546 , 443 , 547 , 139 , 138 , 443 , 441 , 138 , 138 , 138 , 138 , 1 , 448 , 548 , 549 , 451 , 452 , 145 , 550 , 551 , 451 , 552 , 146 , 145 , 451 , 448 , 145 , 145 , 145 , 145 , 1 , 456 , 553 , 457 , 458 , 554 , 555 , 457 , 159 , 457 , 456 , 1 , 556 , 548 , 549 , 451 , 452 , 145 , 550 , 551 , 451 , 552 , 146 , 145 , 451 , 556 , 557 , 557 , 145 , 557 , 145 , 145 , 1 , 448 , 548 , 549 , 16 , 451 , 452 , 558 , 550 , 551 , 451 , 552 , 560 , 559 , 451 , 448 , 145 , 559 , 559 , 559 , 1 , 448 , 548 , 549 , 451 , 452 , 145 , 550 , 551 , 451 , 552 , 561 , 232 , 451 , 448 , 145 , 232 , 232 , 232 , 1 , 562 , 563 , 549 , 564 , 565 , 232 , 566 , 567 , 564 , 568 , 561 , 232 , 564 , 562 , 232 , 232 , 232 , 232 , 1 , 569 , 563 , 549 , 564 , 565 , 232 , 566 , 567 , 564 , 568 , 561 , 232 , 564 , 569 , 570 , 570 , 232 , 570 , 232 , 232 , 1 , 562 , 563 , 549 , 16 , 564 , 565 , 559 , 566 , 567 , 564 , 568 , 560 , 559 , 564 , 562 , 232 , 559 , 559 , 559 , 1 , 569 , 563 , 549 , 564 , 565 , 232 , 566 , 567 , 564 , 568 , 561 , 232 , 564 , 569 , 571 , 571 , 232 , 571 , 232 , 232 , 1 , 569 , 563 , 549 , 564 , 565 , 232 , 566 , 567 , 564 , 568 , 561 , 232 , 564 , 569 , 572 , 572 , 232 , 572 , 232 , 232 , 1 , 569 , 563 , 549 , 564 , 565 , 232 , 566 , 567 , 564 , 568 , 561 , 232 , 564 , 569 , 573 , 573 , 232 , 573 , 232 , 232 , 1 , 569 , 563 , 549 , 564 , 565 , 232 , 566 , 567 , 564 , 568 , 561 , 232 , 564 , 569 , 574 , 574 , 232 , 574 , 232 , 232 , 1 , 569 , 563 , 549 , 564 , 565 , 232 , 566 , 567 , 564 , 568 , 561 , 232 , 564 , 569 , 232 , 232 , 232 , 232 , 1 , 556 , 548 , 549 , 451 , 452 , 145 , 550 , 551 , 451 , 552 , 146 , 145 , 451 , 556 , 575 , 575 , 145 , 575 , 145 , 145 , 1 , 556 , 548 , 549 , 451 , 452 , 145 , 550 , 551 , 451 , 552 , 146 , 145 , 451 , 556 , 576 , 576 , 145 , 576 , 145 , 145 , 1 , 556 , 548 , 549 , 451 , 452 , 145 , 550 , 551 , 451 , 552 , 146 , 145 , 451 , 556 , 577 , 577 , 145 , 577 , 145 , 145 , 1 , 556 , 548 , 549 , 451 , 452 , 145 , 550 , 551 , 451 , 552 , 146 , 145 , 451 , 556 , 578 , 578 , 145 , 578 , 145 , 145 , 1 , 556 , 548 , 549 , 451 , 452 , 145 , 550 , 551 , 451 , 552 , 146 , 145 , 451 , 556 , 145 , 145 , 145 , 145 , 1 , 456 , 553 , 457 , 458 , 235 , 554 , 555 , 457 , 159 , 236 , 235 , 457 , 456 , 235 , 235 , 235 , 235 , 1 , 579 , 553 , 457 , 458 , 235 , 554 , 555 , 457 , 159 , 236 , 235 , 457 , 579 , 580 , 580 , 235 , 580 , 235 , 235 , 1 , 456 , 553 , 16 , 457 , 458 , 581 , 554 , 555 , 457 , 159 , 583 , 582 , 457 , 456 , 235 , 582 , 582 , 582 , 1 , 456 , 553 , 457 , 458 , 235 , 554 , 555 , 457 , 159 , 584 , 238 , 457 , 456 , 235 , 238 , 238 , 238 , 1 , 585 , 586 , 587 , 588 , 238 , 589 , 590 , 587 , 591 , 584 , 238 , 587 , 585 , 238 , 238 , 238 , 238 , 1 , 592 , 586 , 587 , 588 , 238 , 589 , 590 , 587 , 591 , 584 , 238 , 587 , 592 , 593 , 593 , 238 , 593 , 238 , 238 , 1 , 585 , 586 , 16 , 587 , 588 , 582 , 589 , 590 , 587 , 591 , 583 , 582 , 587 , 585 , 238 , 582 , 582 , 582 , 1 , 592 , 586 , 587 , 588 , 238 , 589 , 590 , 587 , 591 , 584 , 238 , 587 , 592 , 594 , 594 , 238 , 594 , 238 , 238 , 1 , 592 , 586 , 587 , 588 , 238 , 589 , 590 , 587 , 591 , 584 , 238 , 587 , 592 , 595 , 595 , 238 , 595 , 238 , 238 , 1 , 592 , 586 , 587 , 588 , 238 , 589 , 590 , 587 , 591 , 584 , 238 , 587 , 592 , 596 , 596 , 238 , 596 , 238 , 238 , 1 , 592 , 586 , 587 , 588 , 238 , 589 , 590 , 587 , 591 , 584 , 238 , 587 , 592 , 597 , 597 , 238 , 597 , 238 , 238 , 1 , 592 , 586 , 587 , 588 , 238 , 589 , 590 , 587 , 591 , 584 , 238 , 587 , 592 , 238 , 238 , 238 , 238 , 1 , 579 , 553 , 457 , 458 , 235 , 554 , 555 , 457 , 159 , 236 , 235 , 457 , 579 , 598 , 598 , 235 , 598 , 235 , 235 , 1 , 579 , 553 , 457 , 458 , 235 , 554 , 555 , 457 , 159 , 236 , 235 , 457 , 579 , 599 , 599 , 235 , 599 , 235 , 235 , 1 , 579 , 553 , 457 , 458 , 235 , 554 , 555 , 457 , 159 , 236 , 235 , 457 , 579 , 600 , 600 , 235 , 600 , 235 , 235 , 1 , 579 , 553 , 457 , 458 , 235 , 554 , 555 , 457 , 159 , 236 , 235 , 457 , 579 , 601 , 601 , 235 , 601 , 235 , 235 , 1 , 579 , 553 , 457 , 458 , 235 , 554 , 555 , 457 , 159 , 236 , 235 , 457 , 579 , 235 , 235 , 235 , 235 , 1 , 448 , 548 , 549 , 451 , 452 , 145 , 550 , 551 , 451 , 552 , 146 , 145 , 602 , 451 , 448 , 145 , 145 , 145 , 145 , 1 , 448 , 548 , 549 , 451 , 452 , 145 , 550 , 551 , 451 , 552 , 146 , 145 , 603 , 451 , 448 , 145 , 145 , 145 , 145 , 1 , 448 , 548 , 604 , 451 , 452 , 145 , 550 , 551 , 451 , 552 , 146 , 145 , 451 , 448 , 145 , 145 , 145 , 145 , 1 , 605 , 544 , 443 , 444 , 138 , 545 , 546 , 443 , 547 , 139 , 138 , 443 , 605 , 606 , 606 , 138 , 606 , 138 , 138 , 1 , 441 , 544 , 16 , 443 , 444 , 607 , 545 , 546 , 443 , 547 , 609 , 608 , 443 , 441 , 138 , 608 , 608 , 608 , 1 , 441 , 544 , 443 , 444 , 138 , 545 , 546 , 443 , 547 , 610 , 241 , 443 , 441 , 138 , 241 , 241 , 241 , 1 , 611 , 612 , 613 , 614 , 241 , 615 , 616 , 613 , 617 , 610 , 241 , 613 , 611 , 241 , 241 , 241 , 241 , 1 , 618 , 612 , 613 , 614 , 241 , 615 , 616 , 613 , 617 , 610 , 241 , 613 , 618 , 619 , 619 , 241 , 619 , 241 , 241 , 1 , 611 , 612 , 16 , 613 , 614 , 608 , 615 , 616 , 613 , 617 , 609 , 608 , 613 , 611 , 241 , 608 , 608 , 608 , 1 , 618 , 612 , 613 , 614 , 241 , 615 , 616 , 613 , 617 , 610 , 241 , 613 , 618 , 620 , 620 , 241 , 620 , 241 , 241 , 1 , 618 , 612 , 613 , 614 , 241 , 615 , 616 , 613 , 617 , 610 , 241 , 613 , 618 , 621 , 621 , 241 , 621 , 241 , 241 , 1 , 618 , 612 , 613 , 614 , 241 , 615 , 616 , 613 , 617 , 610 , 241 , 613 , 618 , 622 , 622 , 241 , 622 , 241 , 241 , 1 , 618 , 612 , 613 , 614 , 241 , 615 , 616 , 613 , 617 , 610 , 241 , 613 , 618 , 623 , 623 , 241 , 623 , 241 , 241 , 1 , 618 , 612 , 613 , 614 , 241 , 615 , 616 , 613 , 617 , 610 , 241 , 613 , 618 , 241 , 241 , 241 , 241 , 1 , 605 , 544 , 443 , 444 , 138 , 545 , 546 , 443 , 547 , 139 , 138 , 443 , 605 , 624 , 624 , 138 , 624 , 138 , 138 , 1 , 605 , 544 , 443 , 444 , 138 , 545 , 546 , 443 , 547 , 139 , 138 , 443 , 605 , 625 , 625 , 138 , 625 , 138 , 138 , 1 , 605 , 544 , 443 , 444 , 138 , 545 , 546 , 443 , 547 , 139 , 138 , 443 , 605 , 626 , 626 , 138 , 626 , 138 , 138 , 1 , 605 , 544 , 443 , 444 , 138 , 545 , 546 , 443 , 547 , 139 , 138 , 443 , 605 , 627 , 627 , 138 , 627 , 138 , 138 , 1 , 605 , 544 , 443 , 444 , 138 , 545 , 546 , 443 , 547 , 139 , 138 , 443 , 605 , 138 , 138 , 138 , 138 , 1 , 628 , 419 , 420 , 421 , 243 , 422 , 423 , 420 , 424 , 425 , 243 , 420 , 628 , 629 , 629 , 243 , 629 , 243 , 243 , 1 , 418 , 419 , 16 , 420 , 421 , 630 , 422 , 423 , 420 , 424 , 632 , 631 , 420 , 418 , 243 , 631 , 631 , 631 , 1 , 418 , 419 , 420 , 421 , 243 , 422 , 423 , 420 , 424 , 633 , 245 , 420 , 418 , 243 , 245 , 245 , 245 , 1 , 634 , 635 , 636 , 637 , 245 , 638 , 639 , 636 , 640 , 633 , 245 , 636 , 634 , 245 , 245 , 245 , 245 , 1 , 641 , 635 , 636 , 637 , 245 , 638 , 639 , 636 , 640 , 633 , 245 , 636 , 641 , 642 , 642 , 245 , 642 , 245 , 245 , 1 , 634 , 635 , 16 , 636 , 637 , 631 , 638 , 639 , 636 , 640 , 632 , 631 , 636 , 634 , 245 , 631 , 631 , 631 , 1 , 641 , 635 , 636 , 637 , 245 , 638 , 639 , 636 , 640 , 633 , 245 , 636 , 641 , 643 , 643 , 245 , 643 , 245 , 245 , 1 , 641 , 635 , 636 , 637 , 245 , 638 , 639 , 636 , 640 , 633 , 245 , 636 , 641 , 644 , 644 , 245 , 644 , 245 , 245 , 1 , 641 , 635 , 636 , 637 , 245 , 638 , 639 , 636 , 640 , 633 , 245 , 636 , 641 , 645 , 645 , 245 , 645 , 245 , 245 , 1 , 641 , 635 , 636 , 637 , 245 , 638 , 639 , 636 , 640 , 633 , 245 , 636 , 641 , 646 , 646 , 245 , 646 , 245 , 245 , 1 , 641 , 635 , 636 , 637 , 245 , 638 , 639 , 636 , 640 , 633 , 245 , 636 , 641 , 245 , 245 , 245 , 245 , 1 , 628 , 419 , 420 , 421 , 243 , 422 , 423 , 420 , 424 , 425 , 243 , 420 , 628 , 647 , 647 , 243 , 647 , 243 , 243 , 1 , 628 , 419 , 420 , 421 , 243 , 422 , 423 , 420 , 424 , 425 , 243 , 420 , 628 , 648 , 648 , 243 , 648 , 243 , 243 , 1 , 628 , 419 , 420 , 421 , 243 , 422 , 423 , 420 , 424 , 425 , 243 , 420 , 628 , 649 , 649 , 243 , 649 , 243 , 243 , 1 , 628 , 419 , 420 , 421 , 243 , 422 , 423 , 420 , 424 , 425 , 243 , 420 , 628 , 650 , 650 , 243 , 650 , 243 , 243 , 1 , 628 , 419 , 420 , 421 , 243 , 422 , 423 , 420 , 424 , 425 , 243 , 420 , 628 , 243 , 243 , 243 , 243 , 1 , 434 , 586 , 436 , 437 , 589 , 590 , 436 , 591 , 436 , 434 , 1 , 434 , 586 , 436 , 437 , 247 , 589 , 590 , 436 , 591 , 248 , 247 , 436 , 434 , 247 , 247 , 247 , 247 , 1 , 651 , 586 , 436 , 437 , 247 , 589 , 590 , 436 , 591 , 248 , 247 , 436 , 651 , 652 , 652 , 247 , 652 , 247 , 247 , 1 , 434 , 586 , 16 , 436 , 437 , 653 , 589 , 590 , 436 , 591 , 654 , 653 , 436 , 434 , 247 , 653 , 653 , 653 , 1 , 651 , 586 , 436 , 437 , 247 , 589 , 590 , 436 , 591 , 248 , 247 , 436 , 651 , 655 , 655 , 247 , 655 , 247 , 247 , 1 , 651 , 586 , 436 , 437 , 247 , 589 , 590 , 436 , 591 , 248 , 247 , 436 , 651 , 656 , 656 , 247 , 656 , 247 , 247 , 1 , 651 , 586 , 436 , 437 , 247 , 589 , 590 , 436 , 591 , 248 , 247 , 436 , 651 , 657 , 657 , 247 , 657 , 247 , 247 , 1 , 651 , 586 , 436 , 437 , 247 , 589 , 590 , 436 , 591 , 248 , 247 , 436 , 651 , 658 , 658 , 247 , 658 , 247 , 247 , 1 , 651 , 586 , 436 , 437 , 247 , 589 , 590 , 436 , 591 , 248 , 247 , 436 , 651 , 247 , 247 , 247 , 247 , 1 , 1 , 0 } ; }
tr	7	@ Override public void componentResized ( ComponentEvent e ) { if ( autoscale ) { scale ( ) ; } invalidate ( ) ; }
tr	6	@ Test ( expected = IllegalArgumentException . class ) public void shouldFailToParseRangeInDashNotation ( ) { Ipv6 . parse ( "1:2:3:4-1:2:3:5" ) ; }
tr	2	public boolean isEmpty ( ) { return this . first == null ; }
tr	6	@ Override public String getFileNameSuffix ( ) { final String suffix = "csv" ; return suffix ; }
tr	4	public void setResponseCode ( int responseCode ) { this . responseCode = responseCode ; }
tr	8	public Scene add ( final GeometricObject ... paramObjects ) { objects . addAll ( asList ( paramObjects ) ) ; return this ; }
tr	8	@ Override public String toString ( ) { return this . getClass ( ) . getName ( ) + " code: " + code + " category: " + category + " message: " + message ; }
tr	6	public String getAttributeNS ( String namespaceURI , String localName ) { return null ; }
tr	6	public void setBodyTokens ( Vector < Integer > bodyTokens ) { _bodyTokens = bodyTokens ; }
tr	4	public void setExtend ( float extend ) { this . extend = extend ; }
tr	4	public synchronized void xsetR1InitialDelay ( int a ) { r1ID = a ; }
tr	8	public JSONArray suggestionsFavoritesHot ( ) throws WeiboException { return client . get ( WeiboConfig . getValue ( "baseURL" ) + "suggestions/favorites/hot.json" ) . asJSONArray ( ) ; }
tr	8	public ZippedDocumentTemplate ( InputStream inputStream ) throws IOException { archive = OpenDocumentIO . readZip ( inputStream ) ; }
tr	7	public void registerNewCustomer ( Customer c ) { if ( uowc != null ) { uowc . registerNewCustomers ( c ) ; } }
tr	6	public static double variance ( double ad [ ] ) { return variance ( ad , 0 , ad . length ) ; }
tr	2	@ Override public void resume ( ) { }
tr	5	public void setBaselineGroup ( SampleGroup baselineGroup ) { this . baselineGroup = baselineGroup ; }
tr	7	private File get ( String regKey ) { return get ( regKey , regKey ) ; }
tr	3	public JPasswordField getPassword ( ) { return password ; }
tr	7	protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { }
tr	8	public static void main ( String [ ] args ) { keyword_synchronized app = new keyword_synchronized ( ) ; app . doWork ( ) ; }
tr	5	public THashMap < String , String > getSpecialEntities ( ) { return specialEntities ; }
tr	9	private IdentNode constIdent ( ) { IdentNode fu = new IdentNode ( read ( ID , "identifier" ) . text ( ) + "" ) ; return fu ; }
tr	8	public RobotProtocolTemplate ( InputStream input , OutputStream output ) { super ( new RobotRequestReader ( input ) , output ) ; }
tr	7	public Object getValue ( String expression ) { return getDelegate ( ) . getValue ( expression ) ; }
tr	4	public void setHeight ( int height ) { this . height = height ; }
tr	10	@ Override public void run ( CommandArgument [ ] args ) { String sql = "SELECT customerID  status  sum(price * quantity) AS TotalBalance " + "FROM CustomerBillingCycle cb  CustomerBill b  CustomerBillItems bi " + "WHERE cb.id = b.customerBillcycleid  AND b.id = bi.customerbillid and StoreId = ?  AND dateTime > ? AND dateTime < ? " + "GROUP BY status  customerID" ; DatabaseManager . runPreparedStatement ( sql , args , true ) ; }
tr	10	@ Override public CodeFragment visitValInt ( MagicParser . ValIntContext ctx ) { return generateConstant ( BasicType . int , ctx . int ( ) . getText ( ) ) ; }
tr	6	@ AfterClass public static void tearDownAfterClass ( ) throws Exception { System . out . println ( "AfterClass test##########################################################" ) ; }
tr	3	public File scmExtractedTo ( ) { return this . scmExtracedTo ; }
tr	3	public static Posicion construirPosicionConEnemigo ( ) { return new PosicionConEnemigo ( ) ; }
tr	7	@ Override public String toString ( ) { return String . format ( "Service Id: %d.\nHas times: %s." , this . id , this . times ) ; }
tr	6	public Entry pop ( ) throws ArrayIndexOutOfBoundsException { return stack . remove ( getLastIndex ( ) ) ; }
tr	6	private void addVertexShader ( String text ) { addProgram ( text , GL_VERTEX_SHADER ) ; }
tr	9	public ServerConnections ( SlimServer slimServer , CoverSource coverSource ) { super ( ) ; this . slimServer = slimServer ; this . coverSource = coverSource ; }
tr	3	public int kontrolle ( ) { if ( a < 0 && b < 0 ) return 1 ; else return 0 ; }
tr	7	@ Override public void setRotation ( float rotation ) { super . setRotation ( rotation ) ; dispatchEvent ( new MapObjectChangeEvent ( this ) ) ; }
tr	3	public SaveAsAction getSaveAsAction ( ) { return saveAsAction ; }
tr	2	public int getObjectTotal ( ) { return this . objectTotal ; }
tr	6	public Scope createNewScope ( Scope scope ) { return scope . createFunctionScope ( ) ; }
tr	1	ExamplesBasicTypes ( ) { }
tr	3	public int getTotalFourmis ( ) { return this . getFourmi ( ) . size ( ) ; }
tr	1	protected RandomPlayer ( ) { }
tr	2	public int cdlGapSideSideWhiteLookback ( ) { return super . cdlGapSideSideWhiteLookback ( ) ; }
tr	10	@ EventHandler ( ignoreCancelled = true ) public void changeBlock ( EntityChangeBlockEvent ecbe ) { ecbe . setCancelled ( maybeReinforcementDamaged ( ecbe . getBlock ( ) ) ) ; }
tr	6	public void create ( T entity ) { getEntityManager ( ) . persist ( entity ) ; }
tr	4	public CKeyEvent nextKeyEvent ( ) { return KeysQueue . poll ( ) ; }
tr	3	public SEmail2 createSEmail2 ( ) { return new SEmail2 ( ) ; }
tr	1	public ProtectedResourceSwingClient ( ) { }
tr	5	public void setDirname ( String dirname ) { this . dirname = dirname ; }
tr	10	@ Override public void mouseClicked ( MouseEvent e ) { int index = locationToIndex ( e . getPoint ( ) ) ; invertChecked ( index ) ; }
tr	8	public Joueur ( String nom , int monnaie ) { this . nom = nom ; this . argent = monnaie ; }
tr	8	public double optDouble ( int index , double defaultValue ) { try { return this . getDouble ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
tr	7	public final CC sizeGroupX ( String s ) { hor . setSizeGroup ( s ) ; return this ; }
tr	4	@ Override public float getError ( ) { return w . getError ( ) ; }
tr	2	public float getViewPlaneDistance ( ) { return viewPlaneDistance ; }
tr	7	public SVFieldCondition getCondition ( String sKey ) { return map . get ( sKey ) ; }
tr	8	public void setCall ( String call ) { firePropertyChange ( MODEL_CALL , call , this . call = call ) ; }
tr	7	public void setOpposite ( HalfEdge edge ) { opposite = edge ; edge . opposite = this ; }
tr	10	private void jLabel5MouseClicked ( java . awt . event . MouseEvent evt ) { ControlVentanas . crearFace ( this . usuarioLogueado ) ; this . dispose ( ) ; }
tr	10	public static void main ( String [ ] args ) { Cliente frmcliente = new Cliente ( ) ; frmcliente . show ( ) ; frmcliente . setLocationRelativeTo ( null ) ; }
tr	6	public static void main ( String args [ ] ) { Beethoven me = new Beethoven ( ) ; }
tr	3	public int getSize ( ) { return this . slots . length ; }
tr	4	@ Test @ Ignore public void testQueueHistory ( ) { fail ( "Not yet implemented" ) ; }
tr	2	public int getId ( ) { return id ; }
tr	6	@ JsonProperty ( "label" ) public void setLabel ( String label ) { this . label = label ; }
tr	4	public ProcedimentoNaoDeclaradoException ( Id id ) { super ( "Procedimento " + id + " n\u00E3o declarado." ) ; }
tr	10	@ Parameters ( { "url" , "browser" } ) @ BeforeClass public void setUp ( String url , String browser ) throws Exception { load_page_headless ( url ) ; }
tr	4	public List < Severity > getSeverities ( ) { return severities ; }
tr	4	public Vector2 getShipPosition ( ) { return physics . getShipPosition ( ) ; }
tr	4	public void setEndY ( int endY ) { this . endY = endY ; }
tr	1	public void setMutables ( ) { }
tr	7	@ Test public void reverseWithNull ( ) { try { instance . reverse ( null ) ; fail ( "Expected exception not thrown." ) ; } catch ( NullPointerException e ) { } }
tr	7	public String getModDateStr ( ) { if ( moddate . getTime ( ) == 0 ) { return ( "" ) ; } return ( dtfmt . format ( moddate ) ) ; }
tr	9	public Message ( String body , InetSocketAddress dest ) { this . body = body ; this . dest = dest ; }
tr	2	public int getIconWidth ( ) { return WIDTH ; }
tr	9	@ Test public void STEEL_attacking_FLYING ( ) { assertEquals ( 1.0 , tc . getWeaknessResistance ( Type . STEEL , Type . FLYING ) , 0.0 ) ; }
tr	3	public void run ( ) { this . loadFiles ( ) ; this . computeStats ( ) ; }
tr	10	public void readPajek ( String file ) { if ( network != null ) network . clear ( ) ; network = netGen . readPajek ( file ) ; }
tr	1	public FinallyLord ( ) { }
tr	3	@ After public void tearDown ( ) throws Exception { }
tr	2	public int getMaxXCoordinate ( ) { return maxXCoordinate ; }
tr	9	public Name get ( final char [ ] chars , final int offset , final int count ) { return get ( chars , offset , count , false ) ; }
tr	7	public String rReadConsole ( Rengine arg0 , String arg1 , int arg2 ) { return null ; }
tr	2	public double getSamplePeriod ( ) { return mSamplePeriod ; }
tr	6	public void addPropertyChangeListener ( PropertyChangeListener listener ) { changeSupport . addPropertyChangeListener ( listener ) ; }
tr	2	private TurtleGrammar ( ) { init ( ) ; }
tr	5	public void setKategorie ( String kategorie ) { this . kategorie = kategorie ; }
tr	7	public void dumpScreen ( final String filename ) { assertConnected ( ) ; screen . dump ( filename ) ; }
tr	10	@ Test public void testByZero ( ) { try { DivisionResult dr = Util . divideByApproximatelyEqualParts ( 2 , 0 ) ; fail ( "ae expected  but obtained " + dr ) ; } catch ( ArithmeticException ae ) { } }
tr	7	public boolean setId ( long id ) { if ( stat . qidPath != 0 ) return false ; stat . qidPath = id ; return true ; }
tr	3	public String getDrugName ( ) { return drugName ; }
tr	6	private void enqueueCommands ( String command ) { queue . offer ( command ) ; }
tr	2	public list ( ) { this . info = "list all venues" ; }
tr	1	public MeizituEntity ( ) { }
tr	10	public static boolean removeGroup ( String name ) { if ( existGroup ( name . toLowerCase ( ) ) ) { groups . remove ( name . toLowerCase ( ) ) ; return true ; } return false ; }
tr	5	public void keyReleased ( KeyEvent e ) { mouseClicked ( ev ) ; }
tr	1	public ExitKiosk ( ) { }
tr	9	private final void processItems ( final List < Step > items ) { for ( final Step item : items ) { item . process ( ) ; } }
tr	10	protected DBObject ( Connection con , String id ) { this . con = con ; this . id = id ; loadFromDB ( ) ; }
tr	4	public void setStatusId ( long statusId ) { this . statusId = statusId ; }
tr	7	public LaneAlreadyRegisteredException ( String message , Throwable cause ) { super ( message , cause ) ; }
tr	9	@ Override public int compareTo ( Toll o ) { if ( o == null ) { return - 1 ; } return end . compareTo ( o . start ) ; }
tr	6	public LongOption ( char shortForm , String longForm ) { super ( shortForm , longForm , true ) ; }
tr	6	public String toDTO ( Cinema cinema ) { return cinema . getName ( ) ; }
tr	5	public void setTelefone ( String telefone ) { this . telefone = telefone ; }
tr	5	public void setDe ( String de ) { this . de = de ; }
tr	3	private static void jj_la1_init_0 ( ) { jj_la1_0 = new int [ ] { 1a40 , 60 , 60 , 180 , 180 , 1240 , 1200 , } ; }
tr	10	public List < RetweetDetails > getRetweets ( long statusId ) throws WeiboException { return RetweetDetails . createRetweetDetails ( get ( getBaseURL ( ) + "statuses/retweets/" + statusId + ".json" , true ) ) ; }
tr	3	@ Override public int intValue ( ) { return value ; }
tr	4	public void setImportant ( boolean important ) { this . important = important ; }
tr	8	@ Override public Id emit ( Relationship relationship ) { return repository . add ( relationship ) ; }
tr	5	public void setTimeUnits ( String timeUnits ) { this . timeUnits = timeUnits ; }
tr	3	public SSMS getSSMS ( ) { return ssms ; }
tr	7	public Country getSelectedNeighbour ( Country c ) { return map . getSelectedNeighbour ( c ) ; }
tr	10	public void monitorUpdaterStart ( ) { MonitorUpdater monitorUp = new MonitorUpdater ( testResource ) ; monitorUp . setName ( "Monitor Updater Thread" ) ; work = true ; monitorUp . start ( ) ; }
tr	9	boolean getBooleanValue ( Element ele , String tagName ) { return boolean . parseBoolean ( getTextValue ( ele , tagName ) ) ; }
tr	2	public double getPriceLevel3 ( ) { return priceLevel3 ; }
tr	2	@ Test public void testFree ( ) { }
tr	4	public void setActiveExtruder ( int ex ) { activeEx = ex ; }
tr	9	public static void ms ( long ms ) { try { Thread . sleep ( ms ) ; } catch ( InterruptedException ie ) { throw new RuntimeException ( ie ) ; } }
tr	4	@ Before public void setUp ( ) { undertest = new MedianStore ( ) ; }
tr	7	public XKPanel init ( ChessCore c ) { this . c = c ; setLayout ( null ) ; return this ; }
tr	6	@ Override public void accept ( CommandVisitor visitor ) { visitor . visit ( this ) ; }
tr	9	public boolean optBoolean ( String key , boolean defaultValue ) { try { return this . getBoolean ( key ) ; } catch ( Exception e ) { return defaultValue ; } }
tr	7	@ Override public void setDebug ( boolean debug ) { plugin . getConfig ( ) . set ( "debug" , debug ) ; }
tr	8	public void link ( final OtpErlangPid dest ) throws IOException { super . sendLink ( self . pid ( ) , dest ) ; }
tr	10	public LexerRule ( String pattern ) { regex = Pattern . compile ( pattern ) ; this . type = TYPE . VALID ; }
tr	10	public static MoveObjectCommand move ( MapObject object , int newX , int newY ) { return new MoveObjectCommand ( object , newX , newY ) ; }
tr	6	public JSONArray ( String source ) throws JSONException { this ( new JSONTokener ( source ) ) ; }
tr	2	public void checkForNewVersion ( ) { start ( ) ; }
tr	1	private void preferences ( ) { }
tr	2	public boolean hasCommand ( ) { return hascmd ; }
tr	5	public boolean [ ] [ ] getValidBoard ( int [ ] [ ] board ) { return getValidBoard ( board , this . currentWallOffset ) ; }
tr	5	@ Override public String toString ( ) { return "[" + x + " " + y + "]" ; }
tr	8	@ Override public Account getAccount ( String number ) { return accounts . get ( number ) ; }
tr	6	public SignatureRenderer ( ) { this . cellRenderer = new JList < > ( ) . getCellRenderer ( ) ; this . dateFormat = new SimpleDateFormat ( "( kk:mm - dd/MM/yyyy)" ) ; }
tr	4	public void activateTerminal ( ) { new Thread ( terminalReader ) . start ( ) ; }
tr	4	@ Override public void setDim ( int dim ) { reset ( ) ; }
tr	2	public float [ ] getFillColour ( ) { return mFillColour ; }
tr	2	public char getChar ( ) { return this . character ; }
tr	8	public Integer getAndAdd ( int delta ) { return getAndSet ( ( Integer value ) -> { return value + delta ; } ) ; }
tr	5	public void setName ( String name ) { this . name = name ; }
tr	3	public void setPane ( GravityPane gp ) { }
tr	10	@ Override public void imprimirln ( String s ) throws IOException { fw . write ( s + "\n" ) ; fw . flush ( ) ; }
tr	4	public ConfigManager config ( ) { check ( "getConfig" ) ; return mConfig ; }
tr	7	public ChartConfiguration < T > setTitle ( Title title ) { this . title = title ; return this ; }
tr	1	public OptionParser ( ) { }
tr	2	public int getNumber ( ) { return number ; }
tr	7	public FrameListener ( GameView gameView ) { this . frame = gameView . getGameFrame ( ) ; this . init ( ) ; }
tr	2	public double getX ( ) { return x ; }
tr	6	private static TermURIs getURISet ( ) { if ( _singleton == null ) { _singleton = new TermURIs ( ) ; } return _singleton ; }
tr	1	public LibrarianNGTest ( ) { }
tr	1	public ColumnSubset ( ) { }
tr	3	private void setLookAndFeel ( Object laf ) { }
tr	4	public Holder ( ) { System . out . println ( "Holder created" ) ; }
tr	1	private Database ( ) { }
tr	8	public static CoverageContentType [ ] values ( ) { synchronized ( VALUES ) { return VALUES . toArray ( new CoverageContentType [ VALUES . size ( ) ] ) ; } }
tr	9	@ Override public Component getComponentAfter ( Container container , Component component ) { return cycle ( component , 1 ) ; }
tr	7	public ConstrucaoTabuleiroException ( String mensagem , Exception causa ) { super ( mensagem , causa ) ; }
tr	10	public void removeFileFromSharedFiles ( String hash ) { logger . info ( "Remove file with hash '" + hash + "' from " + this . toString ( ) ) ; shares . remove ( hash ) ; }
tr	7	private PoolEntryFactory < T > createPoolEntryFactory ( ) { return new BasicPoolEntryFactory < T > ( pooledObjectfactory , pooledObjectValidator ) ; }
tr	9	public Node ( DataPoint dataPoint , Point2D . double location ) { this . dataPoint = dataPoint ; this . location = location ; }
tr	3	public void increase ( ) throws RemoteException { counter ++ ; }
tr	9	@ Before public void setUp ( ) { outputStream = new ByteArrayOutputStream ( ) ; responder = new ResponseWriter ( ) ; responder . setOutputStream ( outputStream ) ; }
tr	3	public void work ( ) { logger . debug ( "Employee working!!!" ) ; }
tr	2	void clear ( ) { referenceId = 0 ; }
tr	4	public void setCenterLongitude ( double centerLongitude ) { this . centerLongitude = centerLongitude ; }
tr	7	public ITTrackKind getKind ( ) { return ITTrackKind . values ( ) [ Dispatch . get ( this , "Kind" ) . getInt ( ) ] ; }
tr	3	public Date getToReceiptDate ( ) { return toReceiptDate ; }
tr	5	public Picture ( String source ) { load ( source ) ; }
tr	9	@ Test public void KyselynLuominenToimii ( ) { Kysely kysely = sailio . luoKysely ( "testikysely" ) ; assertEquals ( "testikysely" , kysely . getNimi ( ) ) ; }
tr	9	@ Test public void testGetDataBase_3 ( ) throws Exception { DataBase result = DataBaseFactory . getDataBase ( ) ; assertNotNull ( result ) ; }
tr	5	public void setPassword ( String password ) { this . password = password ; }
tr	9	public void correct ( ) { cp . setColorCorrect ( ) ; mcPanel . invalidate ( ) ; mcPanel . validate ( ) ; mcPanel . repaint ( ) ; }
tr	5	@ Override public boolean getDebug ( ) { return plugin . getConfig ( ) . getBoolean ( "debug" , true ) ; }
tr	1	public void setPlayerName ( ) { }
tr	1	public GetUserSettingsRequest ( ) { }
tr	1	public void setScore ( ) { }
tr	7	@ Override public boolean containsAll ( Collection < ? > c ) { return this . cards . containsAll ( c ) ; }
tr	8	public JSONArray put ( int index , double value ) throws JSONException { this . put ( index , new double ( value ) ) ; return this ; }
tr	9	public UpdateDescriptor ( String attrName , Exp value ) { this . attrName = attrName ; this . value = value ; }
tr	1	public ProportionNonInformativeAlleles ( ) { this ( "PN" , "Proportion of non-informative alleles" ) ; }
tr	2	public int getPreferedSize ( ) { return preferedsize ; }
tr	9	@ Override @ Transactional ( propagation = Propagation . MANDATORY ) public trainerDetails perist ( trainerDetails entity ) { return null ; }
tr	9	public void set ( Pipe otherPipe , int lineN ) { checkCompat ( otherPipe , this , lineN ) ; set ( otherPipe ) ; }
tr	8	public final String getText ( Level level ) { return this . iterator . getUTF8Text ( level . value ) ; }
tr	6	private boolean isPreconditionsFilled ( Path absFilePath ) { if ( ! canWriteSelectedFile ( absFilePath ) ) { return false ; } if ( ! canWriteWithDefaultOriginalClassConstructor ( ) ) { return false ; } return true ; }
tr	6	@ Override public Font getFont ( ) { return new Font ( "Ubuntu" , Font . PLAIN , 11 ) ; }
tr	8	@ Override protected final V convert ( String argument ) { return convertWith ( converter , argument ) ; }
tr	1	public Builder ( ) { }
tr	3	@ Override public int size ( ) { return pixels ; }
tr	8	public SimpleEval ( Board b , int d , boolean iW ) { super ( b , d , iW ) ; }
tr	6	public TickOptions setFontWeight ( String fontWeight ) { this . fontWeight = fontWeight ; return this ; }
tr	5	public void setCONTACTS_SALES ( String cONTACTS_SALES ) { CONTACTS_SALES = cONTACTS_SALES ; }
tr	10	public void add ( Location loc , T occupant ) { getGrid ( ) . put ( loc , occupant ) ; repaint ( ) ; }
tr	10	public int compare ( LeaderOffer o1 , LeaderOffer o2 ) { return o1 . getCode ( ) . compareTo ( o2 . getCode ( ) ) ; }
tr	4	public void setActive ( boolean active ) { this . active = active ; }
tr	1	public TestResult ( ) { }
tr	10	public ContractFrame ( String strTitle , String strCaption ) { setTitle ( strTitle ) ; caption = strCaption ; createUI ( ) ; }
tr	5	public void setNombre ( String Nombre ) { this . Nombre = Nombre ; }
tr	9	public void setAdditionalStatusInfoText ( String additionalStatusInfoText ) { if ( additionalStatusInfoText == null ) { this . additionalStatusInfoText . setText ( "" ) ; } else { this . additionalStatusInfoText . setText ( additionalStatusInfoText ) ; } }
tr	9	public static int getNextPlayerID ( ) { TanksFightManagerModel . playerID ++ ; if ( TanksFightManagerModel . playerID < 0 ) { TanksFightManagerModel . playerID = 1 ; } return TanksFightManagerModel . playerID ; }
tr	9	public IITPlaylist createFolder ( String folderName ) { return new IITPlaylist ( Dispatch . call ( this , "CreateFolder" , folderName ) . toDispatch ( ) ) ; }
tr	3	public boolean isEmpty ( ) { return participants . isEmpty ( ) ; }
tr	9	@ Test public void getMessage_server2 ( ) throws InvalidCommandException { Pong p = new Pong ( null , "server2" ) ; assert . assertEquals ( p . getMessage ( ) , "PONG :server2" ) ; }
tr	7	static void print ( String text ) { System . out . println ( text ) ; }
tr	2	public int getSkip ( ) { return skip ; }
tr	7	public static UserModes get ( String name ) { return NAME_MAP . get ( name ) ; }
tr	2	public double getViewRefreshTime ( ) { return viewRefreshTime ; }
tr	1	public SavedEntityState ( ) { this ( null ) ; }
tr	7	public IntLiteral ( String s , SourcePosition posn ) { super ( s , posn ) ; }
tr	3	public String getImage0 ( ) { return image0 ; }
tr	7	private void RefreshButtonActionPerformed ( java . awt . event . ActionEvent evt ) { this . ListRefresher ( ) ; }
tr	7	public void init ( ) { for ( AbstractFeaturizer f : featurizerList ) { f . init ( m ) ; } }
tr	10	Packet02Handshake ( DataInputStream in , PassthroughConnection ptc , KillableThread thread ) { super ( in , ptc , thread ) ; }
tr	10	@ Override public int hashCode ( ) { return new HashCodeBuilder ( ) . append ( DomainID ) . append ( ServiceID ) . append ( additionalProperties ) . toHashCode ( ) ; }
tr	6	@ Override public void visit ( LiteralInt node ) { println ( node ) ; }
tr	10	public String getUsernameSplit ( ) { String raw = getUsername ( ) ; String [ ] split = raw . split ( ";" ) ; return split [ 0 ] ; }
tr	9	public Material setColor ( double dr , double dg , double db ) { return setDiffuse ( dr , dg , db , 1 ) ; }
tr	5	public void setUser ( User user ) { this . user = user ; }
tr	9	public PolicyIterationImpl ( MDPData mdpData , boolean isSeedProvided ) { this . mdpData = mdpData ; this . isSeedProvided = isSeedProvided ; init ( ) ; }
tr	5	public void setSocket ( CPUSocket socket ) { this . socket = socket ; }
tr	2	public boolean getTemValor ( ) { return this . temValor ; }
tr	6	public String getMessage ( ) { return super . getMessage ( ) + SEPARATOR + getErrnoString ( ) + " [" + errno + "] " ; }
tr	6	public Rect div ( double factor ) { return copy ( ) . div_ip ( factor ) ; }
tr	3	public String getDate ( ) { return date ; }
tr	2	public Goblin ( ) { super ( "Goblin" , 20 , 10 , 10 , 10 , 10 ) ; setLevel ( 1 ) ; }
tr	6	public boolean isShareQuantityZero ( ) { boolean result ; if ( shareQuantity == 0 ) { result = true ; } else { result = false ; } return result ; }
tr	10	public static GameResult fromInt ( int val ) { for ( GameResult gr : list ) { if ( gr . getValue ( ) == val ) { return gr ; } } return null ; }
tr	7	@ Test public void testToString ( ) { assertEquals ( "c4-c6" , new SimpleMovement ( new Position ( 3 , 4 ) , new Position ( 3 , 6 ) ) . toString ( ) ) ; }
tr	5	protected void addReference ( AddressBook theContainer ) { containerRefAddressBook = theContainer ; }
tr	10	public void addEqualsCondition ( String fieldName , Object value ) { eqConditions . add ( new EqualsCondition ( fieldName , value ) ) ; }
tr	2	public ItemStack getDrop ( ) { return null ; }
tr	10	public static Image decorateImage ( Image baseImage , Image decorator ) { return decorateImage ( baseImage , decorator , BOTTOM_RIGHT ) ; }
tr	3	public Geometry getPart ( ) { return part ; }
tr	8	@ Override public void sort ( int [ ] array ) { comparisonCount = 0 ; sort ( array , 0 , array . length - 1 ) ; }
tr	5	public void run ( ) { txtComponent . select ( pos , pos2 ) ; }
tr	3	public int getSize ( ) { return font . getSize ( ) ; }
tr	5	public void setResult ( BattleCompletedEvent result ) { this . result = result ; }
tr	5	public final void setId ( final String value ) { this . id = value ; }
tr	5	@ Override public List < String > getDeclaredPermissions ( ) { return getDeclaredPermissions ( null ) ; }
tr	4	public List < Points > getPoints ( ) { return points ; }
tr	3	public Node getNext ( ) { return next ; }
tr	8	public DirOutputter ( MigrationContext context ) { this . rootDir = context . getOutputDir ( ) ; this . context = context ; }
tr	2	public int getFj ( ) { return fj ; }
tr	9	public int setRib ( String rib ) { if ( rib . length ( ) > ConfigGlobale . longueurRIB ) { return - 1 ; } else { this . rib = rib ; return 0 ; } }
tr	8	protected void setCenter ( ) { m_dpTable = new DPTable ( 10 , 6 ) ; m_dpTable . setCellListener ( this ) ; m_gridScrollArea . add ( m_dpTable ) ; }
tr	3	public Date getTungay ( ) { return this . tungay ; }
tr	1	public RandomSet ( ) { }
tr	8	public MainConsoleMenu ( CurrentGameState cgs ) { this . cgs = cgs ; this . userInput = new UserInput ( ) ; this . keepPlaying = true ; }
tr	1	public Address ( ) { }
tr	2	public float [ ] getPointColour ( ) { return mPointColour ; }
tr	3	public static String dataBasePassword ( ) { return lePropriedade ( "Database.Password" ) ; }
tr	1	public JYearChooserBeanInfo ( ) { super ( "JYearChooser" , false ) ; }
tr	6	public String getColumnName ( int col ) { return names [ col ] . toString ( ) ; }
tr	7	public void setOriginalArtist ( String originalArtist ) { if ( id3v2Tag != null ) { id3v2Tag . setOriginalArtist ( originalArtist ) ; } }
tr	3	public SeedPoint getSeed ( ) { return seed ; }
tr	4	public Unit getBuildUnit ( ) { return getBuildUnit_native ( pointer ) ; }
tr	2	public double getRotationX ( ) { return rotationX ; }
tr	3	public String getUri ( ) { return uri ; }
tr	6	public JSONStringer object ( ) throws JSONException { return open ( Scope . EMPTY_OBJECT , "{" ) ; }
tr	1	public KulButton ( ) { this ( "" ) ; }
tr	8	public double Next_Gaussian ( double mean , double stdev ) { double x = ( double ) Next_Gaussian ( ) ; return ( double ) ( x * stdev + mean ) ; }
tr	4	C getContext ( ) { return _context . getContext ( ) ; }
tr	10	public EntityOperations ( ) { for ( Operation operataion : Operation . values ( ) ) { operations . put ( operataion , new ArrayList < JaxrsResource > ( ) ) ; } }
tr	1	public int statDrop ( ) { return 0 ; }
tr	4	@ Override public Color getColor ( ) { return color ; }
tr	1	public long op ( ) { return 1 ; }
tr	5	@ Override public String getName ( ) { return "\uC6B0\uC720 + " + target . getName ( ) ; }
tr	10	public String getAnswerString ( ) { String answer = "" ; for ( String str : correctAnswers ) { answer += "  " + str ; } return answer ; }
tr	9	public Muckyluat ( String noidung , Set kyluats ) { this . noidung = noidung ; this . kyluats = kyluats ; }
tr	1	public ComputationalNode ( ) { }
tr	2	protected static Container getPanel_1 ( ) { return null ; }
tr	6	public VectorResult ( int size ) { results = new ArrayList < Pair > ( size ) ; }
tr	7	public GameEntity ( int x , int y ) { startX = x ; startY = y ; }
tr	1	public int [ ] getWarps ( ) { return new int [ ] { 0 , 0 , 0 , 0 } ; }
tr	8	public List < BehaviorSec > getBehaviorSec ( ) { if ( behaviorSec == null ) { behaviorSec = new ArrayList < BehaviorSec > ( ) ; } return this . behaviorSec ; }
tr	7	public NetworkException ( String message , Throwable cause ) { super ( message , cause ) ; }
tr	2	public int getCurrentHealth ( ) { return fCurrentHealth ; }
tr	9	public static void main ( String [ ] args ) { String u = "MM\u65E5\u5386\uFF1A\u82F1\u96C4\u8054\u76DF-\u5747\u8861\u6559\u6D3E-\u9EBB\u5143\u5C0F\u5C0F" ; System . out . println ( u ) ; }
tr	4	@ Override public Validator < AbstractFilter > getValidator ( ) { return null ; }
tr	3	public int getHeight ( ) { return render . getHeight ( ) ; }
tr	7	@ Override public void visit ( Comment comment ) { printIndent ( "// " + comment . comment ) ; }
tr	4	public boolean hasChanged ( ) { return ! canvas . acts . isEmpty ( ) ; }
tr	5	public void setTarget ( String target ) { this . target = target ; }
tr	2	public int getaProcesar ( ) { return aProcesar ; }
tr	2	public double getnStartNumber ( ) { return nStartNumber ; }
tr	7	public HighscoreFileDAO ( ) { System . out . println ( Files . exists ( db ) ) ; }
tr	8	public Glyph find ( int x , int y ) { if ( intersects ( new Point ( x , y ) ) ) { return this ; } else { return null ; } }
tr	3	@ Override protected void finalize ( ) { close ( ) ; }
tr	7	public Node findNode ( Object [ ] subs ) { return findNodeByKey ( generateKey ( subs ) ) ; }
tr	3	public String getOp ( ) { return op ; }
tr	2	public boolean isSituacao ( ) { return situacao ; }
tr	7	public boolean isEmpty ( int x , int y ) { return ( board [ x ] [ y ] == EMPTY_FIELD ) ; }
tr	9	AuthMethod ( String value , String ts_value ) { this . value = value ; this . ts_value = ts_value ; }
tr	1	public flush_queue_args ( ) { }
tr	7	public Button ( String text ) { setText ( text . toUpperCase ( ) ) ; init ( ) ; }
tr	8	public INDIValueException ( INDIElement element , String msg ) { super ( msg ) ; this . element = element ; }
tr	10	public IntegerSetting ( final String name_ , final String title , final Integer initValue ) { this ( name_ , title , initValue , null , null ) ; }
tr	8	@ Override public String toString ( ) { return "Trend{" + "name='" + name + ' + "  query='" + query + ' + } ; }
tr	1	public DepartmentDTO ( ) { }
tr	8	public void registerComponent ( Component ... components ) { for ( Component component : components ) { registerComponent ( component ) ; } }
tr	4	public LightInteger ( int data ) { this . data = data ; }
tr	7	private void addToRuleArray ( final List < Entry > rule ) { ruleArray . add ( rule ) ; }
tr	3	public String getShippingEmail ( ) { return shippingEmail ; }
tr	9	public AddOrigen ( java . awt . Frame parent , boolean modal ) { super ( parent , modal ) ; initComponents ( ) ; }
tr	2	public float getV ( ) { return v ; }
tr	3	public Integer getIdRefeicao ( ) { return idRefeicao ; }
tr	10	public void resetAnimations ( ) { animPos = Vector3f . ZERO_VECTOR ; animRot = Vector3f . ZERO_VECTOR ; animScale = Vector3f . ONE_VECTOR ; }
tr	10	public boolean contains ( long value ) { int i = size - 1 ; long [ ] items = this . items ; while ( i >= 0 ) { if ( items [ i -- ] == value ) { return true ; } } return false ; }
tr	5	public void setEBenExDt ( String value ) { this . eBenExDt = value ; }
tr	1	public LinkArrayCorrupt ( ) { super ( "link array corrupt." ) ; }
tr	1	public CreditCardService ( ) { }
tr	5	@ Test public void testGetSize ( ) { assertTrue ( datatype . getSize ( ) == 8 ) ; }
tr	5	public ObservationEvent ( Observable source ) { this . source = source ; }
tr	9	public Minimap ( Dimension size , World w ) { super ( new Point ( ) , size ) ; init ( w ) ; }
tr	2	private void finaliza ( ) { this . dispose ( ) ; }
tr	4	public void defaultMethod ( ) { System . out . println ( "default method" ) ; }
tr	4	public IntegerModComparator ( int n ) { this . n = n ; }
tr	4	public BlankPOIToken ( POIQuestionMarkToken reverse ) { super ( reverse ) ; }
tr	5	public Builder age ( int value ) { age = value ; return this ; }
tr	10	@ Override public void actionPerformed ( ActionEvent e ) { ConvertRaiders cr = app . getConvertRaiders ( ) ; cr . activateCode ( 100 ) ; }
tr	4	public Role ( Object identifier ) { super ( identifier ) ; }
tr	2	public int getId ( ) { return id ; }
tr	2	public boolean repeat ( ) { return this . restart ; }
tr	2	public DefaultPane ( ) { allowsMapInteraction = true ; }
tr	5	public void setName ( String name ) { Name = name ; }
tr	5	public void setSmiles ( String value ) { this . smiles = value ; }
tr	4	public void addOuvinte ( Object aObjeto ) { throw new UnsupportedOperationException ( ) ; }
tr	1	public AchievementUtils ( ) { }
tr	4	@ Override public String toString ( ) { return "Autonomous Points : " + getPoints ( ) ; }
tr	4	public List < ErrorData > getError ( ) { return error ; }
tr	7	public MMProgramRuntimeError ( String arg0 , Throwable arg1 ) { super ( arg0 , arg1 ) ; }
tr	3	public Set getSoyeulyliches ( ) { return this . soyeulyliches ; }
tr	9	public static boolean isSupported ( String protoName ) { for ( String s : pNames ) { if ( s . equals ( protoName ) ) return true ; } return false ; }
tr	8	public Listas ( int Tamaño ) { this . size = 0 ; this . Maxsize = Tamaño ; this . lista = new String [ Tamaño ] ; }
tr	9	public User ( String userEmail , String userName ) { super ( ) ; UserEmail = userEmail ; UserName = userName ; }
tr	3	public float getTop ( ) { return minY + dY ; }
tr	3	public String get_block_id ( ) { return _block_id ; }
tr	5	@ Override public Component setImage ( ) { return new JLabel ( new ImageIcon ( "./images/p-human.png" ) ) ; }
tr	7	public void setFieldAnnotations ( Map < Field , Annotation [ ] > fieldAnnotations ) { this . fieldAnnotations = fieldAnnotations ; }
tr	3	@ Override protected double getDefault ( ) { return 0d ; }
tr	10	public void produce ( int i ) { System . out . println ( "Producing " + i ) ; items . push ( new Integer ( i ) ) ; }
tr	9	public static void writeDouble ( OutputStream out , double num ) throws IOException { out . write ( convDouble ( num ) ) ; }
tr	10	@ Override public NumberDouble sum ( NumberDouble b ) throws AbstractException { return new NumberDouble ( val + b . val ) ; }
tr	7	public static void main ( String [ ] args ) { UIGateway . start ( ) ; UIGateway . saveUserProfile ( ) ; }
tr	5	public void registrarDevolucion ( ) { JOptionPane . showMessageDialog ( null , "La funci\u00F3n escogida no se encuentra definida para" + "el estado en que se encuentra la Obra" , "Funcionalidad no permitida" , JOptionPane . INFORMATION_MESSAGE ) ; }
tr	5	public Post ( String name ) { this . name = name ; }
tr	8	public void addUSBListener ( USBListener l ) { if ( l == null ) throw new IllegalArgumentException ( ) ; listeners . addElement ( l ) ; }
tr	1	public void buildTamanioKB ( ) { }
tr	2	public int getZustand ( ) { return zustand ; }
tr	9	public static void main ( String [ ] args ) { junit . textui . TestRunner . run ( new TestSuite ( TestEntityReplacement . class ) ) ; }
tr	4	public void setQtdPixels2 ( int qtdPixels2 ) { this . qtdPixels2 = qtdPixels2 ; }
tr	8	public JSONArray put ( int index , double value ) throws JSONException { this . put ( index , new double ( value ) ) ; return this ; }
tr	1	public berryTest ( ) { }
tr	3	public String getDescription ( ) { return description ; }
tr	7	public SelfMap ( Iterable < T > self ) { this . self = toOrderedSet ( self ) ; }
tr	9	public Tuple ( final A value1 , final B value2 ) { this . value1 = value1 ; this . value2 = value2 ; }
tr	3	public Waves build ( ) { return new Waves ( this ) ; }
tr	9	public Network get ( String key ) { return networks . get ( calls . indexOf ( key ) ) ; }
tr	10	private void makeYStub ( ) { OutputStub yStub = new OutputStub ( ) ; yStub . setName ( "y" ) ; yStub . setXY ( 600 , 10 ) ; addOutputStub ( yStub ) ; }
tr	6	public final void addListener ( final NetTrainerListener listener ) { this . listener . add ( listener ) ; }
tr	9	public Morpha ( java . io . InputStream in ) { this ( new java . io . InputStreamReader ( in ) ) ; }
tr	4	public void modifierNombreDeTourEtat ( int nombre ) { this . nombreDeTourEtat = nombre ; }
tr	6	public static Hashtable < CallFrame , List < String >> getBridgeLines ( ) { return bridgeLines ; }
tr	2	public int getDelayCount ( ) { return delayCount ; }
tr	8	public void setYUVtoRGB ( YUVtoRGB yuv2rgb ) { if ( yuv2rgb == null ) throw new NullPointerException ( ) ; m_videoDecoder . setYUVtoRGB ( yuv2rgb ) ; }
tr	6	public static void registerVisibleMenu ( JPopupMenu menu2 ) { visibleMenus . add ( menu2 ) ; }
tr	7	private byte getFlags ( ) { byte b = 0 ; if ( isRoot ) { b |= 01 ; } if ( isOrdered ) { b |= 02 ; } return b ; }
tr	7	public void setRadius ( int r ) { this . radius = r ; getLocation ( ) . getWorld ( ) . lightUpdate ( ) ; }
tr	7	public void setCustomWordCount ( HashMap < String , Integer > customWordCount ) { this . customWordCount = customWordCount ; }
tr	10	public SchemaType put ( class clazz ) { SchemaType result = schemaTypeOf ( clazz ) ; super . add ( result ) ; return result ; }
tr	2	public String getDescription ( ) { return "CSV files (*.csv)" ; }
tr	5	public void setKeyDuration ( double keyDuration ) { this . keyDuration = keyDuration ; fireEdit ( ) ; }
tr	4	public static void obliczPodatek ( double podstawa ) { zaliczkaNaPod = ( podstawa * 18 ) / 100 ; }
tr	3	public String getObservacoes ( ) { return observacoes ; }
tr	8	private void setTitle ( ) { String intercepting = intercepting ( ) ? "intercepting" : "not intercepting" ; this . getFrame ( ) . setTitle ( "Gizmo. Proxying on [" + port + "]  " + intercepting ) ; }
tr	5	public void setPreviousCell ( Cell previousCell ) { this . previousCell = previousCell ; }
tr	1	public void removeLast ( ) { }
tr	4	public OclParseException ( String message ) { super ( message ) ; }
tr	4	@ BeforeMethod public void setUp ( ) { utils = new ArraySetUtils ( ) ; }
tr	8	@ Test public void testGetCharacterDirectionInvalid ( ) { try { testTile . getCharacter ( exitDirection ) ; fail ( "IllegalArgumentException was expected" ) ; } catch ( IllegalArgumentException e ) { } }
tr	2	public int getPrecioPackCanales ( ) { return PrecioPackCanales ; }
tr	9	public SerialisationHint ( SerialisationHintType hintType , Object ... hintArguments ) { type = hintType ; arguments = hintArguments ; }
tr	8	public String getWinnerTeam ( ) { if ( this . homeGoals > this . awayGoals ) return this . homeTeam ; else if ( this . awayGoals > this . homeGoals ) return this . awayTeam ; else return null ; }
tr	8	public static boolean Nym_VerifyOutmailByIndex ( String NYM_ID , int nIndex ) { return otapiJNI . OTAPI_Basic_Nym_VerifyOutmailByIndex ( NYM_ID , nIndex ) ; }
tr	1	public void back ( ) { }
tr	6	@ Override public void setDelta_rot ( Vector3d _delta_rot ) { this . _delta_rot = _delta_rot ; }
tr	2	@ Override public void requestFocusPrev ( ) { }
tr	7	public List < Method > get ( ) { return TypeUtils . searchMethod ( m_clazz , m_name , null ) ; }
tr	9	@ Override public int getColumnAmount ( ) { if ( this . optionTextFields [ 1 ] . getText ( ) . equals ( "" ) ) return 0 ; return Integer . parseInt ( this . optionTextFields [ 1 ] . getText ( ) ) ; }
tr	4	public void setAvailable ( ) { state = FuState . AVAILABLE ; }
tr	7	public Tweet setHashtagEntities ( List < HashtagEntity > hashtagEntities ) { this . hashtagEntities = hashtagEntities ; return this ; }
tr	8	@ Test public void testGetName ( ) { assertEquals ( "A" , g . getName ( ) ) ; assertEquals ( "B" , gg . getName ( ) ) ; }
tr	2	@ Override public int length ( ) { return 8 ; }
tr	4	@ Override public void mouseEntered ( MouseEvent e ) { }
tr	1	public ResendPassword ( ) { super ( ) ; }
tr	5	public void setNext ( Node next ) { this . next = next ; }
tr	7	public Vector2f ( float x , float y ) { this . x = x ; this . y = y ; }
tr	1	public static void updatePrescription ( ) { }
tr	2	public long getClimateBonus ( ) { return climateBonus ; }
tr	7	public Object getInfo ( Object key ) { return info . get ( key ) ; }
tr	6	@ Override public void deleteItem ( long itemId ) { repository . deleteItem ( itemId ) ; }
tr	3	public Course getCourse ( ) { return course ; }
tr	4	public void start ( ) { running = true ; new Thread ( this ) . start ( ) ; }
tr	5	public SelectQueryPrinter ( final SelectQueryInterface selectQuery ) { this . selectQuery = selectQuery ; }
tr	8	FilterBox ( SynthCanvas pa ) { super ( pa , IDENT ) ; setLabel ( "Filter" ) ; addInput ( new Input ( this , "in" ) ) ; }
tr	6	@ Override public int getFirstSlotLocationX ( ) { return currentContainer == 2 ? centerX - 51 : GamePanel . WIDTH / 2 - 150 / 2 + 48 ; }
tr	7	public boolean setUnits ( short units ) { if ( type == TYPE . SEA ) return false ; this . units = units ; return true ; }
tr	5	public static double real ( Complex x ) { return x . real ; }
tr	9	public Command ( String newCommand , String ... newArguments ) { command = newCommand ; arguments = newArguments ; }
tr	1	public EngineException ( ) { super ( ) ; }
tr	3	public InventorySlot [ ] getInventory ( ) { return inventory ; }
tr	4	public void setWasSeenByPlayer ( boolean wasSeenByPlayer ) { this . wasSeenByPlayer = wasSeenByPlayer ; }
tr	6	public void addPlotter ( final Plotter plotter ) { plotters . add ( plotter ) ; }
tr	3	public final String getNombre ( ) { return nombre ; }
tr	5	protected FalloverTargetingStrategy ( TargetingStrategy ... strategies ) { this . strategies = strategies ; }
tr	3	@ XmlAttribute public int getId ( ) { return id ; }
tr	6	public void addManager ( ParkManager manager ) { this . managerList . add ( manager ) ; }
tr	10	private final void extractArcCodeP ( long code , int [ ] x ) { code = ( code >> flagBits ) >> numArcFeatBits ; x [ 0 ] = ( int ) ( code & ( ( 1 << tagNumBits ) - 1 ) ) ; }
tr	5	public void setFecha ( Date fecha ) { this . fecha = fecha ; }
tr	7	protected Tile getTile ( Point tileLocation ) { return tileLookup . get ( tileLocation ) ; }
tr	7	@ Override public int getHeight ( ) { return isOrange ? orange . getHeight ( null ) : blue . getWidth ( null ) ; }
tr	6	@ Override public boolean remove ( byte [ ] key ) throws IOException { return this . remove ( key , false ) ; }
tr	5	public void setDtGMTClosed ( String value ) { this . dtGMTClosed = value ; }
tr	8	private HighlightRequest getHighlight ( ) { TextBlob current = getCurrent ( ) ; if ( current == null ) { return null ; } return getHighlight ( current , true ) ; }
tr	10	protected final int getParameter ( String key ) { return parameters . containsKey ( key ) ? parameters . get ( key ) : NOT_SET ; }
tr	10	public FilterInteger ( int i_type , int i_idFilter , int i_nbFilter , String s_name ) { super ( i_type , i_idFilter , i_nbFilter , s_name ) ; }
tr	7	public void swap ( LinkedList list , Object x , Object y ) { }
tr	6	@ Override public String processSignature ( String str ) { return str ; }
tr	2	public double getValPenPag_Entrega ( ) { return ValPenPag_Entrega ; }
tr	10	public static void main ( String [ ] args ) throws NoSuchAlgorithmException , UnsupportedEncodingException { Client c = new Client ( "jojo" , "jojo" ) ; c . recevoirMessageConversationAbsence ( ) ; }
tr	7	public static String toString ( Object object ) throws JSONException { return toString ( object , null ) ; }
tr	3	public synchronized static float rndFloat ( ) { return RND . nextFloat ( ) ; }
tr	7	public BinaryTreeNode insertLeft ( int leftValue ) { this . left = new BinaryTreeNode ( leftValue ) ; return this . left ; }
tr	6	public void setMaterials ( Set < CourseMaterial > materials ) { this . materials = materials ; }
tr	3	@ After public void tearDown ( ) throws Exception { }
tr	9	private void draw_components ( Graphics g ) { for ( DrawComponets dc : components ) { dc . draw_me ( g ) ; } }
tr	6	private ButtonGroup getOB_Gender ( ) { if ( OB_Gender == null ) { OB_Gender = new ButtonGroup ( ) ; } return OB_Gender ; }
tr	4	public String getState ( ) { return CurrentState . getState ( ) ; }
tr	10	boolean removeTileOfType ( Tile tile ) { Tile remove = getTileOfType ( tile ) ; if ( remove != null ) { return this . remove ( remove ) ; } return false ; }
tr	9	Input ( GeneratorBox parent , String label ) { this . pa = parent ; this . label = label ; }
tr	9	public String getSQL ( String name ) { return "CREATE VIEW " + getOutputName ( name ) + " AS SELECT t1.* " + "t2.sort FROM " + name + " t1 INNER JOIN " + name + "_" + tag + "_src t2 ON (t1.relid=t2.relid)" ; }
tr	5	public void windowClosing ( WindowEvent e ) { System . exit ( 0 ) ; }
tr	4	public String toString ( ) { return ( "Final grade = " + finalGrade + "\n" + "Letter:  " + letter ) ; }
tr	5	@ Override public ParserEventType getType ( ) { return ParserEventType . GROUP_START_EVENT ; }
tr	2	@ After public void tearDown ( ) { }
tr	7	public static JTable createDefaultTable ( String [ ] columnNames ) { return new JTable ( createTableModel ( columnNames ) ) ; }
tr	10	@ JsonProperty ( "Share" ) public void setShare ( List < org . ogf . glue2 . Share > Share ) { this . Share = Share ; }
tr	8	public static long sum ( long ... values ) { long sum = 0 ; for ( long l : values ) { sum += l ; } return sum ; }
tr	10	@ Override public void setStationToPlayer ( Player player , String station ) { stationList . put ( player , station ) ; }
tr	3	private void reset ( ) { graphics2D = new EpsGraphics2D ( ) ; }
tr	4	public void setToDelete ( int toDelete ) { this . toDelete = toDelete ; }
tr	6	public void setActionCallback ( IMqttActionListener listener ) { internalTok . setActionCallback ( listener ) ; }
tr	8	public com . palmergames . bukkit . TownyChat . Chat getTownyChatHook ( ) { return townychat . getHook ( ) ; }
tr	8	private void addScrollPane ( ) { scrollPane = new JScrollPane ( tablePanel , JScrollPane . VERTICAL_SCROLLBAR_ALWAYS , JScrollPane . HORIZONTAL_SCROLLBAR_NEVER ) ; }
tr	9	public JSONObject put ( String key , double value ) throws JSONException { put ( key , new double ( value ) ) ; return this ; }
tr	6	public void translate ( Vec3f displacement ) { coordSys . translateInLocal ( displacement ) ; }
tr	4	@ Override public String toString ( ) { return textRepresentation ; }
tr	7	public JAXBMarshallerBuilder ( JAXBContext context ) { if ( context == null ) { throw new NullPointerException ( "context" ) ; } this . context = context ; }
tr	4	public void display ( ) { System . out . println ( "\uB098\uB294 F16" ) ; }
tr	3	public String getComments ( ) { return this . comments ; }
tr	4	public void main ( ) { System . out . println ( "usted ingreso a ErrorHandler" ) ; }
tr	3	public Body target ( ) { return _target ; }
tr	10	public double getAsDouble ( String key , double defaultValue ) { double value = getAsDouble ( key ) ; return value == null ? defaultValue : value ; }
tr	2	public int getIdset ( ) { return idset ; }
tr	5	public void setNext ( Node nextNode ) { this . nextNode = nextNode ; }
tr	5	public NoDetallado ( String p ) { this . setPais ( p ) ; }
tr	10	private int seeders ( ) { int count = 0 ; for ( TrackedPeer peer : this . peers . values ( ) ) { if ( peer . isCompleted ( ) ) { count ++ ; } } return count ; }
tr	4	public void setFavorited ( boolean favorited ) { this . favorited = favorited ; }
tr	10	public ConsultaPorPlano ( Date horario , Paciente paciente , Medico medico ) { super ( horario , paciente , medico ) ; }
tr	3	public String toString ( ) { return "Rage Shot:\t" + getDescription ( ) ; }
tr	1	public int numAnswers ( ) { return 1 ; }
tr	5	public void setIdentifiers ( String [ ] identifiers ) { this . identifiers = identifiers ; }
tr	6	@ Override public void addLast ( E e ) { add ( e ) ; }
tr	6	public static void setBackground ( Color background ) { Template . background = background ; }
tr	5	private void setMinBreak ( Integer minBreak ) { this . minChangingTime = minBreak ; }
tr	7	public void windowClosing ( WindowEvent e ) { System . out . println ( "Window closed; exiting." ) ; closeWindow ( ) ; }
tr	4	public Swamp ( ) { tickDivider = 10 ; counter = 0 ; isUpgraded = false ; }
tr	5	@ Override public Type type ( ) { return symbol . type ( ) ; }
tr	5	public static void main ( String [ ] args ) { launch ( args ) ; }
tr	10	void forward ( Message msg , Connection dest ) { sendingQueue . add ( new MessageWithTarget ( msg , dest ) ) ; }
tr	7	public Weapon getWeapon ( String name ) { return this . weaponsMap . get ( name ) ; }
tr	3	public String getXmlVersion ( ) { throw new UnsupportedOperationException ( "org.w3c.tidy.DOMDocumentImpl getXmlVersion() Not implemented" ) ; }
tr	1	public Schedule ( ) { }
tr	5	@ XmlTransient public Collection < UseCase > getUseCaseCollection ( ) { return useCaseCollection ; }
tr	7	@ Override public void setMessage ( final Object message ) { this . setText ( message . toString ( ) ) ; }
tr	6	public static void setMaxLitterSize ( int max_litter_size ) { if ( max_litter_size >= 1 ) Grass . max_litter_size = max_litter_size ; }
tr	2	public void resetPlayerAvailable ( ) { this . playerAvailable = 0 ; }
tr	7	private class < ? > findClass ( byte [ ] b ) throws ClassNotFoundException { return defineClass ( null , b , 0 , b . length ) ; }
tr	7	@ Override public String accept ( final NodeVisitor visitor ) { return visitor . visit ( this ) ; }
tr	10	public void windowClosed ( WindowEvent e ) { System . out . println ( "SHUT THE FRONT DOOR!" ) ; GlobalScreen . unregisterNativeHook ( ) ; System . runFinalization ( ) ; }
tr	1	public ObjectFactory ( ) { }
tr	5	private void deshabilitaBotones ( ) { ingresar . setEnabled ( false ) ; ingresarInvitado . setEnabled ( false ) ; }
tr	7	public int getRight ( ) { return Dispatch . get ( this , "Right" ) . changeType ( Variant . VariantInt ) . getInt ( ) ; }
tr	5	public static boolean isLeftPunc ( char c ) { return LeftPunc . contains ( c ) ; }
tr	1	public Pesquisa ( ) { }
tr	9	public void updateC ( ) { setCXpos ( getXpos ( ) - 1 ) ; setCYpos ( getYpos ( ) - 1 ) ; setCWidth ( getWidth ( ) - 1 ) ; setCHeight ( getHeight ( ) - 1 ) ; }
tr	1	public LogException ( ) { super ( ) ; }
tr	2	public int getPointsize ( ) { return pointsize ; }
tr	8	@ Override public Vector3 L ( ShadeRec sr ) { return material . getLe ( sr ) ; }
tr	7	@ Override public List < Product > getAvailableProducts ( ) throws Exception { return pc . getAvailableProducts ( ) ; }
tr	3	public void delete ( ) { Dispatch . call ( this , "Delete" ) ; }
tr	6	@ Override public String toString ( ) { return _service_id + " " + _date + " " + _exception_type + "\n" ; }
tr	3	public Player getPlayer ( ) { return player ; }
tr	2	public int getSelected ( ) { return selected ; }
tr	4	@ Override public int hashCode ( ) { return name . hashCode ( ) ; }
tr	2	public boolean isEmpty ( ) { return ( top == - 1 ) ; }
tr	10	@ Override public int compare ( String s1 , String s2 ) { return s1 . length ( ) - s2 . length ( ) ; }
tr	7	public void increaseProgress ( String newText ) { jlText . setText ( newText ) ; increaseProgress ( ) ; }
tr	1	public StonesLeftToken ( ) { }
tr	10	private void show ( String prefix , String text ) { System . out . println ( prefix + text ) ; }
tr	6	public Geometry texturedMesh ( String fileName ) { return texturedMesh ( fileName , 2 , 2 ) ; }
tr	6	public void push ( E element ) { stack . add ( element ) ; }
tr	3	public void windowDeactivated ( WindowEvent e ) { }
tr	3	public String getciudad ( ) { return ciudad ; }
tr	5	Producer ( ProducerListener listener ) { this . listener = listener ; }
tr	8	public static synchronized Singleton getInstance ( ) { if ( uniqueInstance == null ) { synchronized ( Singleton . class ) { if ( uniqueInstance == null ) { uniqueInstance = new Singleton ( ) ; } } } return uniqueInstance ; }
tr	7	public void addLast ( Object o ) { addAfter ( o , header . previous ) ; }
tr	1	PlayingTab ( ) { }
tr	5	@ Override public MessageType getMessageType ( ) { return MessageType . EXITCHATROOM ; }
tr	6	public List < Tuple < Integer , Integer >> getUntriedMoves ( ) { return untriedMoves ; }
tr	4	public void setActualPrice ( float actualPrice ) { this . actualPrice = actualPrice ; }
tr	10	public List < Trends > getTrendsDaily ( ) throws WeiboException { return Trends . constructTrendsList ( client . get ( WeiboConfig . getValue ( "baseURL" ) + "trends/daily.json" ) ) ; }
tr	9	public boolean isPlaying ( ) { try { return player . isPlaying ( ) ; } catch ( SlimConnectionException e ) { System . out . println ( "Failed to get isPlaying with " + e ) ; return false ; } }
tr	8	@ Inject public TelesinaRangeAnalyzerImpl ( HandSimulator simulator ) { this . simulator = simulator ; random = new Random ( ) ; }
tr	3	public Vector2D getPosition ( ) { return position ; }
tr	1	public boolean escapeAction ( ) { return false ; }
tr	3	public TitleImp ( ) { this . line = new LineImp ( this ) ; }
tr	8	public int getMaxQuantity ( int quantity ) { if ( currentQuantity + quantity > maxQuantity ) { throw new StoreProblemException ( ) ; } return currentQuantity + quantity ; }
tr	1	public Medicamentos ( ) { }
tr	10	public Condition lessThan ( @ NotNull Value < Integer > value ) { return condition ( Operator . LESS , this , value ) ; }
tr	5	public int getMonth ( ) { return backCalendar . get ( Calendar . MONTH ) + 1 ; }
tr	8	public ValueOutOfRangeException ( Object value , String comment ) { super ( "\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 " + value . toString ( ) + " \u043F\u0440\u0435\u0432\u044B\u0448\u0430\u0435\u0442 \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u043E\u0435 " + comment + "." ) ; }
tr	4	public MultipleNetwork ( BasicNetwork n ) { super ( n ) ; }
tr	5	@ Test public void createsound ( ) { assert . assertEquals ( createsound . getLocation ( ) , "galaxy" ) ; }
tr	4	public List < Publish > getSitelist ( ) { return sitelist ; }
tr	1	public ObjectFactory ( ) { }
tr	2	public UDPLockServer ( ) { initializeRequestHandlers ( ) ; }
tr	4	@ XmlAttribute public Date getModifiedDate ( ) { return modifiedDate ; }
tr	7	@ Override public Object vistaLocale ( String token , String idDinosauro ) { return null ; }
tr	8	public BaseLight ( Vector3f color , float intensity ) { this . color = color ; this . intensity = intensity ; }
tr	7	public T get ( Identifier id ) { return data . get ( id ) ; }
tr	7	public void setAmount_sold ( String value ) { otapiJNI . TradeDataNym_amount_sold_set ( swigCPtr , this , value ) ; }
tr	10	@ Test public void testDouble ( ) throws Exception { PrimitiveUtils . testDouble ( 2.7d , SUBJECT , 2.7d , 3.2d , 4.1d ) ; }
tr	4	public void setUpvote ( boolean upvote ) { this . upvote = upvote ; }
tr	9	private void checkLevel ( ) { if ( Console . getDebugMode ( ) ) setLevel ( Level . ALL ) ; else setLevel ( Level . INFO ) ; }
tr	3	public Set getSoyeulyliches ( ) { return this . soyeulyliches ; }
tr	9	protected void setCenter ( ) { m_dpTable = ( NTable ) new NTable ( 8 , 8 ) ; m_dpTable . setCellListener ( this ) ; m_gridScrollArea . add ( m_dpTable ) ; }
tr	10	public NovoArquivo ( java . awt . Frame parent , boolean modal ) { super ( parent , modal ) ; initComponents ( ) ; setVisible ( true ) ; }
tr	10	public String procesarMsjCuenta ( String msj ) { parser s = compilar ( msj ) ; return s . msjCuenta ; }
tr	6	public ArrayList < Score > getScores ( ) { loadScoreFile ( ) ; sort ( ) ; return scores ; }
tr	5	@ Override protected Version call ( ) { return NativeMethods . globalGetLibGit2Version ( ) ; }
tr	2	@ Override public boolean isLeaf ( ) { return false ; }
tr	4	@ Override public boolean isBurnt ( ) { return status . isBurnt ( ) ; }
tr	6	public void setMessage ( String m ) { messageTextField . setText ( m ) ; }
tr	1	public HttpClientCodec ( ) { this ( 4096 , 8192 , 8192 ) ; }
tr	4	public void setIndex ( int param ) { index = param ; }
tr	2	final void dispose ( ) { this . src = null ; }
tr	8	@ Override protected void buildInternal ( MultiLabelInstances trainingSet ) throws Exception { br . build ( trainingSet ) ; }
tr	8	@ SuppressWarnings ( "unused" ) protected void endElementOwn ( String uri , String localName , String qName ) { }
tr	4	@ Override public void reset ( ) { readingState = false ; this . currentFrame = null ; }
tr	3	public String getFilesystemName ( ) { return fFileName ; }
tr	5	@ JsonProperty ( "HealthState" ) public Endpoint . HealthState getHealthState ( ) { return HealthState ; }
tr	7	public InvalidSimpleDateExpressionException ( String message , Throwable t ) { super ( message , t ) ; }
tr	5	public void setEndsBy ( Date endsBy ) { this . endsBy = endsBy ; }
tr	1	public HeterozygousLociDiversity ( ) { this ( "HE" , "Proportion of Heterozygous Loci" ) ; }
tr	8	public List < WaterType > getWater ( ) { if ( water == null ) { water = new ArrayList < WaterType > ( ) ; } return this . water ; }
tr	10	private void rbTickItemStateChanged ( java . awt . event . ItemEvent evt ) { if ( rbTick . isSelected ( ) ) { rbMens . setSelected ( false ) ; } }
tr	9	@ Override public void send ( PayLoad payload ) { super . send ( payload ) ; payload . writeFloat ( radius ) ; }
tr	9	public User [ ] findByProfile ( Integer profileId ) throws UserDaoException { return findByDynamicSelect ( SQL_SELECT + " WHERE profileId = ?" , new Object [ ] { profileId } ) ; }
tr	1	public void unexecute ( ) { }
tr	10	public static final void warn ( final String txt ) { System . err . println ( Levels . WARN . getTitle ( ) + " " + txt ) ; }
tr	1	private OptionBuilder ( ) { }
tr	9	@ Test public void testFilterReturnsEmptyCollectionIfGivenNoPokemonStats ( ) { assertEquals ( 0 , harmAlgorithmFilter . filter ( new HashSet < PokemonStats > ( ) , factorsModel ) . size ( ) ) ; }
tr	8	@ Override public boolean exists ( ) { return x >= 0 && y >= 0 && x < xlimit && y < ylimit ; }
tr	2	public int index ( ) { return _index ; }
tr	1	public PacketRegistered ( ) { }
tr	7	public final ArgumentAcceptingOptionSpec < V > describedAs ( String description ) { argumentDescription = description ; return this ; }
tr	2	public int getIxBugEventLatestText ( ) { return ixBugEventLatestText ; }
tr	1	public ControlAcceso ( ) { }
tr	6	public void updateDouble ( String columnLabel , double x ) throws SQLException { throw new UnsupportedOperationException ( "Not supported yet." ) ; }
tr	5	void removeWindow ( ) { if ( viewport != null ) viewport . dispose ( ) ; viewport = null ; }
tr	10	private static String uri ( String user_account , String path ) { return "\"wamp://" + user_account . replace ( "@" , "%40" ) + "@" + kHostname + path + "\"" ; }
tr	7	public static void main ( String [ ] args ) { System . out . println ( divide ( - 10 , 1 ) ) ; }
tr	9	private SET_NumericVariable ( NumericVariable variable , NumericExpression expression ) { this . variable = variable ; this . expression = expression ; }
tr	3	@ Override public String toCharacter ( ) { return null ; }
tr	10	private void jButton2ActionPerformed ( java . awt . event . ActionEvent evt ) { new GUIinterfazMenuPresidente ( nombreUsuario ) . setVisible ( true ) ; dispose ( ) ; }
tr	3	public String getExtension ( ) { return extension ; }
tr	3	@ Override public String toString ( ) { return "Mandelbrot Z^3" ; }
tr	6	@ Override public Vector3 getDirection ( ShadeRec sr ) { return direction ; }
tr	2	public int rank ( ) { return rank ( - 1. ) ; }
tr	5	public void setFuncoes ( Funcoes funcoes ) { this . funcoes = funcoes ; }
tr	9	public RecLogger ( Connection conn , String home ) { this . conn = conn ; this . home = home ; }
tr	1	public MyAWSCredentials ( ) { }
tr	3	public Zustand gibZustand ( ) { return subjektZustand ; }
tr	10	public BlockPosition ( int x , int y , int z ) { this . x = x ; this . y = y ; this . z = z ; }
tr	10	final RegExp parseComplExp ( ) throws IllegalArgumentException { if ( check ( COMPLEMENT ) && match ( ~ ) ) return makeComplement ( parseComplExp ( ) ) ; else return parseCharClassExp ( ) ; }
tr	9	private static void verifyId ( SaploCollection saploCollection ) throws SaploClientException { if ( saploCollection . getId ( ) < 1 ) throw new SaploClientException ( MSG_CLIENT_FIELD , CODE_CLIENT_FIELD , "collection.id" ) ; }
tr	10	private void drawEllipse ( CustomCanvas canvas , Graphics2D g ) { drawEllipse ( g ) ; canvas . repaint ( getDirtyRectangle ( ) ) ; }
tr	5	SortCriteria ( String prop ) { this . prop = prop ; }
tr	5	@ Override public long getTicks ( ) { return FineGrainTimestamp . getInstance ( ) . getTotalNanos ( ) ; }
tr	8	public void selectOne ( MarkDisplay markDisplay ) { selectedMark = markDisplay ; markDisplay . mark . setSelected ( true ) ; }
tr	7	public static _Fields findByName ( String name ) { return byName . get ( name ) ; }
tr	6	public void setArticles ( List < Article > articles ) { this . articles = articles ; }
tr	9	protected Displayable ( long cPtr , boolean cMemoryOwn ) { super ( otapiJNI . Displayable_SWIGUpcast ( cPtr ) , cMemoryOwn ) ; swigCPtr = cPtr ; }
tr	7	@ Test ( expected = IllegalArgumentException . class ) public void testBuilderWithInvalidAddressAndPrefixLength ( ) { Ipv6Range . from ( "::3" ) . andPrefixLength ( 127 ) ; }
tr	8	public void print ( double d , int dec ) { this . out . print ( this . formatDouble ( d , dec ) ) ; }
tr	5	public Link ( AbstractNode destinationNode ) { this . destinationNode = destinationNode ; }
tr	5	public List < Producer > getItemsAvailableSelectMany ( ) { return getFacade ( ) . findAll ( ) ; }
tr	8	public VW ( String color , int maxSpeed , int dateGreate ) { super ( color , maxSpeed , dateGreate ) ; }
tr	5	private boolean isFactionMember ( GameBoardElement element ) { return ( element instanceof FactionMember ) ; }
tr	6	@ Column ( name = "PRP_MOA_TIPO" ) @ Id public String getPrpMoaTipo ( ) { return prpMoaTipo ; }
tr	10	public void drawDotScreen ( int x , int y , Color color ) { drawDotScreen_native ( pointer , x , y , color ) ; }
tr	8	public Reference ( String name , int count ) { this . name = name ; this . count = count ; }
tr	3	public Tym getTym ( ) { return tym ; }
tr	2	public boolean isRunning ( ) { return isRunning ; }
tr	1	public ContactUpdateFailed ( ) { super ( ) ; }
tr	8	public ColorComboBoxEditor ( Color initialColor ) { editor = new JButton ( "" ) ; editor . setBackground ( initialColor ) ; }
tr	6	public FIXMLBuilder ( Account a ) { id = a . getId ( ) ; }
tr	7	@ Override public void keyPressed ( KeyEvent e ) { if ( e . getKeyCode ( ) == 10 ) { moverCima ( ) ; } }
tr	4	@ AfterClass public static void testCleanup ( ) { JediORMEngine . droptables ( ) ; }
tr	8	private void quitButtonActionPerformed ( java . awt . event . ActionEvent evt ) { new QuitForm ( this ) . setVisible ( true ) ; }
tr	3	public Sequence getSequenceNumber ( ) { return sequenceNumber ; }
tr	8	public void register ( Connector c ) { connectors . add ( c ) ; c . setParent ( this ) ; }
tr	6	@ Override public void create ( ) { gameScreen = new GameScreen ( ) ; setScreen ( gameScreen ) ; }
tr	1	public ClienteBean ( ) { }
tr	6	public Bispo ( TipoCorJogador corJogador ) { super ( TipoPeca . BISPO , corJogador ) ; }
tr	9	private void uploadInputStream ( InputStream in ) throws IOException { upload ( this , new ProgressInputStream ( in , getProgressListener ( ) ) , UNKNOWN_LENGTH ) ; }
tr	5	public String getRadioButtonSelected ( ) { return analysisGroup . getSelection ( ) . getActionCommand ( ) ; }
tr	3	public void clear ( ) { positions . clear ( ) ; }
tr	4	public Entries ( IntMap map ) { super ( map ) ; }
tr	5	public String getLatestTransmissionAttempt ( ) { if ( transmissionAttempts == 0 ) { return "no attempt yet" ; } switch ( transmissionAttempts ) { case 1 : return "first attempt" ; case 2 : return "second attempt" ; case 3 : return "third attempt" ; case 4 : return "fourth attempt" ; default : return "attempt #" + transmissionAttempts ; } }
tr	6	public Iterator < Entry < K , V >> iterator ( ) { return new EntrySetIterator ( ) ; }
tr	4	public PropertyValidationException ( String message ) { super ( message ) ; }
tr	3	public Vector2f getCenterPosition ( ) { return centerPosition ; }
tr	8	Point multiply ( double k ) { return new Point ( k * x , k * y ) ; }
tr	10	public static void modifyNodo ( Nodo x ) { x . texto = "Modify!" ; System . out . println ( "Nodo en la func: " + x . texto ) ; }
tr	6	@ Override public String toString ( ) { return Integer . toString ( data ) ; }
tr	1	public URLValueCreator ( ) { super ( ) ; }
tr	10	@ JsonProperty ( "Resource" ) public void setResource ( List < org . ogf . glue2 . Resource > Resource ) { this . Resource = Resource ; }
tr	4	@ Override public INode getCopy ( ) { return new EnemyCanWinInTwoRounds ( ) ; }
tr	4	public void setPorcentaje ( int porcentaje ) { this . porcentaje = porcentaje ; }
tr	4	public static SecurityServiceException newNotLoggedInException ( ) { return new SecurityServiceException ( CODE_NOT_LOGGED_IN ) ; }
tr	6	@ Override public void updateString ( int columnIndex , String x ) throws SQLException { }
tr	2	public Sequence ( ) { count = 0 ; }
tr	6	public static void main ( String [ ] args ) throws Exception { new Application ( createOsSpecificFactory ( ) ) ; }
tr	3	public int getSize ( ) { return model . size ( ) ; }
tr	2	public double [ ] getEmissionDistribution ( ) { return EMISSION_DISTRIBUTIONS ; }
tr	3	public Seance getSeance ( ) { return seance ; }
tr	4	@ Override public String imprimirme ( ) { return "T\u00EDtulo: " + this . titulo ; }
tr	10	public OpponentsGameBoard ( ) { for ( int i = 0 ; i < 10 ; i ++ ) { for ( int j = 0 ; j < 10 ; j ++ ) { gameBoard [ i ] [ j ] = 0 ; } } }
tr	9	public void setUp ( ) { enPromocion = new EnPromocion ( ) ; mockSubasta = mock ( Subasta . class ) ; mockPasajero = mock ( Pasajero . class ) ; }
tr	3	public AgentObserver getObserver ( ) { return this . observer ; }
tr	8	public static Integer castInt ( Object obj ) { try { return ( Integer ) obj ; } catch ( ClassCastException e ) { return 0 ; } }
tr	9	public LinkedList < Command > getCommands ( String boardName ) { return boards . get ( boardName ) . getCommands ( ) ; }
tr	7	public static UnitValue getUnitValueX ( String unit ) { return HOR_DEFS . get ( unit ) ; }
tr	5	public void setConditioning ( FermentationStageType value ) { this . conditioning = value ; }
tr	7	public boolean createNewFile ( String fileName ) throws IOException { return fileManager . createNewSystemFile ( fileName ) ; }
tr	1	public ModelProperty ( ) { }
tr	8	public String getWinningMessage ( ) { this . scoreBoard . listScores ( ) ; return "\n\t*******************************************************************************" + "\n\t Congratulations " + winner . getName ( ) + "! You won the game." + "\n\t Your score was " + winner . getCurrentScore ( ) + "\n\t*******************************************************************************" ; }
tr	4	public void setCL_de ( float CL_de ) { this . CL_de = CL_de ; }
tr	2	public int getOutputChannels ( ) { return m_iOutputChannels ; }
tr	9	private void correctButtonActionPerformed ( java . awt . event . ActionEvent evt ) { flashcards . answerCorrect ( ) ; gotoNextCard ( ) ; }
tr	5	public CommandRegistration ( Plugin plugin ) { this ( plugin , plugin ) ; }
tr	9	public static String getUserMessage ( int statusCode ) { if ( statusCode == Response . SC_SERVICE_UNAVAILABLE ) { return "Pearltrees is currently unavailable. Please retry later." ; } if ( statusCode == Response . SC_SEE_OTHER ) { return "Please enable cookies to use the bookmarklet." ; } return "Pearltrees is currently unreachable. Please check your internet connection or retry later." ; }
tr	2	public double getX ( ) { return x ; }
tr	2	private void doActionExit ( ) { saveChanges ( ) ; }
tr	3	public String getSReplyEmail ( ) { return sReplyEmail ; }
tr	5	@ Override public String toString ( ) { return "UntF:<" + unit + ":" + value + ">" ; }
tr	9	public Totales_estudiantes ( java . awt . Frame parent , boolean modal ) { super ( parent , modal ) ; initComponents ( ) ; }
tr	10	private void loadKeyActions ( ) { replPanel . addKeyAction ( "F1" , new HelpAction ( ) ) ; replPanel . addKeyAction ( "ctrl S" , new SaveAction ( ) ) ; replPanel . addKeyAction ( "ctrl O" , new LoadAction ( ) ) ; }
tr	8	public Parser ( Scanner scanner ) { this . scanner = scanner ; this . stream = new LinkedList < Token > ( ) ; }
tr	6	public void setDepends ( List < String > depends ) { _depends = depends ; }
tr	6	public TestOutput ( VerbosityLevel verbosity , boolean decorated ) { super ( verbosity , decorated ) ; }
tr	5	public void setCodPagamento ( Integer codPagamento ) { this . codPagamento = codPagamento ; }
tr	10	< T > ClassStats < T > classStatsFor ( ClassCollector < T > cc ) { if ( cc == null ) return null ; return new MyClassStats < > ( cc ) ; }
tr	10	@ Override public synchronized boolean checkToken ( Token token ) { for ( Token to : tokens ) { if ( token . equals ( to ) ) { return true ; } } return false ; }
tr	10	public void removeAllTags ( Collection < Tag > c ) { for ( Tag t : c ) tags . remove ( t ) ; }
tr	2	@ BeforeClass public static void setUpClass ( ) { }
tr	2	int newMark ( ) { return ++ currentMark ; }
tr	8	public String getVisitTotalCount ( String date ) { return this . jedis . get ( KEY_EVENT_CLICK_DAILY_TOTAL + date ) ; }
tr	5	public ListNode min ( ) { if ( isEmpty ( ) ) { throw new RuntimeException ( "Heap is empty!" ) ; } return array [ 0 ] ; }
tr	9	public WasInfluencedBy ( Influenceable influenced , Influenceable influencer ) { _influenced = influenced ; _influencer = influencer ; }
tr	9	@ Override public boolean contains ( T item ) { for ( T e : this ) { if ( e . equals ( item ) ) return true ; } return false ; }
tr	9	public static Value < String > val ( @ NotNull String str ) { return new Value < String > ( str ) ; }
tr	1	public draw ( ) { }
tr	2	public int getEmpNo ( ) { return empNo ; }
tr	3	public static void sort ( Comparable [ ] array ) { }
tr	7	public static void main ( String [ ] args ) throws EmailException , MalformedURLException { sendSimpleEmail ( GOOGLE , false ) ; }
tr	3	public String getSupplierName ( ) { return SupplierName ; }
tr	2	public int getChestNum ( ) { return chestNum ; }
tr	2	@ Override public int getColumnCount ( ) { return 3 ; }
tr	4	public String toString ( ) { return this . identificador + ": " + this . nombre ; }
tr	10	public boolean contains ( Object element ) { int my_element = ( Integer ) element ; if ( Arrays . binarySearch ( tablica , my_element ) < 0 ) return false ; return true ; }
tr	9	@ Override public void exitRule ( ParseTreeListener listener ) { if ( listener instanceof EnquantoListener ) ( ( EnquantoListener ) listener ) . exitBoolPar ( this ) ; }
tr	10	public void adv ( int bits ) { bits += endbit ; ptr += bits / 8 ; endbyte += bits / 8 ; endbit = bits & 7 ; }
tr	6	public static CacheManager getInstance ( ) { if ( instance == null ) instance = new CacheManager ( ) ; return instance ; }
tr	5	public void setFPublic ( BigInteger value ) { this . fPublic = value ; }
tr	2	public int getEngineRandomizeLoop ( ) { return engineRandomizeLoop ; }
tr	5	public void setDisplayLanguage ( String value ) { this . displayLanguage = value ; }
tr	2	public int getIntY ( ) { return ( int ) this . getY ( ) ; }
tr	2	public int getY ( ) { return yCoordinate ; }
tr	9	public Game ( TurnManager tm ) { this . tm = tm ; seed = ( int ) ( Math . random ( ) * 100 ) ; init ( ) ; }
tr	2	public void addReference ( ) { refCount ++ ; }
tr	1	public TempUser ( ) { }
tr	2	public boolean is_returnSpecified ( ) { return local_returnTracker ; }
tr	4	public List < SampleGroup > getSampleGroups ( ) { return sampleGroups ; }
tr	9	public PlasmaWave FirePlasmaWave ( ) { return new PlasmaWave ( getName ( ) + "-plasmaWave" , getX ( ) , getY ( ) , getDirection ( ) , getSpeed ( ) + plasmaWaveSpeedAdditions , this ) ; }
tr	2	public static int getDefaultHorizontalUnit ( ) { return DEF_H_UNIT ; }
tr	6	public void setShelfList ( ArrayList < Shelf > sl ) { this . shelfList = sl ; }
tr	7	public int squareHeight ( ) { return ( int ) Math . round ( this . height / ( this . juego . getMaximaPosicion ( ) . getY ( ) + 1 ) ) ; }
tr	1	public HousePlanner ( ) { }
tr	3	public synchronized long getHMillis ( ) { return ( long ) ( p . H * 1000.0 ) ; }
tr	8	public Move getLastMove ( ) { if ( this . movesList . size ( ) > 0 ) { return this . movesList . get ( this . movesList . size ( ) - 1 ) ; } else { return null ; } }
tr	9	@ Test ( expected = ParseException . class ) public void shouldRaiseParseExceptionWhenQuotesCountIsOdd ( ) throws ParseException { new CsvParser ( getStrategy ( ) ) . parse ( "Kronverk \"red\" \"\u041A\u043E\u0440\u043F\u043E\u0440\u0430\u0446\u0438\u044F \"\u041C\u0430\u0440\u0438\u043E\u043D\u0435\u0442\u043A\u0438\" 20.08.2014 5 6 60.00 8" ) ; }
tr	1	public GruppeErstellenView ( ) { }
tr	8	@ Override public String getStringRepresentation ( ) { return "\n" + getName ( ) + " { variables " + variableDeclarations . getStringRepresentation ( ) + ": func " + functionDeclarations . getStringRepresentation ( ) + "}\n" ; }
tr	10	public void createBox ( Rectangle2D rect , String name ) { boxes . add ( new Hitbox ( rect , name ) ) ; }
tr	3	public Game getGame ( ) { return this . game ; }
tr	2	public float getConstant ( ) { return getX ( ) ; }
tr	7	public static Object fnc$ ( String string , mVar p$f ) { throw new UnsupportedOperationException ( ) ; }
tr	5	public String optString ( int index ) { return this . optString ( index , "" ) ; }
tr	1	public void right ( ) { }
tr	1	public void framebufferUpdateEnd ( ) { }
tr	8	@ Override @ Transactional ( propagation = Propagation . NOT_SUPPORTED ) public List < daycare > findAll ( ) { return null ; }
tr	10	public void mousePressed ( Event e , int x , int y ) { render . mousePressed ( e , x , y ) ; }
tr	9	public void set ( int frames_to_alarm , boolean one_shot ) { frames = frames_to_alarm ; frames_left = frames ; this . one_shot = one_shot ; }
tr	9	private static String permutationToString ( final List < Integer > inputPerm ) { return inputPerm . toString ( ) . replaceAll ( "\\[" , "(" ) . replaceAll ( "\\]" , ")" ) ; }
tr	1	public User ( ) { }
tr	5	public void setItems ( List < long > items ) { this . items = items ; }
tr	2	public double getYCoord ( ) { return this . y ; }
tr	4	public void deposito ( double m ) { saldo += m ; }
tr	6	private PlayerPanel buildSecondPlayerPanel ( ) { return new ComputerPlayerPanel ( controller , PlayerSide . RIGHT ) ; }
tr	4	public void OnMenuBar ( boolean menuBar ) { received ( "OnMenuBlur" , menuBar ) ; }
tr	5	public void setCollection ( SaploCollection saploCollection ) { this . saploCollection = saploCollection ; }
tr	1	public boolean bonusDefausseUnite ( ) { return false ; }
tr	3	@ Override public void run ( ) { this . connect ( ) ; }
tr	3	public String getLongName ( ) { return longName ; }
tr	6	@ Override public String toString ( ) { return getClass ( ) . getSimpleName ( ) + "[" + bodyString ( ) + "]" ; }
tr	10	public void println ( ) throws IOException { outputStream . write (  ) ; outputStream . write (  ) ; outputStream . flush ( ) ; }
tr	1	public void destroy ( ) { }
tr	10	public void Draw ( ) { ChainEnemyTailPiece iterator = mFirstTailPiece ; while ( iterator != null ) { iterator . Draw ( ) ; iterator = iterator . GetNext ( ) ; } }
tr	9	public boolean contains ( Range range ) { return range . getEnd ( ) >= start && range . getStart ( ) <= end ; }
tr	8	public void setTranslateY ( double transY ) { this . transY = transY ; transform . setToTranslation ( transX , transY ) ; }
tr	4	public void setId ( long value ) { this . id = value ; }
tr	3	public Key getKey ( ) { return key ; }
tr	3	public BedState getState ( ) { return state ; }
tr	6	public T getElementAt ( int index ) { return this . elements . get ( index ) ; }
tr	6	public void setSpecies ( List < Specie > species ) { this . species = species ; }
tr	4	public List < Accession > getCore ( ) { return core ; }
tr	2	public int getRollCount ( ) { return rollCount ; }
tr	7	@ Override public < T > T unwrap ( class < T > iface ) throws SQLException { return null ; }
tr	3	public String getTelephone ( ) { return telephone ; }
tr	8	@ Override public Message getMessage ( int msgnum ) throws MessagingException { return _imapFolder . getMessage ( msgnum ) ; }
tr	10	public Vector4f ( final float pX , final float pY , final float pZ , final float pW ) { set ( pX , pY , pZ , pW ) ; }
tr	4	@ Deprecated public String getAppUrlSafeName ( ) { return appName ; }
tr	1	public DefaultOclContext ( ) { }
tr	1	public Grundmass ( ) { }
tr	4	public void setSizeY ( int size ) { this . newSizeY = size ; }
tr	4	public void setWireframe ( boolean enabled ) { wireframeEnabled = enabled ; }
tr	2	public int [ ] [ ] getGraph ( ) { return graph ; }
tr	6	@ Override public void pause ( ) { poller . setPause ( true ) ; sender . setPause ( true ) ; }
tr	5	public void setFullname ( String value ) { this . fullname = value ; }
tr	10	@ Override public int compareTo ( Match o ) { if ( this . gameStartMs > o . gameStartMs ) return 1 ; else if ( this . gameStartMs < o . gameStartMs ) return - 1 ; return 0 ; }
tr	8	private String getCitizenship ( HttpServletRequest request ) { return request . getParameter ( PersonColumnNames . citizenship ) ; }
tr	5	public void setCNPJ ( String CNPJ ) { this . CNPJ = CNPJ ; }
tr	9	public static void deleteResultsByUser ( String username ) { String update = "DELETE FROM history WHERE user=\"" + username + "\";" ; MyDB . updateDatabase ( update ) ; }
tr	5	@ Test public void testPostTemplate ( ) throws Exception { testTemplateContains ( "com/h3xstream/scriptgen/templates/php_curl.tpl" , "CURLOPT_POSTFIELDS" , reqPost ) ; }
tr	4	public void setCredits ( int credits ) { this . credits = credits ; }
tr	3	public String getPathRemainder ( ) { return path_remainder_ ; }
tr	6	public static Length getLength ( Element e ) { return e . getLength ( ) ; }
tr	2	public void setInactive ( ) { active = false ; }
tr	3	public String getName ( ) { return name ; }
tr	3	public Date getLastLoginDateTime ( ) { return lastLoginDateTime ; }
tr	10	private static long to_six_bit ( long num ) { return ( ( ( num << 26 ) & fc000000fc000000 ) | ( ( num << 12 ) & fc000000fc0000 ) | ( ( num >> 2 ) & fc000000fc00 ) | ( ( num >> 16 ) & fc000000fc ) ) ; }
tr	8	@ Override public Struct createStruct ( String typeName , Object [ ] attributes ) throws SQLException { return null ; }
tr	3	public static byte renderBooleanByte ( final boolean value ) { return ( byte ) ( value ? 1 : 0 ) ; }
tr	4	public void setNoOfAssistants ( int noOfAssistants ) { this . noOfAssistants = noOfAssistants ; }
tr	7	public static String md5Hash ( InputStream in ) throws IOException { return hash ( in , "MD5" ) ; }
tr	9	public Task [ ] getTasksAsArray ( ) { Task [ ] t = { } ; t = tasks . toArray ( t ) ; return t ; }
tr	4	public Laptop ( ) { this . setType ( Type . LAPTOP ) ; }
tr	2	public void select ( ) { switch ( current ) { case 0 : case 1 : } }
tr	3	public String getXlinkRole ( ) { return xlinkRole ; }
tr	10	@ Override public void finalizeConnector ( ) throws OntologyConnectorException { if ( server != null ) { try { server . close ( ) ; } catch ( IOException e ) { throw new OntologyConnectorException ( "Could not close the socket server!" ) ; } } keepOn = false ; }
tr	3	public Authority_Service ( ) { super ( WSDL_LOCATION , SERVICE ) ; }
tr	4	public static ImageIcon getCertificateIcon ( ) { return IconLoader . getIcon ( "cert.png" ) ; }
tr	2	public int getTtl ( ) { return ttl ; }
tr	6	public int signum ( ) { if ( bigVal != null ) { return bigVal . signum ( ) ; } else { return val > 0 ? 1 : val < 0 ? - 1 : 0 ; } }
tr	1	public Typewriter ( ) { super ( 1 , 1000 ) ; }
tr	5	public void setImageParts ( String [ ] imageParts ) { _imageParts = imageParts ; }
tr	6	public static ApplicationContext getContext ( ) { if ( applicationContext == null ) { applicationContext = new ApplicationContext ( ) ; } return applicationContext ; }
tr	10	public static String getEmailName ( String emailAddress ) { int index = emailAddress . indexOf ( "@" ) ; return emailAddress . substring ( 0 , index ) ; }
tr	8	public boolean displayWinner ( String winner ) { JOptionPane . showMessageDialog ( this , "The Winner is " + winner , "Winner" , JOptionPane . PLAIN_MESSAGE ) ; return true ; }
tr	1	public MainGame ( ) { }
tr	9	public static float getFloat ( String s ) { return prefs . getFloat ( s , floatDefaults . get ( s ) ) ; }
tr	10	Registration ( H handler , Queue < H > removeFrom ) { this . handler = handler ; this . removeFrom = removeFrom ; }
tr	2	public byte getEncodingClass ( ) { return encodingClass ; }
tr	8	@ Override public String toString ( ) { return String . format ( "%s\nAncho: %.1f\nAlto: %.1f" , super . toString ( ) , this . ancho , this . alto ) ; }
tr	3	public String getErrorMeg ( ) { return errorMsg ; }
tr	1	private Singleton1 ( ) { }
tr	2	public boolean isForce ( ) { return isForce ; }
tr	9	private void addListenerLoop ( ) { for ( int i = 0 ; i < selectRecipePanel . currentLabels . size ( ) ; i ++ ) { addViewRecipeListener ( i ) ; } }
tr	7	public Atendente ( String nome , Conta conta ) { super ( nome , conta ) ; }
tr	1	public SendEvent ( ) { super ( ) ; }
tr	5	public void makeEven ( ) { if ( population . size ( ) % 2 == 1 ) { population . remove ( 0 ) ; } }
tr	7	public Ability getAbility ( String tag ) { return availableAbilities . get ( tag ) ; }
tr	6	public void sum ( int i , float j ) { System . out . println ( "Int Float" ) ; }
tr	3	@ Override public void run ( ) { repaint ( ) ; }
tr	10	public void updateRotation ( double h , double p , double r ) { pobj . rotate ( h , p , r ) ; updateAbstraction ( ) ; }
tr	6	public void setOperands ( List < ? extends Number > operands ) { this . operands = operands ; }
tr	1	public ReadNode ( ) { this ( null ) ; }
tr	3	public Par getPar ( ) { return par ; }
tr	1	public void paintDirtyRegions ( ) { }
tr	10	public JSONObject put ( String key , int value ) throws JSONException { this . put ( key , new Integer ( value ) ) ; return this ; }
tr	3	public String getUserID ( ) { return userID ; }
tr	1	public FPoint3 ( ) { }
tr	6	public static boolean isUriLetterOrDigit ( char c ) { return ( isUriLetter ( c ) || isUriDigit ( c ) ) ; }
tr	7	@ Override public void updateString ( String columnLabel , String x ) throws SQLException { }
tr	4	@ Override public void newMedia ( MediaPlayer arg0 ) { }
tr	4	public MpegAudioDecodeException ( String s ) { super ( s ) ; }
tr	5	public ReceiverThread ( Socket communicationSocket ) { this . communicationSocket = communicationSocket ; }
tr	2	public int getRegenDelay ( ) { return regenDelay ; }
tr	2	public int getCol ( ) { return col ; }
tr	4	public void setId ( long id ) { this . id = id ; }
tr	1	public int getLastPrintedLine ( ) { return 0 ; }
tr	2	public void levelWon ( ) { levelWon = true ; }
tr	5	public HexValidator ( ) { pattern = Pattern . compile ( HEX_PATTERN ) ; }
tr	4	public void setCtrValorTotal ( double ctrValorTotal ) { this . ctrValorTotal = ctrValorTotal ; }
tr	6	public void setGroup ( PasswordGroup group ) { this . group = group ; setEntry ( null ) ; }
tr	7	public static byte getWorth ( final MineType mt ) { switch ( mt ) { case COAL : return 1 ; case GOLD : return 4 ; case IRON : return 2 ; default : return 0 ; } }
tr	7	@ Override public String getDescription ( ) { return description + String . format ( " (*%s)" , extension ) ; }
tr	2	@ Override public boolean hasAnimation ( ) { return true ; }
tr	9	private void setCreatureGoals ( ) { for ( Creature creature : fCreatures ) ( ( CreatureBehaviour ) creature . getBehaviour ( ) ) . setDest ( fGoal ) ; }
tr	3	public String getServerURI ( ) { return serverURI ; }
tr	6	@ Override public void registrarObservador ( ObservadorReproduccionPestania obs ) { this . observador = obs ; }
tr	4	public List < Node > getChildren ( ) { return children ; }
tr	1	public OutputFormatterStyleStack ( ) { this ( null ) ; }
tr	8	public List < String > getADMID ( ) { if ( admid == null ) { admid = new ArrayList < String > ( ) ; } return this . admid ; }
tr	7	public void setExecutionStepListener ( Interpreter . ExecutionStepListener listener ) { mInterpreter . setExecutionStepListener ( listener ) ; }
tr	8	@ Override public Array createArrayOf ( String typeName , Object [ ] elements ) throws SQLException { return null ; }
tr	3	public void mouseExited ( MouseEvent e ) { }
tr	4	public void setAavatr ( int avatar ) { this . avatar = avatar ; }
tr	5	public int charWidth ( char c ) { return _fm . charWidth ( c ) ; }
tr	9	public void showSeason ( int year ) { SeasonView view = new SeasonView ( this , currentDataProvider , year ) ; setView ( view ) ; }
tr	3	public Integer getCI ( ) { return CI ; }
tr	4	public Wrapper ( ) { sum = Integer . MIN_VALUE ; }
tr	6	public HashMap < String , LinkedList < String >> getHeader ( ) { return header ; }
tr	1	public void reset ( ) { }
tr	5	public StringParser ( String target ) { this ( target , CASE_SENSITIVE ) ; }
tr	2	public int getPeso ( ) { return peso ; }
tr	3	public byte [ ] getTerminator ( ) { return terminators [ textEncoding ] ; }
tr	10	public void encipher ( FileInputStream arg0 , FileOutputStream arg1 ) { this . encipher ( ( InputStream ) arg0 , ( OutputStream ) arg1 ) ; }
tr	10	private void createMouse ( ) { try { org . lwjgl . input . Mouse . create ( ) ; } catch ( LWJGLException e ) { e . printStackTrace ( ) ; } }
tr	7	public void close ( ) { ChannelFuture future = channel . close ( ) ; future . awaitUninterruptibly ( ) ; }
tr	2	public int getiSortOrder ( ) { return iSortOrder ; }
tr	4	public UnknownCommandException ( String message ) { super ( message ) ; }
tr	7	public T get ( Identifier id ) { System . out . println ( "get(String id) not really implemented for ListSample" ) ; return null ; }
tr	9	private OSGiMetaDataBuilder ( String symbolicName , Version version ) { metadata = new DynamicMetaDataInternal ( symbolicName , version ) ; }
tr	8	@ Override public Ast [ ] getVariables ( ) { Ast [ ] list = { this . op , this . term } ; return list ; }
tr	8	public static String dumpCSV ( ICSVProvider csv ) throws Exception { return dumpCSV ( csv , long . MAX_VALUE , 11 , false , null ) ; }
tr	3	@ Override public void imprimirFormaDePago ( ) { this . imprimirDatos ( ) ; }
tr	9	@ Override public void step ( ) { for ( AgentModel m : agents . values ( ) ) { m . model . step ( ) ; } }
tr	8	public void saveLang ( ) { try { lang . save ( langFile ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } }
tr	2	public GUIgestionPiezas ( ) { initComponents ( ) ; }
tr	4	public void setCXpos ( double param ) { cxpos = param ; }
tr	2	public TinyUrlWebServiceCallbackHandler ( ) { this . clientData = null ; }
tr	3	@ Override public String getPacketName ( ) { return "RekordyWynikow" ; }
tr	8	@ Override public void handshake ( int supports , String version , String nonce ) throws IOException { }
tr	10	@ Override public int compareTo ( RequestEvent requestEvent ) { if ( this . time < requestEvent . time ) return - 1 ; else if ( this . time > requestEvent . time ) return 1 ; else return 0 ; }
tr	7	private static InputStream openResourceStream ( String resourcePath ) { return ClassUsecaseTest . class . getResourceAsStream ( resourcePath ) ; }
tr	1	private Files ( ) { }
tr	6	public ArrayList < Comanda > listarTodos ( ) { return ComandaController . obterInstancia ( ) . listarTodos ( ) ; }
tr	5	public void setName ( String name ) { this . name = name ; }
tr	10	public Vector3f div ( float r ) { return new Vector3f ( x / r , y / r , z / r ) ; }
tr	1	public boolean checkTower ( ) { return false ; }
tr	3	public Player getPlayer ( ) { return player ; }
tr	5	public void show ( ) { System . out . println ( this . toString ( ) ) ; }
tr	9	public void keyReleased ( KeyEvent event ) { if ( event . getKeyCode ( ) == KeyEvent . VK_ENTER ) { if ( editMode ) exitEditMode ( ) ; } }
tr	9	private boolean r_Step_5b ( ) { ket = cursor ; if ( ! ( eq_s_b ( 1 , "l" ) ) ) { return false ; } bra = cursor ; if ( ! r_R2 ( ) ) { return false ; } if ( ! ( eq_s_b ( 1 , "l" ) ) ) { return false ; } slice_del ( ) ; return true ; }
tr	4	@ Override public int size ( ) { return set . size ( ) ; }
tr	8	public FeatureDataItem ( FeatureVector fv , double score ) { this . fv = fv ; this . score = score ; }
tr	10	@ Override public int read ( WritableByteChannel channel ) throws IOException { int read = read ( channel , getReadableBytes ( ) , null ) ; return read ; }
tr	6	@ Override public String toString ( ) { return Arrays . toString ( parent ) ; }
tr	6	public XmlTags ( XmlTag tag ) { tags . add ( tag ) ; }
tr	8	@ Override public MyDatabase getMysql ( ) { if ( client == null ) { return SgdBase . getMysql ( ) ; } else { return client . getMysql ( ) ; } }
tr	6	public void setLevels ( Collection < XmlLevel > items ) { this . levels = items ; }
tr	10	public static void setTime ( String pack , int level , int time ) { level ( pack , level ) [ 0 ] = time ; autosave ( ) ; }
tr	10	public edge ( int source , int destination , int weight ) { this . source = source ; this . destination = destination ; this . weight = weight ; }
tr	9	public boolean isCheck ( Player player ) { switch ( player ) { case BLACK : return this . blackCheck ; case WHITE : return this . whiteCheck ; default : throw new IllegalArgumentException ( ) ; } }
tr	5	public int weightOf ( Object key , Object value ) { return 1 ; }
tr	9	public static boolean bothIntegers ( Number number , Number otherNumber ) { return number instanceof Integer && otherNumber instanceof Integer ; }
tr	1	public SessionListener ( ) { }
tr	1	public void HandleMouseEvent ( ) { }
tr	1	private FileMapper ( ) { }
tr	7	public CartPtfloat ( float x , float y ) { this . x = x ; this . y = y ; }
tr	10	public void setZoom ( double newZoom ) { Point zoomingCenter = new Point ( getWidth ( ) / 2 , getHeight ( ) / 2 ) ; setZoom ( newZoom , zoomingCenter ) ; }
tr	2	@ Override public void stop ( ) { }
tr	5	public AssignGate ( String name ) { super ( "assign" , name , new OneBusOutOneBusIn ( ) ) ; }
tr	2	public Consulta_cantidad_acreditaciones ( ) { initComponents ( ) ; }
tr	2	public ShieldAspect ( ) { this . name = "shield" ; }
tr	5	@ Override public String toString ( ) { return "SecondBean [gender=" + gender + "  profession=" + profession + "]" ; }
tr	2	public int getEffectiveness ( ) { return effectiveness ; }
tr	7	public void setFiles ( ArrayList < FTPFile > files2 ) { this . files = files2 ; fireTableDataChanged ( ) ; }
tr	7	@ Override public void serverConnectionChange ( String change ) { sendRequestForDefaultBuffer ( ) ; ServerConnection . removeServerConnectionListener ( this ) ; }
tr	2	public boolean isfCommunity ( ) { return fCommunity ; }
tr	3	public PlannerError getError ( ) { return error ; }
tr	2	public String toString ( ) { return "Wilcoxin Test:Mann-Whitney Test" ; }
tr	10	public void addSpecialEntity ( String identifier , String entity ) { specialEntities . put ( entity . toLowerCase ( ) , identifier ) ; }
tr	9	private void setupComponents ( ) { frame . setLayout ( new BorderLayout ( ) ) ; frame . add ( mainPane , BorderLayout . CENTER ) ; }
tr	6	void press ( int I ) { instrument . press ( 64 + scale [ I ] , 0.5 ) ; }
tr	1	public SendEvent ( ) { super ( ) ; }
tr	4	public WorldFrame getJFrame ( ) { return ( WorldFrame ) frame ; }
tr	7	public void setGui_label ( String value ) { otapiJNI . MarketData_gui_label_set ( swigCPtr , this , value ) ; }
tr	6	public void addSubmission ( Submission s ) { submissions . add ( s ) ; }
tr	10	public void closeConnection ( ) throws IOException { listener . close ( ) ; instream . close ( ) ; outstream . close ( ) ; sock . close ( ) ; }
tr	7	@ Override public String accept ( final NodeVisitor visitor ) { return visitor . visit ( this ) ; }
tr	10	@ Override public int hashCode ( ) { int result = lat . hashCode ( ) ; result = 31 * result + lng . hashCode ( ) ; return result ; }
tr	1	public void initialize ( ) { }
tr	3	public Exp getCondition ( ) { return condition ; }
tr	6	public void setObject ( List < T > object ) { this . object = object ; }
tr	4	public void study ( ) { System . out . println ( "Study something..." ) ; }
tr	9	public UserListReturnDTO ( List < UserDTO > userDTOs , ActionResult result ) { super ( result ) ; this . userDTOs = userDTOs ; }
tr	5	public void setPesquisadorResponsavel ( Pesquisador pesquisadorResponsavel ) { this . pesquisadorResponsavel = pesquisadorResponsavel ; }
tr	4	@ Override public void componentResized ( ComponentEvent e ) { }
tr	10	@ Test public void simpleDivisionTest ( ) throws Exception { final BigDecimal res = calculator . evaluate ( " 10 / 5 " ) ; assertEquals ( "Division of numbers isn't calculated correctly" , new BigDecimal ( 2 ) , res ) ; }
tr	3	public static OmahaBuilder < ? > builder ( ) { return new Builder2 ( ) ; }
tr	3	public String getLocunit ( ) { return locunit ; }
tr	8	public Additional_datum ( String id , byte [ ] data ) { this . id = id ; this . data = data ; }
tr	5	public java . awt . Frame getFrame ( ) { return parent ; }
tr	10	public GraphX ( String pname ) { _vertexs = new DoubleList < > ( new VertexComparator < Vertex < E >> ( ) ) ; _name = pname ; }
tr	7	public void setTestActors ( Map < String , Actor > testActors ) { this . testActors = testActors ; }
tr	4	public void setfFirst ( int fFirst ) { this . fFirst = fFirst ; }
tr	3	public String getDiscPOSData ( ) { return discPOSData ; }
tr	10	@ Override public void setChild ( int childIndex , GeneTrait child ) { if ( childIndex != 0 ) { throw new IllegalArgumentException ( "No such child index: " + childIndex ) ; } this . child = child ; }
tr	10	public Producer ( String host , int port , int clientId , int queueId ) { super ( host , port , clientId , queueId ) ; }
tr	2	public int getY ( ) { return this . y ; }
tr	3	public JButton getButtonClose ( ) { return btnClose ; }
tr	1	public Builder ( ) { }
tr	4	public ParserException ( String message ) { super ( message ) ; }
tr	7	public final void setLoc ( final short x , final short y ) { loc . set ( x , y ) ; }
tr	8	public synchronized void delete ( ) { if ( swigCPtr != 0 ) { if ( swigCMemOwn ) { swigCMemOwn = false ; otapiJNI . delete_Storable ( swigCPtr ) ; } swigCPtr = 0 ; } }
tr	7	@ Override public void sendAction ( ButtonSourceType type ) { nPanel . sendAction ( type ) ; }
tr	10	private int getParticleSize ( Particle p ) { double time = p . getTime ( ) ; if ( time > 3 ) return 28 ; else if ( time > 2 ) return 20 ; else if ( time > .8 ) return 14 ; else if ( time > .4 ) return 12 ; else return 10 ; }
tr	9	public static final byte convert ( byte in ) { byte hex1 = ( byte ) ( in << 4 ) ; byte hex2 = ( byte ) ( ( in >>> 4 ) & F ) ; return ( byte ) ( hex2 | hex1 ) ; }
tr	7	public static _Fields findByName ( String name ) { return byName . get ( name ) ; }
tr	6	@ Override public LongWritable getCurrentKey ( ) throws IOException , InterruptedException { return key ; }
tr	1	public AulaTestes ( ) { }
tr	1	public ParserIllegalPlayerNameException ( ) { }
tr	2	public boolean hasNext ( ) { return offset != null ; }
tr	7	private void limpiarCampos ( ) { this . txtNumeroCaballo . setText ( "" ) ; this . txtDividendo . setText ( "" ) ; this . lblMensaje . setText ( "" ) ; }
tr	3	public String getTipoRazza ( ) { return toString ( ) ; }
tr	9	public void addAppearance ( VariableAppearance appearance ) { if ( ! appearances . contains ( appearance ) ) { appearances . add ( appearance ) ; } }
tr	3	synchronized public String getName ( ) { return name ; }
tr	5	private boolean setPlayerTwoType ( String playerTwoType ) { m_PlayerTwoType = playerTwoType ; return true ; }
tr	2	public long getHash ( ) { return hash ; }
tr	8	@ Test public void testSize ( ) { System . out . println ( "size" ) ; assertTrue ( instance . size ( ) == 1 ) ; }
tr	4	public Cliente ( ) { this . id = 0 ; this . nome = "" ; this . dataNascimento = null ; }
tr	2	public boolean isMoving ( ) { return moving ; }
tr	5	public void setInformer ( Activity informer ) { _informer = informer ; }
tr	2	public void stop ( ) { thread = null ; }
tr	8	@ Override public List < EFieldOfStudy > getAllFieldsOfStudy ( ) { return Arrays . asList ( EFieldOfStudy . values ( ) ) ; }
tr	10	public void pause ( final int interval , final ItemType item ) { assert ! this . pausedItems . contains ( item ) ; this . pausedItems . add ( item ) ; }
tr	7	public static ArrayImpl union ( ArrayImpl first , ArrayImpl second ) { return first ; }
tr	5	public void killData ( Object object , int i ) { throw new UnsupportedOperationException ( ) ; }
tr	3	public String getProfessio ( ) { return professio ; }
tr	6	@ Override public int getCollisionBoxWidth ( ) { return body . getCollisionBoxWidth ( ) + spikes [ 0 ] . getCollisionBoxWidth ( ) ; }
tr	10	public void write ( short [ ] samples , int offs , int len ) throws JavaLayerException { if ( isOpen ( ) ) { writeImpl ( samples , offs , len ) ; } }
tr	6	@ Test public void returnsCorrectGenreIdForPolka ( ) throws Exception { assertEquals ( 75 , ID3v1Genres . matchGenreDescription ( "Polka" ) ) ; }
tr	2	public double getY ( ) { return y ; }
tr	9	public boolean equals ( Loc r ) { return r . x == this . x && r . y == this . y ; }
tr	1	public Group ( ) { }
tr	1	public ConnectionHandler ( ) { }
tr	8	@ Override public String getFileName ( String abspath ) { return new File ( abspath ) . getName ( ) ; }
tr	6	public void setIxRelatedBugs ( List < Integer > ixRelatedBugs ) { this . ixRelatedBugs = ixRelatedBugs ; }
tr	6	public void clearFeedback ( ) { for ( ValueSource vs : valueSources ) { vs . clearFeedback ( ) ; } }
tr	5	public static int abs ( final int x ) { return ( x < 0 ) ? - x : x ; }
tr	9	public static String generateRandomValue ( int base , int addition ) { return generateRandomString ( base + random . nextInt ( addition ) ) ; }
tr	5	public void setBairro ( String bairro ) { this . bairro = bairro ; }
tr	10	public OSGiMetaDataBuilder addRequiredExecutionEnvironments ( String ... envspecs ) { for ( String envspec : envspecs ) { requiredEnvironments . add ( envspec ) ; } return this ; }
tr	5	@ Override public void titleChanged ( MediaPlayer mp , int i ) { }
tr	5	@ Override public int getMessageCount ( ) throws MessagingException { return _imapFolder . getMessageCount ( ) ; }
tr	2	public String getTestingModeAnswer ( ) { return "Test Answer" ; }
tr	2	long get ( ) { return value ; }
tr	2	public byte [ ] getOpUserPW ( ) { return adminPW ; }
tr	3	public Date getDateSubmitted ( ) { return this . dateSubmitted ; }
tr	2	public double getMaxSpeed ( ) { return maxSpeed ; }
tr	10	public void ReInit ( JavaCharStream stream ) { jjmatchedPos = jjnewStateCnt = 0 ; curLexState = defaultLexState ; input_stream = stream ; ReInitRounds ( ) ; }
tr	2	public double [ ] getGyroBias ( ) { return mGyroBias ; }
tr	4	public void setMovingRight ( boolean movingRight ) { this . movingRight = movingRight ; }
tr	2	public int [ ] getyFood ( ) { return yFood ; }
tr	4	public SimpleObject ( int value ) { this . value = value ; }
tr	8	public void mouseClicked ( MouseEvent e ) { if ( ! has_focus ) canvas . requestFocus ( ) ; updateMouse ( e , false , false , true ) ; }
tr	1	public Project ( ) { }
tr	9	public < A extends Annotation > Field [ ] annotationFields ( class < A > anno ) { return annotationFields ( anno , Object . class ) ; }
tr	4	public String getDescription ( Locale locale ) { return "JPEG ISO 10918-1  JFIF V1.02" ; }
tr	10	@ Override public void handle ( MouseEvent event ) { if ( event . getEventType ( ) . equals ( MouseEvent . MOUSE_CLICKED ) ) { popupPane ( ) ; } }
tr	1	public ReservaInformation ( ) { }
tr	9	public SimulatorView ( Simulator sim ) { super ( sim ) ; colors = new LinkedHashMap < class < ? > , Color > ( ) ; fieldView = new FieldView ( 100 , 100 ) ; }
tr	6	public static int convertIndexToBaseBlockIndex ( byte index ) { switch ( index ) { case GOLD : case IRON : return 1 ; default : return index ; } }
tr	8	public double . ( Vector v ) { return ( x * v . x ) + ( y * v . y ) ; }
tr	7	public Variant ( SafeArray array , boolean byRef ) { this ( array , VariantArray , byRef ) ; }
tr	10	public < U > U aggregate ( BinaryFunction < T , U , U > aggregator ) { return aggregate ( null , aggregator ) ; }
tr	7	public int compareTo ( Account other ) { return this . number . compareTo ( other . number ) ; }
tr	9	@ Override public InetSocketAddress getLocalSocketAddress ( WebSocket conn ) { if ( socket != null ) return ( InetSocketAddress ) socket . getLocalSocketAddress ( ) ; return null ; }
tr	5	public Rect getRectangle ( ) { return new Rect ( width , height ) ; }
tr	5	private int valueRanges ( Situation s ) { return valueSolution ( s , 0 ) ; }
tr	2	public int getNumWant ( ) { return numWant ; }
tr	7	public StringBuilder Htmlproduct ( Integer ID ) { return HtmlModel . Htmlproduct ( ID ) ; }
tr	8	public static FrameSet read ( File tempFile ) { FrameSet retval = new FrameSet ( ) ; return retval ; }
tr	10	public Scanner ( int adresse , int timeoutMS ) { this . adresse = adresse ; this . HWaccess = HWSimulation . getInstance ( ) ; workerThread = new ParallelWarteClass ( 1000 ) ; }
tr	10	@ Override public void setShort ( String key , short value ) { source . setString ( key , short . toString ( value ) ) ; }
tr	2	public boolean hasAzioneStatica ( ) { return ! azioneStaticaCompiuta ; }
tr	7	public PermissionDeniedException ( String message , Throwable cause ) { super ( message , cause ) ; }
tr	6	public SimpleCharStream ( java . io . InputStream dstream ) { this ( dstream , 1 , 1 , 4096 ) ; }
tr	7	public Dimension getMaximumSize ( ) { return new Dimension ( this . getEditorPanelSize ( ) . width , Integer . MAX_VALUE ) ; }
tr	8	TestType ( final int id , final String message ) { this . id = id ; this . message = message ; }
tr	4	@ Override public void close ( ) { this . smartManager . close ( ) ; }
tr	8	public void setDocumentTable ( Hashtable < String , ArrayList < String >> documentTable ) { this . documentTable = documentTable ; }
tr	10	public List < YeastAdditionType . Addition > getAddition ( ) { if ( addition == null ) { addition = new ArrayList < YeastAdditionType . Addition > ( ) ; } return this . addition ; }
tr	10	Search ( String desc , T [ ] sorted , int [ ] keys ) { super ( desc , sorted ) ; this . keys = keys ; }
tr	7	public void setCopyright ( String copyright ) { if ( id3v2Tag != null ) { id3v2Tag . setCopyright ( copyright ) ; } }
tr	8	private void menuHelpActionPerformed ( java . awt . event . ActionEvent evt ) { new HelpPopup ( ) . setVisible ( true ) ; }
tr	9	@ Override public final String getPrefix ( String namespaceURI ) { return chained == null ? "" : chained . getPrefix ( namespaceURI ) ; }
tr	3	@ Override public void setDistance ( float distance ) { }
tr	10	public static void setSerializedObject ( Object caller , Object o ) { synchronized ( SER_MAP ) { SER_MAP . put ( caller , o ) ; } }
tr	4	public List < Campaign > getCamlist ( ) { return camlist ; }
tr	7	public void export ( File destFile ) { eventsHandler . getLog ( ) . export ( destFile ) ; }
tr	8	@ Override public void imprimir ( String s ) { System . out . print ( s ) ; }
tr	8	public Force forceOn ( Gravitable g ) throws CollisionException { return model . forceOn ( g ) ; }
tr	6	public void unregisterEntity ( Entity e ) { removeQueue . add ( e ) ; }
tr	8	public Register ( String name ) { state = RegState . IDLE ; this . Name = name ; }
tr	2	public boolean IsValid ( ) { return this . Settings != null ; }
tr	3	public String getQQ ( ) { return qq ; }
tr	3	public void requestUpdate ( ) { regExListenerManager . updateRequested ( ) ; }
tr	6	@ Override public String toString ( ) { return String . format ( "(UnitDeath) %s" , unit ) ; }
tr	10	String getPath ( int num ) { if ( ! pathInputVerifier . verify ( pathFields [ num ] ) ) { return null ; } return pathFields [ num ] . getText ( ) ; }
tr	9	public int [ ] vasenKaannos ( ) { if ( this . rotaatio <= 1 ) { this . rotaatio = maxRotaatio ; } else { this . rotaatio = this . rotaatio - 1 ; } return this . tetromino . getPisteet ( rotaatio ) ; }
tr	9	public StreamFilenameEncryptionStrategy ( EncFSVolume volume , String volumePath ) { super ( volume , volumePath , EncFSFilenameEncryptionAlgorithm . STREAM ) ; }
tr	10	protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { this . doPost ( request , response ) ; }
tr	9	@ Override public void enterRule ( ParseTreeListener listener ) { if ( listener instanceof EnquantoListener ) ( ( EnquantoListener ) listener ) . enterPrograma ( this ) ; }
tr	6	@ Test public void test_0505_CONFIRM_FORM_SUBMIT ( ) throws Exception { doTest ( getClass ( ) . getResource ( "/w3.org/WAI/UA/TS/html401/cp0505/0505-CONFIRM-FORM-SUBMIT.html" ) ) ; }
tr	10	private int getValueOnDigit ( int number , int d ) { return number % ( int ) Math . pow ( 10.0 , d ) / ( int ) Math . pow ( 10.0 , d - 1 ) ; }
tr	7	public synchronized void togglePause ( ) { if ( pause == 0 ) { pause = 999999 ; } else { pause = 0 ; if ( inpause ) { gcodepainter . interrupt ( ) ; } } }
tr	6	@ Override public String toString ( ) { return ( "<" + this . getNombre ( ) + "  " + this . getFrecuencia ( ) . toString ( ) + ">" ) ; }
tr	7	public void setProducers ( String ... producers ) { setProducers ( Arrays . asList ( producers ) ) ; }
tr	9	public MetaData ( Date date , String user ) { this . date = date ; this . user = user ; }
tr	6	private void jMenuItem14ActionPerformed ( java . awt . event . ActionEvent evt ) { }
tr	2	public int hashCode ( ) { return super . hashCode ( ) ; }
tr	10	public void render ( GameContainer gc , StateBasedGame sbg , Graphics g ) { g . draw ( body ) ; }
tr	5	@ Override public void onWeaponFired ( int id , Weapon weapon ) { }
tr	2	public int getScore ( ) { return scroe ; }
tr	2	public boolean getCardapioCumprido ( ) { return cardapioCumprido ; }
tr	10	public void fightTo ( Point2 target ) { aiMode = CharacterAIMode . FIGHT ; pathingTarget . set ( target ) ; clearFailStrikes ( ) ; }
tr	9	public void put ( String key , String value ) { this . _fields . put ( key , value ) ; }
tr	1	public void onKeyReleased ( ) { }
tr	7	public static boolean isPointsEnoughToBuyToolWithNumber ( int points , Tool tool ) { if ( points < tool . getBuyPoints ( ) ) { return false ; } return true ; }
tr	6	public Builder withAvailableGestures ( Gesture ... gestures ) { this . availableGestures = gestures ; return this ; }
tr	7	public int getData ( int row , int col ) { return data [ getIndex ( row , col ) ] ; }
tr	2	public boolean isLarge ( ) { return ptr != 0 ; }
tr	9	public static boolean atLeast ( Number a , Number b ) { return a . doubleValue ( ) >= b . doubleValue ( ) ; }
tr	2	public boolean checkInput ( ) { return ( mdpData != null ) ; }
tr	4	public void shutdown ( ) { datagramSocket . close ( ) ; this . exit = true ; }
tr	6	@ Override public double calculateDiscount ( double price , int qty ) { return ( qty * dollarAmt ) ; }
tr	5	public Collection < Playable > getPlayables ( ) { return playables . values ( ) ; }
tr	2	public int getNumber ( ) { return number ; }
tr	3	public TipoSituacaoPartida getSituacaoPartida ( ) { return this . situacaoPartida ; }
tr	6	@ Override public void exitValInt ( @ NotNull MagicParser . ValIntContext ctx ) { }
tr	4	public void setAddressId ( int value ) { addressId = value ; }
tr	3	public Expresion getCondicion2 ( ) { return condicion2 ; }
tr	8	public void evaluate ( Instance instance , Prediction prediction ) { add ( instance , prediction ) ; }
tr	8	@ Override public boolean update ( Object event ) { if ( m_father != null ) { return m_father . update ( event ) ; } return false ; }
tr	8	@ Test public void testPackageNameDoesNotEndWithDot ( ) { final JavaType type = new JavaType ( "test." , "Test" ) ; assertEquals ( "test" , type . getPackageName ( ) ) ; }
tr	5	protected Page getPage ( ) { return linkedObjects . get ( 0 ) . getPage ( ) ; }
tr	1	public Cuenta ( ) { }
tr	4	public void setRoleId ( long roleId ) { this . roleId = roleId ; }
tr	6	void addOption ( Option opt ) { options . add ( opt ) ; }
tr	5	public void setFuncao ( String funcao ) { this . funcao = funcao ; }
tr	7	@ Override public void setDefBase ( int defBase ) { baseStats [ DEF ] = defBase ; reCalcStats ( ) ; }
tr	2	public boolean isPercentage ( ) { return percentage ; }
tr	5	public void setAuthorizeUri ( String authorizeUri ) { this . authorizeUri = authorizeUri ; }
tr	1	public ProgressHelperTest ( ) { }
tr	7	public InvalidParameterException ( final String message , final Throwable exception ) { super ( message , exception ) ; }
tr	1	public boolean isAbsent ( ) { return null ; }
tr	7	public static boolean isLinux ( String platform ) { return isLinux32 ( platform ) || isLinux64 ( platform ) ; }
tr	8	@ Override public int compareTo ( PhysicalNode node ) { return node . getNodeAvailability ( ) . compareTo ( this . getNodeAvailability ( ) ) ; }
tr	5	public DeliveryRequest ( ) { header = new MessageHeader ( ) ; body = new Body ( ) ; }
tr	8	@ Override public void itemStateChanged ( ItemEvent e ) { colorButton . setEnabled ( btnOpac . isSelected ( ) ) ; }
tr	5	public void setShipVia ( String value ) { this . shipVia = value ; }
tr	4	@ Test public void testDiskTableLargeBlocks ( ) throws IOException { testTable ( 1 << 15 ) ; }
tr	8	public LeftBattleEvent ( int id , String user ) { this . id = id ; this . user = user ; }
tr	7	final protected RepetitionParser zeroOrMore ( final Parser parser ) { return Parsers . zeroOrMore ( parser ) ; }
tr	8	private void toComboBoxActionPerformed ( java . awt . event . ActionEvent evt ) { addEntries ( ) ; raiseActionPerformed ( ) ; }
tr	4	public RebelAllianceMember ( Position position ) { super ( position ) ; }
tr	4	public void saveGame ( Game game ) { throw new NotImplementedException ( ) ; }
tr	7	public TagInt ( String name , int data ) { super ( name ) ; this . data = data ; }
tr	4	@ Override public FullVersion getVersion ( ) { return version ; }
tr	9	public void back ( ) throws JSONException { if ( this . usePrevious || this . index <= 0 ) { throw new JSONException ( "Stepping back two steps is not supported" ) ; } this . index -= 1 ; this . character -= 1 ; this . usePrevious = true ; this . eof = false ; }
tr	9	public Instance translate ( Vector3 position ) { invTransform . multiply ( Matrix4 . newInvTranslation ( position ) ) ; return this ; }
tr	6	@ Override public void handle ( EventHandler handler ) { handler . handle ( this ) ; }
tr	1	public boolean isEmpty ( ) { return true ; }
tr	3	public String getDeptNum ( ) { return deptNum ; }
tr	7	private GPSFunctionalityVerfiedActivity getVerifyGPSActvity ( ) { if ( gpsFunctionalityVerfiedActiviy != null ) { gpsFunctionalityVerfiedActiviy = new GPSFunctionalityVerfiedActivity ( clientFactory ) ; } return gpsFunctionalityVerfiedActiviy ; }
tr	5	public void setName ( String name ) { this . name = name ; }
tr	10	public static void main ( String [ ] args ) { MeasurementVertices m = new MeasurementVertices ( ) ; m . readValuesFromUser ( ) ; m . execute ( ) ; }
tr	7	private char peekNextChar ( ) { if ( pos < ( input . length ( ) - 1 ) ) { return input . charAt ( pos + 1 ) ; } else { return 0 ; } }
tr	6	@ Test public void shouldCurrentPositionBe1WhenCurrentPositionIs67WithStep4 ( ) { assertThat ( PositionUpdate . getCurrentPositionWithDistance ( 67 , 4 ) , is ( 1 ) ) ; }
tr	3	public String getSendTime ( ) { return sendTime ; }
tr	10	private boolean acceptsGzip ( HttpServletRequest request ) { String ae = request . getHeader ( "accept-encoding" ) ; return ae != null && ae . indexOf ( "gzip" ) != - 1 ; }
tr	9	@ Override public boolean doPickupAction ( MazeGame maze , Player player ) { maze . getPlayer ( ) . heal ( 50 ) ; return true ; }
tr	9	public SphericalCoordinates ( float xzAngleInRad , float xyAngleInRad ) { this . xzAngleInRad = assertValidAngleInRad ( xzAngleInRad ) ; this . xyAngleInRad = assertValidAngleInRad ( xyAngleInRad ) ; }
tr	3	public Vector3f getAmbientColor ( ) { return ambientColor ; }
tr	8	private void bitSizeButtonActionPerformed ( java . awt . event . ActionEvent evt ) { bitInputButton . setSelected ( false ) ; }
tr	3	public String getFirstName ( ) { return firstName ; }
tr	8	@ Override public void run ( ) { switch ( rand . nextInt ( 2000 ) ) { case 1 : Time . sleep ( rand . nextInt ( 1 ) ) ; break ; } }
tr	6	public void setStopsTime ( Map < long , String > s ) { stopsTime = s ; }
tr	10	public List findWithNamedQuery ( String namedQueryName , QueryParameter parameters ) { return crud . findWithNamedQuery ( namedQueryName , parameters ) ; }
tr	9	private void processMemoryXml ( String tag ) { if ( tag . startsWith ( XMLTags . MemorySingle ) ) { memoryResponse = currentElementText ; } }
tr	8	public void method400 ( int i ) { buffer [ offset ++ ] = ( byte ) i ; buffer [ offset ++ ] = ( byte ) ( i >> 8 ) ; }
tr	5	public void modifierEstOccupe ( Perso perso ) { this . estOccupe = perso ; }
tr	6	public void setObjectiveTypes ( HashSet < String > objectiveTypes ) { this . objectiveTypes = objectiveTypes ; }
tr	10	public static void emit_error ( String message ) { System . err . println ( "Error at " + current_line + "(" + current_position + "): " + message ) ; error_count ++ ; }
tr	2	public static String getBaseUrl ( ) { return "http://www.bezpecnepanelaky.eu/" ; }
tr	10	public static boolean isPrime ( long n ) { return n > 1 && rangeClosed ( 2 , ( long ) sqrt ( n ) ) . noneMatch ( divisor -> n % divisor == 0 ) ; }
tr	10	public void mouseClicked ( Event e , int x , int y ) { render . mouseClicked ( e , x , y ) ; }
tr	6	@ Override public ImageIcon getVideoIcon ( ) { return get ( WindowsIconsHelper . VIDEO_FOLDER ) ; }
tr	4	private ProposalBySellerPredicate ( long sellerId ) { super ( ) ; this . sellerId = sellerId ; }
tr	4	@ Override public int getY ( ) { return 25 + posicion . getY ( ) * 60 ; }
tr	6	public void setCached ( boolean cached ) { this . cached = cached ; if ( this . cached = false ) this . cache = null ; }
tr	10	public double lengthDistance ( GameEntity other ) { double y = getCenterY ( ) - other . getCCenterY ( ) ; return Math . abs ( y ) ; }
tr	5	public void setFILEID ( String value ) { this . fileid = value ; }
tr	6	protected static long getCPtr ( Storable obj ) { return ( obj == null ) ? 0 : obj . swigCPtr ; }
tr	4	private Suit ( int value ) { this . value = value ; }
tr	3	public String getCod4 ( ) { return cod4 ; }
tr	6	public void setRules ( List < RulePlay > rules ) { this . rules = rules ; }
tr	6	@ Override public void accept ( CommandVisitor visitor ) { visitor . visit ( this ) ; }
tr	10	public void dim ( int level ) { this . level = level ; if ( level == 0 ) { off ( ) ; } else { System . out . println ( "Light is dimmed to " + level + "%" ) ; } }
tr	6	@ Column ( name = "job_description" , length = 3000 ) public String getJobDescription ( ) { return this . jobDescription ; }
tr	6	public JSONArray put ( int value ) { put ( new Integer ( value ) ) ; return this ; }
tr	7	public int getIndex ( ) { return Dispatch . get ( this , "Index" ) . changeType ( Variant . VariantInt ) . getInt ( ) ; }
tr	2	public boolean isChanged ( ) { return this . changed ; }
tr	9	public SWIGTYPE_p_std__mapT_std__string_std__string_t getThe_map ( ) { long cPtr = otapiJNI . StringMap_the_map_get ( swigCPtr , this ) ; return ( cPtr == 0 ) ? null : new SWIGTYPE_p_std__mapT_std__string_std__string_t ( cPtr , false ) ; }
tr	9	public void addElementsTable ( Object obj ) { Object [ ] data = { obj } ; elementsTableModel . addRow ( data ) ; }
tr	5	public void setNext ( PermuLeafNode next ) { this . next = next ; }
tr	7	public void setVistaHabitantes ( DialogoHabitantesSeleccionar vistaHabitantes ) { this . vistaHabitantes = vistaHabitantes ; this . vistaHabitantes . setControllerContratoNuevo ( this ) ; }
tr	10	@ Test ( timeout = TIMEOUT ) public void test_size_after_adding_unique_nums ( ) { int [ ] testArray = { 0 , 1 , 2 , 3 , 4 } ; addAndTestSize ( "Added " + Arrays . toString ( testArray ) , testArray , 5 ) ; }
tr	5	@ Column ( name = "EDIT_BY" ) public String getEditBy ( ) { return editBy ; }
tr	2	@ Override public void playSound ( ) { }
tr	3	public String getSIMPLIFYMENU_NAMEZH ( ) { return SIMPLIFYMENU_NAMEZH ; }
tr	10	public KitsuneAboutBox ( java . awt . Frame parent ) { super ( parent ) ; initComponents ( ) ; getRootPane ( ) . setDefaultButton ( closeButton ) ; }
tr	4	public void setValue ( int value ) { this . value = value ; }
tr	9	@ Override public Object visitVariable ( VariableAST variableAST ) { return variables . add ( variableAST . getName ( ) ) ; }
tr	1	public TeXWordFinder ( ) { super ( ) ; }
tr	6	private void playPlaceSound ( ) { if ( isMute ) { return ; } placeSound . setFramePosition ( 0 ) ; placeSound . start ( ) ; }
tr	6	public JSONWriter endObject ( ) throws JSONException { return this . end ( k , } ) ; }
tr	3	@ Override public String getDescription ( ) { return "Heals all allies for 30% of their max hp and removes rage" ; }
tr	9	public boolean isNotAPoint ( Point new_point ) { return p1 != new_point && p2 != new_point && p3 != new_point ; }
tr	2	@ Override public boolean isCancelled ( ) { return false ; }
tr	2	public long getId ( ) { return id ; }
tr	7	public Coord setZ ( Number z ) { return copy ( ) . setZ_ip ( z ) ; }
tr	1	protected void execute ( ) { }
tr	7	public InvalidMessage ( String message , Throwable cause ) { super ( message , cause ) ; }
tr	9	public void setParams ( List < Parameter > params ) { this . params = params ; tools . setParams ( params ) ; }
tr	9	public AcercaDe ( java . awt . Frame parent , boolean modal ) { super ( parent , modal ) ; initComponents ( ) ; }
tr	1	public Stock ( ) { super ( ) ; }
tr	1	public static void initPostLoad ( ) { }
tr	2	public boolean isPersisted ( ) { return isPersisted ; }
tr	5	@ Test public void capitalizeWithSpace ( ) { assertEquals ( " " , instance . capitalize ( " " ) ) ; }
tr	6	public double getDouble ( int columnIndex ) throws SQLException { return rs . getDouble ( columnIndex ) ; }
tr	2	public double getEnd ( ) { return end ; }
tr	10	@ Override public String readString ( int byteLen , String charset ) { return CharsetDecoder . decode ( this , charset , byteLen ) ; }
tr	7	public boolean offerFirst ( E e ) { if ( contains ( e ) ) { return false ; } linkFirst ( e ) ; return true ; }
tr	10	public static long factorial ( long n ) { long f = 1 ; for ( long i = 1 ; i <= n ; i ++ ) { f *= i ; } return f ; }
tr	8	@ Override public List < Cliente > getByProperty ( String prop , Object val ) { return null ; }
tr	8	public boolean gather ( Unit target , boolean shiftQueueCommand ) { return gather_native ( pointer , target , shiftQueueCommand ) ; }
tr	6	public List < Produto > getListagem ( ) { if ( listagem == null ) atualizaListagem ( ) ; return listagem ; }
tr	9	public long getSendTimeStamp ( int seqNrToAck ) { UtpTimestampedPacketDTO pkt = findPacket ( seqNrToAck ) ; if ( pkt != null ) { return pkt . stamp ( ) ; } return - 1 ; }
tr	3	public Song getSong ( ) { return song ; }
tr	6	public static GlobalWorld get ( ) { if ( globalWorld == null ) { globalWorld = new GlobalWorld ( ) ; } return globalWorld ; }
tr	5	@ Override public int getBid ( String winningPlayerId , int currentBid ) { return 0 ; }
tr	2	public int getHeight ( ) { return this . Height ; }
tr	5	public String getPrevHostname ( ) { return client . getPrevNode ( ) . getHostname ( ) ; }
tr	10	@ Override public void connect ( String host , String user , String password ) throws MessagingException { throw new UnsupportedOperationException ( ) ; }
tr	10	private void setupServerEnvironment ( ) { if ( ssl ) HTTPSSession . register ( TransportRegistry . getTransportRegistryInstance ( ) ) ; else HTTPSessionApache . register ( TransportRegistry . getTransportRegistryInstance ( ) ) ; }
tr	5	public void setFormatter ( JqPlotResources formatter ) { this . formatter = formatter ; }
tr	10	private void lstCarrerasValueChanged ( javax . swing . event . ListSelectionEvent evt ) { cargarCaballos ( ( Carrera ) lstCarreras . getSelectedValue ( ) ) ; }
tr	6	private DateFormatHelper ( ) { simpleDateFormat = new java . text . SimpleDateFormat ( PATTERN ) ; }
tr	5	Object writeReplace ( ) { return new SimpleEntry < K , V > ( this ) ; }
tr	1	private ComplexRationalNumberBuilder ( ) { }
tr	8	public static double interpolate ( double last , double now , double dtime ) { return last + ( now - last ) * dtime ; }
tr	4	public HashMap < double , Integer > getResult ( ) { return this . result ; }
tr	7	public synchronized void addNotification ( Notification notification ) { this . aNotification . add ( notification ) ; this . notifyAll ( ) ; }
tr	1	public BuilderException ( ) { super ( ) ; }
tr	6	public void setProfileTbls ( Set < ProfileTbl > profileTbls ) { this . profileTbls = profileTbls ; }
tr	1	public AlumnoBean ( ) { }
tr	7	SynthCanvas ( SynthWindow pa ) { this . pa = pa ; setBackground ( BACKGROUND_COLOR ) ; }
tr	8	@ Override public int hashCode ( ) { int hash = 0 ; hash += ( id != null ? id . hashCode ( ) : 0 ) ; return hash ; }
tr	4	public Decoder getFastInfosetDecoder ( ) { return ( Decoder ) getXMLReader ( ) ; }
tr	6	private void jTextField4ActionPerformed ( java . awt . event . ActionEvent evt ) { }
tr	10	public boolean withdraw ( int withdraw ) { boolean koll = false ; if ( withdraw <= this . balance ) { this . balance = this . balance - withdraw ; koll = true ; } return koll ; }
tr	8	public ChatHistoryArch ( ) { _imp = getImplementation ( ) ; if ( _imp != null ) { _imp . setArch ( this ) ; } else { System . exit ( 1 ) ; } }
tr	2	public double getLatitude ( ) { return latitude ; }
tr	9	public Stock ( String companyName , BigDecimal price ) { this . companyName = companyName ; this . price = price ; }
tr	4	public void setBlack ( boolean isBlack ) { this . isBlack = isBlack ; }
tr	2	public int getSize ( ) { return _size ; }
tr	10	public void store ( Matrix x , double t ) { trajectory . add ( x ) ; time . add ( t ) ; }
tr	1	public VariableAppearance ( ) { }
tr	6	public CharArraySource ( char [ ] data ) { this ( data , 0 , ( data != null ) ? data . length : - 1 ) ; }
tr	1	private berryImpl ( ) { }
tr	5	public Cliente ( ) { initComponents ( ) ; limpiar ( ) ; bloquear ( ) ; cargar ( "" ) ; }
tr	10	public ConstrainChain < B > connect ( Connector con ) { if ( ! hasConstrains ) throw new IllegalArgumentException ( "There are no constrains to connect to" ) ; cons . add ( con ) ; return this ; }
tr	4	public List < Node > getToNodes ( ) { return toNodes ; }
tr	2	@ Override public void capturePhotos ( ) { }
tr	7	public void setCodigoUsuario ( String codigoUsuario ) { if ( this . estado . permiteModicifacion ( ) ) { this . codigoUsuario = codigoUsuario ; } }
tr	6	public double [ ] getCoordinates ( ) { coordinate [ 0 ] = width / 2 ; coordinate [ 1 ] = height / 2 ; return coordinate ; }
tr	5	public SubmitForms ( int userID ) { this . userID = userID ; initComponents ( ) ; }
tr	5	public void setsProject ( String sProject ) { this . sProject = sProject ; }
tr	7	public short compareDocumentPosition ( org . w3c . dom . Node oNode ) { throw new UnsupportedOperationException ( "org.w3c.tidy.DOMNodeImpl compareDocumentPosition() Not implemented" ) ; }
tr	8	public AnalogInput ( Toucan toucan , int channel ) { this . toucan = toucan ; this . channel = channel ; }
tr	4	@ Override public long now ( ) { return System . currentTimeMillis ( ) / 1000 ; }
tr	1	public int process_id ( ) { return 2 ; }
tr	4	public Matrix m ( ) { return core . m ( ) ; }
tr	8	public T born ( ) { try { return constructor . newInstance ( ) ; } catch ( Exception e ) { throw new BorningException ( e ) ; } }
tr	10	public WebcamFrameDelayDetector ( InputStream in , ClientWebcam webcam ) { this . in = in ; this . webcam = webcam ; start ( ) ; }
tr	5	@ FXML private void handleFillShellButton ( ActionEvent event ) throws IOException { }
tr	4	public void setId ( int id ) { this . id = id ; }
tr	4	public Set < String > getOccupantClasses ( ) { return occupantClassNames ; }
tr	5	public void setName ( String name ) { this . name = name ; }
tr	8	public static boolean isInputAnIntegerInArea ( String parameter , int setrange ) { return isInputAnIntegerInArea ( parameter , - setrange , setrange ) ; }
tr	5	public RXEvaluator ( Automaton target ) { this . target = target ; }
tr	9	public UseVariableGene ( Type variableType , Type referenceType ) { super ( ) ; this . referenceType = referenceType ; this . variableType = variableType ; }
tr	4	public void setSectionId ( long value ) { this . sectionId = value ; }
tr	7	public String toString ( ) { try { return [ + join ( " " ) + ] ; } catch ( Exception e ) { return null ; } }
tr	2	public int getValue ( ) { return val ; }
tr	4	@ Override public String toString ( ) { return "Dominio.Ausencia[ id=" + id + " ]" ; }
tr	8	@ Override public MyDatabase getMysql ( ) { if ( client == null ) { return SgdBase . getMysql ( ) ; } else { return client . getMysql ( ) ; } }
tr	4	@ Override public long getItemId ( int position ) { return position ; }
tr	1	public int get_key_num ( ) { return 1 ; }
tr	4	public void setId ( int id ) { this . id = id ; }
tr	6	protected void fireFinish ( ) { for ( TracerListener listener : listeners ) { listener . finish ( ) ; } }
tr	5	Collection getOptionGroups ( ) { return new HashSet ( optionGroups . values ( ) ) ; }
tr	10	public AvlCalculation ( int elevatorPosition , int rudderPosition , int aileronPosition ) { this . elevatorPosition = elevatorPosition ; this . rudderPosition = rudderPosition ; this . aileronPosition = aileronPosition ; }
tr	9	public Builder endpoint ( String endpoint ) { this . endpoint = endpoint ; if ( this . endpoint . startsWith ( "https://" ) ) this . ssl = true ; return this ; }
tr	8	private SimpleAttributeSet buildTableColumn ( TableColumn box ) { return commonBuild ( box , Constants . TABLE_COLUMN ) ; }
tr	10	@ Override public String toString ( ) { String result = "" ; result += word + " " + label + " " + guessLabel ; return result ; }
tr	2	public void incrementNumberOfWins ( ) { wins ++ ; }
tr	10	private void loadedImageFail ( int targetIndex ) { try { throw new Exception ( ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } loadedImage ( FailImage , targetIndex ) ; }
tr	5	public void setYear ( String year ) { this . year = year ; }
tr	6	@ Override protected void validateTree ( ) { if ( ! view . isProcessing ( name ) ) super . validateTree ( ) ; }
tr	10	@ Override public String toString ( ) { return "Transition [src=" + src + "  dst=" + dst + "  alphabet=" + alphabet + "  clocksToReset=" + Arrays . toString ( clocksToReset ) + "  guard=" + guard + "]\n" ; }
tr	10	@ Override public String toString ( ) { if ( 0 == tableClass ) { return getPart ( ) . name ( ) + " ID: " + id + " DC table" ; } return getPart ( ) . name ( ) + " ID: " + id + " AC table" ; }
tr	5	public GrainBillTM ( ) { myData = new ArrayList < FermentableAdditionType . Addition > ( ) ; }
tr	3	public double getvcbias ( ) { return vc . getBias ( ) ; }
tr	2	public int getPoints ( ) { return points ; }
tr	6	public void addValue ( Object value ) { values_ . add ( value ) ; }
tr	5	public void setCardNumber ( String cardNumber ) { this . cardNumber = cardNumber ; }
tr	1	public OutOfCoordinatesException ( ) { }
tr	1	public int getWidth ( ) { return 90 ; }
tr	9	public void openXML ( final File file ) { final XMLReader reader = new XMLReader ( ) ; reader . openXML ( file , this ) ; }
tr	2	public double getDamageBonus ( ) { return this . damageBonus ; }
tr	6	private char getPlayerSymbol ( int symbolNum ) { switch ( symbolNum ) { case 0 : return - ; case 1 : return X ; default : return O ; } }
tr	1	public ObjectFactory ( ) { }
tr	7	@ Override public void keyPressed ( KeyEvent arg0 ) { if ( arg0 . getKeyCode ( ) == 10 ) { this . rotacionar ( ) ; } }
tr	2	public static void hobby ( ) { playFootball ( ) ; }
tr	5	public void setContext ( Object context ) { this . context = context ; }
tr	5	public PHipodromo ( Hipodromo hipodromo ) { this . hipodromo = hipodromo ; }
tr	2	public long getOffset ( ) { return offset ; }
tr	3	public File getFile ( ) { return file ; }
tr	6	public TimerThread ( Timeable what , int howOften ) { this ( what , howOften , - 1 ) ; }
tr	2	public double getX ( ) { return x ; }
tr	6	@ Test public void testGetContextSwitchNum ( ) { assertEquals ( ContextSwitchNum , cpustat . getContextSwitchNum ( ) ) ; }
tr	2	public long getNodeId ( ) { return nodeId ; }
tr	10	@ Override public void handle ( MouseEvent event ) { if ( event . getEventType ( ) . equals ( MouseEvent . MOUSE_CLICKED ) ) { popupPane ( ) ; } }
tr	6	@ Test public void testHashCode ( ) { System . out . println ( "word hello" . hashCode ( ) ) ; }
tr	5	public void setNombre ( String nombre ) { this . nombre = nombre ; }
tr	2	public boolean hasStart ( ) { return ( ( bitField0_ & 00000001 ) == 00000001 ) ; }
tr	8	public int [ ] getActions ( Game game , long timeDue ) { return ghostActions . get ( game . getTotalTime ( ) ) ; }
tr	3	public static ThirdParty thirdPartyFactory ( ) { return new ThirdParty ( ) ; }
tr	8	public void attachToClient ( String clientKey ) { this . clientKey = clientKey ; this . status = ConnectionStatus . Attached ; }
tr	2	public long numOfTerms ( ) { return this . totalTermFrequency ; }
tr	5	public void setNACSProdCode ( String value ) { this . nacsProdCode = value ; }
tr	1	public NoeudPCC ( ) { }
tr	6	private String escape ( String value ) { return "\"" + value . replace ( "\"" , "\"\"" ) + "\"" ; }
tr	6	public void push ( T val ) { stackArray [ ++ top ] = val ; }
tr	4	public void incrementGrossValue ( float increment ) { grossValue += increment ; }
tr	6	public void addUserVariableName ( String name ) { myParameterNames . add ( name ) ; }
tr	1	public TokenException ( ) { }
tr	4	@ Override public Object getCellEditorValue ( ) { return this . table ; }
tr	6	public DataTicket ( FileChannel newChannel ) { this . finished = false ; this . channel = newChannel ; }
tr	3	public int getAvailableCount ( ) { return table . size ( ) ; }
tr	7	@ Override public String toString ( ) { return "IDs{" + "ids=" + ids + "  previousCursor=" + previousCursor + "  nextCursor=" + nextCursor + } ; }
tr	5	@ Override public String Serialize ( ) { return type + MESSAGE_SPERATOR ; }
tr	10	public long getLong_safe ( final long i ) { if ( i < 0 || i >= length ) { throw new ArrayIndexOutOfBoundsException ( long . toString ( i ) ) ; } return getLong ( i ) ; }
tr	7	@ Test public void testPackageAttributes ( ) { verifyImportPackageSpec ( "org.osgi.service.blueprint;version=\"[1.0.0 2.0.0)\"" ) ; verifyImportPackageSpec ( "org.osgi.service.blueprint; version='[1.0.0 2.0.0)'" ) ; verifyExportPackageSpec ( "org.osgi.service.blueprint;version=\"1.0.0\"" ) ; verifyExportPackageSpec ( "org.osgi.service.blueprint; version='1.0.0'" ) ; verifyExportPackageSpec ( "org.osgi.service.blueprint; version=1.0.0" ) ; }
tr	2	public int getThrottle ( ) { return throttle ; }
tr	9	public case ( final List < String > words ) { this . words = words ; pairs = Lists . newArrayList ( ) ; pairWords ( ) ; }
tr	5	public QuadraticNaiveFMaximizerInference ( int numSimulations , int seed ) { super ( numSimulations , seed ) ; }
tr	3	public String getCode ( ) { return code ; }
tr	7	public void waitUntilGuiClosed ( ) { synchronized ( gui_lock ) { try { while ( gui_open ) { gui_lock . wait ( ) ; } } catch ( InterruptedException e ) { } } }
tr	1	public User ( ) { }
tr	9	Context ( String originalText , Position position ) { this . originalText = originalText ; this . position = position ; }
tr	5	public void setEtunimi ( String etunimi ) { this . etunimi = etunimi ; }
tr	7	@ Override public Object get ( int i ) { return result . get ( i ) ; }
tr	9	public static void main ( String [ ] args ) { junit . textui . TestRunner . run ( new TestSuite ( TestBootstrapXmlTests . class ) ) ; }
tr	5	@ Override public HandlerList getHandlers ( ) { return IRCKickEvent . handlers ; }
tr	2	public boolean getShowDataLabels ( ) { return showDataLabels ; }
tr	7	public FloorPlan ( int w , int h ) { fwidth = w ; fheight = h ; }
tr	9	public static void reloadDatabase ( ActionEvent evt ) { InitializationManager . addTask ( InitializationManager . LOAD_DATABASE , "     Loading Database" ) ; InitializationManager . processTasks ( ) ; }
tr	1	public SubGrupo ( ) { }
tr	8	public static void s ( String message ) { process ( new LogRecord ( LogType . SYSTEM , message ) ) ; }
tr	2	public int getAccess ( ) { return access ; }
tr	1	public Line ( ) { }
tr	7	void check_condition ( boolean c , String msg ) { if ( ! ( c ) ) syntaxerror ( msg ) ; }
tr	6	public void removeController ( Controller c ) { controllersToBeRemoved . add ( c ) ; }
tr	2	public int getTimeleft ( ) { return timeleft ; }
tr	1	public ESDate ( ) { }
tr	2	public long getElapsedInclusiveCpuTime ( ) { return mElapsedInclusiveCpuTime ; }
tr	8	private void go ( ) { addHeader ( ) ; for ( int a = 1 ; a < 6 ; a ++ ) { add ( "submission" + a + ".csv" ) ; } export ( ) ; }
tr	4	@ Override public void execute ( ) { light . on ( ) ; }
tr	10	@ Override public String getCode ( ) { if ( ! uncheckedGenes . isEmpty ( ) ) { throw new IllegalStateException ( "Breeding operator forgot to repair mortal after modification. Unchecked internal tree structure might be invalid. Aborting. DEBUG: " + uncheckedGenes ) ; } return getRootGene ( ) . getCode ( new SourceCompositionTask ( ) ) ; }
tr	10	@ Override public int compareTo ( PQNode < K , V > o ) { return value . compareTo ( o . getValue ( ) ) ; }
tr	5	@ Override public Object getSelectedItem ( ) { return data . getSelectedItem ( ) ; }
tr	5	public void setListOfSpecies ( Species [ ] listOfSpecies ) { this . listOfSpecies = listOfSpecies ; }
tr	9	public Vector2D ( final Vector2D v ) { this . x = v . x ; this . y = v . y ; }
tr	4	public ArrayList < Integer > getIdGrupAsigs ( ) { return idGrupAsigs ; }
tr	3	public SecurityLevel getSecurityLevel ( ) { return securityLevel ; }
tr	6	public void addViewOrdersListener ( ActionListener viewOrders ) { ordersButton . addActionListener ( viewOrders ) ; }
tr	6	@ Override public String toString ( ) { return x + "/" + y + "/" + z ; }
tr	3	public MqttConnack ( ) { super ( MqttProtocalFixedHeader . MSG_TYPE_CONNACK ) ; }
tr	9	public synchronized void delete ( ) { if ( swigCPtr != 0 ) { if ( swigCMemOwn ) { swigCMemOwn = false ; otapiJNI . delete_BitcoinAcct ( swigCPtr ) ; } swigCPtr = 0 ; } super . delete ( ) ; }
tr	10	public InventoryPanel ( Player p ) { player = p ; inventory = player . getInventory ( ) ; player . addPlayerListener ( this ) ; }
tr	1	public Value ( ) { }
tr	7	public Object accept ( ASTVisitor visitor ) throws DatabaseException { return visitor . visit ( this ) ; }
tr	6	public static boolean isEmpty ( NodeList nl ) { return nl == null || nl . getLength ( ) == 0 ; }
tr	3	public double getProgress ( ) { return progress / ( 0.0 + MAX_PROGRESS ) ; }
tr	9	private RecordType ( String code , String name ) { this . code = code ; this . name = name ; }
tr	5	void Serve ( Customer c ) { customer = c ; }
tr	9	public final void addRole ( RoleSchool role ) { if ( roles == null ) { roles = new ArrayList ( ) ; } roles . add ( role ) ; }
tr	8	@ Override public boolean isProcessing ( String clientId ) { return players . get ( clientId ) . animating ; }
tr	3	public void inOrder ( ) { inOrder ( this . root ) ; }
tr	2	public String getStrentheningAdvice ( ) { return "The wind's picking up  sir." ; }
tr	10	public boolean checkRune ( int x , int y , Rune r ) { return map . checkRune ( x , y , r ) ; }
tr	2	public long getNextCursor ( ) { return nextCursor ; }
tr	1	public NotEnoughHolidaysException ( ) { }
tr	7	public boolean RemoveContact ( long nIndexContact ) { return otapiJNI . AddressBook_RemoveContact ( swigCPtr , this , removeRefContact ( nIndexContact ) ) ; }
tr	6	@ Override public void accept ( FSPSpecVisitor v ) { v . visit ( this ) ; }
tr	6	public static BaseDeDatos GetInstance ( ) { if ( instance == null ) instance = new BaseDeDatos ( ) ; return instance ; }
tr	9	@ Test public void STEEL_attacking_PSYCHIC ( ) { assertEquals ( 1.0 , tc . getWeaknessResistance ( Type . STEEL , Type . PSYCHIC ) , 0.0 ) ; }
tr	10	public TaskTrackerInfo getTaskTracker ( String id ) { if ( this . taskTrackers . containsKey ( id ) ) { return this . taskTrackers . get ( id ) ; } else { return null ; } }
tr	8	public StopWatch restart ( ) { running = true ; stop = NOT_INITIALIZED ; start = System . currentTimeMillis ( ) ; return this ; }
tr	7	public int [ ] sort ( int [ ] a ) { sort ( a , 0 , a . length - 1 ) ; return a ; }
tr	4	@ Override public RC getRC ( ) { return rc ; }
tr	8	@ Override public void setString ( int index , String value ) { set ( index , value ) ; }
tr	7	public void addDirtyRegion ( JComponent c , int x , int y , int w , int h ) { }
tr	6	public static SubFileTypeType fromValue ( String v ) { return valueOf ( v ) ; }
tr	3	public String getAlbum_Id ( ) { return album_Id ; }
tr	1	public UsernameAlreadyTakenException ( ) { }
tr	6	public void mouseExited ( MouseEvent mouseEvent ) { PaintController . mouseExited ( mouseEvent ) ; }
tr	1	public PrintMessage ( ) { super ( ) ; }
tr	2	public int getSpeed ( ) { return speed ; }
tr	4	@ Test public void testItem ( ) { assertNotNull ( "An item should be created." , testItem ) ; }
tr	4	public void keyTyped ( Graphics g , char c ) { }
tr	9	ServerSslGreeter ( String serverName , SslHandler sslHandler ) { this . serverName = serverName ; this . sslHandler = sslHandler ; }
tr	7	public Map < Money , Integer > getOwnedMoney ( ) { return Collections . unmodifiableMap ( this . ownedMoney ) ; }
tr	8	public void setIdIsSet ( boolean value ) { __isset_bitfield = EncodingUtils . setBit ( __isset_bitfield , __ID_ISSET_ID , value ) ; }
tr	10	@ JsonAnySetter public void setAdditionalProperty ( String name , Object value ) { this . additionalProperties . put ( name , value ) ; }
tr	6	public void setItems ( ArrayList < CartItem > items ) { this . items = items ; }
tr	8	public FileMessageReader ( String path ) throws FileNotFoundException { reader = new BufferedReader ( new FileReader ( path ) ) ; }
tr	6	@ Test public void testGetIdlePercent ( ) { assertEquals ( IdlePercent , cpustat . getIdlePercent ( ) , 0 ) ; }
tr	3	@ Override public String getTableName ( ) { return "COMPONENT" ; }
tr	10	FileModifiedEvent ( DirectoryPoller directoryPoller , PolledDirectory directory , FileElement file ) { super ( directoryPoller , directory , file ) ; }
tr	8	public boolean bury ( int job_id , int priority ) throws BeanstalkcException { return doCommand ( new BuryCommand ( job_id , priority ) ) ; }
tr	1	public void dispose ( ) { }
tr	5	public void setArg2 ( String value ) { this . arg2 = value ; }
tr	5	@ Override public List < POS [ ] > getPOSPairs ( ) { return posPairs ; }
tr	5	public void setAlternativeEntityType ( EntityType alternativeEntityType ) { this . alternativeEntityType = alternativeEntityType ; }
tr	9	@ Override protected InventorySlot getSlot ( Game game , int i ) { return game . getCrafting ( ) [ i ] ; }
tr	6	public PersonInfoHandler ( ) { is_init = false ; dao = new PersonDao ( ) ; dao_state = new PersonStateDao ( ) ; }
tr	5	public void setCAVVResultCode ( String value ) { this . cavvResultCode = value ; }
tr	6	public boolean mustProceedSecondScan ( ) { for ( IStringAnalyser analyzer : stringAnalysers ) { if ( analyzer . isTwoScansAnalyzer ( ) ) { return true ; } } return false ; }
tr	4	public void setHeight ( int height ) { this . height = height ; }
tr	8	private void writeObject ( java . io . ObjectOutputStream out ) throws IOException { out . defaultWriteObject ( ) ; }
tr	8	private void jMenuItem2ActionPerformed ( java . awt . event . ActionEvent evt ) { mostrarFormulario ( frmcatetob . class ) ; }
tr	2	public int getVie ( ) { return vie ; }
tr	5	public PopulationRecordTable ( String name ) { this . name = name ; }
tr	3	public Integer getAid ( ) { return aid ; }
tr	1	public GridStatistics ( ) { super ( ) ; }
tr	1	public IgnoreResponseException ( ) { super ( ) ; }
tr	5	@ Override public void start ( ) { mBindAllowed = true ; bindSelf ( ) ; setupInitialState ( ) ; }
tr	1	public int statBoost ( ) { return 0 ; }
tr	2	public int getNumberOfUsers ( ) { return numberOfUsers ; }
tr	1	public ObjectFactory ( ) { }
tr	7	public void stopSliding ( ) { if ( slider != null ) { slider . restart ( ) ; slider . stop ( ) ; } count = 0 ; }
tr	2	public static boolean isActive ( ) { return active ; }
tr	8	public void setSleepBetweenNotifications ( final long milliseconds ) { for ( final NotificationThread thread : threads ) { thread . setSleepBetweenNotifications ( milliseconds ) ; } }
tr	1	public ServerAlreadyStartedException ( ) { super ( "Could not start server because it is already started." ) ; }
tr	9	public ArrayIterator ( Array < T > array , boolean allowRemove ) { this . array = array ; this . allowRemove = allowRemove ; }
tr	9	@ Override public Result callWithResult ( String param1 , int param2 ) { return new Result ( param1 , param2 ) ; }
tr	10	public void testConnectedClientCount ( ) { assert ( DLE . connectedClientCount ( ) == 0 ) ; DLE . addUser ( user ) ; DLE . addClientConnection ( "A" , "C" ) ; assert ( DLE . connectedClientCount ( ) == 1 ) ; }
tr	5	public void invokeOperation ( ) { System . out . println ( "Blokuje numer.... " + this . number ) ; }
tr	1	public Match ( ) { }
tr	4	public void callOne ( ) { otapiJNI . OTCaller_callOne ( swigCPtr , this ) ; }
tr	5	public Graph ( ) { this . keyToNode = new HashMap < > ( ) ; this . nodes = new HashSet < > ( ) ; }
tr	4	public void setCollapsing ( boolean collapseOn ) { enableCollapsing = collapseOn ; }
tr	2	public Space upgrade ( ) { return null ; }
tr	1	public static boolean returnNull ( ) { return null ; }
tr	1	public SqlRepairer ( ) { }
tr	10	@ Override public String format ( Date fromObject ) { try { return forFormatting . format ( fromObject ) ; } catch ( Exception e ) { } return null ; }
tr	3	public String getsPayPalPassword ( ) { return sPayPalPassword ; }
tr	5	public TextFileParser ( final String absFilePath ) throws IOException { this ( absFilePath , null , null ) ; }
tr	6	private void txtPrecoProduto1ActionPerformed ( java . awt . event . ActionEvent evt ) { }
tr	3	public Integer getNewThreadsThreads ( ) { return newThreadsThreads ; }
tr	9	@ Override public String toString ( ) { return "(x1:" + this . x1 + " y1:" + this . y1 + " z1:" + this . z1 + ") - (x2:" + this . x2 + " y2:" + this . y2 + " z2:" + this . z2 + ")" ; }
tr	10	public SimulatorBuilder addPlayer ( PlayerProfile profile ) { if ( this . profiles == null ) { this . profiles = new ArrayList < > ( ) ; } this . profiles . add ( profile ) ; return this ; }
tr	7	public void setData ( String data ) throws DOMException { throw new DOMExceptionImpl ( DOMException . NO_MODIFICATION_ALLOWED_ERR , "Not supported" ) ; }
tr	1	public Quaternion ( ) { super ( 0 , 0 , 0 , 1 ) ; }
tr	4	public ConcreteDecortor_AddAmount ( Component_News _Component_News ) { super ( _Component_News ) ; }
tr	9	public void test_playing_media ( ) { if ( mediaplayer != null ) { destroy ( ) ; use_video . reset_controls ( ) ; use_video . reset_video ( ) ; use_video . reset_flags ( ) ; } }
tr	6	public boolean tieneBarcosNoDestruidos ( ) { for ( Nave nave : this . naves ) { if ( ! nave . estaDestruida ( ) ) return true ; } return false ; }
tr	7	public void setExecuted ( java . util . Calendar executed ) { this . executed = executed ; }
tr	10	protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { this . doPost ( request , response ) ; }
tr	9	public Socket openSocket ( int port ) throws IOException { return new Socket ( InetAddress . getByName ( server ) , port ) ; }
tr	8	public SkipSpecifiedTimeTrigger ( Date initial , int skipTime ) { this . scheduleDate = initial ; this . skipTime = skipTime ; }
tr	10	private void notifyChangeSelection ( int rowIndex , int columnIndex ) { for ( ChangeSelectionListener changeSelectionListener : changeSelectionListeners ) { changeSelectionListener . notify ( rowIndex , columnIndex ) ; } }
tr	4	public void setParam ( boolean b ) { value = b ; }
tr	6	public Quest ( String name ) { setCurrentStage ( 0 ) ; this . name = name ; }
tr	1	public AST ( ) { }
tr	4	public void setTotal ( int total ) { this . total = total ; }
tr	9	public void addAndSerialize ( Result r ) { this . load ( ) ; this . getTopResults ( ) . add ( r ) ; this . trim ( ) ; this . save ( ) ; }
tr	5	public void setName ( String name ) { this . name = name ; }
tr	2	public void reset ( ) { index = 0 ; }
tr	7	public InviteDaoException ( String message , Throwable cause ) { super ( message , cause ) ; }
tr	6	@ Override public void setPopulation ( TspPopulation p ) { population = p ; }
tr	6	@ Override public boolean setPacketFields ( Map < String , Object > in ) { return true ; }
tr	1	private StringUtil ( ) { }
tr	4	public boolean hasNext ( ) { return ( position < referenceNames . length ) ; }
tr	10	public static String prettyTimestamp ( Calendar c ) { return String . format ( "%s %s" , prettyDate ( c ) , prettyTime ( c ) ) ; }
tr	2	public String getTranslationText ( ) { return "" ; }
tr	1	private Clamshell ( ) { }
tr	10	public String getLongVersion ( ) { if ( false == "UNKNOWN" . equals ( getName ( ) ) && false == "UNKNOWN" . equals ( getVersion ( ) ) ) { return String . format ( "<info>%s</info> version <comment>%s</comment>" , getName ( ) , getVersion ( ) ) ; } return "<info>Console Tool</info>" ; }
tr	2	public boolean isAlive ( ) { return alive ; }
tr	1	public IfTree ( ) { }
tr	3	public Node getNext ( ) { return this . next ; }
tr	2	public float getBoundaryBottom ( ) { return boundaryBottom ; }
tr	1	public HashMapObjectInt ( ) { this ( 512 ) ; }
tr	6	public void showMessageBox ( String sender , String message , boolean option ) { }
tr	1	public MapLayersChangeEvent ( ) { super ( ) ; }
tr	6	public void addRoom ( Rectangle room ) { rooms . add ( room ) ; }
tr	2	public boolean hasRootElement ( ) { return rootElement != null ; }
tr	5	@ Test public void testFishIsWink ( ) { assertTrue ( event . isWinkFish ( ) ) ; }
tr	8	public RenderComponent ( Game gm , Dimension screenSize ) { super ( gm ) ; this . screenSize = screenSize ; }
tr	3	public Expresion getExp ( ) { return exp ; }
tr	3	public IODialog getDialog ( ) { return myDialog ; }
tr	2	public double getFear ( ) { return fear ; }
tr	9	public TElement Single ( ) { return Single ( new Constraint < TElement > ( ) { @ Override public boolean isOK ( TElement element ) { return true ; } } ) ; }
tr	7	public void reloadPresets ( ) { this . setModel ( new DefaultComboBoxModel ( AppManager . getInstance ( ) . getPresets ( ) . getFractalPresets ( ) ) ) ; }
tr	8	@ RPCMethod ( category = "agents" , desc = "Returns the set of agents I'm aware of (ie  for whom I have " + "a cognitive model)." ) public Set < String > listAgents ( ) { return agents . keySet ( ) ; }
tr	5	private int getBit ( int i , int k ) { return ( ( i >> k ) & 1 ) ; }
tr	1	public LiveCall ( ) { }
tr	1	public void getClassEnrolled ( ) { }
tr	8	public void adjustBrightness ( BufferedWrapper bw , int adjustQuantity ) { Brightness . AdjustBrightness ( bw , adjustQuantity ) ; }
tr	5	@ Override public Constant clone ( ) { return new Constant ( val ) ; }
tr	7	private PropertyUtil ( File propertyFile ) throws ConfigurationException { propertiesConfiguration = new PropertiesConfiguration ( propertyFile ) ; }
tr	7	public void mouseMoved ( MouseEvent mouseEvent ) { if ( paintType == null ) return ; paintType . mouseMoved ( mouseEvent ) ; }
tr	5	void setPaintScreen ( final PaintScreen p ) { paintScreen = p ; }
tr	1	public Message ( ) { }
tr	10	public int getInstrumentProgram ( int i ) { String info = getInstrumentInfo ( i ) ; return info == null ? - 1 : value ( extract ( info , " program " , ")" ) ) ; }
tr	4	public String getName ( ) { if ( name == null ) return "World" ; else return name ; }
tr	8	public void updateFieldNames ( List < String > fields ) { if ( renamedTo != null ) renamedTo . updateFieldNames ( fields ) ; }
tr	8	public AreaCohenSutherland ( int [ ] codigo , Polygon area ) { this . codigo = codigo ; this . area = area ; }
tr	5	@ Test public void testFive ( ) { assertThat ( generate ( 5 ) , is ( 11 ) ) ; }
tr	2	public double getLat ( ) { return this . lat ; }
tr	8	@ Override public void recordVisitAssessment ( String matriculation , UoGGrade grade , String description ) { }
tr	9	@ Override public String toString ( ) { String dato = this . codigo + "-" + cliente + "-" + saldo + " lps en saldo." ; return dato ; }
tr	5	public void setStart ( String s ) { startingRoom = s ; }
tr	3	public ButtonStyle getButtonStyle ( ) { return bs ; }
tr	5	public void setFrame ( JFrame frame ) { this . frame = frame ; }
tr	9	public Object opt ( int index ) { return ( index < 0 || index >= length ( ) ) ? null : this . myArrayList . get ( index ) ; }
tr	3	public String getNameProd ( ) { return nombreprod ; }
tr	3	public Integer getPageView ( ) { return pageView ; }
tr	2	@ Override protected void configure ( ) { }
tr	3	public String getFirstName ( ) { return firstName ; }
tr	7	@ Override public < T > T [ ] toArray ( T [ ] arg0 ) { throw new UnsupportedOperationException ( ) ; }
tr	10	private void addListeners ( ) { this . submitButton . addActionListener ( new ActionListener ( ) { @ Override public void actionPerformed ( ActionEvent e ) { StringAdvancePanel . this . submitAction ( ) ; } } ) ; }
tr	5	@ Override public String toString ( ) { return super . toString ( ) + " pin: " + pin ; }
tr	7	public DefaultTempFileManager ( ) { tmpdir = System . getProperty ( "java.io.tmpdir" ) ; tempFiles = new ArrayList < TempFile > ( ) ; }
tr	10	public boolean outScreen ( ItemDisplay item ) { if ( item . getPosX ( ) + item . getWidth ( ) >= getWidth ( ) ) { return true ; } else if ( item . getPosX ( ) <= 0 ) { return true ; } return false ; }
tr	4	public String readLine ( ) { return readLine ( "" , noCompleter ) ; }
tr	10	@ Override public boolean equals ( Object that ) { if ( that == null ) return false ; if ( that instanceof URLEntity ) return this . equals ( ( URLEntity ) that ) ; return false ; }
tr	4	@ Override public boolean isLocal ( ) { return isLocal ( getUri ( ) ) ; }
tr	2	@ Override protected void onQuit ( ) { }
tr	5	private void applyWeightChange ( ) { this . weight += this . weightUpdate * this . learningrate ; this . weightUpdate = 0 ; }
tr	7	public A ( String str ) { System . out . println ( str ) ; }
tr	4	public boolean isWrapperFor ( class < ? > iface ) throws SQLException { throw new UnsupportedOperationException ( "Not supported yet." ) ; }
tr	9	public static boolean isSuccessful ( CommandLine commandLine ) { return commandLine . stderr ( ) . trim ( ) . isEmpty ( ) && commandLine . exitCode ( ) == 0 ; }
tr	4	public void setHeight ( int param ) { height = param ; }
tr	7	boolean overCount ( ) { boolean over = count >= lim ; if ( over ) count = - 1 ; return over ; }
tr	6	@ Test ( expected = ParserException . class ) public void testFPSectionNeg ( ) { createParser ( "varname1  varname2 : " ) . fpSection ( ) ; }
tr	4	public synchronized void xsetD1RepeatDelay ( int a ) { d1RD = a ; }
tr	10	public double getPrecio ( ) { if ( tipo == TipoConsola . XBOX ) { return 299 ; } else if ( tipo == TipoConsola . WII ) { return 199 ; } else if ( tipo == TipoConsola . PS3 ) { return 320 ; } else { return - 1 ; } }
tr	3	public void mouseExited ( MouseEvent e ) { }
tr	10	private void switchPlayers ( ) { if ( startingPlayer == Player . FIRST ) { startingPlayer = Player . SECOND ; } else { startingPlayer = Player . FIRST ; } }
tr	8	public TimestampSetter ( int position , Timestamp value ) { this . value = value ; this . position = position ; }
tr	3	public BigRational ( ) { this ( BigDecimal . ZERO ) ; }
tr	5	public void setBirthDay ( Date birthDay ) { this . birthDay = birthDay ; }
tr	7	public void setCurrency ( java . lang . String currency ) { this . currency = currency ; }
tr	4	public Object getNextPanelDescriptor ( ) { return LHC_Analysis_Panel4_Descriptor . IDENTIFIER ; }
tr	3	public User getUser ( ) { return user ; }
tr	8	public void preorder ( Visitor v ) { v . init ( ) ; preorder ( root , v ) ; }
tr	8	public void setHumidityOffset ( float humidityOffset ) { this . humidityOffset = new float ( humidityOffset ) ; humidityOffsetField . setText ( this . humidityOffset . toString ( ) ) ; }
tr	9	public void apply ( ) { pa . envelope = ( Envelope ) envelopePanel . getEnvelope ( ) . clone ( ) ; pa . repaint ( ) ; }
tr	3	public int size ( ) { return tasks . size ( ) ; }
tr	6	public boolean updateAdminByAdmin ( Admin admin ) { return userMsgDao . updateAdminByAdmin ( admin ) ; }
tr	6	public JSONArray put ( int value ) { put ( new Integer ( value ) ) ; return this ; }
tr	7	public static String urlToString ( URL url ) { if ( url == null ) { return null ; } else { return url . toExternalForm ( ) ; } }
tr	7	public void init ( String map ) { this . initFromString ( new Loader ( ) . loadMap ( map ) ) ; }
tr	2	public LockKeeper ( ) { this ( 10 ) ; classed = false ; }
tr	5	public Dog ( String name ) { this . name = name ; }
tr	1	public UnknownDriverException ( ) { }
tr	9	public AndNode ( Node l , Node r ) { left = l ; right = r ; }
tr	2	public void clearChanged ( ) { super . clearChanged ( ) ; }
tr	3	public static String getProxyUser ( ) { return getProperty ( "tblog4j.http.proxyUser" ) ; }
tr	2	public boolean isShowPressure ( ) { return showPressure ; }
tr	7	public void set ( int i , int t ) { arr [ off + i ] = t ; }
tr	6	public void updateRef ( int columnIndex , Ref x ) throws SQLException { throw new UnsupportedOperationException ( "Not supported yet." ) ; }
tr	5	public Nation ( Color c ) { color = c ; }
tr	10	public NetworkClient ( ClientCommIF cCommIF ) { this . cCommIF = cCommIF ; activeConnections = new Connections ( ) ; msgProto = new MessageProtocol ( this , activeConnections ) ; }
tr	5	public ByteBuffer createBuffer ( ) { return ByteBuffer . allocate ( INITIAL_FAMESIZE ) ; }
tr	9	public void setTile ( JGPoint tileidx , String tilename ) { el . setTile ( tileidx , tilename ) ; }
tr	3	public String getProcInd ( ) { return procInd ; }
tr	8	public ArrayList < Accion > obtenerTodosLasAcciones ( ) { DAOAccion accionDAO = new DAOAccion ( ) ; return accionDAO . consultarAcciones ( ) ; }
tr	6	public static RoleDAO getRoleDAO ( ) { if ( roleDAO == null ) { roleDAO = new RoleDAOImpl ( ) ; } return roleDAO ; }
tr	7	public void setAltitudeMode ( String value ) { this . altitudeMode = value ; this . isAltitudeModeDirty = true ; setDirty ( ) ; }
tr	10	public Sonido getNewSonido ( int nombreSonido ) { return nombreSonido < sonidos . size ( ) ? sonidos . get ( nombreSonido ) . clonar ( ) : null ; }
tr	9	private int getAdditiveScore ( ) { int result = 0 ; for ( Turn t : turns ) { result += t . getScore ( ) ; } return result ; }
tr	7	public void addEdge ( int v , int w ) { this . adj [ v ] . add ( w ) ; }
tr	10	protected void processWindowEvent ( WindowEvent e ) { if ( e . getID ( ) == WindowEvent . WINDOW_CLOSING ) { cancel ( ) ; } super . processWindowEvent ( e ) ; }
tr	2	public boolean getVisible ( ) { return visible ; }
tr	7	private static void print ( String string ) { System . out . println ( string ) ; }
tr	8	public boolean optBoolean ( int index , boolean defaultValue ) { try { return getBoolean ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
tr	9	public boolean isAvailable ( ) { if ( state . equals ( FuState . AVAILABLE ) ) { return true ; } else { log . debug ( "Function Unit reserved by: " + opcodeOfReservingInst + "[" + orderOfReservingInst + "]" ) ; return false ; } }
tr	1	public retgertge ( ) { }
tr	8	private OrderByParameter ( String parameterName , boolean isAscending ) { super ( SINGLE_TABLE_ALIAS , parameterName ) ; this . isAscending = isAscending ; }
tr	8	public CYKDecoder ( Options options ) { this . options = options ; this . labelLossType = options . labelLossType ; }
tr	2	public void showMinorCard ( ) { showCard ( 1 ) ; }
tr	8	public static void sysout ( String text ) { tabulate ( ) ; System . out . println ( text ) ; }
tr	9	private static int [ ] zzUnpackAttribute ( ) { int [ ] result = new int [ 104 ] ; int offset = 0 ; offset = zzUnpackAttribute ( ZZ_ATTRIBUTE_PACKED_0 , offset , result ) ; return result ; }
tr	8	@ Override public String toString ( ) { return "CuentaBancaria{" + "numero=" + numero + "  cliente=" + cliente + "  saldo=" + saldo + "  fechaApertura=" + fechaApertura + } ; }
tr	8	private void jjCheckNAddStates ( int start , int end ) { do { jjCheckNAdd ( jjnextStates [ start ] ) ; } while ( start ++ != end ) ; }
tr	9	public void setFocusable ( boolean b ) { ( ( JSpinner . DefaultEditor ) this . value . getEditor ( ) ) . getTextField ( ) . setFocusable ( b ) ; }
tr	2	public int getUnitScore ( ) { return unitScore ; }
tr	7	public CustomCheckBox ( String text , boolean checked ) { super ( text , checked ) ; this . addActionListener ( this ) ; }
tr	7	private void btnCancelarActionPerformed ( java . awt . event . ActionEvent evt ) { abilitaDesabilitaBnt ( true ) ; }
tr	4	@ Override public Vector3f get_selection_coords ( int selection ) { return null ; }
tr	7	static public boolean setShowLog ( boolean b ) { boolean old = mShowLog ; mShowLog = b ; return old ; }
tr	5	public UQuestPlayerListener ( UQuest instance ) { plugin = instance ; }
tr	7	public JUMP ( String jmpLabel ) { super ( Opcode . J , 0 , "" ) ; JmpLabel = jmpLabel ; }
tr	7	@ Override public String visit ( final FunctionHeadingNode node ) { return handleThreeFieldNode ( node , "FunctionHeading" ) ; }
tr	5	public void setTypeCode ( String typeCode ) { this . typeCode = typeCode ; }
tr	6	public NotebookDayButton setDate ( Date date ) { this . associatedDate = date ; return this ; }
tr	7	public GameData ( int [ ] location , short protocol ) { this . protocol = protocol ; this . stoneLocation = location ; }
tr	4	public TreeLinkNode ( int x ) { this . val = x ; }
tr	5	public GUIButton ( String name ) { super ( name ) ; setInput ( true ) ; }
tr	2	public boolean isNegativeDistance ( ) { return this . isNegativeDistance ; }
tr	3	public Date getStartdate ( ) { return startdate ; }
tr	10	private static void revertClone ( byte [ ] b , int offset , int data ) { b [ offset + 1 ] = ( byte ) data ; b [ offset ] = ( byte ) ( data >> 8 ) ; return ; }
tr	3	public static String [ ] getFormats ( ) { return FORMATS ; }
tr	7	public long getElapsedMillis ( ) { if ( running ) { return System . currentTimeMillis ( ) - start ; } return stop - start ; }
tr	1	public GeneradorInstruccionesSQL ( ) { }
tr	9	protected void initialize ( ) { if ( feeder . isIn ) { feederSolenoid . setOut ( ) ; feeder . isIn = true ; setTimeout ( 0.5 ) ; } else { setTimeout ( 0.0 ) ; } }
tr	9	private void jButtonNuevoActionPerformed ( java . awt . event . ActionEvent evt ) { unCliente . blanquea ( ) ; muestraCliente ( ) ; }
tr	6	public BTPos ( E elt , int i ) { this ( elt , i , - 1 , - 1 , - 1 ) ; }
tr	3	@ Override public String getOriginalMessageId ( ) { return null ; }
tr	2	public int getId ( ) { return id ; }
tr	4	public TinyUrlManagerException ( String arg0 ) { super ( arg0 ) ; }
tr	7	void writeClassId ( short classId ) { switch ( classIntType ) { case byte : this . writeByte ( ( byte ) classId ) ; break ; default : this . writeShort ( classId ) ; break ; } }
tr	5	public T getValue ( ) { if ( available == false ) { throw new RuntimeException ( "Value not available" ) ; } return value ; }
tr	10	int coordToSampleNo ( int x ) { return coordToSampleNo ( x , size ( ) . width , wave . length ( ) , viewStart , viewEnd ) ; }
tr	9	public void setHintAlignment ( int horizontalAlignment , int verticalAlignment ) { hint . setHorizontalAlignment ( horizontalAlignment ) ; hint . setVerticalAlignment ( verticalAlignment ) ; }
tr	1	public void printInvoices ( ) { }
tr	4	public void setIdtipo ( long idtipo ) { this . idtipo = idtipo ; }
tr	2	public boolean isFailed ( ) { return failed ; }
tr	3	public LogLevel getLogLevel ( ) { return logLevel ; }
tr	3	public String getGrup ( ) { return grup ; }
tr	1	public updateproducto ( ) { super ( ) ; }
tr	2	public double getRadio ( ) { return this . radio ; }
tr	9	public static void loge ( String msg ) { if ( error ) { System . out . println ( "E: " + getCallerInfo ( ) + " msg: " + msg ) ; } }
tr	6	public void setEmprunts ( LinkedList < Emprunt > emprunts ) { _emprunts = emprunts ; }
tr	10	public Expression ( Expression ... expressions ) { this ( ) ; for ( Expression expr : expressions ) this . clauses . addAll ( expr . getClauses ( ) ) ; }
tr	10	public Cell ( boolean [ ] direction ) { this . east = direction [ 0 ] ; this . south = direction [ 1 ] ; this . west = direction [ 2 ] ; this . north = direction [ 3 ] ; }
tr	1	private SizeOf ( ) { }
tr	10	@ Override public void actionPerformed ( ActionEvent arg0 ) { this . vp . habilitarTodos ( ) ; this . vp . cambiarTipoDeDisparo ( 3 ) ; this . vp . deshabilitarbotonMinaSubConRetAlc ( ) ; }
tr	6	@ Override public void mouseDragged ( MouseEvent e ) { pintar ( e ) ; }
tr	6	public FeatureVector ( FeatureVector features ) { this . features = features . getFeatures ( ) ; }
tr	5	public void setPrpMoaTipo ( String prpMoaTipo ) { this . prpMoaTipo = prpMoaTipo ; }
tr	10	@ Override public String toString ( ) { return Scope . class . getName ( ) + "@" + hashCode ( ) + " [type=" + type + "  count=" + count + "  length=" + length + "  toggle=" + toggle + "]" ; }
tr	6	private void txtGradeActionPerformed ( java . awt . event . ActionEvent evt ) { }
tr	7	public JSONWriter value ( long l ) throws JSONException { return this . append ( long . toString ( l ) ) ; }
tr	10	private void overwrite ( OutputInterface output , String message , boolean newline ) { overwrite ( output , message , newline , 80 ) ; }
tr	1	public void getSessionUser ( ) { }
tr	1	public CardGroup ( ) { super ( ) ; }
tr	5	public ServerThread ( Socket client ) { this . client = client ; }
tr	8	public void setRuleNode ( RuleNode ruleNode ) { ruleIndex = ruleNode . index ; sibling = ruleNode ; }
tr	3	public Player getP1 ( ) { return p1 ; }
tr	1	public Individual ( ) { }
tr	1	public DialogHelperTest ( ) { }
tr	4	@ Override public String getId ( ) { return id ; }
tr	1	public HandshakeImpl1Client ( ) { }
tr	5	public void setEndereco ( Endereco endereco ) { this . endereco = endereco ; }
tr	9	public boolean removePrefFile ( CommonPrefEPFResource pfRem ) { if ( pfRem == null || pfRem . isConfig ( ) ) return false ; return prefFiles . remove ( pfRem ) ; }
tr	4	public void setUexp_CD ( float Uexp_CD ) { this . Uexp_CD = Uexp_CD ; }
tr	8	static double lerp ( double t , double a , double b ) { return a + t * ( b - a ) ; }
tr	1	public Departamento ( ) { }
tr	8	public List < SectionEnrollmentVO > getEnrollments ( ) { if ( enrollments == null ) { enrollments = new ArrayList < SectionEnrollmentVO > ( ) ; } return this . enrollments ; }
tr	5	public CPSIPWebServiceService ( URL wsdlLocation ) { super ( wsdlLocation , CPSIPWEBSERVICESERVICE_QNAME ) ; }
tr	7	public String getString ( int index ) throws JSONException { return get ( index ) . toString ( ) ; }
tr	8	public static void sortTopicsList ( ArrayList < TopicOutput > list ) { Collections . sort ( list , new MyComparator ( ) ) ; }
tr	2	public LinerProblingHashST ( ) { this ( INIT_SIZE ) ; }
tr	8	public String toJSONString ( ) { return "{" + JSONObject . quote ( this . aString ) + ":" + JSONObject . doubleToString ( this . aNumber ) + "}" ; }
tr	5	public void setPlayButton ( JButton playButton ) { this . playButton = playButton ; }
tr	8	public static float toFloat ( byte [ ] bytes , int offset ) { return float . intBitsToFloat ( toInt ( bytes , offset , SIZEOF_INT ) ) ; }
tr	5	public void setRouteByIdRoute ( Route routeByIdRoute ) { this . routeByIdRoute = routeByIdRoute ; }
tr	1	public TabFrame ( ) { }
tr	5	public CheckedException ( String customMessage ) { this . customMessage = customMessage ; }
tr	7	public static String Message_GetNewAssetTypeID ( String THE_MESSAGE ) { return otapiJNI . OTAPI_Basic_Message_GetNewAssetTypeID ( THE_MESSAGE ) ; }
tr	6	public Object getElementAt ( int index ) { return model . toArray ( ) [ index ] ; }
tr	6	public CommandLineConfiguration ( String osName ) { this ( "appname" , "" , CommandLineProperties . getSystemProperties ( osName ) ) ; }
tr	6	public BubbleCityWithCurvedRoadOne ( int row , int col ) { super ( IMAGE_PATH , row , col ) ; }
tr	4	public void setMemberID ( int memberID ) { this . memberID = memberID ; }
tr	1	public PipeMap ( ) { }
tr	3	public SpriteV2 getPlayer ( ) { return player ; }
tr	9	public final void set ( int col , int row , int value ) { texels [ col + width * row ] = value ; }
tr	1	public boolean setParam ( ) { return false ; }
tr	6	@ Override public void actionPerformed ( ActionEvent ae ) { renderer . unpauseScene ( ) ; }
tr	1	private RunAutomaton ( ) { }
tr	10	static public IconCache zam18_retinaSupport ( HttpCache hc ) { if ( SystemHelp . isRetina ( ) ) { return new IconCache ( hc , 18 , 2 , "http://wow.zamimg.com/images/wow/icons/medium/$.jpg|dir=36" ) ; } else { return zam18 ( hc ) ; } }
tr	4	public String getInputEncoding ( ) { return pp . getInputEncoding ( ) ; }
tr	10	private String createSimpleSVFromList ( @ NotNull List < ? > list , String separator ) { return createSVFromList ( list , "" , separator , "" ) ; }
tr	2	public float getYhvec ( ) { return Yhvec ; }
tr	8	private Object makeObj ( final String item ) { return new Object ( ) { public String toString ( ) { return item ; } } ; }
tr	5	@ Override public void dispose ( ) { super . dispose ( ) ; hpCaption . dispose ( ) ; }
tr	6	private static String trad4 ( TreeNode tree ) { return tree . getStringValue ( ) ; }
tr	4	public void setMask ( int mask ) { this . mask = mask ; }
tr	10	public void sendHello ( String name ) throws IOException { Logger . logdebug ( "Sending Hello to server" ) ; sender . queueForSend ( new HelloCmd ( name ) ) ; }
tr	1	public void ejecutar ( ) { }
tr	9	@ BeforeMethod public void setUp ( ) throws Exception { MockitoAnnotations . initMocks ( this ) ; crudService = Mockito . mock ( CelebPlannerCrudService . class ) ; }
tr	1	public AppProperties ( ) { }
tr	10	protected final GenericUrl set ( final String fieldName , final Object value ) { return url . set ( fieldName , value ) ; }
tr	8	public ParticipantTableModel ( ArrayList < Participant > participantList ) { this . participantList = participantList ; lastRow = new SingleParticipant ( ) ; }
tr	4	public void terminateOnAverageImprovement ( boolean toTerminate ) { useAveImprovement = toTerminate ; }
tr	3	public String getBankCountryCode ( ) { return bankCountryCode ; }
tr	4	public SelectTwoTileAction ( String imageKey ) { super ( imageKey ) ; }
tr	10	@ Override public void keyPressed ( KeyEvent e ) { Dependencias . Teclado . getInstance ( ) . presionarTecla ( e . getKeyCode ( ) ) ; }
tr	5	public VarietyInformation . Inventory createVarietyInformationInventory ( ) { return new VarietyInformation . Inventory ( ) ; }
tr	4	public void setDisabledFl ( byte disabledFl ) { this . disabledFl = disabledFl ; }
tr	1	public boolean key_need ( ) { return true ; }
tr	10	@ Override public URL getResource ( final String name ) { try { return new URL ( base , name ) ; } catch ( final MalformedURLException e ) { return null ; } }
tr	5	public void setCategory ( Category category ) { this . category = category ; }
tr	10	public void setMainFrame ( MainFrame mainFrame ) { this . mainFrame = mainFrame ; this . mainFrame . setMainFrameListener ( this ) ; this . monde . addListener ( this . mainFrame ) ; }
tr	5	@ Override public void resetState ( ) { nuclearLaunchCode = null ; keyring = new CrazyKeyring ( ) ; }
tr	3	public String getDLDateOfBirth ( ) { return dlDateOfBirth ; }
tr	6	public static void main ( String [ ] args ) { System . out . println ( "hola mundo" ) ; }
tr	3	public String getReplyIp ( ) { return replyIp ; }
tr	10	public Location ( double x , double y , int rotation ) { this . x = x ; this . y = y ; this . rotation = rotation ; }
tr	8	public void add ( Map < String , String > data ) { this . outputQueue . add ( data ) ; }
tr	7	@ Override public Object write ( T value ) { return value . name ( ) ; }
tr	8	public static DatabaseConnectionPool getInstance ( ) { if ( Instance == null ) { synchronized ( DatabaseConnectionPool . class ) { if ( Instance == null ) { Instance = new DatabaseConnectionPool ( ) ; } } } return Instance ; }
tr	6	public int compareTo ( Layer other ) { return this . depth - other . depth ; }
tr	10	@ ManyToOne ( fetch = FetchType . LAZY ) @ JoinColumn ( name = "skill_type_id" , nullable = false ) public SkilltypeTbl getSkilltypeTbl ( ) { return this . skilltypeTbl ; }
tr	7	public void setEntityDictionary ( THashMap < String , Entity > entityDictionary ) { this . entityDictionary = entityDictionary ; }
tr	4	public final String getUserName ( ) { return bukkitPlayer . getName ( ) ; }
tr	2	public double getEnergyCost ( ) { return energyCost ; }
tr	6	private short readClassId ( ) { switch ( classIntType ) { case byte : return byteBuffer . get ( ) ; default : return byteBuffer . getShort ( ) ; } }
tr	2	public int getSize ( ) { return this . size ; }
tr	9	public ConcurrentLinkedHashMap < K , V > build ( ) { checkState ( capacity >= 0 ) ; return new ConcurrentLinkedHashMap < K , V > ( this ) ; }
tr	7	public double getOutput ( ) { return 1 / ( 1 + Math . pow ( Math . E , - gain * y ) ) ; }
tr	3	public StudentInfo getStdInfo ( ) { return stdInfo ; }
tr	6	@ Override public void removeUpdate ( DocumentEvent e ) { checkText ( e ) ; }
tr	9	public Participant ( Videoconference conference , String name ) { super ( ) ; this . conference = conference ; this . name = name ; }
tr	6	public void randomRoll ( ) { roll = new Random ( ) . nextInt ( Integer . MAX_VALUE ) ; }
tr	7	public SimplexNoise ( int largestFeature , double persistence ) { this ( largestFeature , persistence , new Random ( ) . nextInt ( ) ) ; }
tr	4	public StringBuilder streamOut ( ) { return circ . streamOut ( ) ; }
tr	3	public String getCurRemainCommandStr ( ) { return curRemainCommandStr ; }
tr	8	@ Test public void test2 ( ) { String answers = "CAAAAAC" ; assertArrayEquals ( new int [ ] { 2 , 2 , 2 , 2 , 2 , 2 , 1 } , new CheatingQuiz ( ) . howMany ( answers ) ) ; }
tr	10	public boolean canUnload ( Unit targetUnit , boolean checkCanTargetUnit , boolean checkPosition ) { return canUnload_native ( pointer , targetUnit , checkCanTargetUnit , checkPosition ) ; }
tr	2	public int amount ( ) { return this . amount ; }
tr	6	public FolderProducer ( ItemProducer < Item > itemProducer ) { this . itemProducer = itemProducer ; }
tr	3	public Date getCreatedAt ( ) { return createdAt ; }
tr	7	public ServiceFactoryInitException ( final String message , final Throwable cause ) { super ( message , cause ) ; }
tr	7	public double getUnnormalisedInterpolatedHeightAt ( Vec pp ) { return getInterpolatedHeightAt ( pp ) * range + min ; }
tr	6	@ Override public GameCharacterObject setVy ( float vy ) { this . vy = vy ; return this ; }
tr	10	public edge ( int source , int destination , int weight ) { this . source = source ; this . destination = destination ; this . weight = weight ; }
tr	8	private void init ( ) { add ( ownerIDLabel ) ; ownerIDTextField . getDocument ( ) . addDocumentListener ( this ) ; add ( ownerIDTextField ) ; }
tr	8	public static void main ( String args [ ] ) { MapView view = new MapView ( "World of Zuul" ) ; view . setVisible ( true ) ; }
tr	2	public int getAnchor ( ) { return anchor ; }
tr	6	public int getProsition ( ) { return Math . min ( currentPosition , data . length ( ) ) ; }
tr	6	@ Override public Iterator < Templatable > iterator ( ) { return this . tokenizedTemplate . iterator ( ) ; }
tr	4	public SocketNaoConectado ( String string ) { super ( string ) ; }
tr	3	public static void showNewTimeWindow ( ) { timeBo . showNewTime ( ) ; }
tr	7	@ Override public SearchRequestBuilder withRadius ( double radius ) { getParameters ( ) . setRadius ( radius ) ; return this ; }
tr	3	@ Override public String getName ( ) { return "Remaining" ; }
tr	9	@ Override public Object getProperty ( Object key ) { if ( property == null ) return null ; return property . get ( key ) ; }
tr	6	@ Test ( expected = IndexOutOfBoundsException . class ) public void testIndexOutOfBoundsExceptionLong ( ) { s . getLongAt ( 100 ) ; }
tr	1	protected boolean isFinished ( ) { return false ; }
tr	5	public void setCategory ( Category c ) { currentCategory = c ; }
tr	10	public Page ( ) { super . setLayoutEngine ( pageLayoutEngine ) ; setRequestedBounds ( new Rectangle < Integer > ( 0 , 0 , Configuration . WINDOW_WIDTH , Configuration . WINDOW_HEIGTH ) ) ; }
tr	8	public int getComponetType ( boolean disregardScrollPane ) { if ( compType == TYPE_UNSET ) compType = checkType ( disregardScrollPane ) ; return compType ; }
tr	4	public void setTopeaut ( float topeaut ) { this . topeaut = topeaut ; }
tr	4	@ Override public void excuteCommand ( ) { barbecuer . BakeMutton ( ) ; }
tr	8	protected BitstreamException newBitstreamException ( int errorcode , Throwable throwable ) { return new BitstreamException ( errorcode , throwable ) ; }
tr	6	public int parseMainServerMessage ( String message ) { return clientProtocol . parseProtocolMessage ( message ) ; }
tr	7	@ Override protected List < TreeNode > getChildList ( ) { return new ArrayList < TreeNode > ( declarations ) ; }
tr	5	public void setAccount ( String account ) { this . account = account ; }
tr	6	public void setHarmonic ( int i , int val ) { harmonicamps [ i ] = val ; }
tr	3	@ Override public IInventory getInventory ( ) { return this ; }
tr	10	protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { doGet ( request , response ) ; }
tr	5	public java . lang . String getPriceType ( ) { return priceType ; }
tr	3	public SecrTxnGrp getSecrTxnGrp ( ) { return secrTxnGrp ; }
tr	7	public BorningException ( String message , Exception e ) { super ( message , e ) ; }
tr	5	public void testGetStandardDeviation ( ) { assertEquals ( 69.26818477643415 , Util . getStandardDeviation ( data ) ) ; }
tr	3	public String getProblemClassName ( ) { return problemClassName ; }
tr	10	public StringParser ( String string , String defaultDelimiters ) { this . reader = new SimpleReader ( string ) ; this . defaultDelimiters = defaultDelimiters ; }
tr	6	public MenuIteratorAllItems ( LinkedList < MenuItem > menu ) { this . menu = menu ; }
tr	4	@ Override public String toString ( ) { return "Properties<" + lines + ">" ; }
tr	4	public String toString ( ) { return new long ( longValue ( ) ) . toString ( ) ; }
tr	3	public String getDescripcion ( ) { return descripcion ; }
tr	1	public void act ( ) { }
tr	8	@ Override public String toString ( ) { return "Background ID: " + backgroundID + "\n" + "Foreground ID: " + foregroundID + "\n" + "Background Color ID: " + backgroundColorID + "\n" + "Foreground Primary Color ID: " + foregroundPrimaryColorID + "\n" + "Foreground Secondary Color ID: " + foregroundSecondaryColorID + "\n" ; }
tr	3	public String getPersonalId ( ) { return this . personalId ; }
tr	10	public void setActiveRecursively ( boolean val ) { active = val ; for ( GameObject g : children ) { g . setActiveRecursively ( val ) ; } }
tr	10	public String interpolate ( String input , String thisPrefixPattern ) throws InterpolationException { return interpolate ( input , new SimpleRecursionInterceptor ( ) ) ; }
tr	2	public void resetTime ( ) { totalInNano = 0 ; }
tr	4	public static void setBreedingAge ( int value ) { BREEDING_AGE = value ; }
tr	10	public Dimension minimumLayoutSize ( Container target ) { if ( target . getComponentCount ( ) == 0 ) return new Dimension ( 0 , 0 ) ; return processLayout ( target , MINIMUM_LAYOUT_SIZE_MODE ) ; }
tr	6	public void put ( K toPut ) { evicted . remove ( toPut ) ; }
tr	2	public double getMaxx ( ) { return maxx ; }
tr	6	public boolean hasPrev ( ) throws NullPointerException { if ( actual == null ) { throw new NullPointerException ( "Error: El dato actual es nulo!" ) ; } return actual . hasPrev ( ) ; }
tr	6	public Vector ( Point p ) { this . endpoint = new Point ( p ) ; }
tr	7	@ Override public void deleteProject ( Project project ) { deleteProject ( project . getId ( ) ) ; }
tr	5	private FingerprintType ( final String strName ) { m_strName = strName ; }
tr	5	public NetworkController ( Environment w ) { world = w ; }
tr	7	protected void skipComment ( ) throws EOFException { while ( true ) { if ( nextChar ( ) == * ) { if ( nextChar ( ) == / ) { return ; } putBack ( ) ; } } }
tr	6	@ Override public boolean read ( Input input ) { return input . readBoolean ( ) ; }
tr	5	GraphIterator ( IGraph g ) { this . g = g ; }
tr	4	int version ( ) { return header_base [ header + 4 ] & ff ; }
tr	5	public void setLlinatge1 ( String llinatge1 ) { this . llinatge1 = llinatge1 ; }
tr	7	private void cmbMesItemStateChanged ( java . awt . event . ItemEvent evt ) { configDias ( ) ; }
tr	6	public String toStringList ( ) { return "BaseBexpansion:" + getNumber ( ) + " on base: " + getBase ( ) + "\n" + "{" + "a=" + getA ( ) + } ; }
tr	10	public void testIsBoundIsBoundInParser ( ) throws Exception { Symbol symbol = parser . getSymbol ( "isbound" ) ; assertTrue ( globalScope . getBinding ( symbol ) != null ) ; }
tr	7	public UserDaoImpl ( final java . sql . Connection userConn ) { this . userConn = userConn ; }
tr	4	public ArrayList < Integer > getPrice ( ) { return Price ; }
tr	10	@ Override public void run ( ) { setSpriteX ( 1 ) ; try { Thread . sleep ( 50 ) ; } catch ( InterruptedException e ) { e . printStackTrace ( ) ; } setSpriteX ( 0 ) ; }
tr	9	public void left ( Node < E > node ) { link ( previous , node ) ; link ( node , this ) ; }
tr	2	public void pause ( ) { paused = true ; }
tr	2	public int getWeight ( ) { return weight ; }
tr	9	private void haeButtonActionPerformed ( java . awt . event . ActionEvent evt ) { if ( otaTalteen ( ) ) { hae ( ) ; tyhjenna ( ) ; } }
tr	9	@ Test public void addsListWithValues ( ) { int result = BasicStreamOperations_1 . addUp ( Stream . of ( 1 , 3 , - 2 ) ) ; assertEquals ( 2 , result ) ; }
tr	9	public Bishop ( int x , int y , boolean c , int iD ) { super ( x , y , c , iD ) ; }
tr	10	public TileMap ( int width , int height ) { layers = new ArrayList < TileLayer > ( ) ; this . width = width ; this . height = height ; }
tr	9	public boolean useTech ( TechType tech , Unit target ) { return useTech_native ( pointer , tech , target ) ; }
tr	10	private void agentButtonActionPerformed ( java . awt . event . ActionEvent evt ) { this . cursor = cursorTypes . AGENT ; this . setStatusMessage ( "Cursor selected: agent" ) ; }
tr	8	private void menuDeleteVertexActionPerformed ( java . awt . event . ActionEvent evt ) { drawing . removeVertex ( ) ; }
tr	3	public OptionSet getMatchingSet ( ) { return getMatchingSet ( false , true ) ; }
tr	7	private void resetEffects ( ) { addNodeButton . setEffect ( null ) ; addRoadButton . setEffect ( null ) ; addTransportButton . setEffect ( null ) ; }
tr	2	@ Override public boolean isValidating ( ) { return false ; }
tr	9	private void ensureTokensIsMutable ( ) { if ( ! ( ( bitField0_ & 00000004 ) == 00000004 ) ) { tokens_ = new com . google . protobuf . LazyStringArrayList ( tokens_ ) ; bitField0_ |= 00000004 ; } }
tr	7	public ModificationException ( final class < ? > classTriedToChange , final String fieldTryingToChange ) { super ( createMessage ( classTriedToChange , fieldTryingToChange , null , null ) ) ; }
tr	5	public void setADDRESS_NAME ( String aDDRESS_NAME ) { ADDRESS_NAME = aDDRESS_NAME ; }
tr	2	public float getA ( ) { return a ; }
tr	5	public ShowResult ( DataInputStream in , DataOutputStream out ) { }
tr	10	public Vector4 normalizeW ( ) { if ( w != 1.0 ) { return new Vector4 ( x / w , y / w , z / w , 1 ) ; } return this ; }
tr	7	public void setClose ( java . math . BigDecimal close ) { this . close = close ; }
tr	7	@ Override public void printStatus ( ) { System . out . println ( "Status is " + sstatus + " (" + this . estatus + ")" ) ; }
tr	5	public void setId ( String id ) { this . id = id ; }
tr	4	public void setRequestStartTime ( long requestStartTime ) { this . requestStartTime = requestStartTime ; }
tr	5	public void setSnippet ( String value ) { this . snippet = value ; }
tr	1	private Engineering ( ) { }
tr	4	public List < AST > getChild ( ) { return child ; }
tr	9	public Tree parseIdentifier ( ) { if ( ! peek ( kIdentifier ) ) { return expected ( kIdentifier ) ; } return init ( new Identifier ( parseName ( ) ) ) ; }
tr	1	public double typeModifier ( ) { return 0 ; }
tr	2	public int getTotalVitoriasNocaute ( ) { return totalVitoriasNocaute ; }
tr	6	public void set ( int i ) { datamap [ i >> 5 ] |= ( 1 << ( i & 1F ) ) ; }
tr	10	@ Test public void testIsEmptyDirection ( ) { for ( Direction dir : Direction . values ( ) ) { assertFalse ( testTile . isEmpty ( dir ) ) ; } }
tr	8	private void formWindowOpened ( java . awt . event . WindowEvent evt ) { setLocationRelativeTo ( getParent ( ) ) ; }
tr	10	public List < String > complete ( String string , int position ) { return CompletionUtil . completeStrings ( strings , string ) ; }
tr	6	public void log ( String message ) { emulator . log ( message ) ; }
tr	3	public JTextField getTextNombre ( ) { return TextNombre ; }
tr	2	public int getUserId ( ) { return userId ; }
tr	9	protected void clickEvent ( BIOSwitch c ) { if ( ! c . isEnabled ( ) ) { return ; } c . setSelected ( ! c . isSelected ( ) ) ; }
tr	2	public int getErrno ( ) { return errnum ; }
tr	5	public void setHiliteVisible ( boolean visible ) { showHilitedRange = visible ; repaint ( ) ; }
tr	6	private void exiting ( ) { if ( connectionHandler != null && connectionHandler . isConnected ( ) ) connectionHandler . disconnect ( ) ; }
tr	5	public Map < MappingField , Integer > getMap ( ) { return freezedMap ; }
tr	3	public void actionPerformed ( ActionEvent e ) { }
tr	3	public Calendar getFechaInicio ( ) { return fechaInicio ; }
tr	2	public long getStartTime ( ) { return startTime ; }
tr	9	public void setProperties ( Player player , Region genericRegion ) { this . player = player ; this . region = genericRegion ; }
tr	9	public void mouseClicked ( MouseEvent e ) { if ( hoverArea . contains ( e . getPoint ( ) ) ) skillToggle = ! skillToggle ; }
tr	1	public Time2 ( ) { this ( 0 , 0 , 0 ) ; }
tr	7	@ Override public void removeTreeModelListener ( TreeModelListener listener ) { listeners . remove ( listener ) ; }
tr	1	public double typeModifier ( ) { return 0 ; }
tr	2	public int getIterations ( ) { return iterationCount ; }
tr	7	public void hideProperties ( ) { if ( propertiesDialog != null ) { propertiesDialog . hide ( ) ; propertiesDialog . dispose ( ) ; propertiesDialog = null ; } }
tr	8	public void addQueries ( String [ ] queries ) { for ( String q : queries ) { this . addQuery ( q ) ; } }
tr	9	@ Test ( expected = IllegalArgumentException . class ) public void shouldRaiseExceptionForEmptyName ( ) { Cinema cinema = new Cinema ( ) ; cinema . setName ( "" ) ; }
tr	8	public void onDisable ( ) { this . playerData . savePlayers ( this . gold , this . elixir , this . darkElixir , this . gems , this . trophies ) ; }
tr	4	public void setI ( float i ) { this . i = i ; }
tr	7	public Writer write ( Writer writer ) throws JSONException { return this . write ( writer , 0 , 0 ) ; }
tr	2	public int getTimeStep ( ) { return timeStep ; }
tr	2	public double getDefense ( ) { return defense ; }
tr	2	public boolean getCountsValid ( ) { return countsValid ; }
tr	1	public Mushroom ( ) { }
tr	8	public void completeOperator ( final Match op ) { putResult ( getResult ( op . getChildren ( ) . get ( 0 ) ) ) ; }
tr	1	public boolean checkSwamp ( ) { return false ; }
tr	1	public Ggg ( ) { }
tr	7	@ Override public void actionPerformed ( ActionEvent arg0 ) { new PageController ( logger , sourceButton ) ; }
tr	4	public Set < long > getBlockHashList ( ) { return blockHashList . keySet ( ) ; }
tr	5	@ Override public void close ( ) throws IOException { in . close ( ) ; }
tr	4	public ArrayList < PokemonTeam > getPopulation ( ) { return population ; }
tr	2	public int getIndex ( ) { return index ; }
tr	9	@ Override public void answerRightFast ( ) { answerField . setEditable ( false ) ; answerField . setBackground ( Color . GREEN ) ; this . resetBackground ( ) ; }
tr	1	public ItemModel ( ) { }
tr	2	public double getMaxyearOfProduction ( ) { return maxyearOfProduction ; }
tr	6	public String toString ( ) { if ( nome != null ) return nome . toString ( ) ; return id + "" ; }
tr	7	public static FPoint2 pt ( double x , double y ) { return new FPoint2 ( x , y ) ; }
tr	6	public Host createHost ( USBListener startup_listener ) throws IOException { return createHost ( ) ; }
tr	8	@ Override public ArrayList obtenerTodos ( Object aux ) { return this . objB . obtenerTodos ( aux ) ; }
tr	9	public String userTypeToString ( ) { switch ( this . userType ) { case CLIENTE : { return new String ( "Cliente" ) ; } case OPERATORE : { return new String ( "Operatore" ) ; } case ADMIN : { return new String ( "Admin" ) ; } default : return null ; } }
tr	1	public ModelPropertyValue ( ) { }
tr	6	private void jTextField2ActionPerformed ( java . awt . event . ActionEvent evt ) { }
tr	3	public String getCurrentTime ( ) { return currentTime ; }
tr	6	public void addMember ( Node n ) { members . add ( n ) ; }
tr	7	protected void processRequest ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { }
tr	2	public boolean invocoDecir ( ) { return this . invocoDecir ; }
tr	10	@ Override public void run ( CommandArgument [ ] args ) { String sql = "SELECT cb.customerID  merchandiseID  m.name  price  SUM(quantity) AS Quantity " + "FROM CustomerBillingCycle cb  CustomerBill b  CustomerBillItems bi  Merchandise m " + "WHERE b.id = bi.customerBillID AND cb.id = b.id AND cb.customerID = ? AND bi.merchandiseID = m.id AND dateTime > ? AND dateTime < ? " + "GROUP BY cb.customerID  merchandiseID  m.name  price" ; DatabaseManager . runPreparedStatement ( sql , args , true ) ; }
tr	8	public int getMin ( int [ ] s ) { Arrays . sort ( s ) ; int min = s [ 0 ] ; return min ; }
tr	7	public Tile get ( int x , int y ) { return mapData [ x ] [ y ] ; }
tr	9	WATCHLIST ( Verb verb , String ... urlStrings ) { this . urlStrings = urlStrings ; this . verb = verb ; }
tr	3	public NodoDeLista getSiguiente ( ) { return siguiente ; }
tr	7	@ Test public void shouldHandleChoiceOfOne ( ) { parser = choice ( "foo" ) ; assertEquals ( "foo" , parser . parse ( "foo" ) ) ; }
tr	4	public void setLooping ( boolean looping ) { this . looping = looping ; }
tr	1	public ClientImp ( ) { }
tr	3	public BigDecimal getMinimum ( ) { return minimum ; }
tr	3	@ Override public String getPermission ( ) { return "irc.leave" ; }
tr	1	public LoginHandler ( ) { super ( ) ; }
tr	3	public String value ( ) { return name ( ) ; }
tr	9	public void addChangeListener ( ChangeListener listener ) { Objects . requireNonNull ( listener ) ; listeners . add ( listener ) ; }
tr	9	public static boolean isPrimeNumber ( int n ) { if ( n < 2 ) return false ; for ( int i = 2 ; i < n ; i ++ ) { if ( n % i == 0 ) return false ; } return true ; }
tr	2	public TestCallback ( ) { clear ( ) ; }
tr	7	public boolean and ( int value , int mask ) { return el . and ( value , mask ) ; }
tr	5	public void setAge ( Integer age ) { this . age = age ; }
tr	4	@ XmlAttribute ( name = "CY_b" ) public float getCY_b ( ) { return CY_b ; }
tr	7	private void newGameButtonActionPerformed ( java . awt . event . ActionEvent evt ) { newGame ( ) ; }
tr	3	public String getCode ( ) { return code ; }
tr	2	@ Override public void gameInterrupted ( ) { }
tr	10	@ Override public void removeAll ( List < Program > programList ) { for ( Program p : programList ) { removeProgram ( p ) ; } }
tr	2	public long getPreviousCursor ( ) { return previousCursor ; }
tr	7	public String getProperty ( final String key ) { return properties . getProperty ( key ) ; }
tr	7	public void close ( ) { try { conn . close ( ) ; } catch ( SQLException e ) { e . printStackTrace ( ) ; } }
tr	9	@ Override public void actionPerformed ( ActionEvent event ) { dialogResult = ( event . getActionCommand ( ) . equals ( "ok" ) ) ; setVisible ( false ) ; }
tr	5	@ Override public PLType getType ( ) { return PLType . PLNull ; }
tr	7	@ Override public Order findOrder ( long id ) { return this . orderDao . findById ( id ) ; }
tr	6	@ Override public String toString ( ) { return "Network Device: " + this . getNetworkName ( ) + " - " + printArray ( getNames ( ) ) ; }
tr	6	@ Override public synchronized FingerprintSettings setRadius ( final int iRadius ) { this . m_iRadius = iRadius ; return this ; }
tr	6	public Initialization ( String name ) { init ( name , DEFAULT_AGE ) ; }
tr	1	public GetTrains ( ) { super ( ) ; }
tr	9	@ Override public void sortObjects ( Comparator < MapObject > comparator ) { super . sortObjects ( comparator ) ; this . dispatchEvent ( new MapObjectsChangeEvent ( this ) ) ; }
tr	6	@ Override public String getColumnName ( int i ) { return headers [ i ] ; }
tr	7	public EnterView ( ActionController actController ) { this . actController = actController ; this . setActionListener ( ) ; this . initEnterView ( ) ; }
tr	8	@ Test public void testApplesAndOranges ( ) { Course courseA = new Course ( "CMSC" , "120" ) ; assertFalse ( courseA . equals ( "CMSC-120" ) ) ; }
tr	3	public VisaGrp getVisaGrp ( ) { return visaGrp ; }
tr	5	public void setLeft ( Node n ) { left = n ; }
tr	4	@ Override public void windowOpened ( WindowEvent e ) { }
tr	6	@ JsonAnyGetter public Map < String , Object > getAdditionalProperties ( ) { return this . additionalProperties ; }
tr	3	public String getFirstName ( ) { return firstName ; }
tr	5	public void setBtSalvar ( JButton btSalvar ) { this . btSalvar = btSalvar ; }
tr	7	public MultOperatorFactory ( FormulaFactory [ ] factories , LiteralFactory literalFactory ) { super ( factories , literalFactory ) ; }
tr	5	public void setEdate ( String edate ) { this . edate = edate ; }
tr	4	private static void markEndTime ( ) { endTime = System . currentTimeMillis ( ) ; }
tr	8	public void setInterval ( int interval ) throws IllegalArgumentException { if ( interval < 0 ) { throw new IllegalArgumentException ( "interval < 0 : " + interval ) ; } this . interval = interval ; }
tr	10	public static void initiialise ( Individual individual ) { InitialisePeriodAssigmentUniformly . initialise ( individual ) ; bigClosestDepotRouteWithUniformCut ( individual ) ; individual . calculateCostAndPenalty ( ) ; }
tr	10	public static Date parseDate ( String sdf , String string ) { return parseDate ( new SimpleDateFormat ( sdf ) , string ) ; }
tr	9	@ Override protected synchronized int computeMove ( Board b , long endTime ) { try { wait ( ) ; } catch ( InterruptedException e ) { } return nextMove ; }
tr	4	public void isiOperan2 ( double x ) { op2 = x ; }
tr	8	public void compute ( Integer param ) { System . out . println ( "Parametr dupy:" + param . toString ( ) + "!" ) ; }
tr	10	public void load ( Runnable runnable ) { while ( true ) { try { executor . execute ( runnable ) ; break ; } catch ( RejectedExecutionException e ) { Macro . sleep ( 500 ) ; } } }
tr	2	public int getTrainNumber ( ) { return trainNumber ; }
tr	4	public T element ( ) { return stackqueue . getFirst ( ) ; }
tr	8	@ Override public BufferedImage getSprite ( ) { return ( ( ! faceRight ) ? Art . player1 : Art . player2 ) [ 0 ] [ 1 ] ; }
tr	9	public Moderator ( String memberName , String factionName ) { this . memberName = memberName ; this . factionName = factionName ; }
tr	8	protected void criarMetaObjeto ( ) { framePai . dispose ( ) ; switch ( listaSemiPontos . size ( ) ) { case 1 : this . criarPonto ( ) ; break ; case 2 : this . criarReta ( ) ; break ; default : this . criarPoligono ( ) ; } }
tr	9	public java . util . List < RecipeIngredient > getIngredients ( ) { return ( ( IngredientListModel ) ingredientList . getModel ( ) ) . getIngredients ( ) ; }
tr	9	public boolean update ( MNode o , MNode n ) { return remove ( o ) && add ( n ) ; }
tr	2	public int getYearOfBirth ( ) { return yearOfBirth ; }
tr	6	private void txtRutActionPerformed ( java . awt . event . ActionEvent evt ) { }
tr	8	public Descargar ( ) { initComponents ( ) ; this . setTitle ( "NiconNavigator-Descargas" ) ; addListListener ( ) ; Descargar . setVisible ( false ) ; Estado . setVisible ( false ) ; }
tr	10	public void handleDownstream ( ChannelHandlerContext ctx , ChannelEvent e ) throws Exception { encoder . handleDownstream ( ctx , e ) ; }
tr	1	public LiveConferenceFactory ( ) { }
tr	6	public void addTableListener ( MouseListener tableDoubleClick ) { moviesTable . addMouseListener ( tableDoubleClick ) ; }
tr	4	public AppTest ( String testName ) { super ( testName ) ; }
tr	2	public double getPickUpPuckBaseChance ( ) { return pickUpPuckBaseChance ; }
tr	3	public String getJarFileName ( ) { return jarFileName ; }
tr	6	public boolean isVisible ( TilePosition position ) { return isVisible_native ( pointer , position ) ; }
tr	10	@ Override public RobotResponse accept ( RobotExceptionVisitor visitor , OutputStream os ) { return visitor . handle ( this , os ) ; }
tr	2	RenderLayer ( int x ) { }
tr	1	public Table ( ) { }
tr	9	public void set_route_type ( String in ) { try { _route_type = Integer . parseInt ( in ) ; } catch ( NumberFormatException e ) { ; } }
tr	5	@ Override public Area getNextSibling ( ) { return ( Area ) getNextSiblingNode ( ) ; }
tr	5	@ Override public void gobble ( ) { System . out . println ( "gobble" ) ; }
tr	8	public ReadOnlyRestrictedPropSource ( PropSource propSource , Collection < String > propKeys ) { super ( propSource , propKeys ) ; }
tr	4	public ASTNode getArgs ( ) { return children . get ( 0 ) ; }
tr	6	public void setMainMessageLabel ( String message ) { mainMessageLabel . setText ( message ) ; }
tr	3	public Armor getPersonalArmor ( ) { return personalArmor ; }
tr	9	public GameKeyHandler ( Player player , HashMap bindingMap ) { this . player = player ; this . bindingMap = bindingMap ; }
tr	10	public boolean validParam ( DBMS toCheck ) { if ( dbTypes . contains ( DBMS . Other ) ) return true ; if ( dbTypes . contains ( toCheck ) ) return true ; return false ; }
tr	3	public XbpadButton xgetD3 ( ) { return d3 ; }
tr	5	public boolean stop ( boolean shiftQueueCommand ) { return stop_native ( pointer , shiftQueueCommand ) ; }
tr	3	public void clearBooster ( ) { getBooster ( ) . clear ( ) ; }
tr	9	public void delItem ( String astr ) { int idx = getIndex ( astr ) ; if ( idx >= 0 ) delItem ( idx ) ; }
tr	7	public static String GetNym_Name ( String NYM_ID ) { return otapiJNI . OTAPI_Basic_GetNym_Name ( NYM_ID ) ; }
tr	3	public T1 getA ( ) { return a ; }
tr	1	public ParkingLot ( ) { }
tr	6	@ Override public E getCurrentElem ( ) { if ( this . currentNode != null ) { return this . currentNode . getElement ( ) ; } return null ; }
tr	7	private void updateArmor ( DocumentEvent de ) { vitals . armor = txtArmor . getText ( ) ; }
tr	6	public static Query create ( Type type ) { return create ( type , null , null ) ; }
tr	9	public void noSuchSymbol ( final Name name , final Tree tree ) { log ( new NoSuchSymbolReport ( name , tree ) ) ; }
tr	3	@ Override public int hashCode ( ) { return id ; }
tr	2	public int getSize ( ) { return size ; }
tr	9	@ Override public int hashCode ( ) { int hash = 3 ; hash = 83 * hash + ( this . id != null ? this . id . hashCode ( ) : 0 ) ; return hash ; }
tr	7	@ Override public void setup ( ) { drawable = true ; drawmode = entity . DRAWMODE_STANDARD ; collideable = false ; }
tr	1	public Survivor ( ) { this ( "" ) ; }
tr	5	public static void main ( String [ ] args ) { launch ( args ) ; }
tr	5	public FlameTrap ( Rectangle2D area ) { super ( area ) ; set_up ( ) ; }
tr	5	@ Override public String toString ( ) { return "Rule(" + _sels + ) ; }
tr	6	public Bra ( BasicBlock target ) { super ( Opcode . bra , target ) ; }
tr	6	public static String upperize ( String s ) { return s . toUpperCase ( ) ; }
tr	2	public int getType ( ) { return type ; }
tr	9	public double pickupProbability ( double density ) { return Math . pow ( ( ACO . pickupGain / ( ACO . pickupGain + density ) ) , 2 ) ; }
tr	3	public String getCourseNumber ( ) { return courseNumber ; }
tr	6	public void setMappings ( List < Mapping > mappings ) { this . mappings = mappings ; }
tr	10	@ Override public String toString ( ) { return "Client [id=" + id + "  inn=" + inn + "  firstName=" + firstName + "  lastName=" + lastName + "  patronymic=" + patronymic + "  birthDay=" + birthDay + "  passportNumber=" + passportNumber + "]" ; }
tr	7	@ Override public boolean violates ( Variable var ) { return rule . holds ( var ) ; }
tr	6	private void SeekjSliderMouseClicked ( java . awt . event . MouseEvent evt ) { }
tr	2	public synchronized static boolean isVerbose ( ) { return verbose ; }
tr	3	public Date getToPdcDate ( ) { return toPdcDate ; }
tr	1	public ObjectFactory ( ) { }
tr	2	public int getWaitTime ( ) { return waitTime ; }
tr	3	public static long getTime ( ) { return System . nanoTime ( ) ; }
tr	2	public void limpiar ( ) { this . data = "" ; }
tr	7	public boolean contains ( long x ) { return ( x >= start ) && ( x < ( start + length ) ) ; }
tr	4	public static Session getSession ( ) { return sessionFactory . openSession ( ) ; }
tr	7	@ Override public void addLoad ( Load load ) { loads . add ( load ) ; }
tr	10	protected ApnsConnection initialValue ( ) { ApnsConnection newCopy = prototype . copy ( ) ; prototypes . add ( newCopy ) ; return newCopy ; }
tr	4	public void setCineplexCode ( int cineplexCode ) { this . cineplexCode = cineplexCode ; }
tr	9	@ Override protected void connectionWithClientBroken ( INDIClient client ) { System . err . println ( "Connection with client " + client . getInetAddress ( ) + " has been broken." ) ; }
tr	6	private void jRadioButton1ActionPerformed ( java . awt . event . ActionEvent evt ) { }
tr	4	@ Override public String watIsHet ( ) { return ITEM ; }
tr	4	public List < UnsupervisedPattern > getPatterns ( ) { return patterns ; }
tr	6	public ArrayList < Challenge > getInbox ( int id ) { return getChallenges ( id , "SELECT * FROM challenges WHERE friendToID = " ) ; }
tr	9	public Tuple ( X x , Y y ) { this . x = x ; this . y = y ; }
tr	10	@ Test public void testFlow_ensure_should_return_a_promise ( ) throws Exception { Promise < Object > p = resolved ( null ) . ensure ( null ) ; assertNotNull ( p ) ; }
tr	4	public boolean startsWithOK ( ) { if ( len < 2 ) return false ; return array [ 0 ] == 111 && array [ 1 ] == 107 ; }
tr	9	public Response delete ( String url , boolean authenticated ) throws WeiboException { return httpRequest ( url , null , authenticated , "DELETE" ) ; }
tr	8	public static void main ( String [ ] args ) { cached ( ) ; nonCached ( ) ; cachedUnboxing ( ) ; nonCachedUnboxing ( ) ; npe ( ) ; }
tr	9	public void setSender ( int id ) throws NetworkMessageException { if ( id < 0 || id > byte . MAX_VALUE ) { throw new NetworkMessageException ( "SenderID out of range" ) ; } data [ 1 ] = ( byte ) id ; }
tr	1	public XmlQuery ( ) { }
tr	2	public int [ ] getPix ( ) { return pix ; }
tr	4	public String toString ( ) { return getThroughputPerSecond ( ) + " docs/sec with " + threads + " threads" ; }
tr	2	public double getNear ( ) { return near ; }
tr	7	public E fromAlternateValue ( Object val ) { return this . alternateValueMap . get ( val ) ; }
tr	2	public int getWidth ( ) { return width ; }
tr	7	String ProjectEulerSupportFilePath ( ) { SupportFiles files = new SupportFiles ( ) ; return files . Location ; }
tr	2	public int getFocus ( ) { return focus ; }
tr	4	@ Override public int getOutputsNum ( ) { return this . outputSynapses . size ( ) ; }
tr	3	public String getXms ( ) { return xms ; }
tr	8	public UnitOfWork with ( Object [ ] contextObjectArray ) { this . ctx = new business . Context ( contextObjectArray ) ; return this ; }
tr	3	public Image getImage ( ) { return image ; }
tr	1	public int getArrowTopSpacing ( ) { return 4 ; }
tr	3	public String getValue ( ) { return value ; }
tr	8	public List < String > getProdDesc ( ) { if ( prodDesc == null ) { prodDesc = new ArrayList < String > ( ) ; } return this . prodDesc ; }
tr	5	public void setsAccNo ( String sAccNo ) { this . sAccNo = sAccNo ; }
tr	2	public int getExecComplClock ( ) { return ExecComplClock ; }
tr	10	public void removeNativeLibrary ( NativeLibrary nativeLibrary ) { NotNullException . assertValue ( nativeLibrary , "nativeLibrary" ) ; if ( nativeLibraries == null ) return ; nativeLibraries . remove ( nativeLibrary ) ; }
tr	7	@ Override public void processGroupStart ( ) { handleEvent ( GROUP_START ) ; stack . push ( state ) ; }
tr	2	@ Override public void tick ( ) { }
tr	5	public Brightness ( HSBPanel parent ) { this . parent = parent ; }
tr	2	public int getNumMosquitos ( ) { return num_mosquitos ; }
tr	5	@ Override public void tableChanged ( TableModelEvent e ) { fireTableStructureChanged ( ) ; }
tr	3	@ Override public String toString ( ) { return "HMM" ; }
tr	2	@ Override public float getZ ( ) { return 0 ; }
tr	8	public MapEntity ( String name , Location loc ) { super ( name ) ; setLocation ( loc ) ; }
tr	1	private Util ( ) { }
tr	7	public byte getLanguageIndicator ( ) { if ( languageIndicator . getText ( ) . length ( ) == 0 ) { return null ; } return byte . valueOf ( languageIndicator . getText ( ) ) ; }
tr	9	public Resource ( String resourcePath ) { this . path = resourcePath ; loadFont ( ) ; loadImage ( ) ; loadLevel ( ) ; loadSound ( ) ; }
tr	5	public void setDia ( String dia ) { this . dia = dia ; }
tr	10	public boolean ghostRequiresAction ( int whichGhost ) { return ( isJunction ( curGhostLocs [ whichGhost ] ) && ( edibleTimes [ whichGhost ] == 0 || edibleTimes [ whichGhost ] % GHOST_SPEED_REDUCTION != 0 ) ) ; }
tr	5	public void setType ( String value ) { this . type = value ; }
tr	6	public void setUserId ( java . lang . long userId ) { this . userId = userId ; }
tr	9	public static void main ( String [ ] args ) { System . out . println ( "I Rule!" ) ; System . out . println ( "The world" ) ; }
tr	1	public NetGeneratorException ( ) { }
tr	8	@ Override public Object get ( String key ) { return model . get ( key ) ; }
tr	3	@ Override public String getDefaultExtension ( ) { return "Main" ; }
tr	8	public static Object [ ] [ ] getRows ( JTable table ) { return tableModelToArray ( TableUtils . getModel ( table ) ) ; }
tr	2	public int getScore ( ) { return points ; }
tr	9	public void serverCutText ( String str ) { if ( viewer . acceptClipboard . getValue ( ) ) clipboardDialog . serverCutText ( str ) ; }
tr	8	private void miNovoActionPerformed ( java . awt . event . ActionEvent evt ) { limparCampos ( ) ; desbloquearCampos ( ) ; }
tr	5	public void setNumContaOrigem ( Integer numContaOrigem ) { this . numContaOrigem = numContaOrigem ; }
tr	8	public void actionPerformed ( ActionEvent ae ) { log . config ( "Displaying COM port configuration window" ) ; COMPortConfig cpcWin = new COMPortConfig ( ) ; }
tr	4	public static void main ( String [ ] args ) { getProbability ( 5 , 3 ) ; }
tr	4	public void setAmount ( float amount ) { this . amount = amount ; }
tr	4	@ Override public void keyPressed ( KeyEvent e ) { }
tr	5	public void setType ( Type type ) { this . type = type ; }
tr	2	public int getUserRights ( ) { return userRights ; }
tr	8	@ Override public int hashCode ( ) { int hash = 0 ; hash += ( idDocument != null ? idDocument . hashCode ( ) : 0 ) ; return hash ; }
tr	8	@ Override public DBInsertHandler Insert ( InsertParameterList insertParameterList ) { this . insertParameterList = insertParameterList ; isInsertBatch = false ; return this ; }
tr	3	public ByteBuffer ( ) { buffer = new byte [ 16 ] ; this . len = 16 ; }
tr	7	public void setPane ( GravityPane gp ) { pane = gp ; pane . addCollisionListener ( this ) ; }
tr	4	@ Override public String toString ( ) { return value ; }
tr	8	public StockInfo getStockInfo ( String symbol ) { return new StockInfo ( symbol , calculatePrice ( symbol ) ) ; }
tr	10	@ Deprecated public WebSocketImpl ( WebSocketListener listener , Draft draft , Socket socket ) { this ( listener , draft ) ; }
tr	7	public UnidadHerida ( Integer saludMaxima ) { this . establecerSaludMaxima ( saludMaxima ) ; this . recibirGolpe ( saludMaxima / 2 ) ; }
tr	8	public Account ( int accountNumber , Person person ) { this . accountNumber = accountNumber ; this . person = person ; }
tr	9	private int peek ( ) throws IOException { int ch = in . read ( ) ; in . unread ( ch ) ; return ch ; }
tr	7	public void removeAll ( ) { for ( int i = getRowCount ( ) - 1 ; i >= 0 ; i -- ) { removeRow ( i ) ; } }
tr	2	public boolean isCookable ( ) { return cookable ; }
tr	5	@ Override public synchronized void removeNotify ( ) { this . applet . shutdown ( ) ; super . removeNotify ( ) ; }
tr	4	int step5Status ( ) { if ( event . getSeatsPerTable ( ) . isEmpty ( ) ) return 0 ; else return 1 ; }
tr	9	public static void main ( String [ ] args ) throws ClassNotFoundException , IOException , SQLException { BaseDeDonnees bd = new BaseDeDonnees ( ) ; }
tr	1	public TestEntity2 ( ) { }
tr	10	boolean matchAddr ( byte hb , byte lb ) { char adr = ( char ) hb ; adr = ( char ) ( ( adr << 8 ) + lb ) ; return ( adr == addr ) ; }
tr	4	public String getDBUser ( ) { return _prop . getProperty ( "dbuser" ) ; }
tr	1	public int start_production ( ) { return 0 ; }
tr	1	public int error_sym ( ) { return 1 ; }
tr	5	public void setResult ( Object result ) { this . result = result ; }
tr	6	public Nodo ( String n ) { nombre = n ; siguiente = null ; }
tr	1	public void tick ( ) { }
tr	6	@ Override public Set < String > propKeys ( ) { return propSet . propKeys ( ) ; }
tr	8	public int getLayoutHashCode ( ) { long n = System . nanoTime ( ) ; int h = super . getLayoutHashCode ( ) ; if ( isLeftToRight ( ) ) h += 416343 ; return 0 ; }
tr	9	@ Test public void STEEL_attacking_GHOST ( ) { assertEquals ( 1.0 , tc . getWeaknessResistance ( Type . STEEL , Type . GHOST ) , 0.0 ) ; }
tr	8	private boolean isMatchingRightChild ( ASTNode rightChild ) { if ( rightChildMatcher == null ) { return true ; } if ( rightChild == null ) { return false ; } return rightChildMatcher . matches ( this , rightChild ) ; }
tr	7	public void setServer_id ( String value ) { otapiJNI . ContactAcct_server_id_set ( swigCPtr , this , value ) ; }
tr	6	@ Override public void onDraw ( Canvas canvas ) { drawText ( canvas , false ) ; }
tr	6	public boolean containsValue ( Object value ) { return _source . containsValue ( value ) ; }
tr	10	@ Test public void checkWinHoriz ( ) throws Exception { startup ( ) ; int [ ] [ ] exportedGrid = { { 0 , 0 , 0 , 0 , 0 , 0 , 0 } , { 0 , 0 , 0 , 0 , 0 , 0 , 0 } , { 0 , 0 , 0 , 0 , 0 , 0 , 0 } , { 0 , 0 , 0 , 0 , 0 , 0 , 0 } , { 2 , 2 , 2 , 0 , 0 , 0 , 0 } , { 1 , 1 , 1 , 1 , 0 , 0 , 0 } } ; initializeGrid ( exportedGrid ) ; assertTrue ( b . checkHorizontal ( ) ) ; }
tr	9	public static boolean isNullOrEmpty ( String s ) { return ( s == null || s . isEmpty ( ) || s . trim ( ) . isEmpty ( ) ) ; }
tr	8	public static void test2 ( ) { { byte [ ] b = new byte [ 6 * 1024 * 1024 ] ; b = null ; } System . gc ( ) ; System . out . println ( "test2 fist explict gc over" ) ; }
tr	1	public InvalidSecurityAuthenticationException ( ) { }
tr	7	@ Override public Log getLogger ( ) { if ( client == null ) { return new Log ( ) ; } else { return client . getLogger ( ) ; } }
tr	5	public void setStatusString ( String statusString ) { this . statusString = statusString ; }
tr	9	public void setRows ( int newRows ) { if ( newRows < 0 ) throw new IllegalArgumentException ( "number of rows cannot be negative" ) ; if ( newRows == 0 && cols == 0 ) throw new IllegalArgumentException ( "number of columns is already 0" ) ; this . rows = newRows ; }
tr	6	public JCalendar ( Date date , boolean monthSpinner ) { this ( date , null , monthSpinner , true ) ; }
tr	9	public static String getProperty ( String name ) throws TransformException { return instance ( ) . getProperties ( ) . get ( name ) ; }
tr	2	public int height ( ) { return y ; }
tr	4	public void setInteraction ( boolean interaction ) { this . interaction = interaction ; }
tr	1	public BubbleChart ( ) { this ( null ) ; }
tr	6	private void jButton1ActionPerformed ( java . awt . event . ActionEvent evt ) { }
tr	9	public FressianReader ( InputStream is , ILookup < Object , ReadHandler > handlerLookup ) { this ( is , handlerLookup , true ) ; }
tr	3	public String getAuthorizeUri ( ) { return authorizeUri ; }
tr	3	public boolean isEmpty ( ) { return ( id == null ) && ( name == null ) ; }
tr	2	public static void apply ( ) { setLookAndFeel ( ) ; }
tr	10	public static double distance ( double x0 , double y0 , double x1 , double y1 ) { return distance ( x1 - x0 , y1 - y0 ) ; }
tr	2	public final int getMeasuredWidth ( ) { return measuredWidth ; }
tr	6	public void clear ( ) { g = new Graph ( ) ; v [ 0 ] = g ; level = 0 ; }
tr	7	public InternManImpl ( UserStore userStore ) { this . users = new UserManagementImpl ( ) ; this . adverts = new AdvertManagementImpl ( ) ; }
tr	1	private MyShape ( ) { }
tr	4	public void setNorth ( boolean north ) { this . north = north ; }
tr	9	@ Override @ Transactional ( propagation = Propagation . MANDATORY ) public nurseDetails perist ( nurseDetails entity ) { return null ; }
tr	2	public void AnzahlDec ( ) { this . anzahl -- ; }
tr	1	public B_A_estudiante ( ) { }
tr	7	public OAuth2 ( AuthorizationCallback authCallback , OAuth2Settings settings ) { this ( authCallback , settings , null ) ; }
tr	6	@ Override public void enterValue ( @ NotNull MagicParser . ValueContext ctx ) { }
tr	2	public int getTEMPOMAXIMO ( ) { return TEMPO_MAXIMO ; }
tr	3	public void agregarNavesRandom ( ) { this . juego . agregarNavesRandom ( ) ; }
tr	9	public BSTNode ( E d ) { data = d ; count = 1 ; left = null ; right = null ; size ++ ; }
tr	2	@ Override public float getS_Bed ( ) { return 0 ; }
tr	2	public boolean empty ( ) { return currentSize == 0 ; }
tr	5	public void setView ( View view ) { this . view = view ; }
tr	6	public ASTNode child ( int index ) { return children . get ( index ) ; }
tr	8	public void getHistory ( ) throws Exception { result = connector . select ( "select * from history" ) ; System . out . println ( "Pass" ) ; }
tr	2	public int getEndX ( ) { return endX ; }
tr	9	@ Override public NodeRelation getRelation ( int first , int other ) { return store . getRelation ( first , other ) ; }
tr	6	public PatternGroupStructure ( int nameGroup , Pattern pattern ) { this ( 0 , nameGroup , pattern ) ; }
tr	4	public ExprContext expr ( ) { return getRuleContext ( ExprContext . class , 0 ) ; }
tr	5	protected Map < String , Path > getFiles ( ) { return files ; }
tr	1	public BooleanExpression ( ) { }
tr	9	private FullVersion ( final Version minecraft , final Version mod ) { super ( ) ; this . minecraft = minecraft ; this . mod = mod ; }
tr	7	public ConfigVarServiceException ( String message , Throwable cause ) { super ( message , cause ) ; }
tr	1	private ArgsUtil ( ) { }
tr	9	public SizeTween ( int duration , double dw , double dh ) { this ( duration , Interpolation . LINEAR , dw , dh ) ; }
tr	8	public boolean equals ( Object other ) { if ( ! ( other instanceof lr_item_core ) ) return false ; else return equals ( ( lr_item_core ) other ) ; }
tr	6	public static Descansar escenarioParaDescansar ( Unidad unidad ) { return new Descansar ( unidad ) ; }
tr	9	public static void intialiseLogger ( ) { System . out . println ( "Initialising logger" ) ; AbstractLogger logger = new ConsoleAppender ( ) ; logger . initialise ( ) ; }
tr	6	@ Override public void execute ( ) { while ( condicao . getValor ( ) ) { faca . execute ( ) ; } }
tr	6	@ Override public void onDamageReceived ( int id , double value ) { points ++ ; changed = true ; }
tr	7	public void setNetsMap ( Map < String , String > netsMap ) { this . netsMap = netsMap ; }
tr	8	private void setPrintControlsEnabled ( boolean enabled ) { jButtonPrint . setEnabled ( enabled ) ; jPopupPrint . setEnabled ( enabled ) ; }
tr	5	public InputFileInfo ( String fileName ) { this . setFileName ( fileName ) ; }
tr	10	@ Override public boolean exists ( T persistable ) { return persistable == null || persistable . isNew ( ) ? false : exists ( persistable . getPK ( ) ) ; }
tr	4	public List < Usuario > encontrarEntidadesUsuario ( ) { return encontrarEntidadesUsuario ( true , - 1 , - 1 ) ; }
tr	3	public String getFounder ( ) { return founder ; }
tr	2	public int getKeyId ( ) { return keyId ; }
tr	7	private void setUpFrame ( ) { super . setDefaultCloseOperation ( JFrame . EXIT_ON_CLOSE ) ; super . setResizable ( false ) ; super . setLayout ( new BorderLayout ( ) ) ; }
tr	10	public void setAllClickable ( ) { int len = selectable . length ; for ( int i = 0 ; i < len ; i ++ ) { selectable [ i ] = true ; } }
tr	8	@ Override public void close ( TaskContext context ) throws IOException , InterruptedException { writer . close ( ) ; }
tr	6	public boolean publicKeyExists ( String keyName ) { return publicKeys . containsKey ( keyName ) ; }
tr	5	@ Override protected String getExpectedDateFieldDisplay ( ) { return MsWindowsDateField . DISPLAY ; }
tr	4	public GestionLogin ( ) { Conexion . GetInstancia ( ) . CadenaConexion ( ) ; }
tr	10	@ Override public long numberOfComparisons ( ) { long count = comparisonCount . get ( ) ; if ( inplaceSortImpl != null ) { count += inplaceSortImpl . numberOfComparisons ( ) ; } return count ; }
tr	1	public TokenMgrError ( ) { }
tr	7	private void addMeterToAccountActionPerformed ( java . awt . event . ActionEvent evt ) { openAddMeterPanel ( ) ; }
tr	2	public int getBillingCycle ( ) { return billingCycle ; }
tr	10	public void set ( Vector2f vector ) { GL20 . glUniform2f ( _id , vector . x , vector . y ) ; }
tr	4	public void setCohortId ( long cohortId ) { this . cohortId = cohortId ; }
tr	3	public Player getPlayer ( ) { return player ; }
tr	8	public < T extends NeuralNetwork > EvolutionaryAlgorithm ( ArrayList < T > list ) { networks = list ; }
tr	4	public void setE ( float e ) { this . e = e ; }
tr	7	public static synchronized JPanel getInstance ( ) { if ( groupTable == null ) { createTable ( ) ; } if ( groupPanel == null ) { createPanel ( ) ; } return groupPanel ; }
tr	5	public boolean isNumber ( String s ) { return isNumber_01 ( s ) ; }
tr	9	private void createLogfileWriter ( ) throws IOException { try { logfileWriter = new PrintWriter ( new FileWriter ( logFilename ) ) ; } catch ( IOException e ) { throw e ; } }
tr	3	public String getRowId ( ) { return rowId ; }
tr	3	public Integer getAudienceId ( ) { return audienceId ; }
tr	9	Rule ExpressionFunctionCall ( ) { return Sequence ( Identifier ( ) , WhiteSpace ( ) , "( " , ZeroOrMore ( Identifier ( ) , WhiteSpace ( ) , Optional ( "  " ) ) , ") " ) ; }
tr	9	public void onGameEnd ( GameEvent e ) { main ( GAMELISTENER_NAME + e . sourceGame + GameSocketServer . GAME_STARTED ) ; }
tr	10	public MultiDelimiterStringSearchInterpolator addDelimiterSpec ( String delimiterSpec ) { if ( delimiterSpec == null ) { return this ; } delimiters . add ( DelimiterSpecification . parse ( delimiterSpec ) ) ; return this ; }
tr	8	public Problem7 ( ) { knownPrimes = new TreeSet < Integer > ( ) ; knownPrimes . add ( 2 ) ; knownPrimes . add ( 3 ) ; }
tr	3	public String getCourseName ( ) { return this . courseName ; }
tr	2	@ Override public boolean permitidoAdministrarCatalogo ( ) { return true ; }
tr	6	private void campoRegPatInicialActionPerformed ( java . awt . event . ActionEvent evt ) { }
tr	2	public int getIdx ( ) { return idx ; }
tr	5	public Map < Integer , Clock > getClockMapping ( ) { return clockMapping ; }
tr	3	public EnumFacilityType getType ( ) { return type ; }
tr	7	public void removeBoxes ( Collection < Box > box ) { boxes . removeAll ( box ) ; }
tr	2	@ Override public void onReplacement ( ) { }
tr	8	public InteractivePlayer ( Mark mark , Prompt prompt ) { super ( mark ) ; this . prompt = prompt ; }
tr	1	public CustomerContact ( ) { }
tr	5	public void setEmployeeName ( String fullName ) { name = fullName ; }
tr	1	public void think ( ) { }
tr	7	public Property getProperty ( String name ) { return properties . get ( name ) ; }
tr	6	public void addChangeListener ( ChangeListener cl ) { subscribers . add ( cl ) ; }
tr	3	public String getValidFrom ( ) { return validFrom ; }
tr	8	public PosFuncionarios getFuncionario ( long cedula ) { return ( PosFuncionarios ) getHibernateTemplate ( ) . get ( PosFuncionarios . class , cedula ) ; }
tr	9	@ Override public CommandArgument [ ] getArguments ( ) { CommandArgument args [ ] = new CommandArgument [ 1 ] ; args [ 0 ] = new CommandArgument ( "StoreID" , "Int" , "StoreID" , false ) ; return args ; }
tr	6	public void setKlassName ( String klassName ) { _attributes . put ( "klass" , klassName ) ; }
tr	5	public void setId ( String value ) { this . id = value ; }
tr	3	public String getComment ( ) { return this . comment ; }
tr	9	@ Test public void FLYING_attacking_BUG ( ) { assertEquals ( 2.0 , tc . getWeaknessResistance ( Type . FLYING , Type . BUG ) , 0.0 ) ; }
tr	10	public static void main ( String [ ] args ) { javax . swing . SwingUtilities . invokeLater ( new Runnable ( ) { public void run ( ) { createAndStartGui ( ) ; } } ) ; }
tr	4	public void setZavod_zavod_id ( long zavod_zavod_id ) { this . zavod_zavod_id = zavod_zavod_id ; }
tr	3	@ Override public String getId ( ) { return null ; }
tr	2	public int getCurrentScore ( ) { return currentScore ; }
tr	7	@ Override public void dispose ( ) { super . dispose ( ) ; weaponView . dispose ( ) ; remainBulletView . dispose ( ) ; }
tr	7	private StaffDAOImpl ( ) { serializeDB = SerializeDB . getInstance ( ) ; staffList = serializeDB . getStaffs ( ) ; }
tr	1	public SensorHolder ( ) { }
tr	5	public Map < String , String > getProperties ( ) { return this . properties ; }
tr	9	public long addAddress ( Address address , long sessionID ) throws SessionException { return SessionServerDelegate . addAddress ( address , sessionID ) ; }
tr	7	public String getSo ( ) { System . out . println ( OS ) ; return OS ; }
tr	8	public void setCorrectlyAnswered ( ) { ++ _correctlyAnswered ; ++ _totalTimesAnswered ; -- _difficulty ; if ( _difficulty < MINIMUM_DIFFICULTY ) { _difficulty = MINIMUM_DIFFICULTY ; } }
tr	4	Vector < boolean > getDesiredFeatures ( ) { return editorState . getFeatures ( ) ; }
tr	7	@ Override public Page getAllThreads ( String lastMod ) throws ContentGetException { throw new UnsupportedOperationException ( ) ; }
tr	7	@ Override public String toPrint ( ) { return "<DivNode><DivNodeLeft>" + left . toPrint ( ) + "</DivNodeLeft><DivNodeRight>" + right . toPrint ( ) + "</DivNodeRight></DivNode>" ; }
tr	1	public NuevoFarmaceutico ( ) { super ( ) ; }
tr	5	public static void println ( char x ) { out . println ( x ) ; }
tr	4	@ Override public void moveTo ( Point point ) { }
tr	3	public String getMensagem ( ) { return mensagem ; }
tr	3	public DebitResponseDetails getDebitResponse ( ) { return debitResponse ; }
tr	9	public Businessman ( String businessmanName , Messenger messenger ) { this . businessmanName = businessmanName ; messenger . registerClient ( this ) ; }
tr	1	public boolean allowHtml ( ) { return false ; }
tr	4	public String toString ( ) { return core . toString ( ) ; }
tr	1	public int get_key_num ( ) { return 1 ; }
tr	8	public String getCommunity ( ) { Community comm = this . updateAttr . getCommunity ( ) ; return comm . toString ( ) ; }
tr	3	public String getColor ( ) { return color ; }
tr	4	public void run ( ) { m$ . Cmd . do ( methodName ) ; }
tr	3	public Game getGame ( ) { return game ; }
tr	8	public void addValue ( String value ) { if ( value == null ) { throw new NullPointerException ( "value" ) ; } this . value . add ( value ) ; }
tr	1	public ItemInteract ( ) { super ( ) ; }
tr	7	public static SoundManager create ( class < ? > clazz ) throws IllegalArgumentException { return create ( clazz , new String ( ) ) ; }
tr	2	public int getMineralPriceBase ( ) { return mineralPriceBase ; }
tr	3	public DistanceUnitType getLength ( ) { return length ; }
tr	10	private Dimension getMinimumComponentSize ( Component comp ) { if ( isScrollbar ( comp ) ) return getMinimumScrollbarSize ( comp ) ; return comp . getMinimumSize ( ) ; }
tr	5	public String getLogName ( ) { return Communicator . class . getName ( ) + this . getInstanceNumber ( ) ; }
tr	7	public boolean equals ( int x , int y ) { return this . x == x && this . y == y ; }
tr	2	public int getId ( ) { return id ; }
tr	5	public DistanceComparator ( Vec3f center ) { this . center = center ; }
tr	10	private static String generateMsg ( String expected , String actual ) { return String . format ( "Excepted '%s' but got '%s' instead." , expected , actual ) ; }
tr	10	public static void printList ( final List < ? > list ) { for ( final Object i : list ) System . out . println ( i ) ; }
tr	3	public void stop ( ) { timer . cancel ( ) ; }
tr	8	public boolean getBoolean ( String propertyName ) { boolean result = boolean . parseBoolean ( getString ( propertyName ) ) ; return result ; }
tr	9	@ RequestMapping ( { "/tipoproducto/form.html" } ) public ModelAndView form ( HttpServletRequest request , HttpServletResponse response ) throws UnsupportedEncodingException { return new ModelAndView ( "tipoproducto/form" ) ; }
tr	3	public String getVersion ( ) { return version ; }
tr	10	public void removeAllEntities ( ) { synchronized ( addQueue ) { synchronized ( removeQueue ) { synchronized ( entitySet ) { addQueue . clear ( ) ; removeQueue . clear ( ) ; entitySet . clear ( ) ; } } } }
tr	9	private void dacordActionPerformed ( java . awt . event . ActionEvent evt ) { viewController . confirmacioWindow3 ( this . Tdni ) ; }
tr	9	public CPTrack ( String trackName ) { id = UUID . randomUUID ( ) . toString ( ) ; name = trackName ; }
tr	8	public boolean isLeftChild ( BinaryTreeNode < K , V > node ) { return node . equals ( left ) ; }
tr	8	private void setLastDirectory ( String d ) { if ( d == null ) { d = "" ; } fileDlg = new JFileChooser ( d ) ; }
tr	3	private EstacionAdmin ( ) { this . colEstacion = new HashMap < > ( ) ; }
tr	9	public ObserverImageControl ( ImageViewer imageViever , ImageSet set ) { this . imageViever = imageViever ; this . set = set ; }
tr	2	public int getMask ( ) { return mask ; }
tr	7	public TextTableWriter ( TextTableExportOptions options , Writer out ) { super ( options , out ) ; }
tr	6	protected RmiAccountProxy ( Account a ) throws RemoteException { super ( ) ; acc = a ; }
tr	4	public ArrayList < String > getCustomFilters ( ) { return customFilters ; }
tr	8	public static int [ ] getRoutes ( int busStop ) { if ( busStop == 0 ) throw new InvalidQueryException ( "Nonexistent bus stop" ) ; return database . busDatabase . select_ids ( "route" , "path" , "bus_stop" , busStop , "" ) ; }
tr	1	protected ImmutableGameState ( ) { super ( null , null ) ; }
tr	8	static boolean approxEquals ( double a , double b ) { return Math . abs ( a - b ) < EPS ; }
tr	9	private String getRemoteAddress ( Socket socket ) { return ( ( InetSocketAddress ) socket . getRemoteSocketAddress ( ) ) . getAddress ( ) . getHostAddress ( ) ; }
tr	4	public Importlog ( long id ) { this . id = id ; }
tr	7	public LabelDefault ( ) { setForeground ( foreground ) ; setFont ( font ) ; setPreferredSize ( labelDimension ) ; }
tr	8	public static void main ( String [ ] args ) { DuckSimulator2 dSimulator2 = new DuckSimulator2 ( ) ; dSimulator2 . simulate ( ) ; }
tr	2	public int getCodigo ( ) { return codigo ; }
tr	1	public Bulldog ( ) { super ( "Bulldog" ) ; }
tr	10	@ WebEndpoint ( name = "ClienteResourcePort" ) public ClienteResourcePortType getClienteResourcePort ( WebServiceFeature ... features ) { return super . getPort ( ClienteResourcePort , ClienteResourcePortType . class , features ) ; }
tr	8	@ Override public void remove ( ) { assert . state ( this . last != null ) ; ConcurrentReferenceHashMap . this . remove ( this . last . getKey ( ) ) ; }
tr	9	public double getXAlignOfs ( double x ) { int xaligned = tilex * ( int ) ( ( ( int ) x + tilex / 2 ) / tilex ) ; return x - xaligned ; }
tr	9	private void limparCampos ( ) { tfHost . setText ( "" ) ; tfUsuario . setText ( "" ) ; pfSenha . setText ( "" ) ; snPorta . setValue ( 3306 ) ; }
tr	9	@ Test public void STEEL_attacking_POISON ( ) { assertEquals ( 1.0 , tc . getWeaknessResistance ( Type . STEEL , Type . POISON ) , 0.0 ) ; }
tr	8	public static void main ( String [ ] argv ) { KPIPrimitiveUsage test = new KPIPrimitiveUsage ( ) ; test . test_primitives ( ) ; }
tr	10	public static void addIntHeader ( HttpMessage message , String name , int value ) { message . addHeader ( name , value ) ; }
tr	8	private void menuItemExitActionPerformed ( java . awt . event . ActionEvent evt ) { System . exit ( 0 ) ; }
tr	9	public void setKeys ( String [ ] keys ) { this . keys = new ArrayList < String > ( Arrays . asList ( keys ) ) ; }
tr	1	public void init ( ) { }
tr	3	public void _fatal ( Object context ) { }
tr	9	public void registerObserver ( Observer o ) { if ( ! _Observers . contains ( o ) ) _Observers . add ( o ) ; }
tr	5	protected char nextChar ( ) { index ++ ; return contents . charAt ( index ) ; }
tr	10	@ Override public boolean canExecute ( final CommandSender sender , final String [ ] split ) { return split [ 0 ] . contains ( "irc" ) && split [ 1 ] . equalsIgnoreCase ( "connect" ) ; }
tr	6	private void showDataBaseErrorMessage ( ) { JOptionPane . showMessageDialog ( dialog , "There was a problem with connecting to the database \n" + "The problem is either with the connection or with the configuration file" , "Database error" , JOptionPane . ERROR_MESSAGE ) ; }
tr	5	public boolean getDonne ( ) { return ( boolean ) boolean . valueOf ( map . get ( "donne" ) . toString ( ) ) ; }
tr	5	public JFrame getFullScreenWindow ( ) { return ( JFrame ) device . getFullScreenWindow ( ) ; }
tr	1	private vslConfig ( ) { }
tr	7	public void setMapPosition ( ) { xmap = tileMap . getx ( ) ; ymap = tileMap . gety ( ) ; }
tr	8	public static JSONObject toJSONObject ( XMLTokener x ) throws JSONException { return ( JSONObject ) parse ( x , false , null ) ; }
tr	4	@ JsonProperty ( "Associations" ) public ExecutionEnvironmentAssociations getAssociations ( ) { return Associations ; }
tr	6	public static ArrayList < PokerHandEvaluation > straightFlushResolve ( ArrayList < PokerHandEvaluation > potentialWinners ) { return null ; }
tr	9	public void requestOpenPose ( int id ) { boolean continueToOpen = true ; if ( ! saved ) { continueToOpen = promptToSave ( ) ; } if ( continueToOpen ) { promptToOpen ( id ) ; } }
tr	4	public static double getTime ( ) { return ( double ) System . nanoTime ( ) / ( double ) SECOND ; }
tr	2	public boolean readSignal ( ) { return fSignal ; }
tr	2	public String getName ( ) { return "Sheep" ; }
tr	7	public void ajouterPublication ( Publication publication ) throws RemoteException { getServeur ( ) . AddPublication ( publication ) ; }
tr	5	@ Override public String toString ( ) { return user_nome + " " + user_sobrenome ; }
tr	3	public void signal ( Signal signal ) { }
tr	5	public InstanceList ( class < T > clazz ) { super ( ) ; this . clazz = clazz ; }
tr	6	protected void check ( String method ) { if ( mAmShutdown ) throw new RuntimeException ( "NetBase." + method + " called when NetBase isn't in initialized state" ) ; }
tr	10	MainExceptions ( ) { try { System . out . println ( divideByZero ( ) ) ; } catch ( Exception e ) { System . out . println ( "not  devide 0" ) ; } }
tr	9	@ Test public void ELECTRIC_attacking_GROUND ( ) { assertEquals ( 0.0 , tc . getWeaknessResistance ( Type . ELECTRIC , Type . GROUND ) , 0.0 ) ; }
tr	2	public BIOSwitch ( ) { super ( ) ; create ( ) ; }
tr	10	@ Override public String repr ( int d , boolean displayPosition ) { return ( displayPosition ? "@" + cursor . getPosition ( ) + pref ( d ) : "" ) + "Array" ; }
tr	7	public void setClient ( ) throws IOException { client = new SocketClient ( ip , this ) ; client . start ( ) ; }
tr	6	public ContextManager ( ) { this . contextGroup = new HashMap < String , Stack < ChatContext >> ( ) ; }
tr	7	public JCalendar ( Date date , Locale locale ) { this ( date , locale , true , true ) ; }
tr	3	public ArrayList < Integer > get_key_len ( ) { return null ; }
tr	9	public static final int bitsInInts ( int numBits ) { if ( numBits < 0 ) throw new IllegalArgumentException ( "numBits < 0" ) ; return ( int ) ( ( numBits + ( Integer . SIZE - 1 ) ) / Integer . SIZE ) ; }
tr	3	public int totalCount ( ) { return items . get ( ) ; }
tr	1	private GroupController ( ) { }
tr	10	@ Override public String getNome ( ) { if ( pessoa == null ) { pessoa = PessoaDao . getPessoaByName ( this . nome ) ; } return pessoa . getNome ( ) ; }
tr	1	public Image ( ) { }
tr	4	public void setDeliverTypeId ( long deliverTypeId ) { this . deliverTypeId = deliverTypeId ; }
tr	2	public int getMode ( ) { return MODE ; }
tr	2	public int getCurUserId ( ) { return curUserId ; }
tr	1	public SlimeGame ( ) { super ( "Slime Game" ) ; }
tr	9	public ArrayList < Conversation > getConversationsUtilisateurAbsent ( String login ) throws RemoteException { return getServeur ( ) . getConversationsUtilisateurAbsent ( login ) ; }
tr	9	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { station = ( String ) in . readObject ( ) ; }
tr	9	public void finish ( int sum ) throws Exception { for ( Summarizer s : sums ) s . finish ( sum ) ; }
tr	2	public int getNum ( ) { return num ; }
tr	2	public long getTotal ( ) { return total ; }
tr	3	@ Override public int getExecutionCount ( ) { return this . executionCount ; }
tr	3	public String getLocation ( ) { return location ; }
tr	7	@ Override public boolean containsSpecie ( Specie specie ) { return species . contains ( specie ) ; }
tr	7	public PLDictionary ( HashMap < String , PLObject > value ) { _value = value ; }
tr	5	public void setSCampaignDurationCode ( String campaignDurationCode ) { sCampaignDurationCode = campaignDurationCode ; }
tr	9	public boolean useTech ( TechType tech , PositionOrUnit target ) { return useTech_native ( pointer , tech , target ) ; }
tr	9	public int x2pos ( int x ) { return ( int ) Math . round ( x * ( this . juego . getMaximaPosicion ( ) . getX ( ) + 1 ) / this . width ) ; }
tr	7	public JDialogTeacher ( java . awt . Frame parent ) { super ( parent ) ; initComponents ( ) ; }
tr	9	public void storeWriteString ( String id , String value ) { jre . storeWriteString ( id , value ) ; }
tr	6	@ Override public void mouseMoved ( MouseEvent e ) { updateWidgets ( e ) ; }
tr	10	@ Override public DirectionVector clone ( ) { try { return ( DirectionVector ) super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( e . toString ( ) ) ; } }
tr	6	public static Singleton1 getInstance ( ) { if ( uniqueInstance == null ) { uniqueInstance = new Singleton1 ( ) ; } return uniqueInstance ; }
tr	3	public String getUrl ( ) { return url ; }
tr	7	public static String readLine ( String prompt ) { printPrompt ( prompt ) ; return readLine ( ) ; }
tr	8	@ Override public int hashCode ( ) { int hash = 0 ; hash += ( idkeytype != null ? idkeytype . hashCode ( ) : 0 ) ; return hash ; }
tr	4	public String getName ( ) { return getClass ( ) . getName ( ) ; }
tr	5	public FilterSequence ( SoundFilter [ ] filters ) { this . filters = filters ; }
tr	1	private Randomizer ( ) { }
tr	2	public long getOsoby_osoba_id ( ) { return osoby_osoba_id ; }
tr	7	public org . omg . CORBA . TypeCode _type ( ) { return SensorHelper . type ( ) ; }
tr	7	public int setData ( byte [ ] newData ) { if ( newData == null ) { return - 1 ; } return setData ( newData , 0 , newData . length ) ; }
tr	3	public String getOsgiName ( ) { return osgiName ; }
tr	2	public boolean getKeepAlive ( ) { return this . keepAlive ; }
tr	2	public float getHrsOrigEst ( ) { return hrsOrigEst ; }
tr	7	public NumberWithLabel ( byte decimalPlaces , String label ) { initValues ( decimalPlaces , label ) ; }
tr	1	public Position ( ) { }
tr	1	public Comentari ( ) { }
tr	5	public Target ( final Catalog catalog ) { this . catalog = catalog ; }
tr	6	static float Y_to_L ( float Y ) { return 116.0f * lab_f_to ( Y ) - 16.0f ; }
tr	1	public int getBestMove ( ) { return 0 ; }
tr	10	@ Test public void shoulReturnFalseWithDifferentTypes ( ) { DayInWeek d1 = DayInWeek . valueOf ( "SUNDAY" ) ; assertFalse ( d1 . equals ( new Object ( ) ) ) ; }
tr	5	public void setFavouriteSince ( XMLGregorianCalendar value ) { this . favouriteSince = value ; }
tr	3	public String getFullName ( ) { return fullName ; }
tr	4	public void chooseImage ( ) { FileChooser . createAndShowGUI ( client ) ; }
tr	4	@ Override public INode getCopy ( ) { return new PlayerCanWinInTwoRounds ( ) ; }
tr	10	public Comparator < Mob > getComparator ( ) { switch ( targetingMode ) { case leatHealth : return LEAST_HEALTH_COMPARATOR ; case nearest : return NEAREST_COMPARATOR ; case random : return RANDOM_COMPARATOR ; default : return null ; } }
tr	8	public static void main ( String [ ] args ) { MyJList gui = new MyJList ( ) ; gui . go ( ) ; }
tr	7	public static TransferFunctionType valueOf ( String code ) { return valueOf ( TransferFunctionType . class , code ) ; }
tr	5	public WorldListener ( TotalPermissions p ) { plugin = p ; }
tr	3	public Dimension getSize ( ) { return this . size ; }
tr	8	public static void fun4 ( ScriptObjectMirror person ) { System . out . println ( "Full Name is: " + person . callMember ( "getFullName" ) ) ; }
tr	8	public PositionBox getSelectedPosition ( ) { for ( PositionBox tmp : positions ) if ( tmp . isSelected ( ) ) return tmp ; return null ; }
tr	8	public Integer execute ( ) throws CommandException { addArg ( propertyName + "=" + value ) ; return executeCommand ( ) . getReturnCode ( ) ; }
tr	8	public RandomDateMignightGenerator ( ReadableInstant start , final ReadablePeriod period ) { this ( constant ( start ) , period ) ; }
tr	3	protected void setup ( ) throws IOException , InterruptedException { }
tr	8	public void reanudarSonidos ( ) { for ( Sonido sonido : sonidos ) { if ( sonido . isAlive ( ) ) sonido . play ( ) ; } }
tr	3	private void init ( ) { createChat ( ) ; createDrawingUDP ( ) ; }
tr	7	@ Override public String toString ( ) { return String . format ( "[%02d] %s" , getIxPerson ( ) , getsFullName ( ) ) ; }
tr	8	@ Override public String toPrint ( ) { return "<DecVarNode>" + "<VarName>" + varName + "</VarName><VarType>" + varType . toPrint ( ) + "</VarType><VarValue>" + value . toPrint ( ) + "</VarValue>" + "</DecVarNode>" ; }
tr	2	protected void start ( ) { start ( null ) ; }
tr	3	public Country getDefendingCountry ( ) { return defendingCountry ; }
tr	2	public int getResult ( ) { return result ; }
tr	5	public void setUsername ( String value ) { this . username = value ; }
tr	9	public int isUnique ( ) { LinkedList < Cell > emptyCells = getEmpties ( ) ; int solutions = uniqueRecursive ( emptyCells , 0 ) ; return solutions ; }
tr	7	public Map < String , Object > getRawMetadata ( ) { return Collections . unmodifiableMap ( metadata ) ; }
tr	2	public long getTestingTime ( ) { return testingTime ; }
tr	3	public Date getDataAprovacao ( ) { return dataAprovacao ; }
tr	2	public boolean isInErrorState ( ) { return errorState ; }
tr	2	public int getPort ( ) { return port ; }
tr	8	public Order ( Customer customer ) { this . startTime = new Date ( ) ; this . customerId = customer . getId ( ) ; }
tr	4	public void setC ( float C ) { this . C = C ; }
tr	1	public BarData ( ) { }
tr	10	public static String getSwitchStatusAsString ( SwitchStatus switchStatus ) { if ( switchStatus == SwitchStatus . ON ) { return "On" ; } else if ( switchStatus == SwitchStatus . OFF ) { return "Off" ; } return "" ; }
tr	4	public void setMaxDesolvApolar ( float value ) { this . maxDesolvApolar = value ; }
tr	5	Partido ( Manager [ ] managers ) { this . managers = managers ; }
tr	7	private void notifyObserver ( ) { if ( observer != null ) { observer . setText ( Integer . toString ( viewSize ) ) ; } }
tr	6	public String getInitText ( ) { if ( options == null || options . length < 1 ) return null ; return options [ 1 ] ; }
tr	9	public B1MicroBlock ( B1MicroBlock micro_block , int current_class ) { super ( micro_block , current_class ) ; this . array = micro_block . array ; }
tr	8	private void jBCadastrarChamadoActionPerformed ( java . awt . event . ActionEvent evt ) { new TelaGestaoChamado ( this , true ) . setVisible ( true ) ; }
tr	2	public boolean isSelected ( ) { return selected ; }
tr	9	@ Override @ Transactional ( propagation = Propagation . SUPPORTS ) public JellyTots find ( String s ) { return null ; }
tr	6	protected void takeDown ( ) { System . out . println ( "Shelf Agent " + getAID ( ) . getName ( ) + " terminating." ) ; }
tr	2	public String toString ( ) { return "Case coloree" ; }
tr	1	public ASTNode ( ) { }
tr	9	@ Override public void exec ( Abonent abonent ) { if ( abonent instanceof AccountService ) { exec ( ( AccountService ) abonent ) ; } }
tr	9	public Watcher ( String name , long watch_period_millis ) { this . name_ = name ; this . watch_period_millis_ = watch_period_millis ; this . watcher_thread_ = null ; }
tr	10	@ Override public void handleDealPhaseCompleted ( Hand < Card > bidHand ) { System . out . println ( "Bid Cards:\n" + bidHand . toString ( ) + "\n\n" ) ; }
tr	5	public static boolean isLeapYear ( int y ) { if ( ( y % 4 == 0 && y % 100 != 100 ) || y % 400 == 0 ) return true ; else return false ; }
tr	7	@ Override public void sendQuery ( String query ) { mainFrame . sendQuery ( query ) ; }
tr	10	@ Override public SnakePiece clone ( ) { SnakePiece clone = new SnakePiece ( this . x , this . y , this . type ) ; return clone ; }
tr	5	public void setId ( Integer id ) { this . id = id ; }
tr	6	public void setId ( String id ) throws Exception { this . id = id ; }
tr	8	public boolean rightClick ( PositionOrUnit target , boolean shiftQueueCommand ) { return rightClick_native ( pointer , target , shiftQueueCommand ) ; }
tr	7	public Key lastKey ( ) { if ( tree == null ) throw new NoSuchElementException ( ) ; else return ( Key ) lastKey ( tree ) ; }
tr	4	public JANNLabException ( final String msg ) { super ( msg ) ; }
tr	5	@ Override public void fileRemoved ( FileRemovedEvent event ) throws InterruptedException { }
tr	8	public void winActions ( ) { if ( recorder != null ) recorder . fillGamePlayMetrics ( ( RandomLevel ) level ) ; marioComponent . win ( ) ; }
tr	2	public void setProgress ( int progress ) { }
va	2	public double getX ( ) { return positionX ; }
va	2	public int getWhatUsesTypeID ( ) { return whatUsesTypeID ; }
va	9	public static void printRankedStats ( String name , int season ) { printRankedStats ( Summoner . getSummonerId ( name ) , season ) ; }
va	7	@ Override public int getLayoutRowPadding ( ) { return Integer . valueOf ( this . jTextField_layout_row_padding . getText ( ) . replace ( "px" , "" ) ) ; }
va	9	public AddObjectCommand ( MapLayer layer , MapObject object ) { this . layer = layer ; this . object = object ; }
va	10	private void jButton1ActionPerformed ( java . awt . event . ActionEvent evt ) { pf . setVisible ( true ) ; pf . setID ( 0 ) ; }
va	10	public BmpWriter ( int pix [ ] , int width , int height ) { this . pix = pix ; this . width = width ; this . height = height ; }
va	8	public void visit ( Token token , Player player ) { player . visited ( token ) ; }
va	6	public boolean hasArgument ( int position ) { return position >= 0 && arguments . size ( ) > position ; }
va	10	@ Before public void initialize ( ) { Injector injector = Guice . createInjector ( ) ; ai = injector . getInstance ( TelesinaAI . class ) ; }
va	9	@ Override public void onWeaponFired ( int id , Weapon weapon ) { state . onWeaponFired ( id , weapon ) ; }
va	9	@ Override public int hashCode ( ) { int hash = 7 ; hash = 89 * hash + Objects . hashCode ( this . roomId ) ; return hash ; }
va	8	private void buttonVoltar_MenuFasesActionPerformed ( java . awt . event . ActionEvent evt ) { showPanel ( panelMenuPrincipal ) ; }
va	4	public List < Object > getStack ( ) { return stack ; }
va	1	public DoubleListValueCreator ( ) { super ( true ) ; }
va	8	public double [ ] [ ] copyVertices ( double src [ ] [ ] ) { return copyVertices ( src , new double [ src . length ] [ src [ 0 ] . length ] ) ; }
va	9	public GreaterThan ( Cell source , Cell target , int maxValue ) { super ( source , target , maxValue ) ; }
va	8	public Type [ ] getRunningTypes ( ) { return runningTypes . values ( ) . toArray ( new Type [ runningTypes . size ( ) ] ) ; }
va	1	private Worker ( ) { }
va	7	public BST ( Node < Key , Value > root ) { this . root = root ; }
va	2	public float getZPosition ( ) { return zPosition ; }
va	5	public List < List < CellModel >> getColumnValues ( ) { return columnValues ; }
va	9	public void storeWriteDouble ( String id , double value ) { localstore . put ( id , new double ( value ) ) ; storeWrite ( ) ; }
va	6	public void exibirAlerta ( String mensagem ) { io . imprimirLinha ( "[!] " + mensagem + "\n" ) ; }
va	1	public MsgType ( ) { }
va	3	public AreaConhecimento getAreaConhecimentoCNPq ( ) { return areaConhecimentoCNPq ; }
va	7	@ Override public Map < String , Set < String >> getCategoryTerms ( ) { return this . categoryTerms ; }
va	10	public Buque ( Posicion maxPos , Posicion pos , int direccion ) throws ExceptionNave { super ( maxPos , pos , direccion ) ; }
va	8	private void doApplicationClosing ( final JFrame parent ) { if ( this . applicationStarter != null ) { this . applicationStarter . close ( ) ; } else { System . exit ( 0 ) ; } }
va	6	public NullEnemy ( String name , int level ) { super ( name , level ) ; }
va	6	@ Override public Iterator < String > iterator ( ) { return collect ( root , "" ) ; }
va	9	@ Test public void itExtractsTheHttpVersionFromRequestLine ( ) { request = new HttpRequest ( "GET / HTTP/1.1\r\n\r\n" ) ; assertThat ( request . getHttpVersion ( ) , is ( equalTo ( "HTTP/1.1" ) ) ) ; }
va	1	public Phongban ( ) { }
va	5	public String GenerateLinkID ( ) { return DateUtil . GetTimeString ( ) + getTTenNum ( ) ; }
va	10	static public IconCache blizz18_retinaSupport ( HttpCache hc ) { if ( SystemHelp . isRetina ( ) ) { return new IconCache ( hc , 18 , 2 , "http://media.blizzard.com/wow/icons/18/$.jpg|dir=36" ) ; } else { return blizz18 ( hc ) ; } }
va	7	public int compareTo ( Attribute o ) { return getName ( ) . compareToIgnoreCase ( o . getName ( ) ) ; }
va	1	public boolean isImmutable ( ) { return false ; }
va	4	public Texture ( int id ) { this . id = id ; }
va	7	public boolean set ( String s ) { if ( ! s . matches ( "^\\$[a-z]+[a-zA-Z0-9]*$" ) ) return false ; name = s ; return true ; }
va	4	public void exit ( ) { ( ( Window ) parent ) . exit ( ) ; }
va	1	public Versioninfo ( ) { }
va	2	public float getHandicap ( ) { return getNumber ( ) ; }
va	10	public static void supprimerStation ( Station station ) { StationDAO . deleteStation ( station ) ; ConfigGlobale . stations . remove ( station ) ; }
va	8	@ Override public void close ( ) { System . out . println ( "Closing.." ) ; if ( process != null ) process . destroy ( ) ; }
va	7	public HashCachingMap ( Map < K , V > map ) { this . map = map ; }
va	4	public void setQtiteStock ( int quantite ) { this . qtiteStock = quantite ; }
va	9	public AddGrupo ( java . awt . Frame parent , boolean modal ) { super ( parent , modal ) ; initComponents ( ) ; }
va	3	public boolean blocks ( Entity e ) { return true ; }
va	9	public ActualArgument ( String name , String value ) { this . name = name ; this . value = value ; }
va	7	private static String valueOrUnset ( String value ) { return ( value == null ) ? UNSET : value ; }
va	6	public void addRoom ( Room aRoom ) { pathologicRooms . add ( aRoom ) ; }
va	5	public AbstractBlockedIndexCreator ( ) { blocks = new ArrayList < > ( ) ; reader = new PipedReader ( ) ; }
va	9	@ Override public Iterable < String > requestJSONParameters ( ) { String [ ] params = { "user" } ; return Arrays . asList ( params ) ; }
va	2	public int getITrackingStatsId ( ) { return iTrackingStatsId ; }
va	10	private void stairButtonActionPerformed ( java . awt . event . ActionEvent evt ) { this . cursor = cursorTypes . STAIR ; this . setStatusMessage ( "Cursor selected: stair" ) ; }
va	6	public void setCallback ( MqttCallback mqttCallback ) { this . callback . setCallback ( mqttCallback ) ; }
va	7	@ Id @ GeneratedValue ( strategy = GenerationType . IDENTITY ) public int getId ( ) { return id ; }
va	7	public DocumentVisitor . VisitorInfo getInfo ( int idx ) { return this . infoList . get ( idx ) ; }
va	1	public QuizUtils ( ) { }
va	1	public Builder ( ) { }
va	6	@ BeforeClass public static void setUpBeforeClass ( ) throws Exception { System . out . println ( "before test##############################################################" ) ; }
va	1	public OtpNodeStatus ( ) { }
va	7	@ Test public void testSettingValueToNullPiecePosition ( ) { assertEquals ( "Fail on setting a new value to a null string" , DELIMITER + "NOVA STRING AQUI" , $setpiece ( null , DELIMITER , to , "NOVA STRING AQUI" ) ) ; }
va	3	public DSGrp createDSGrp ( ) { return new DSGrp ( ) ; }
va	7	public URL getCodeBase ( ) { try { return new URL ( "file:" + getCanonicalPath ( "." ) ) ; } catch ( MalformedURLException ex ) { throw new ErrorException ( "Error: Illegal document base URL" ) ; } }
va	3	public FechaCellRender ( ) { df = new SimpleDateFormat ( "dd/MMM/yyyy hh:mm" ) ; }
va	9	public CuentaPlazoFija ( int nc , String n ) { super ( nc , n ) ; interesGenerado = 0 ; fechaFin = fechaInicio ; }
va	8	public static void main ( String args [ ] ) { TestPatternLocator object = new TestPatternLocator ( "http://www.famousquotesandauthors.com/authors/ivern_ball_quotes.html" , "A Politician is a Person" ) ; object . searchForPattern ( ) ; }
va	9	default Selector chain ( Selector next ) { return in -> next . select ( select ( in ) ) ; }
va	2	public double getY ( ) { return yLoc ; }
va	6	public static String getClientURL ( String clientURL ) { return getProperty ( "weibo4j.clientURL" , clientURL ) ; }
va	10	public void testMixedAndOr ( ) { DataQueryFilter stmnt = or ( statement ( "name=alberto" ) , and ( "age=15" , "payed=true" ) ) ; assertEquals ( "(name=alberto OR (age=15 AND payed=true))" , adapter . statementAdapter ( stmnt ) ) ; }
va	10	public Knapsack ( int maxWeight , int [ ] prices , int [ ] weights ) { this . maxWeight = maxWeight ; this . prices = prices ; this . weights = weights ; }
va	1	public FirePiranhaPlant ( ) { }
va	7	public BColor ( int r , int g , int b ) { super ( r , g , b ) ; }
va	3	public EMVGrp getEMVGrp ( ) { return emvGrp ; }
va	7	public TableCreationChangeEvent ( TableCreationChange change , String id ) { super ( change , id ) ; }
va	1	public Freckle ( ) { }
va	2	@ Override public int quit ( ) { return 0 ; }
va	10	public Perfil ( String nombre , ArrayList < Accion > listaAcciones ) { this . nombre = nombre ; this . listaAcciones = listaAcciones ; }
va	2	public String toString ( ) { return "Cone Filter" ; }
va	4	public DelayListener ( int delay ) { setDelay ( delay ) ; }
va	9	public BeanRecursos ( String descripcio , String id ) { this . descripcio = descripcio ; this . id = id ; }
va	3	public String getSitename ( ) { return sitename ; }
va	4	public RmiBankProxy ( ) throws RemoteException { super ( ) ; bank = new MyBank ( ) ; }
va	7	public boolean isStaff ( Player p ) { if ( isAdmin ( p ) || p . hasPermission ( "iNations.staff" ) ) return true ; return false ; }
va	6	public void addModule ( Module m ) { moduleList . add ( m ) ; }
va	3	@ Override public double getKosztyUzyskania ( ) { return kosztyUzyskania ; }
va	3	public static int randInt ( ) { return rand . nextInt ( ) ; }
va	7	@ Override public double turnRight ( double degrees ) { getHeadingVector ( ) . turn ( - degrees ) ; return degrees ; }
va	1	public ReportStatusCommand ( ) { super ( "RW" ) ; }
va	9	public void setProperty ( String propertyname , Object propertyValue ) { auctionMap . put ( propertyname , propertyValue ) ; }
va	6	public static double cos ( double x ) { return COS_TABLE [ ( int ) ( x * COS_FACTOR ) & COS_MASK ] ; }
va	8	private void buttonProgramsActionPerformed ( java . awt . event . ActionEvent evt ) { new CreditProgramForm ( ) . setDefaultComponentsState ( ) ; }
va	8	public void setDownPerc ( float dwnPerc ) { if ( dwnPerc > 1.0f ) downloadPercentage = 1.0f ; else downloadPercentage = dwnPerc ; }
va	1	public GameBoard ( ) { this ( 10 , 8 , 8 ) ; }
va	3	public boolean isDown ( ) { return direction == DOWN ; }
va	3	public JTextArea getLogArea ( ) { return logArea ; }
va	9	@ Override public double output ( double x ) { this . output = ( 1 / ( 1 + Math . exp ( - this . slope * x ) ) ) ; return this . output ; }
va	9	@ Test public void STEEL_attacking_GROUND ( ) { assertEquals ( 1.0 , tc . getWeaknessResistance ( Type . STEEL , Type . GROUND ) , 0.0 ) ; }
va	6	public void setintf_fullticketListener ( InternalFrameListener l ) { this . intf_fullticket . addInternalFrameListener ( l ) ; }
va	6	public void setRollen ( List < Rol > rollen ) { this . rollen = rollen ; }
va	3	public SemanticNode getRightHand ( ) { return rightHandSide ; }
va	6	public MemoryAttribute ( String name ) { super ( name , HttpCodecUtil . DEFAULT_CHARSET , 0 ) ; }
va	4	public void setX ( int x ) { this . x = x ; }
va	8	public static JSONArray toJSONArray ( XMLTokener x ) throws JSONException { return ( JSONArray ) parse ( x , true , null ) ; }
va	3	@ Override public String getChineseName ( ) { return "\u571F\u8C46" ; }
va	7	public Statement addUser ( String paramString ) { this . user . add ( paramString ) ; return this ; }
va	6	public void setReportCampaigns ( Set < ReportCampaign > reportCampaigns ) { this . reportCampaigns = reportCampaigns ; }
va	7	public IntSetter ( int position , int value ) { this . value = value ; this . position = position ; }
va	8	public void writeDelete ( Kml kml ) throws KmlException { kml . println ( "<GroundOverlay" + getIdAndTargetIdFormatted ( kml ) + "></GroundOverlay>" ) ; }
va	9	public Column ( Integer id , String column ) { super ( ) ; this . id = id ; this . column = column ; }
va	6	public void processKey ( String key ) { handler . handleKey ( key ) ; }
va	1	public void postDelete ( ) { }
va	6	public void addUniqueField ( String fieldName ) { addUniqueFields ( new String [ ] { fieldName } ) ; }
va	1	public void update ( ) { }
va	4	@ Override public String toString ( ) { return "Variable: " + name ; }
va	7	@ Override public int getInt ( int offset ) { return col . getInt ( index , offset ) ; }
va	8	@ Test public void shouldMakeLongFromString ( ) { final long actual = longConverter . fromString ( "1234567890" ) ; assertEquals ( 1234567890 , actual . longValue ( ) ) ; }
va	7	@ Override public E get ( int index ) { return getIndex ( index ) . getDato ( ) ; }
va	9	public void readIndex ( ) { indexBuffer . rewind ( ) ; index = new IndexForHeaderIndexFile ( indexSize , keySize , chunkSize , indexBuffer ) ; }
va	1	public UserNotifyPO ( ) { }
va	8	public void actionPerformed ( ActionEvent e ) { set ( ) ; populateProduct ( ) ; updateNotice ( ) ; manage_pr_view . dispose ( ) ; }
va	7	private void init2 ( ) { setLocationRelativeTo ( null ) ; this . textValue_int . setDocument ( new IntegerDocument ( ) ) ; labelMensagem . setText ( "" ) ; }
va	6	public T rrp ( double rrp ) { this . rrp = rrp ; return self ( ) ; }
va	1	public PacketRegister ( ) { }
va	9	public BBox getBounds ( ) { return new BBox ( x0 , x1 , y0 , y1 , z0 , z1 ) ; }
va	10	@ Override public JSONObject getValueForOutput ( ) { try { return this . user . toJson ( ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; return new JSONObject ( ) ; } }
va	10	public void getAttdRecord ( ClassInfo currentCourse , List < AttdCnt > acList ) { dataAgent . getDataAttdReport ( currentCourse , acList ) ; }
va	1	public DBWord ( ) { }
va	2	@ Override public void inputEnded ( ) { }
va	2	public double getY ( ) { return y ; }
va	10	public Visible ( JSONObject json ) throws JSONException { this . type = json . getInt ( "type" ) ; this . list_id = json . getInt ( "list_id" ) ; }
va	10	public boolean ContainsCardOfAnySuit ( String value ) { for ( PlayingCard playingCard : playingCards ) { if ( playingCard . Value . compareTo ( value ) == 0 ) return true ; } return false ; }
va	1	private AntiMain ( ) { }
va	2	public double get_numberB ( ) { return _numberB ; }
va	5	@ Override public void run ( ) { int number = Integer . parseInt ( "INT" ) ; }
va	9	public void close ( ) { synchronized ( this ) { player . close ( ) ; while ( ! closed ) { try { wait ( 100 ) ; } catch ( InterruptedException ie ) { } } } player . removeControllerListener ( this ) ; }
va	2	public boolean isAdmin ( ) { return isAdmin ; }
va	4	public void actualiserListes ( ) throws RemoteException { getClientRmiImpl ( ) . actualiserListes ( ) ; }
va	4	public SimplePlayer ( String name ) { super ( name ) ; }
va	5	public void setProjection ( MapProjection value ) { this . projection = value ; }
va	4	private void init ( ) { m_tblComps . clear ( ) ; m_size = 0 ; }
va	6	public void addCreature ( ICreature creature ) { actionables . add ( creature ) ; }
va	7	public void updateButton ( boolean show ) { removeAll ( ) ; if ( show ) { add ( new SwapButton ( ) ) ; } repaint ( ) ; }
va	6	public Connection getConnection ( ) throws DataConnectionException { if ( connection == null ) { throw new DataConnectionException ( "Db connection is dead!" ) ; } return connection ; }
va	2	public int getLength ( ) { return _length ; }
va	3	public String getS_name ( ) { return s_name ; }
va	5	public void rotate ( double theta ) { rotation += theta ; repaint ( ) ; }
va	5	public List < E > getModifiableCollection ( ) { return new ArrayList < > ( ls ) ; }
va	4	@ Override public String toString ( ) { return roomName ; }
va	10	Packet46ServerState ( DataInputStream in , PassthroughConnection ptc , KillableThread thread ) { super ( in , ptc , thread ) ; }
va	5	public void setRavageDetector ( RavagePatternDetector ravageDetector ) { _ravageDetector = ravageDetector ; }
va	8	@ Override public void rotate ( float theta ) { for ( T each : this ) { each . rotate ( theta ) ; } }
va	6	public GCodeMemSave ( byte [ ] line , GCDEF gc ) { super ( line , gc ) ; }
va	8	@ Override public int compareTo ( StudyProgram other ) { return name . compareToIgnoreCase ( other . name ) ; }
va	2	public double value ( ) { return _value ; }
va	9	private void btnNovoListagemActionPerformed ( java . awt . event . ActionEvent evt ) { limparCamposFormulario ( ) ; tabs . setSelectedIndex ( 1 ) ; }
va	6	public static synchronized DbConnection getInstance ( ) { if ( instance == null ) { instance = new DbConnection ( ) ; } return instance ; }
va	10	@ Override public boolean canExecute ( final CommandSender sender , final String [ ] split ) { return split [ 0 ] . contains ( "irc" ) && split [ 1 ] . equalsIgnoreCase ( "ban" ) ; }
va	9	public FileGroup ( File [ ] f , boolean create ) { files = f ; createIfNotExist = create ; head = - 1 ; }
va	1	private ClientHandlerRegister ( ) { }
va	4	public SnakePiece getTail ( ) { return snakePieces . getLast ( ) ; }
va	4	public static void main ( String [ ] args ) { new SetupWizardFrame ( ) ; }
va	7	@ Override public void updateBinaryStream ( String columnLabel , InputStream x ) throws SQLException { }
va	9	protected final ResourceLoader getResources ( ) { if ( resourceLoader == null ) { resourceLoader = ApplicationProvider . getInstance ( ) . getResources ( application ) ; } return resourceLoader ; }
va	1	public double cost ( ) { return 699.99 ; }
va	2	public int getOrderID ( ) { return orderID ; }
va	3	public Journal build ( ) { return new Journal ( this ) ; }
va	3	@ AfterClass public static void tearDownClass ( ) throws Exception { }
va	3	public void addTreeModelListener ( TreeModelListener l ) { }
va	9	public RegisterCommands ( final AllAdmin _plugin , final CommandHandler ch ) { plugin = _plugin ; loadCommands ( ch ) ; }
va	2	public float GetActualFPS ( ) { return actualFPS ; }
va	1	public AddChoiceController ( ) { }
va	1	public URIRefMatcher ( ) { super ( "<" , ">" ) ; }
va	5	@ Override public void handleCustomerQueries ( ) { System . out . println ( "Handle job related queries" ) ; }
va	7	public static ImageManager getInstance ( ) { if ( global == null ) { global = new ImageManager ( RESOURCE_PATH ) ; } return global ; }
va	5	public Collector createCollector ( boolean calcSizeForEachClass ) { return new Collector ( this , calcSizeForEachClass ) ; }
va	9	public Select groupBy ( String expression ) { if ( ! validString ( expression , "Skipping null or empty GROUP BY expression." ) ) return this ; groupBy . add ( expression ) ; return this ; }
va	1	public SelectCountByYmdFromTurn ( ) { }
va	6	@ Deprecated public static void setInstance ( LockPackageHandler newInstance ) { instance = newInstance ; }
va	6	public boolean contains ( String item ) { return mapItems . containsKey ( item ) ; }
va	5	private ServiceManager ( ) { services_ = new HashMap < String , ServiceDefinition > ( ) ; }
va	3	public String getClientID ( ) { return clientID ; }
va	6	public java . util . List < String > getPosTagsList ( ) { return posTags_ ; }
va	1	public DeleteStudent ( ) { super ( ) ; }
va	7	private static String cleanCopyright ( String document ) { document = "<p>" + document + "</p>" ; return document ; }
va	9	public int write ( DataUnit object ) throws IOException { return mp . write ( object , p , byteChannel ) ; }
va	7	public Room south ( ) throws RoomNotAccessibleException { return LevelManager . getInstance ( ) . getCurrentLevel ( ) . getRoom ( "hall" ) ; }
va	10	public void checkArgs ( ArrayList < String > args ) throws InvalidFunctionUseException { if ( args . size ( ) != numOfArgs ) throw new InvalidFunctionUseException ( name ) ; }
va	3	public String getEmailAddress ( ) { return emailAddress ; }
va	6	public void setSendListener ( ActionListener a ) { this . b5 . addActionListener ( a ) ; }
va	1	public double getProgress ( ) { return 0 ; }
va	5	public void setCompanion ( Object companion ) { _companion = companion ; }
va	7	public ChartConfiguration < T > setSeriesDefaults ( SeriesDefaults seriesDefaults ) { this . seriesDefaults = seriesDefaults ; return this ; }
va	7	public void setCommissionRate ( double rate ) { if ( rate > 0.0 && rate < 1.0 ) commissionRate = rate ; else throw new IllegalArgumentException ( "Commission rate must be > 0.0 and < 1.0" ) ; }
va	9	public final CC gapTop ( String boundsSize ) { ver . setGapBefore ( ConstraintParser . parseBoundSize ( boundsSize , true , false ) ) ; return this ; }
va	10	@ Before public void initialize ( ) { Injector injector = Guice . createInjector ( ) ; crawler = injector . getInstance ( StrategyCrawler . class ) ; }
va	2	public String getGrammarFileName ( ) { return "C:\\Users\\pc\\Desktop\\IPL\\ew\\JPocl\\JPoclTypedAST.g" ; }
va	10	public void setProperty ( String name , Object value ) throws XmlPullParserException { pp . setProperty ( name , value ) ; }
va	6	public static void main ( String [ ] arguments ) { Playback pb = new Playback ( ) ; }
va	8	public boolean isCollision ( Loc r ) { return isCollision ( r . x , r . y ) ; }
va	5	public void setGroupObjectClass ( String value ) { this . groupObjectClass = value ; }
va	8	private int lerp ( int t , int a , int b ) { return a + ( t * ( b - a ) >> 8 ) ; }
va	2	public SimulationParamsBuilder ( ) { reset ( ) ; }
va	3	public void collideHorizontal ( ) { setVelocityX ( - getVelocityX ( ) ) ; }
va	2	public boolean crashed ( ) { return crashed ; }
va	9	public int getLineCenter ( final String txt , final Font f ) { return ( int ) f . getStringBounds ( txt , this ) . getCenterX ( ) ; }
va	10	public void addAPListener ( APListener listener ) { if ( apListeners == null ) { apListeners = new ArrayList < APListener > ( ) ; } apListeners . add ( listener ) ; }
va	8	public void msgRecv ( String o1 , String o2 ) { AppendMsg ( o1 , o2 ) ; }
va	9	public String getCurrent ( ) { String result = current . toString ( ) ; current = new StringBuffer ( ) ; return result ; }
va	5	public void setAddress2 ( String address2 ) { this . address2 = address2 ; }
va	10	public int numTrees ( int n , int m , int result ) { if ( m == 0 ) { return 0 ; } if ( m == 1 ) { return 1 ; } if ( m == 2 ) { return 2 ; } while ( m > 2 ) { -- m ; } return result ; }
va	5	public void setContentType ( String value ) { this . contentType = value ; }
va	9	@ Test public void addsEmptyList ( ) { int result = BasicStreamOperations_1 . addUp ( Stream . empty ( ) ) ; assertEquals ( 0 , result ) ; }
va	5	public void setWeather_lat ( String weather_lat ) { this . weather_lat = weather_lat ; }
va	3	public synchronized void discardPage ( PageId pid ) { }
va	3	public Unit getUnit ( ) { return unit ; }
va	4	@ Override protected String [ ] tables ( ) { return new String [ ] { "platform" } ; }
va	6	public AST decoration ( AST t ) { return t . getDecoration ( ) ; }
va	4	public Integer getMaxY ( ) { return dProps . getYSize ( ) ; }
va	4	public void setMaxSpeed ( double maxSpeed ) { this . maxSpeed = maxSpeed ; }
va	9	@ Test public void GROUND_attacking_GROUND ( ) { assertEquals ( 1.0 , tc . getWeaknessResistance ( Type . GROUND , Type . GROUND ) , 0.0 ) ; }
va	10	@ Override public T evaluate ( T x , T y , T z ) { return this . value ; }
va	3	@ After public void tearDown ( ) throws Exception { }
va	1	public InfoFarmacia ( ) { super ( ) ; }
va	6	@ Override public void setHpEv ( int hpEv ) { this . hpEv = hpEv ; reCalcStats ( ) ; }
va	8	public DocumentAligner ( String file ) throws IOException { reader = new BufferedReader ( new FileReader ( file ) ) ; }
va	10	@ Test public void shouldEvaluateSingleDigitInteger ( ) { for ( int i = 0 ; i < 10 ; i ++ ) { assertEquals ( i , calculator . evaluate ( "" + i ) ) ; } }
va	10	private void printFormatHelp ( ) { System . err . println ( "JPocl usage: jpocl.jar -i InputFile [-o OutputDirectory] [-os OS]" ) ; System . err . println ( "Default output directory is ./output" ) ; System . err . println ( "Default operative system is Linux(L)" ) ; }
va	8	@ Override public String toString ( ) { return this . move . toString ( ) + ( this . executed ? + : - ) ; }
va	5	public void setNextUpdateTime ( Date nextUpdateTime ) { this . nextUpdateTime = nextUpdateTime ; }
va	1	public MissingLDAPResourceException ( ) { super ( ) ; }
va	1	public MainFrame ( ) { }
va	6	@ Override public void setOfficeObjectStatusId ( Integer status ) { this . officeObjectStatusId = status ; }
va	3	public boolean isEmpty ( ) { return selectColumns . isEmpty ( ) ; }
va	3	public String getAccountId ( ) { return accountId ; }
va	5	public DialogConfiguracionSistema ( JFrame parent ) { super ( parent , true ) ; initComponents ( ) ; }
va	5	public void setNo_beli ( String no_beli ) { this . no_beli = no_beli ; }
va	5	public void setStatus ( ResponseStatus status ) { this . status = status ; }
va	3	public String getLeverandoer ( ) { return leverandoer ; }
va	8	public void setCorrectAnswer ( int i ) { if ( i >= this . answers . size ( ) && i < 0 ) return ; this . correctAnswer = i ; }
va	1	public Person ( ) { }
va	2	public final int getQuantity ( ) { return quantity ; }
va	8	public Station ( Point pos ) { this . pos = pos ; this . color = Color . BLACK ; }
va	5	public void setGrantClass ( class < ? extends OAuth2Grant > grantClass ) { this . grantClass = grantClass ; }
va	3	public String getTexto ( ) { return texto ; }
va	6	public Optional < OiMode > getOiMode ( ) { return OiMode . getOiMode ( getValue ( ) ) ; }
va	7	@ Test public void testUpdateState ( ) { GameState state = new GameState ( ) ; state . update ( ) ; }
va	7	public void setEventdate ( java . util . Date eventdate ) { this . eventdate = eventdate ; }
va	6	boolean validMonth ( int month ) { if ( this . within ( 1 , month , 12 ) ) return true ; else throw new IllegalArgumentException ( MSG_INVALID_MONTH_IN_DATE ) ; }
va	1	public Ford ( ) { super ( ) ; }
va	5	public Reader getCharacterStream ( int columnIndex ) throws SQLException { throw new UnsupportedOperationException ( "Not supported yet." ) ; }
va	3	public Location [ ] getAjacent ( ) { return ajacent ; }
va	7	public SortedMap < Integer , String > getColumnNames ( ) { return Collections . unmodifiableSortedMap ( header ) ; }
va	10	@ Override public int compareTo ( ScoredDocument o ) { if ( this . score == o . score ) { return 0 ; } return ( this . score > o . score ) ? 1 : - 1 ; }
va	8	public ServerArch ( ) { _imp = getImplementation ( ) ; if ( _imp != null ) { _imp . setArch ( this ) ; } else { System . exit ( 1 ) ; } }
va	10	public boolean equals ( Object obj ) { if ( obj instanceof RowSet ) { return ( ( RowSet ) obj ) . getRows ( ) . equals ( getRows ( ) ) ; } return false ; }
va	9	@ Override public List < Parser > getDependencies ( ) { return Arrays . asList ( new Parser [ ] { parser , filterMatcher } ) ; }
va	8	protected void installSubmodules ( ) { for ( ModuleProvider binding : bindings . values ( ) ) { install ( binding . getModule ( ) ) ; } }
va	10	public ElementField fieldAt ( PdVector pos ) { int i = elementAt ( pos ) ; if ( i == - 1 ) { return null ; } return m_interpolated [ i ] ; }
va	5	public void Sanatize ( ) { mMessage = StringSanitizer . Sanitize ( mMessage ) ; }
va	4	public void setProbDist ( double probDist ) { this . probDist = probDist ; }
va	6	public Keyboard ( final Key ... keys ) { this . keys = keys . clone ( ) ; }
va	3	public TemperatureType getTemperature ( ) { return temperature ; }
va	4	public Stack < Player > getUndoStack ( ) { return undoStack ; }
va	9	protected void definirPotion ( ) { raz ( ) ; panel_case . removeAll ( ) ; definirObjet ( "potion" ) ; InterfaceEditeur . tab [ this . x ] [ this . y ] = this ; }
va	4	protected static String getDefaultName ( ) { return "Actor_" + COUNTER . incrementAndGet ( ) ; }
va	7	private boolean exclusaoConfirmada ( ) { return JOptionPane . showConfirmDialog ( this , "Deseja mesmo excluir?" , "" , JOptionPane . YES_NO_OPTION , JOptionPane . QUESTION_MESSAGE ) == 0 ; }
va	5	public void setId ( String value ) { this . id = value ; }
va	3	public boolean isConnected ( ) { return hasOAuth ( ) && hasAccessToken ( ) ; }
va	10	public static boolean areAnyThreadsAlive ( ThreadGroup tg ) { for ( Thread t : getThreads ( tg ) ) { switch ( t . getState ( ) ) { case new : case TERMINATED : break ; default : return true ; } } return false ; }
va	2	@ Override public void process ( ) { }
va	5	public addToTextWindow ( String text ) { textToAdd = text ; }
va	3	@ Override public int getSize ( ) { return getWordSize ( ) ; }
va	4	public void setBytes ( byte [ ] bytes ) { this . bytes = bytes ; }
va	10	private void gobble ( Iterator iter ) { if ( eatTheRest ) { while ( iter . hasNext ( ) ) { tokens . add ( iter . next ( ) ) ; } } }
va	4	public void set_active ( boolean active ) { _active = active ; }
va	10	private static final String tileErrorMsg ( final int line , final short tile ) { return errorMsg ( line , String . format ( BLOCK_ERROR , tile ) ) ; }
va	3	public String getName ( ) { return this . name ; }
va	1	protected FillShellReply ( ) { }
va	6	public static ReservarHabitacioController getInstance ( ) { if ( singletonObject == null ) { singletonObject = new ReservarHabitacioController ( ) ; } return singletonObject ; }
va	5	public boolean isHP ( ) { return this . type == Item . Type . HP ; }
va	1	protected boolean isFinished ( ) { return false ; }
va	10	private void removeUser ( User u ) { users . remove ( u . getNick ( ) ) ; u . getChannels ( ) . clear ( ) ; }
va	9	public long getFactorial ( long currNum , long sum ) { if ( currNum == 0 ) { return sum ; } return getFactorial ( currNum - 1 , sum += currNum ) ; }
va	10	private void makeListModel ( ) { if ( dlm == null ) { dlm = new DefaultListModel ( ) ; for ( DATATYPE l : objects ) { dlm . addElement ( l ) ; } } }
va	8	public List < Status > getMentions ( ) throws WeiboException { return Status . constructStatuses ( get ( getBaseURL ( ) + "statuses/mentions.json" , null , true ) ) ; }
va	1	public ScoreViewQuestionListModel ( ) { }
va	5	public oGraphType ( ) { setName ( "Typ wykresu" , "Graph type" ) ; addOpt ( "ciag\u0142y" , "continuous" ) ; addOpt ( "punktowy" , "punctual" ) ; addAsk ( ) ; }
va	9	@ Override public void exitRule ( ParseTreeListener listener ) { if ( listener instanceof DecafParserListener ) ( ( DecafParserListener ) listener ) . exitDecremento ( this ) ; }
va	10	@ JsonAnySetter public void setAdditionalProperty ( String name , Object value ) { this . additionalProperties . put ( name , value ) ; }
va	7	public MsgTypeDaoException ( String message , Throwable cause ) { super ( message , cause ) ; }
va	2	public int getRow ( ) { return row ; }
va	10	@ Override public List < Book > findBooks ( BookSearchCriteria bookSearchCriteria ) { assert . notNull ( bookSearchCriteria , "Search Criteria are required!" ) ; return new ArrayList < Book > ( ) ; }
va	8	public DefaultReasoner ( WorldSet myWorld , RuleSet myRules ) { _DefaultReasoner ( myWorld , myRules ) ; }
va	2	public boolean isEmpty ( ) { return top == - 1 ; }
va	8	synchronized protected void close0 ( ) throws Exception { super . close0 ( ) ; open = false ; dispatcher . removeChannel ( this ) ; nioChannel . close ( ) ; return ; }
va	5	public void setAsignatura ( String asignatura ) { this . asignatura = asignatura ; }
va	3	public String getUserid ( ) { return userid ; }
va	7	public ToolButton ( ImageIcon ico , Tool t ) { this ( ico , null , t ) ; }
va	9	public JSONObject put ( String key , boolean value ) throws JSONException { put ( key , value ? boolean . true : boolean . false ) ; return this ; }
va	1	public MostBasicResponse ( ) { super ( null ) ; }
va	2	public Adapter getAdapter ( ) { return null ; }
va	4	AnimalType ( int id ) { this . id = id ; }
va	5	public void setUserDictionary ( SpellDictionary dictionary ) { userdictionary = dictionary ; }
va	10	public static Vector3 add ( Vector3 v1 , Vector3 v2 ) { return v1 . clone ( ) . add ( v2 ) ; }
va	2	public double getY ( ) { return y ; }
va	9	public static void main ( String [ ] args ) { GameLoader testOthelloLoading = new GameLoader ( "saves\\othellosaves\\testOthello.xml" ) ; GameLoader testConnectFourLoading = new GameLoader ( "saves\\connect4saves\\testConnect4.xml" ) ; }
va	8	public AbstractRanker ( Indexer indexer ) { this . indexer = indexer ; this . corpus = indexer . corpus ; }
va	2	public int getWidth ( ) { return width ; }
va	10	protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { this . doPost ( request , response ) ; }
va	4	public ConcreteCommand ( Receiver receiver ) { super ( receiver ) ; }
va	10	private void loadAction ( File file ) { LoadWorker worker = new LoadWorker ( MainFrame . this , file ) ; worker . execute ( ) ; }
va	5	public void setFechafinprevista ( Date fechafinprevista ) { this . fechafinprevista = fechafinprevista ; }
va	1	public float getWidth ( ) { return 10 ; }
va	3	public void update ( ) { fireContentsChanged ( this , 0 , _alive - 1 ) ; }
va	7	public void setParameters ( HashMap < String , String > parameters ) { this . parameters = parameters ; }
va	5	@ JsonProperty ( "WorkingAreaMultiSlotLifeTime" ) public void setWorkingAreaMultiSlotLifeTime ( long WorkingAreaMultiSlotLifeTime ) { this . WorkingAreaMultiSlotLifeTime = WorkingAreaMultiSlotLifeTime ; }
va	6	public void remove ( E e ) { bs . delete ( e ) ; }
va	5	public void setPass ( String pass ) { this . pass = pass ; }
va	6	public void setTriggers ( ArrayList < Trigger > triggers ) { this . triggers = triggers ; }
va	7	@ Override public void notifyObservers ( String event ) { this . observer . update ( event ) ; }
va	1	public PageLayout ( ) { }
va	5	public void setRoleName ( String roleName ) { this . roleName = roleName ; }
va	4	public void setCenterZ ( float value ) { this . centerZ = value ; }
va	9	public boolean updateReadState ( int person_id , long cvs_id , boolean state ) { return dao_person_cvs . updateState ( person_id , cvs_id , state ) ; }
va	9	@ Override protected Produto criaEntidadeVazia ( ) { Produto produto = new Produto ( ) ; setEntidade ( produto ) ; return produto ; }
va	7	@ SuppressWarnings ( "unchecked" ) public MaxHeapImpl ( ) { heap = ( T [ ] ) new Comparable [ INITIAL_SIZE ] ; size = 0 ; }
va	1	ProfesorAdModAbsente ( ) { }
va	6	public String [ ] propertyNames ( ) { return this . table . keySet ( ) . toArray ( new String [ 0 ] ) ; }
va	2	public int getNumber ( ) { return number ; }
va	9	@ Test ( expected = InvalidActionException . class ) public void testPlayerUseItemEmptyInventory ( ) throws InvalidActionException { new UseItemAction ( ) . doAction ( playerEmptyInventory , gridEmptyInventory ) ; }
va	5	public void setOrganism ( Organism organism ) { this . organism = organism ; }
va	8	public CVector2D ( double X , double Y ) { this . X = X ; this . Y = Y ; PolarRecalculateRequired = true ; }
va	10	@ Override public SumOperator getInstance ( AbstractMutableFormula left , AbstractMutableFormula right ) { return new SumOperator ( left , right ) ; }
va	10	@ Override public boolean hasMineral ( Mineral mineral ) { for ( OreMineralData oreMineral : minerals ) { if ( oreMineral . getMineral ( ) == mineral ) { return true ; } } return false ; }
va	5	@ Override public String toString ( ) { return "(" + alternation . toString ( ) + ")" ; }
va	9	public void writeExternal ( ObjectOutput out ) throws IOException { if ( getClass ( ) == CC . class ) LayoutUtil . writeAsXML ( out , this ) ; }
va	4	public void seteBookAvailable ( boolean eBookAvailable ) { this . eBookAvailable = eBookAvailable ; }
va	9	int moveX ( int x , long time ) { return ( int ) ( x + ( time * range * direction . x ) / this . time ) ; }
va	8	@ Override public void mouseMoved ( MouseEvent e ) { mapPanel . mousePoint = e . getPoint ( ) ; }
va	7	public boolean isLastReading ( Date d ) { return readings . lastKey ( ) . equals ( d ) ; }
va	10	@ Override public boolean supprimerFourmi ( ) { if ( this . getListeFourmis ( ) . isEmpty ( ) ) { return false ; } else { int taille = this . getListeFourmis ( ) . size ( ) - 1 ; this . getListeFourmis ( ) . remove ( taille ) ; } return true ; }
va	9	@ Test public void ELECTRIC_attacking_WATER ( ) { assertEquals ( 2.0 , tc . getWeaknessResistance ( Type . ELECTRIC , Type . WATER ) , 0.0 ) ; }
va	5	public void setValue ( float value ) { data . setValue ( value ) ; }
va	5	public void changeFileName ( String name ) { this . name = name ; }
va	2	public int getNumberOfGuests ( ) { return numberOfGuests ; }
va	4	public String toString ( ) { return toString_native ( pointer ) ; }
va	9	public Move ( Country attacker , Country defender ) { this . attackingCountry = attacker ; this . defendingCountry = defender ; }
va	4	public Newton ( double errorBound ) { eps = errorBound ; }
va	10	public String setParam ( ParameterNames paramName , String paramValue ) { return params . put ( paramName , paramValue ) ; }
va	1	public Tablet ( ) { }
va	8	public void setSequenceId ( int sequence_Id ) { this . sequence_Id = sequence_Id ; TypeConvert . int2byte ( sequence_Id , buf , 8 ) ; }
va	6	public void add ( TransformationSequence tf ) { transforms . add ( tf ) ; }
va	7	@ Override public String toString ( ) { return pos [ 0 ] . toString ( ) + " " + pos [ 1 ] . toString ( ) ; }
va	2	public int getEnCount ( ) { return enCount ; }
va	2	public int getIId ( ) { return iId ; }
va	7	@ Override public int read ( ) throws IOException { if ( ! byteBuffer . hasRemaining ( ) ) { return - 1 ; } return byteBuffer . get ( ) ; }
va	1	public ObjectFactory ( ) { }
va	9	public JSONArray put ( int index , int value ) throws JSONException { put ( index , new Integer ( value ) ) ; return this ; }
va	8	@ Override public void execute ( int arg ) throws DataAccessException { super . execute ( memory . getData ( arg ) ) ; }
va	4	public void setStudentId ( long value ) { this . studentId = value ; }
va	3	public String getCustomerAddress3 ( ) { return customerAddress3 ; }
va	4	public MessageConsole ( JTextComponent textComponent ) { this ( textComponent , true ) ; }
va	7	@ Override public void removeMouseModeListener ( MouseModeListener listener ) { listeners . remove ( listener ) ; }
va	4	public Object getNextPanelDescriptor ( ) { return Process_EFAST_Analysis_Descriptor . IDENTIFIER ; }
va	3	public String getId ( ) { return id ; }
va	3	protected void end ( ) { driveTrain . drive ( 0 , 0 ) ; }
va	7	public GenreSearch ( Main main ) { initComponents ( ) ; this . main = main ; this . setVisible ( false ) ; }
va	4	public static double atan ( double x ) { return fast_atan ( x ) ; }
va	10	private boolean andouDuasCasas ( Posicao origem , Posicao destino ) { return this . medeDeslocamentoPeca ( origem . getLinha ( ) , destino . getLinha ( ) ) == 2 ; }
va	5	public Hashtable < Integer , Person > getDictionaryOfCharacters ( ) { return settlers ; }
va	10	@ Override public void undo ( ) { for ( int i = 0 ; i < commands . length ; i ++ ) { commands [ i ] . undo ( ) ; } }
va	4	@ Override public String toString ( ) { return getNaam ( ) ; }
va	8	public SimpleVar ( int p , Symbol n ) { pos = p ; name = n ; }
va	2	public float [ ] getInverseInertiaTensor ( ) { return inverseInertiaTensor ; }
va	5	public void setPassword ( String password ) { this . password = password ; }
va	7	public ServersGUI ( ConectadoGUI c ) { initComponents ( ) ; conectado = c ; centreWindow ( this ) ; }
va	4	public ExtIllegalArgumentException ( String msg ) { this ( null , msg , null ) ; }
va	8	private void cbxSemCNPJMouseExited ( java . awt . event . MouseEvent evt ) { lblLegenda . setText ( null ) ; }
va	10	public void addUser ( User user ) { users . add ( user ) ; Collections . sort ( users ) ; markUsersDirty ( ) ; }
va	10	@ Test ( expected = IdentifierNotFoundException . class ) public void testGetBookingIdNotFound ( ) throws DataBaseReadWriteException , IdentifierNotFoundException , InvalidIdentifierException { db . getBooking ( new Identifier ( "test" ) ) ; }
va	6	@ Override public void initialize ( final IWorkbenchConfigurer configurer ) { configurer . setSaveAndRestore ( true ) ; }
va	6	public LegendRenderer setMarginTop ( String marginTop ) { this . marginTop = marginTop ; return this ; }
va	10	@ Override public void typeMapChanged ( boolean is3dMap ) { if ( is3dMap ) { cardLayout . show ( this , listActionCommand [ 1 ] ) ; } else { cardLayout . show ( this , listActionCommand [ 0 ] ) ; } }
va	2	private void OP_SEC ( ) { setCFlag ( true ) ; }
va	10	public DoubleFraction ( DoubleFraction fraction ) { setNumerator ( fraction . getNumerator ( ) ) ; setDenominator ( fraction . getDenominator ( ) ) ; Normalize ( ) ; }
va	3	public String getPartnerName ( ) { return partnerName ; }
va	2	@ Override public void defaultTick ( ) { }
va	7	public void setSpeed ( double xspeed , double yspeed ) { this . xspeed = xspeed ; this . yspeed = yspeed ; }
va	8	public static HashMap < Object , int [ ] > getGridPositions ( Object parentContainer ) { return Grid . getGridPositions ( parentContainer ) ; }
va	2	public boolean getIsPropose ( ) { return this . isPropose ; }
va	10	private Predicate < MessageExecutor < C > . MessageContext > filterMessageFactory ( String type , String attr ) { return new MessageFilter ( ) ; }
va	5	public Door ( int x , int y ) { super ( x , y ) ; }
va	6	public void look ( String lookingDirection ) { player . setLookingDirection ( lookingDirection ) ; }
va	8	public Tuple ( String s , int k ) { term = s ; key = k ; }
va	8	public Point t ( Point p ) { if ( isEnabled ( ) ) return p . getTransposed ( ) ; return p ; }
va	10	@ Override public void write ( int b ) throws IOException { leftStream . write ( b ) ; rightStream . write ( b ) ; }
va	1	public boolean isRetryable ( ) { return true ; }
va	7	public boolean iniciarServicosLeituraEscrita ( ) { try { this . sLeitura = new ServicoLeitura ( ) ; this . sEscrita = new ServicoEscrita ( ) ; return true ; } catch ( IOException ex ) { return false ; } }
va	6	public String toString ( ) { return this . mode == d ? this . writer . toString ( ) : null ; }
va	10	Stat ( String tag , String name ) { this . tag = tag ; this . name = name ; this . value = 0 ; }
va	2	SoftTarget ( ) { this . name = "soft target" ; }
va	1	public MTListTr ( ) { }
va	8	public void append ( String line ) { if ( manifest != null ) throw new IllegalStateException ( "Cannot append to already existing manifest" ) ; lines . add ( line ) ; }
va	10	public void render ( int x , int y , Graphics g ) { GameScreen . rendertile ( 3 , 0 , x , y , g ) ; }
va	10	Unit ( int id , Player player ) { super ( id ) ; this . player = player ; Log . add ( "Unit " + id ) ; }
va	3	public void decCount ( ) { if ( count == 0 ) return ; count -- ; }
va	2	public int getNE ( ) { return ne ; }
va	2	public RedBlackTree ( ) { root = null ; }
va	3	public Lod getLod ( ) { return this . lod ; }
va	4	public RecursiveSingleLinkedListImpl < T > getNext ( ) { return next ; }
va	2	public int getNickLength ( ) { return this . nickLength ; }
va	6	public Class6 ( ) { anIntArray106 = new int [ 5 ] ; anIntArray107 = new int [ 5 ] ; anIntArray108 = new int [ 5 ] ; anInt110 = 100 ; anInt113 = 500 ; }
va	4	public GenericRepository < ConsultaParticular > getConsulta_particular ( ) { return consulta_particular ; }
va	9	public void nick ( User user , String nick ) { notifyListeners ( "nick" , this , user , nick ) ; notifyListeners ( "usersChanged" , this ) ; }
va	1	public Host_Draggable_Element ( ) { this ( 300 ) ; }
va	2	long [ ] getValues ( ) { return values ; }
va	5	public double pixelToValue ( int pixel ) { return mMinVal + ( pixel / mPixelsPerRange ) ; }
va	2	@ Override public void connectionClosed ( ) { }
va	1	public ShellManagerDoerTest ( ) { }
va	5	public void setPrivate ( String private_cloud ) { this . private_cloud = private_cloud ; }
va	1	private FalseNode ( ) { }
va	5	public Room ( final String roomName ) { this . name = roomName ; }
va	10	public PanelBanner ( String titulo ) { super ( ) ; this . titulo = titulo ; setPreferredSize ( new Dimension ( - 1 , 60 ) ) ; setBorder ( BorderFactory . createEtchedBorder ( ) ) ; }
va	9	public Tournament ( List < AI > ais , int numberOfRounds ) { this . ais = ais ; this . numberOfRounds = numberOfRounds ; }
va	3	public String getUniqueID ( ) { return uniqueID ; }
va	2	int getMcastTTL ( ) { return MCAST_TTL ; }
va	3	public String getTextColor ( ) { return textColor ; }
va	9	public void setAddress ( String address ) { if ( StringUtils . isBlank ( address ) ) { throw new IllegalArgumentException ( "Address shouldn't be blank  NULL or empty." ) ; } this . address = address ; }
va	9	public NewJDialog ( java . awt . Frame parent , boolean modal ) { super ( parent , modal ) ; initComponents ( ) ; }
va	5	public void endCDATA ( ) throws SAXException { if ( lh != null ) lh . endCDATA ( ) ; }
va	9	public void moveShapeToFront ( PoseurShape shapeToMove ) { shapesList . remove ( shapeToMove ) ; shapesList . addLast ( shapeToMove ) ; }
va	6	public void removeTableModelListener ( TableModelListener listener ) { listeners . remove ( listener ) ; }
va	9	public DomainRenewActionInvoiceItemAction ( String domainName , DomainRegister domainRegister ) { this . domainName = domainName ; this . domainRegister = domainRegister ; }
va	9	public static GTE GTE ( NumericExpression expression1 , NumericExpression expression2 ) { return new GTE ( expression1 , expression2 ) ; }
va	6	@ Test ( expected = CashOfficeManipulationException . class ) public void shouldRaiseExceptionWhenSaleNullTicket ( ) { new CashOffice ( ) . saleTicket ( null ) ; }
va	6	@ Override public void accept ( final TreeVisitor visitor ) { visitor . visit ( this ) ; }
va	8	public StaffSchedule ( TimeSheet timeSheet , double payPerHour ) { super ( ) ; this . timeSheet = timeSheet ; this . payPerHour = payPerHour ; }
va	2	public UtpConnectFuture ( ) throws InterruptedException { super ( ) ; }
va	4	public void updateValue ( double value ) { this . value += value ; }
va	10	public int pack ( int red , int grn , int blu ) { return 255 << 24 | clip ( red , 0 , 255 ) << 16 | clip ( grn , 0 , 255 ) << 8 | clip ( blu , 0 , 255 ) ; }
va	6	public void update ( Observable observable , Object objet ) { this . repaint ( ) ; }
va	3	public void show ( ) { this . gui . setVisible ( true ) ; }
va	2	public void step ( ) { repaint ( ) ; }
va	9	public Wizard ( Frame owner ) { wizardModel = new WizardModel ( ) ; wizardDialog = new JDialog ( owner ) ; initComponents ( ) ; }
va	8	public ArrayDescr ( int numberOfElements , AbstractDescr basetype ) { this . numberOfElements = numberOfElements ; this . basetype = basetype ; }
va	6	public Iterator < byte [ ] > getIterator ( ) throws IOException { if ( init ( ) ) { return store . iterator ( ) ; } return null ; }
va	4	@ Override public String toString ( ) { return "db.NonFunctionalRequirement[ idNonFuncRequirement=" + idNonFuncRequirement + " ]" ; }
va	10	public void setAsOutput ( ) { io = IO . OUTPUT ; for ( Net net : nets ) { net . setDriver ( gate ) ; } }
va	5	public void setThreadFunction ( SwarmThreadFunction threadFunction ) { myThreadFunction = threadFunction ; }
va	5	protected void setType ( FractalTypes t ) { type = t ; }
va	9	public void invertMeasureTrimming ( ) { settings . hideLeadingAndTrailingWhiteSpace = ! settings . hideLeadingAndTrailingWhiteSpace ; renderPanel . notifyCurrentDifficultyChanged ( ) ; selectionInfoPanel . notifyCurrentDifficultyChanged ( ) ; }
va	1	public ProcesarPedido ( ) { super ( ) ; }
va	7	public void setPhase ( java . lang . String phase ) { this . phase = phase ; }
va	8	public static long getFibonacciRecursive ( int i ) { if ( i == 0 ) return 0 ; if ( i == 1 ) return 1 ; return getFibonacciRecursive ( i - 2 ) + getFibonacciRecursive ( i - 1 ) ; }
va	3	public CalcTextField getTextField ( ) { return textField ; }
va	6	@ Override public void exitOpBin ( @ NotNull EnquantoParser . OpBinContext ctx ) { }
va	4	public Set < Book > getBook ( ) { return book ; }
va	3	@ Override public int getColumns ( ) { return columns ; }
va	5	private Builder ( final Collection < KEY > keys ) { super ( keys ) ; }
va	6	public List < Cliente > listaClientes ( ) { return CadastroDeClienteControler . getInstancia ( ) . listarClientes ( ) ; }
va	10	float getY ( float z ) { float d = Sky . getCloudBase ( ) - z ; return p . y - d * windSlope ; }
va	4	public HttpDataType getHttpDataType ( ) { return HttpDataType . InternalAttribute ; }
va	3	public Coordinates getTriggerCoordinates ( ) { return triggerCoordinates ; }
va	10	public static void main ( String args [ ] ) { int [ ] inArr = { 1 , 2 , 3 } ; System . out . println ( "Permutations of " + Arrays . toString ( inArr ) + " is the following :" ) ; }
va	10	private int max ( Node node ) { while ( node . rightTree != null ) node = node . rightTree ; return node . value ; }
va	7	public static Automaton makeDecimalValue ( String value ) { return BasicAutomata . makeDecimalValue ( value ) ; }
va	3	@ Override public String getId ( ) { return "void" ; }
va	9	public void setPostVar ( String name , String value ) { postVars . put ( name , value ) ; }
va	9	private static Symbol leftSideLookup ( GrammarImpl grammar , String leftSide ) { return grammar . getSymbol ( leftSide ) ; }
va	5	public boolean percolates ( ) { return uf . connected ( theBOTTOM , theTOP ) ; }
va	2	public double getX ( ) { return x ; }
va	7	void load ( DataInput dis ) throws IOException { data = dis . readLong ( ) ; }
va	2	public final short getX ( ) { return x ; }
va	7	private void setHungryFlag ( final Cage cage ) { switch ( cage . getHungry ( ) ) { case "true" : isHungry = true ; break ; case "false" : isHungry = false ; break ; } }
va	2	public boolean isUp ( ) { return isUp ; }
va	4	@ SuppressWarnings ( "deprecation" ) public void stop ( ) { downloadThread . stop ( ) ; }
va	5	public PolicySaver ( File f ) { this . myPolicyFile = f ; }
va	3	public Socket getClientSocket ( ) { return clientSocket ; }
va	1	public Text ( ) { }
va	6	@ Override public void changedUpdate ( final DocumentEvent e ) { textChanged ( e ) ; }
va	2	public int size ( ) { return nodeCount ; }
va	7	public Interval ( int start , int end ) { this . start = start ; this . end = end ; }
va	1	public NullPlayer ( ) { }
va	9	public XmlConstante getConstante ( ) throws Exception { if ( ! FieldTypeEnum . CONSTANTE . equals ( discriminator ) ) { throw new Exception ( "is not a constante." ) ; } return constante ; }
va	9	public TopicCodec ( Source conn , Channel chan ) { this . conn = conn ; this . chan = chan ; }
va	4	public JTextFieldGaps ( int col ) { this ( ( String ) null , col ) ; }
va	10	public Status retweetStatus ( long statusId ) throws WeiboException { return new Status ( http . post ( getBaseURL ( ) + "statuses/retweet/" + statusId + ".json" , new PostParameter [ 0 ] , true ) ) ; }
va	2	public double getBirths2010 ( ) { return births2010 ; }
va	10	public InstituicaoCooperadoraView ( InstituicaoCooperadoraTabela t ) throws Exception { super ( "InstituicaoCooperadora" ) ; inicio ( new InstituicaoCooperadora ( ) ) ; salvar . addActionListener ( new InstituicaoCooperadoraControl ( this , t ) ) ; }
va	10	@ Override public void visit ( Block block ) { visit ( block . first ) ; visit ( block . second ) ; }
va	7	public void visit ( IntegerNode value ) { generated . push ( value . value ) ; }
va	4	private void setNumber ( float number ) { myNumber = number ; }
va	5	public void setSelectedClasa ( Clasa c ) { this . selected_clasa = c ; }
va	10	public final void yyclose ( ) throws java . io . IOException { zzAtEOF = true ; zzEndRead = zzStartRead ; if ( zzReader != null ) zzReader . close ( ) ; }
va	9	public vslMMBackend ( ) throws vslConfigException , vslStorageException { dbname = vsl . getConfig ( ) . getString ( DBFILE ) ; init ( ) ; }
va	5	public void setCadCidade ( JInternalFrame cadCidade ) { this . cadCidade = cadCidade ; }
va	7	public ComplexDoubleLargeArray ( double [ ] dataRe , double [ ] dataIm ) { this ( new DoubleLargeArray ( dataRe ) , new DoubleLargeArray ( dataIm ) ) ; }
va	4	public ComException ( int newHr ) { super ( ) ; this . hr = newHr ; }
va	7	public double getBand8 ( ) { return Dispatch . get ( this , "Band8" ) . changeType ( Variant . VariantDouble ) . getDouble ( ) ; }
va	7	@ Override public final Impl andSelf ( ) { if ( previousMatch != null ) { addUniqueElements ( previousMatch . get ( ) ) ; } return this ; }
va	6	public Project ( ProjectFile projectFile ) { this ( projectFile , projectFile . createDict ( ) ) ; }
va	3	public static OthelloPiece [ ] [ ] getPieces ( ) { return m_Pieces ; }
va	5	public void setDatefin ( String datefin ) { this . datefin = datefin ; }
va	9	public void setDate ( Date date ) { model . setValue ( date ) ; if ( getParent ( ) != null ) { getParent ( ) . validate ( ) ; } }
va	7	@ Subscribe public void onRemoveFolder ( RemoveFolderEvent event ) { removeFolder ( event . getFolder ( ) ) ; }
va	8	@ Override public void addToAnalyzedDocuments ( IResultSet myResultSet ) { this . analyzedDocuments . add ( ( ResultSet ) myResultSet ) ; }
va	7	public void setCounts ( int enCount , int locCount ) { this . enCount = enCount ; this . locCount = locCount ; }
va	4	public Lista < T > getTail ( ) { return tail ; }
va	6	public void set ( int index , int val ) { _vals [ index ] = val ; }
va	7	public void removeExit ( String direction ) { walls . get ( direction ) . setExit ( null ) ; }
va	2	String [ ] base ( ) default { } ;
va	4	public void setAg ( int ag ) { this . ag = ag ; }
va	7	private void btnRecarregaPesqActionPerformed ( java . awt . event . ActionEvent evt ) { exibePesquisa ( ) ; }
va	6	@ JsonProperty ( "Type" ) public void setType ( String Type ) { this . Type = Type ; }
va	3	public String getStreet ( ) { return street ; }
va	1	protected void deplacementOK ( ) { }
va	1	public int getDatesRightMargin ( ) { return 17 ; }
va	8	public Funcionario ( String nome , Conta conta ) { this ( nome ) ; setConta ( conta ) ; }
va	9	public static String busNumber ( int bus ) { if ( bus == 0 ) throw new InvalidQueryException ( "Nonexistent bus" ) ; return database . busDatabase . get_string ( "bus" , bus , "number" ) ; }
va	8	public static $int $ ( final int t ) { $int r = new IntRef ( t ) ; return r ; }
va	9	@ Override public final < T > T [ ] toArray ( final T [ ] a ) { return backing . toArray ( a ) ; }
va	6	@ Override public void mousePressed ( MouseEvent event ) { mouseClicking = true ; repaint ( ) ; }
va	4	public void multi ( ) { System . out . println ( "multi from D" ) ; }
va	1	public LSystemKochCurve ( ) { this ( 0 ) ; }
va	5	public static final StringParser istr ( final char c ) { return istring ( "" + c ) ; }
va	2	public float getLongitudeVerticalDown ( ) { return longitudeVerticalDown ; }
va	4	public String act ( ) { return ( String ) exec ( ) ; }
va	2	public long getId ( ) { return id ; }
va	1	public Report ( ) { }
va	3	public String getDateTimeStr ( ) { return dateTimeStr ; }
va	8	@ Test public void oneElement ( ) { int [ ] array = new int [ ] { 1 } ; undertest . sort ( array ) ; assertArrayEquals ( new int [ ] { 1 } , array ) ; }
va	9	public Class11 ( ) { anInt290 = 0 ; anInt291 = 0 ; anInt292 = 104 ; anInt293 = 104 ; anIntArrayArray294 = new int [ anInt292 ] [ anInt293 ] ; method210 ( ) ; }
va	10	private Version ( int major , int minor , int revision ) { this . major = major ; this . minor = minor ; this . revision = revision ; }
va	10	@ Subscribe public void onRemoveFolder ( RemoveFolderEvent event ) { LessFolder folder = event . getFolder ( ) ; removeNode ( folder ) ; }
va	5	public Set < Key > getKeys ( ) { return map . keySet ( ) ; }
va	7	public PassengerDAO ( EntityManagerFactory factory ) { entityManagerFactory = factory ; log . debug ( "Instance of PassengerDAO is created." ) ; }
va	7	private Object getElement ( String key ) { return elements . get ( key ) ; }
va	1	public BTNode ( ) { }
va	1	protected DataField ( ) { }
va	3	public void endVisit ( FlaggedClass x ) { }
va	6	public void setSourceElements ( Object newValue [ ] ) { clearSourceListModel ( ) ; addSourceElements ( newValue ) ; }
va	1	public TipoUsuario ( ) { }
va	7	private void initComponents ( ) { setDefaultCloseOperation ( javax . swing . WindowConstants . EXIT_ON_CLOSE ) ; pack ( ) ; }
va	4	@ Override public void onReceive ( Entity host ) { }
va	4	@ Before public void setUp ( ) { serviceEmTeste = new NotificacaoDeAusenciaService ( ) ; }
va	3	public String getSun ( ) { return sun ; }
va	9	private TimeListDialog ( java . awt . Frame parent , boolean modal ) { super ( parent , modal ) ; initComponents ( ) ; }
va	3	public JButton getBotAgregarCat ( ) { return BotAgregarCat ; }
va	7	public Line setStop ( Collection < Integer > stop ) { this . stop = stop ; return this ; }
va	4	public LogicException ( String message ) { super ( message ) ; }
va	1	public Entity ( ) { }
va	9	public void updateView ( ) { this . removeAll ( ) ; for ( Item item : player . getInventory ( ) ) { this . add ( new ItemButton ( item ) ) ; } }
va	9	public static Iterator join ( Iterator a , Iterator b ) { return new Join ( a , b ) ; }
va	1	public Shaft ( ) { }
va	10	public CoMoMReorderingBasis ( QNModel m ) { super ( m ) ; setComparator ( new SortVectorByRightmostNZ ( ) ) ; order_offset = new int [ size ] ; previous_order_offset = new int [ size ] ; }
va	7	public LlvmValue visit ( IntegerType n ) { return new LlvmNamedValue ( "" , LlvmPrimitiveType . I32 ) ; }
va	3	@ Override public void setFanspeed ( float fanspeed ) { }
va	10	public byte [ ] encryptString ( String key , String valueToEncrypt ) { return encryptStringWithKey ( cryptoKeyStore . getPublicKey ( key ) , valueToEncrypt ) ; }
va	6	public synchronized Task pollInputBus ( ) { if ( inputBus . isEmpty ( ) ) return null ; else { return inputBus . poll ( ) ; } }
va	2	public int getSpeedX ( ) { return speedX ; }
va	4	public void setP5 ( double p5 ) { this . p5 = p5 ; }
va	4	public void setNumCallDialed ( int numCallDialed ) { this . numCallDialed = numCallDialed ; }
va	8	@ Override public String getTextureName ( ) { if ( currentState != PlatformState . NORMAL ) { } return "platform" + currentState . toString ( ) ; }
va	2	public double getrX ( ) { return rx ; }
va	6	public void setDescription ( String description ) { Dispatch . put ( this , "Description" , description ) ; }
va	2	public int getIsbn ( ) { return isbn ; }
va	9	public Dimension getCurrentDisplayImageDimension ( ) { if ( currentDisplayImage != null ) return new Dimension ( currentDisplayImage . getWidth ( ) , currentDisplayImage . getHeight ( ) ) ; return new Dimension ( 0 , 0 ) ; }
va	1	public OCPCorrectionTest ( ) { }
va	4	@ Override public String toString ( ) { return "com.peusoft.ptc.model.User[ id=" + id + " ]" ; }
va	6	@ Override public boolean removePermission ( String perm ) { return removePermission ( perm , null ) ; }
va	8	public JSONArray put ( int index , double value ) throws JSONException { this . put ( index , new double ( value ) ) ; return this ; }
va	6	@ Override public void rightThumbMagnitude ( double magnitude ) { if ( enabled ) { rmag = magnitude ; } else { } }
va	1	public DefaultGlyph ( ) { }
va	5	public MergeSort ( int [ ] data ) { if ( data != null ) { this . arr = data ; } }
va	8	public final Vec2i + ( int x , int y ) { return new Vec2i ( this . x + x , this . y + y ) ; }
va	8	@ Override public void actionPerformed ( ActionEvent e ) { if ( e . getSource ( ) == this . btnAbbruch ) { dispose ( ) ; } }
va	7	public void setLast ( Map < String , Object > last ) { this . last = last ; }
va	6	public void setMessage ( String newMessage ) { message = newMessage ; repaint ( ) ; }
va	8	public PauseState ( CityApplication app ) { this . app = app ; this . nifty = app . getNifty ( ) ; }
va	1	private SeekableInputStream ( ) { }
va	6	public void onHitWall ( HitWallEvent e ) { moveDirection *= - 1 ; listenEvent ( e ) ; }
va	10	private void checkGameWasClosed ( IGame game ) { if ( game . getPlayerInGameCount ( ) == game . getMaxPlayerCount ( ) ) { mainController . resetTeams ( game ) ; } }
va	5	@ Override public boolean renameTo ( Folder arg0 ) throws MessagingException { return false ; }
va	6	public void setbtn_setOpenListener ( ActionListener l ) { this . btn_setopen . addActionListener ( l ) ; }
va	2	public final boolean isVisualPadding ( ) { return visualPadding ; }
va	3	public SpaceRegionsFilterOptions createSpaceRegionsFilterOptions ( ) { return new SpaceRegionsFilterOptions ( ) ; }
va	2	public boolean isNomesAdmin ( ) { return nomesAdmin ; }
va	10	public void deregisterComponent ( Component ... components ) { for ( Component component : components ) { component . removeMouseListener ( this ) ; component . removeMouseMotionListener ( this ) ; } }
va	4	public BinaryHeapOutOfBoundsException ( String message ) { super ( message ) ; }
va	8	public boolean addUnit ( Unit u ) { if ( unit == null ) { unit = u ; unit . setLoc ( this ) ; return true ; } return false ; }
va	10	public Axis ( String title , Orientations axisOrientation ) { this ( title , axisOrientation , DEFAULT_MIN , DEFAULT_MAX , DEFAULT_INC ) ; }
va	9	@ Test public void leafElementsSimpleArray ( ) { final Object root = new int [ ] { 42 , 99 , 256 } ; assertPathWalksAre ( Traversals . leafElements ( root ) , new Object [ ] [ ] { { "[0]" , 42 } , { "[1]" , 99 } , { "[2]" , 256 } } ) ; }
va	10	public static void setNativeLookAndFeel ( ) { try { UIManager . setLookAndFeel ( UIManager . getSystemLookAndFeelClassName ( ) ) ; } catch ( Exception e ) { LogUtil . error ( "Error setting native LAF: " + e ) ; } }
va	1	public NotAllowedWhileRunning ( ) { super ( "Action not allowed while running process." ) ; }
va	5	public NewBoardWorker ( String newBoardName ) { this . newBoardName = newBoardName ; }
va	9	public Job ( PollType message , ActorID actorID ) { this . message = message ; this . actorID = actorID ; }
va	5	public void setText ( String text ) { this . text = text ; }
va	8	public Obj3dManager ( ) { for ( int i = 0 ; i < MAX_LAYERS ; i ++ ) layers . add ( new ObjectLayer ( ) ) ; }
va	3	public String getPlatform ( ) { return platform ; }
va	4	public void setData ( byte [ ] data ) { this . data = data ; }
va	1	public Hocham ( ) { }
va	7	public void waitUntilGuiClosed ( ) { synchronized ( gui_lock ) { try { while ( gui_open ) { gui_lock . wait ( ) ; } } catch ( InterruptedException e ) { } } }
va	2	public long getSIZE ( ) { return size ; }
va	10	@ Test public void shouldRemoveId3v2TagForFileConstructor ( ) throws Exception { File filename = new File ( MP3_WITH_ID3V1_AND_ID3V23_AND_CUSTOM_TAGS ) ; testShouldRemoveId3v2Tag ( new Mp3File ( filename ) ) ; }
va	9	@ Override public boolean interact ( String action , Interactable target ) { if ( super . interact ( action , target ) ) { return true ; } return false ; }
va	8	public void addValue ( double value ) { values . add ( value ) ; numberOfValues ++ ; sum += value ; }
va	1	public InvalidDTOException ( ) { }
va	2	public boolean isPassable ( ) { return passable ; }
va	8	boolean canPlant ( Point point ) { if ( ! inGrid ( point ) ) return false ; return getItem ( point ) instanceof Ground ; }
va	8	public boolean imageUpdate ( Image image , int i , int j , int k , int l , int i1 ) { return true ; }
va	2	public int getNum ( ) { return num ; }
va	8	HorseVariant ( String name , int id ) { this . name = name ; this . id = id ; }
va	10	public static void logC ( String msg ) { String header = "Console Command: " ; System . out . println ( header + msg ) ; }
va	1	public int recoverHealth ( ) { return 0 ; }
va	8	void PostRun ( ) { strPrintResults . append ( "\n====================================================================================================" ) ; strPrintResults . append ( sys . resultsInfo . PrintFinalStatistic ( ) ) ; }
va	7	public PayloadBuilder launchImage ( final String launchImage ) { customAlert . put ( "launch-image" , launchImage ) ; return this ; }
va	2	public boolean getIndividualPlan ( ) { return this . individualPlan ; }
va	4	public Vector < String > getHospitals ( ) { return hospitals ; }
va	5	public AbstractGameBoardElement ( Position position ) { this . position = position ; }
va	8	private void setLayer ( int layer ) throws InvalidDataException { switch ( layer ) { case 1 : this . layer = 3 ; break ; case 2 : this . layer = 2 ; break ; case 3 : this . layer = 1 ; break ; default : throw new InvalidDataException ( "Invalid mpeg layer description in frame header" ) ; } }
va	7	public int size ( ) { return selectedRows . length > 0 ? selectedRows . length : allRows . size ( ) ; }
va	4	@ Override public Sender produce ( ) { return new MailSender ( ) ; }
va	9	public static DISInputStream convertToInputStream ( ByteArrayOutputStream baos ) { byte [ ] buffer = baos . toByteArray ( ) ; return convertToInputStream ( buffer ) ; }
va	7	public void setSize ( int width , int height ) { frame . setSize ( width , height ) ; }
va	8	@ Override public Object getValueAt ( int arg0 , int arg1 ) { return data [ arg0 ] [ arg1 ] ; }
va	6	public void oddLength ( ) { int [ ] array = new int [ ] { 1 , 2 , 3 , 4 , 5 } ; assertEquals ( 2 , undertest . choosePivot ( array ) ) ; }
va	10	public static void print ( String s ) { System . out . println ( s ) ; messageBox . addText ( s ) ; }
va	7	private void passwordFieldKeyTyped ( java . awt . event . KeyEvent evt ) { checkPasswords ( ) ; }
va	5	public void setPercentDone ( String percentDone ) { this . percentDone = percentDone ; }
va	10	@ Override public Vector clone ( ) { Vector result = new Vector ( this . posX , this . posY , this . posZ ) ; return result ; }
va	5	@ Test public void levPalauttaaNollan ( ) { assertEquals ( 0 , nappula . lev ( ) ) ; }
va	7	public int getRight ( ) { return Dispatch . get ( this , "Right" ) . changeType ( Variant . VariantInt ) . getInt ( ) ; }
va	1	public ObjectFactory ( ) { }
va	5	@ Override public HasText getFirstHeader ( ) { return list . getHeader ( ) ; }
va	3	public static int algorithm ( int length , int array [ ] ) { return 0 ; }
va	6	public boolean addListener ( LogicalClientsContainerListener listener ) { return this . listeners . add ( listener ) ; }
va	6	public void testEx5_1 ( ) { Ex5_1 ex5_1 = new Ex5_1 ( ) ; ex5_1 . printBigger ( ) ; }
va	3	private void updateOkButtonToRestart ( ) { ok . setText ( "OK (requires restart)" ) ; }
va	8	public static void debugWithCallByValue2 ( ) { if ( LOGGER . isLoggable ( Level . INFO ) ) { LOGGER . info ( "This message is only constructed in Levels >= INFO:" + calculateValue ( "CBV2" ) ) ; } }
va	4	public void setQuantidade ( int quantidade ) { this . quantidade = quantidade ; }
va	7	public void whip ( Employee employee ) { if ( employee . hasAProject ( ) ) { employee . work ( ) ; } }
va	2	long getUpper ( ) { return upper ; }
va	4	public synchronized static void setCacheLimit ( int newCacheLimit ) { cacheLimit = newCacheLimit ; }
va	2	@ Override public void close ( ) { }
va	7	public int getRGBPixel ( int x , int y ) { return peer . getRGBPixel ( x , y ) ; }
va	5	public AnimationTreeRenderer ( AnimationTree manager ) { this . animationTree = manager ; }
va	7	@ Override protected int execute ( InputInterface input , OutputInterface output ) { throw new LogicException ( "You must override the execute() method in the concrete command class." ) ; }
va	1	public ScheduleBasicTest ( ) { }
va	4	public void setNumero3 ( int numero3 ) { this . numero3 = numero3 ; }
va	6	public _Fields fieldForId ( int fieldId ) { return _Fields . findByThriftId ( fieldId ) ; }
va	4	public ComplexDoubleLargeArray ( double [ ] data ) { this ( new DoubleLargeArray ( data ) ) ; }
va	5	public void setType ( BigInteger type ) { this . type = type ; }
va	7	public void showShippedPanel ( ) { this . removeComponent ( 1 , 0 ) ; if ( shp == null ) { shp = new ShippedPanel ( ) ; } this . addComponent ( shp , 1 , 0 ) ; }
va	2	public int getSecondaryOrderID ( ) { return secondaryOrderID ; }
va	4	public Node getThisNode ( ) { return this . nodeLinkManager . getThisNode ( ) ; }
va	1	private GroovyRunner ( ) { }
va	5	@ Override public int getRowCount ( ) { if ( levels == null ) return 0 ; return levels . size ( ) ; }
va	7	private synchronized void thaw ( ) { try { while ( freezeMessage ) wait ( 1000 ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } }
va	5	public void setStartKey ( String startKey ) { this . startKey = startKey ; }
va	9	public static double skim ( double p , double a ) { if ( p > 1.0 ) { return - ( ( p - 1.0 ) ) * a ; } else if ( p < - 1.0 ) { return - ( ( p + 1.0 ) ) * a ; } return 0 ; }
va	1	public DefaultChildFeatureHolder ( ) { }
va	8	public static void main ( String [ ] args ) { ThreadTest test = new ThreadTest ( ) ; test . testReferParam ( ) ; }
va	4	public void setFeeTypeId ( long value ) { this . feeTypeId = value ; }
va	5	public void setNotes ( String value ) { this . notes = value ; }
va	6	public boolean isWink ( ) { return Options . WINK . equals ( getAction ( ) . getActionEffect ( ) ) ; }
va	5	public static boolean getMouse ( int mouseButton ) { return Mouse . isButtonDown ( mouseButton ) ; }
va	9	@ Test public void testValidateNullPointer ( ) { boolean actual = mFnc . $isvalidnum ( null ) ; boolean expected = false ; assertEquals ( "Fail to validate string. This is not a valid number." , expected , actual ) ; }
va	7	public void mouseReleased ( MouseEvent e ) { this . setBackground ( this . button_released ) ; this . setForeground ( this . texto_released ) ; }
va	9	public WebUser ( InetAddress address , String username ) { this . address = address ; this . username = username ; }
va	4	public synchronized void xsetYRepeatDelay ( int a ) { yRD = a ; }
va	2	public Help_License ( ) { super ( "Help - License" , true , true ) ; super . setLayer ( 1 ) ; }
va	9	public OptionInputImpl ( OptionMetadata option , ParameterInput parameter ) { this . option = option ; this . parameter = parameter ; }
va	6	public void setAreas ( ArrayList < Area > param ) { areas = param ; }
va	8	public List < SymbolClassPlaceHolder > getSymbolClassName ( ) { if ( symbolClassName == null ) { symbolClassName = new ArrayList < SymbolClassPlaceHolder > ( ) ; } return this . symbolClassName ; }
va	3	public int gas ( ) { return gas_native ( pointer ) ; }
va	10	private void updateTabbedPaneSize ( ) { tabbedPane . setPreferredSize ( new Dimension ( ( int ) textPane3270 . getPreferredSize ( ) . getWidth ( ) + 40 , ( int ) textPane3270 . getPreferredSize ( ) . getHeight ( ) + 40 ) ) ; }
va	6	@ Override public void accept ( FSPSpecVisitor v ) { v . visit ( this ) ; }
va	7	public void setCount ( int count ) { antal = count ; value = antal * kurs ; }
va	2	protected final void hideNavigationBar ( ) { showNavigationBar = false ; }
va	4	public InitState ( EvlWireFSM fsm ) { super ( fsm ) ; }
va	4	public InversePageRankSeedSelectionStrategy ( PageRankRunner runner ) { super ( runner ) ; }
va	10	@ Override public void write ( ByteBuffer buffer ) { buffer . put ( packetId ( ) ) ; writeString ( buffer , name ) ; }
va	9	@ Override public String [ ] getAllAttributesAsString ( ) { return new String [ ] { firstname , lastname , birthdate . toString ( ) , email } ; }
va	6	public void setInstituicoesCooperadoras ( ArrayList < InstituicaoCooperadora > instCoop ) { this . instituicoesCooperadoras = instCoop ; }
va	9	public void setLongitude ( double longitude ) { if ( longitude >= LONGITUDE_MIN && longitude <= LONGITUDE_MAX ) { this . longitude = longitude ; } else { throw new IllegalArgumentException ( "Longitude out of bounds." ) ; } }
va	4	public void setCollapsable ( boolean collapsable ) { this . collapsable = collapsable ; }
va	9	public static boolean isXMLCharacter ( int c ) { return ( ( ( XML_CHARACTER [ c >>> 5 ] & ( 1 << ( c & 1F ) ) ) != 0 ) || ( c >= 10000 && c <= 10ffff ) ) ; }
va	3	public String getName ( ) { return name ; }
va	1	public Order ( ) { super ( ) ; }
va	7	@ Override public void putAll ( Map < ? extends K , ? extends V > m ) { throw new UnsupportedOperationException ( "Cannot modify OrderedSubsetUnmodifiableMap" ) ; }
va	1	private MinimizationOperations ( ) { }
va	9	@ Override public Object visitConstant ( ConstantAST constantAST ) { return constants . get ( constantAST . getName ( ) ) ; }
va	9	@ Override public void loadValue ( String obj ) { this . name = obj ; LanguageRegistry . loadLang ( obj ) ; }
va	4	@ Override public final String namespaceURI ( ) { return namespaceURI ( 0 ) ; }
va	8	@ Override public boolean isBreathing ( final Person p ) { calls . add ( new Call ( "isBreathing" , p ) ) ; return true ; }
va	8	public GraphicInterface ( VertexContainer vertices ) { super ( ) ; toolswitcher = new ToolSwitcher ( vertices , this ) ; this . vertices = vertices ; }
va	9	UnknownSuboptionException ( String option , char suboption ) { super ( option , "Illegal option: '" + suboption + "' in '" + option + "'" ) ; this . suboption = suboption ; }
va	4	@ Override public String getName ( ) { return nom ; }
va	10	public void updateTitle ( final String title ) { SwingUtilities . invokeLater ( new Runnable ( ) { @ Override public void run ( ) { setTitle ( "Kundenansicht" + "\t" + "\t" + "\t" + "\t" + "\t" + "\t" + "\t" + "\t" + "\t" + "\t" + "\t" + "\t" + "\t" + title ) ; } } ) ; }
va	3	public Expresion getId ( ) { return id ; }
va	1	public int recoverHealth ( ) { return 0 ; }
va	5	public void setRespChkNum ( String value ) { this . respChkNum = value ; }
va	10	public static ClientControllerClass getInstance ( ) { if ( controllerSinglton == null ) { ClientControllerClass instance = new ClientControllerClass ( ) ; controllerSinglton = instance ; return controllerSinglton ; } else { return controllerSinglton ; } }
va	7	@ Override public boolean containsKey ( Object key ) { return _source . containsKey ( key ) ; }
va	9	public static void setMousePosition ( Vector2f pos ) { Mouse . setCursorPosition ( ( int ) pos . getX ( ) , ( int ) pos . getY ( ) ) ; }
va	9	public DirectoryPollerBuilder setDefaultFileFilter ( FileFilter filter ) { if ( filter == null ) { throw new NullPointerException ( NULL_ARGUMENT_ERROR_MESSAGE ) ; } this . filter = filter ; return this ; }
va	5	public void testGeneratedPhysicalLinkDestinyNode ( ) { assertEquals ( destinyPhysicalNode , generatedPhysicalLink . getDestinyNode ( ) ) ; }
va	5	public void setOutputPath ( String outputPath ) { this . outputPath = outputPath ; }
va	5	public GeneratorTest ( AbstractGenerator gen ) { this . generator = gen ; }
va	3	public String getXlinkTitle ( ) { return xlinkTitle ; }
va	9	public static void report ( String in ) { System . err . println ( in ) ; System . exit ( 1 ) ; }
va	1	public UStatusPk ( ) { }
va	5	public Builder rampedHalfAndHalf ( boolean rampedHalfAndHalf ) { this . rampedHalfAndHalf = rampedHalfAndHalf ; return this ; }
va	3	public String getM_playerOneColour ( ) { return m_playerOneColour ; }
va	3	public String getDescription ( ) { return description ; }
va	1	public NMBResolver ( ) { }
va	1	private OperatingSystemUtils ( ) { }
va	9	public SListNode ( Object obj , SListNode nxt ) { item = obj ; next = nxt ; }
va	6	@ Override public String getColumnName ( int col ) { return columnNames [ col ] ; }
va	5	@ Override public void setBox ( int box ) { this . box = box ; }
va	6	public void setUsing ( ArrayList < Human > using ) { this . using = using ; }
va	4	public InvalidItemIdException ( String str ) { super ( str ) ; }
va	10	public CounterP100 ( double a , double b , double c ) { ALPHA = a ; GAMMA = b ; BETHA = c ; }
va	10	public boolean equals ( User user ) { return ( this . userID == user . getUserID ( ) || this . userName . equals ( user . getUserName ( ) ) ) ; }
va	1	private LocationAttributes ( ) { }
va	2	public int getMinute ( ) { return minute ; }
va	8	public StockInfo getStockInfo ( String symbol ) { return new StockInfo ( symbol , calculatePrice ( symbol ) ) ; }
va	4	public void setPositionX ( final float positionX ) { this . positionX = positionX ; }
va	6	@ Override public void StopServer ( ) { this . Client . close ( ) ; this . ConsoleFrame . CloseFrame ( ) ; }
va	7	public boolean same ( Author that ) { return this . name . equals ( that . name ) ; }
va	6	public boolean checkDigit ( long n ) { while ( n != 0 ) { if ( n % 10 > 2 ) return false ; n = n / 10 ; } return true ; }
va	3	@ Override public class getJavaType ( ) { return javaType ; }
va	10	@ Override public Type and ( Type that ) { return equivalent ( that ) ? new BoolType ( ) : super . and ( that ) ; }
va	6	public void setUsers ( ArrayList < Users > users ) { this . users = users ; }
va	3	void free_look ( Object i ) { }
va	1	public OutilsMatriciels ( ) { }
va	3	public String getName ( ) { return name ; }
va	8	public void setImage ( Image image ) { myImage = MediaTools . loadImage ( image ) ; determineSize ( ) ; }
va	9	public Options ( String args [ ] , Multiplicity defaultMultiplicity ) { this ( args , Prefix . DASH , defaultMultiplicity , 0 , 0 ) ; }
va	1	public DummyBoardEventProducer ( ) { }
va	8	@ Override public Veggies [ ] createVeggies ( ) { Veggies veggies [ ] = { new Gralic ( ) , new Onlion ( ) } ; return veggies ; }
va	2	public int getChk ( ) { return chk ; }
va	6	private void jButton2ActionPerformed ( java . awt . event . ActionEvent evt ) { }
va	4	public void setTimesRated ( int timesRated ) { this . timesRated = timesRated ; }
va	5	public void setValue ( String value ) { this . value = value ; }
va	9	@ Override public Object getParaValue ( int whichPara ) { if ( whichPara < 0 || whichPara >= LEN ) { return null ; } return values [ whichPara ] ; }
va	8	@ Override public int read ( ByteBuffer dst ) throws IOException { return channel . read ( dst ) ; }
va	6	public String getConsumed ( ) { if ( bufferReady ) { bufferReady = false ; return buffer ; } else { throw new IllegalStateException ( "Nothing is buffered. Cannot provide anything" ) ; } }
va	6	public void setPosition ( Vector3f pos ) { pointLight . setPosition ( pos ) ; }
va	8	protected BasePacketService ( int initialRegistryCapacity ) { builders = new HashMap < > ( initialRegistryCapacity ) ; parsers = new HashMap < > ( initialRegistryCapacity ) ; }
va	10	public static String Encrypt ( String RECIPIENT_NYM_ID , String strPlaintext ) { return otapiJNI . OTAPI_Basic_Encrypt ( RECIPIENT_NYM_ID , strPlaintext ) ; }
va	10	@ JsonAnySetter public void setAdditionalProperty ( String name , Object value ) { this . additionalProperties . put ( name , value ) ; }
va	10	private void bConnIpv4FocusLost ( java . awt . event . FocusEvent evt ) { bConnIpv4 . setText ( c . getHost ( ) ) ; }
va	4	public HalfWedge ( final int orientation ) { super ( null , true , true , true , true , true , true ) ; this . orientation = orientation ; }
va	9	private void addItemBaseMenu ( ) { menuSettings . add ( itemBaseSettings ) ; menuSettings . add ( itemConnexionTest ) ; this . add ( menuSettings ) ; }
va	9	public void createMatch ( Match match ) { matches . put ( match , new ArrayList < TeamMatch > ( ) ) ; updateMatches ( ) ; }
va	1	public void ReadLine ( ) { }
va	5	public void setResult ( int res ) { isDone = true ; result = res ; }
va	2	public String getName ( ) { return "JYearChooser" ; }
va	7	void pindah ( double x1 , double y1 ) { x = x1 ; y = y1 ; }
va	6	public void setEquipments ( List < Equipment > equipments ) { this . equipments = equipments ; }
va	1	public SynthIfException ( ) { super ( ) ; }
va	1	public void editUser ( ) { }
va	8	public void connect ( ) { try { this . server . connectClient ( this , this . player ) ; } catch ( RemoteException e ) { e . printStackTrace ( ) ; } }
va	3	public static void print ( ) { out . flush ( ) ; }
va	5	public ClassicPlayer1TransitState ( ClassicMode classicMode ) { this . mode = classicMode ; }
va	1	public TicketPrice ( ) { }
va	8	public static MDDManager getManager ( MDDVariableFactory vbuilder , int nbleaves ) { return new MDDStoreImpl ( vbuilder , nbleaves ) ; }
va	4	@ Override protected Point getInitialSize ( ) { return new Point ( 450 , 323 ) ; }
va	5	public ProjectChangesListener ( SessionLogPlugin sessionlog ) { this . sessionlog = sessionlog ; }
va	3	private int numberArrays ( ) { return getArrays ( ) . size ( ) ; }
va	3	@ AfterMethod public void tearDownMethod ( ) throws Exception { }
va	8	public void setOperatingSystem ( String osName ) { config . setCommandLineProperties ( CommandLineProperties . getSystemProperties ( osName ) ) ; }
va	3	public OtpErlangFloat ( final float f ) { super ( f ) ; }
va	7	public boolean loadGame ( int index , SaveInfo info ) { return loadGame ( index , info , null ) ; }
va	3	JsonSchema getItems ( ) { return items ; }
va	4	public final void println ( boolean x ) { println ( "" + x ) ; }
va	5	public void setConfigService ( ConfigService configService ) { this . configService = configService ; }
va	1	public ProductChangeBean ( ) { super ( ) ; }
va	7	private void jButton1ActionPerformed ( java . awt . event . ActionEvent evt ) { this . dispose ( ) ; }
va	2	public String getDroppingAdvice ( ) { return "The storm looks to be ending  sir" ; }
va	8	@ Override public Comando jugarTurno ( Guerrero guerrero ) { return guerrero . desplazarse ( ADELANTE ) ; }
va	4	public void setId ( int id ) { this . id = id ; }
va	3	public final String getCliente ( ) { return cliente ; }
va	7	AllPurposeCheckedExceptionWrapper ( final Throwable checkedCause ) { super ( checkedCause . getMessage ( ) ) ; this . cause = checkedCause ; }
va	5	public LinkedList < correo > getListaCorreo ( String username ) { return null ; }
va	4	public void setLiftCoefficient ( float alpha ) { this . alpha = alpha ; }
va	2	public boolean getIsMinorTick ( ) { return isMinorTick ; }
va	10	@ Override public void disconnect ( ) throws IOException { sendCommand ( "disconnect" ) ; socket . close ( ) ; bank = null ; System . out . println ( "disconnected..." ) ; }
va	3	public String getProjDir ( ) { return projDir ; }
va	9	public Rectangle ( float width , float height , float density ) { this ( width , height , density , DEFAULT_RESTIUTION , DEFAULT_FRICTION ) ; }
va	9	public static void main ( String args [ ] ) { int [ ] arr = { 1 , 2 , - 4 , 1 , 3 , - 2 , 3 , - 1 } ; System . out . println ( "Sum is: " + getSum ( arr ) ) ; }
va	7	public void setWrap ( boolean b ) { wrap = b ? ( wrap == null ? DEF_GAP : wrap ) : null ; }
va	7	public String getId ( ) { return String . valueOf ( node . getProperty ( ID_PROPERTY ) ) ; }
va	5	public String toString ( ) { return name + ": loc=" + getLocationString ( ) + "  c=" + getColorString ( ) ; }
va	10	@ Override ReadOnlyArray < String > readLogic ( ReadOnlyArray < String > newColumn ) { return COLUMN_MAP . get ( newColumn ) ; }
va	9	void readFramebufferUpdate ( ) { is . skip ( 1 ) ; nUpdateRectsLeft = is . readU16 ( ) ; endMsg ( ) ; handler . framebufferUpdateStart ( ) ; }
va	4	public String getTitleText ( ) { return title . getText ( ) ; }
va	1	public CreateServlet ( ) { super ( ) ; }
va	10	@ Test public void shouldRespectReflexivePropertyOfEquality ( ) { DayInWeek d1 = DayInWeek . valueOf ( "SUNDAY" ) ; assertTrue ( d1 . equals ( d1 ) ) ; }
va	2	public void method548 ( int i ) { }
va	6	private void jTextField2ActionPerformed ( java . awt . event . ActionEvent evt ) { }
va	6	public void displayGetMarker ( ) { GetMarkerView getMarker = new GetMarkerView ( ) ; getMarker . getInput ( ) ; }
va	8	@ Override public int compareTo ( Identifier o ) { return getValue ( ) . compareTo ( o . getValue ( ) ) ; }
va	4	public void setExplicitDistanceTolerance ( double tol ) { explicitTolerance = tol ; }
va	1	protected void interrupted ( ) { }
va	2	public int getEndY ( ) { return endy ; }
va	1	public void turn ( ) { }
va	2	public boolean isVisible ( ) { return visible ; }
va	3	public String [ ] getColumnNames ( ) { return this . columnNames ; }
va	7	public MyDatabase getSgd ( ) { if ( client == null ) { return SgdBase . getSgd ( ) ; } else { return client . getSgd ( ) ; } }
va	8	@ Override public double execute ( Instruction toExecute ) { return getModel ( ) . getLastTurtle ( ) . getLocation ( ) . x ; }
va	2	public int xgetAssignedKeyCode ( ) { return assignedKeyCode ; }
va	8	private void jMenuItemFileLoadSequence1ActionPerformed ( java . awt . event . ActionEvent evt ) { loadFileToTextArea ( "sequence #1" , jTextAreaSequence1 ) ; }
va	7	public static InputStreamReader toUtf8Reader ( InputStream inputStream ) { return new InputStreamReader ( inputStream , UTF_8 ) ; }
va	6	@ Override public String toString ( ) { return "[x = " + x + "][y = " + y + "][length = " + getLength ( ) + "]" ; }
va	3	public Integer getEventFeeId ( ) { return eventFeeId ; }
va	4	public NQuadComparator ( byte mode ) { this . mode = mode ; }
va	8	public IdentListNode ( List < IdentNode > idents ) { this . idents = new ArrayList < IdentNode > ( idents ) ; }
va	7	@ Override public List < ClassAce > getAllClassAces ( ) { return getHibernateTemplate ( ) . loadAll ( ClassAce . class ) ; }
va	6	public CSVPrinter ( String filename ) { this ( ) ; setProperty ( FILE , filename ) ; }
va	7	private void serializeEntityReference ( Node child ) throws IOException { encodeEntityReference ( child . getNodeName ( ) ) ; }
va	10	private void jButtonAdicionarActionPerformed ( java . awt . event . ActionEvent evt ) { this . telefone = jTextFieldTelefone . getText ( ) ; this . setVisible ( false ) ; }
va	8	@ Override public int hashCode ( ) { int hash = 0 ; hash += ( idmedicamentos != null ? idmedicamentos . hashCode ( ) : 0 ) ; return hash ; }
va	10	public PlacementPart ( final Queens puzzle , final int row , final int col ) { super ( puzzle ) ; this . row = row ; this . col = col ; }
va	7	public Widget addState ( String name ) { names . addElement ( name ) ; return this ; }
va	3	public String getName ( ) { return name ; }
va	3	public UQuestBlockListener getBlockListener ( ) { return blockListener ; }
va	1	public static int findNextLargestNumber ( ) { return 1 ; }
va	9	public void setBackgroundColour ( int r , int g , int b ) { cBackground = new Color ( r , g , b ) ; }
va	4	public ArrayList < String > getTradersSurname ( ) { return tradersSurname ; }
va	8	public void adc ( InstituicaoCooperadora o ) throws Exception { list = new InstituicaoCooperadoraDAO ( ) . listar ( "" ) ; preencherTabela ( ) ; }
va	5	public RoadCommunicator ( RoadAgent road ) { this . agent = road ; }
va	7	public MyPoint ( double xVal , double yVal ) { this . xVal = xVal ; this . yVal = yVal ; }
va	6	protected void setValue ( Value value ) { this . value = value ; hasValue = true ; }
va	10	public PesquisadorControl ( PesquisadorView v , Autocompletee t ) throws Exception { this . view = v ; this . autocp = t ; }
va	4	public String toString ( ) { return from + "-" + to ; }
va	10	@ Override public String toString ( ) { return "Triangle{" + "p1=" + getP1 ( ) + "p2=" + getP2 ( ) + "p3=" + p3 + "  sideA=" + sideA + "  sideB=" + sideB + "  sideC=" + sideC + } ; }
va	5	public void setSegment1 ( LineSegment seg1 ) { this . seg1 = seg1 ; }
va	10	private BigInteger spiralSum ( int spiral ) { if ( spiral == 1 ) { return ONE ; } return spiralCornerSum ( spiral ) . add ( spiralSum ( spiral - 1 ) ) ; }
va	8	public long optLong ( int index , long defaultValue ) { try { return this . getLong ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
va	2	public int getMinimum ( ) { return min ; }
va	5	public void setCommandDescription ( String commandDescription ) { this . commandDescription = commandDescription ; }
va	2	public int recoilDamage ( int damageDealt ) { return 0 ; }
va	8	@ Override public UrlBuilder path ( String path ) { return path ( path , DEFAULT_ENCODING ) ; }
va	7	private void m_uiColor_actionPerformed ( ActionEvent e ) { m_uiColor . setSelected ( true ) ; m_uiBW . setSelected ( false ) ; }
va	2	public int size ( ) { return size ; }
va	10	public void load ( LargeBitsMap largeBitsMap , CompactTable table ) { this . largeBitsMap = largeBitsMap ; this . table = table ; loaded = true ; }
va	9	public static String getAreaCode ( int area ) { if ( area == 0 ) throw new InvalidQueryException ( "Nonexistent area" ) ; return database . busDatabase . get_string ( "area" , area , "code" ) ; }
va	6	public void usePalaceTiles ( int value ) { sharedModel . decrementPalaceTiles ( value ) ; updateSharedPanel ( ) ; }
va	7	@ Override public Log getLogger ( ) { if ( client == null ) { return new Log ( ) ; } else { return client . getLogger ( ) ; } }
va	1	public ModelTransformerTest ( ) { }
va	8	public MapObjectsChangeEvent ( MapObjects objects , MapObject object ) { super ( objects ) ; this . setObject ( object ) ; }
va	1	private Example ( ) { }
va	10	public static void bufferedCopy ( InputStream in , OutputStream out ) throws IOException { copy ( new BufferedInputStream ( in , 65536 ) , out ) ; }
va	1	public void startNewGame ( ) { }
va	2	public byte [ ] getOpUserPW ( ) { return userPW ; }
va	9	public int optInt ( String key , int defaultValue ) { try { return getInt ( key ) ; } catch ( Exception e ) { return defaultValue ; } }
va	10	@ Override public Iterator < PerlHash > iterator ( ) { if ( mode == Mode . List ) { return list . iterator ( ) ; } throw new PerlHashTypeException ( "Not a list" ) ; }
va	7	@ Test public void test_05_getAll ( ) { System . out . println ( User . getAllUsers ( ) ) ; }
va	7	public void redraw ( ) { scrolledNotesCanvas . redraw ( ) ; scoreCanvas . redraw ( ) ; pianoCanvas . redraw ( ) ; }
va	10	public TabPanelCenkury21 ( ) { setLayout ( new BorderLayout ( ) ) ; initObject ( ) ; splitPane . setDividerLocation ( 350 ) ; add ( splitPane , BorderLayout . CENTER ) ; }
va	8	private int readInt3 ( int offset ) { mbb . position ( offset ) ; return mbb . getInt ( ) & 00FFFFFF ; }
va	6	@ Test ( expected = NullPointerException . class ) public void iteratorNull ( ) { Lazy . iterator ( null ) ; }
va	4	protected void setRange ( int bombRange ) { this . bombRange = bombRange ; }
va	5	public TerminalNode , ( int i ) { return getToken ( DecafParser . , , i ) ; }
va	10	@ Override public void mouseMoved ( MouseEvent e ) { x = e . getX ( ) ; y = e . getY ( ) ; }
va	9	public ConsCell ( Sexp car , Sexp cdr ) { this . car = car ; this . cdr = cdr ; }
va	6	public MyStackArray ( int maks ) { this . maks = maks ; stack = new int [ maks ] ; }
va	8	public void keyTyped ( KeyEvent e ) { System . err . println ( "key typed " + ( char ) e . getKeyChar ( ) ) ; }
va	7	public void apagarArquivo ( ) { File file = new File ( caminho ) ; file . delete ( ) ; }
va	9	public BluetoothProtocolHandler ( StreamConnection connection , DiscoveryListener callback ) { this . connection = connection ; this . callback = callback ; }
va	7	public OutputStream ( java . io . OutputStream out ) { this ( out , ENCODE ) ; }
va	1	public boolean asBoolean ( ) { return false ; }
va	6	public void setJogadores ( List < Jogador > jogadores ) { this . jogadores = jogadores ; }
va	5	public void setTelCelular ( String telCelular ) { this . telCelular = telCelular ; }
va	1	public MSSqlServerPaginatedRepairer ( ) { }
va	10	public void print ( String msg , Object ... args ) { print ( String . format ( msg , args ) ) ; }
va	7	public RecurringJob ( JQlessClient client , Attributes atts ) { super ( client , atts ) ; }
va	9	@ Override public T query ( String query ) { urlBuilder . query ( query ) ; return page ; }
va	1	public Object1 ( ) { }
va	6	public void setParameters ( double [ ] parameters ) { c1 = parameters [ 0 ] ; c2 = parameters [ 1 ] ; }
va	9	public TypeDeclarationNode ( AbstractNode ident , AbstractNode type ) { this . ident = ident ; this . type = type ; }
va	2	public int getLeft ( ) { return left ; }
va	7	@ Override protected void bindImpl ( ) { GL30 . glBindFramebuffer ( GL30 . GL_FRAMEBUFFER , renderID ) ; }
va	9	public VisitorInfo ( SchemaType embeddedType , Object sourceObject ) { this . sourceSchemaType = embeddedType ; this . sourceObject = sourceObject ; }
va	2	public int getWidth ( ) { return width ; }
va	6	public void printTerminalError ( String message ) { terminal . printTerminalError ( message ) ; }
va	6	public Dwarf ( ) { super ( ) ; hp = 20 ; defHP = 20 ; idNo ++ ; setId ( "d" + idNo ) ; }
va	1	public boolean condition ( ) { return false ; }
va	1	public PrimitivesTest ( ) { }
va	4	public void setSelf ( boolean self ) { isSelf = self ; }
va	9	public void setRevenueFunction ( double maxRevenue ) { this . maxRevenue = this . lastRevenue = this . beforeLastRevenue = maxRevenue ; this . maxPenalty = PENALTY_PROPORTION_PER_REVENUE * maxRevenue ; }
va	1	public MySQLPaginatedRepairer ( ) { }
va	3	private void incWins ( ) { noWins += 1 ; points += 3 ; }
va	3	public boolean end ( ) { return this . eof && ! this . usePrevious ; }
va	8	@ Override public ArrayList obtenerTodos ( Object aux ) { return this . objB . obtenerTodos ( aux ) ; }
va	6	public String readString ( ) throws IOException { check ( ) ; return strings . removeFirst ( ) ; }
va	4	@ Test public void allStatementsErrors ( ) { parseErrorFromFile ( "C:allstatementsErrors.plp" , } , LSQUARE , ; ) ; }
va	5	public DragWindowListener ( JComponent jComponent ) { this . jComponent = jComponent ; }
va	10	public static String Decrypt ( String RECIPIENT_NYM_ID , String strCiphertext ) { return otapiJNI . OTAPI_Basic_Decrypt ( RECIPIENT_NYM_ID , strCiphertext ) ; }
va	1	public FollowState ( ) { super ( ) ; }
va	9	public Variant invoke ( String actionCommand , String parameter ) { return call ( actionCommand , parameter ) ; }
va	2	public boolean descriptionFromSgf ( ) { return descriptionFromSgf ; }
va	7	CommandTok tocommand ( String position ) { return new CommandTok ( new Cursor ( position ) ) ; }
va	3	public Corpus createCorpus ( ) { return new Corpus ( ) ; }
va	10	public synchronized boolean isSolid ( Vect position ) { return isSolid ( position . getX ( ) , position . getY ( ) , position . getZ ( ) ) ; }
va	6	@ Override public UnsupervisedPattern clone ( ) { return new UnsupervisedPattern ( this . inputs . clone ( ) ) ; }
va	10	@ CRRCSimEditorNode ( name = "Data" ) @ XmlElement ( name = "data" ) @ XmlElementWrapper ( name = "data" ) public ArrayList < EngineData > getData ( ) { return data ; }
va	5	private VueMenuBiblio getVueMenu ( ) { return ( VueMenuBiblio ) _vues . getFirst ( ) ; }
va	5	public void updateUserBtnText ( ) { btnChangeUser . setText ( "Change User " + coach . getUser ( ) ) ; }
va	7	public void animate ( double time ) { if ( this . gameOn && this . game != null ) { this . game . animate ( time ) ; } }
va	4	public ConsumptionTax ( int taxRate ) { taxRate_ = taxRate ; }
va	8	@ Override public void mediaChanged ( MediaPlayer arg0 , libvlc_media_t arg1 , String arg2 ) { }
va	9	public int getByte ( ) { if ( data == null ) close ( ) ; if ( pos < data . length ) return ( data [ pos ++ ] & FF ) ; return - 1 ; }
va	8	public void setNonadmDate ( String aval ) throws Exception { nonadmdate = dtfmt . parse ( aval ) ; }
va	2	public String getDescription ( ) { return "XML Schema Definitions" ; }
va	6	private void dbTFActionPerformed ( java . awt . event . ActionEvent evt ) { }
va	1	public void doBonusedResponsibility ( ) { }
va	5	public void setAgency ( Agency in ) { mAgency = in ; }
va	1	public SourceStream ( ) { }
va	8	public static Point getTuilePos ( int x , int y ) { return new Point ( ( y % 2 == 0 ? 30 : 60 ) + 60 * x , 15 + 15 * y ) ; }
va	2	public int getValue ( ) { return value ; }
va	7	public double getArcScore ( int h , int m ) { return arcScores [ h * len + m ] ; }
va	4	public StringConstant ( int stringIndex ) { this . stringIndex = stringIndex ; }
va	2	public final void penDown ( ) { penDown = true ; }
va	7	public void setStringValueStringMappings ( Map < String , String > stringValueStringMappings ) { this . stringValueStringMappings = stringValueStringMappings ; }
va	6	public void ve ( ) { if ( g2d != null ) { g2d . clearRect ( 0 , 0 , SIZE , SIZE ) ; } }
va	7	@ Inject public Kkk ( Provider < Aaa > constructor ) { this . constructor = constructor ; }
va	2	@ Override public int keySize ( ) { return 21 ; }
va	4	public void setEndurance ( int endurance ) { this . endurance = endurance ; }
va	1	public Node ( ) { }
va	4	@ Override public void mouseEntered ( MouseEvent e ) { }
va	6	private void serializeText ( Node n ) throws IOException { serializeCharacterChunk ( n , null ) ; }
va	3	public String getFonction ( ) { return fonction ; }
va	1	public int statDrop ( ) { return 0 ; }
va	2	public int getPlayerNumber ( ) { return this . player_number ; }
va	5	@ Override public FormType getType ( ) { return FormType . MANAGERLOGIN ; }
va	7	@ Override public String toString ( ) { return "api_rate_limits [api=" + api + "  limit=" + limit + "  limitTimeUnit=" + limitTimeUnit + "  remainingHits=" + remainingHits + "]" ; }
va	9	public static Packet createPingPacket ( int connectionId , long latency ) { return new Packet ( connectionId , MessageType . PING , "" + latency ) ; }
va	3	public String [ ] getTags ( ) { return tags ; }
va	3	public String getWorkDir ( ) { return workDir ; }
va	3	public int getLod ( ) { return core . getLod ( ) ; }
va	9	public Pair ( K first , V second ) { this . first = first ; this . second = second ; }
va	5	public void setExmEndDate ( Date exmEndDate ) { this . exmEndDate = exmEndDate ; }
va	5	Earth ( final String imgUrl ) { super ( "Earth" , SYMBOL , imgUrl ) ; }
va	9	@ Override public void deposit ( double amount ) throws IOException , IllegalArgumentException , InactiveException { acc . deposit ( amount ) ; }
va	3	public Game getGame ( ) { return fGame ; }
va	10	public CursoTabela ( ) throws Exception { view . setBorder ( new TitledBorder ( new EtchedBorder ( ) , "Curso" ) ) ; list = new CursoDAO ( ) . listar ( "" ) ; preencherTabela ( ) ; }
va	2	public boolean isLate ( ) { return late ; }
va	8	public static final int getPAL ( int colorIndex , int luminanceIndex ) { if ( colorIndex > 15 || luminanceIndex > 15 ) return 000000 ; return PAL [ colorIndex * 16 + luminanceIndex ] ; }
va	1	public long op ( ) { return 1 ; }
va	1	private void carregaComentaris ( ) { }
va	5	public RDFDataset ( UniqueNamer namer ) { this ( ) ; this . namer = namer ; }
va	6	public int indexOfAnimation ( Animation animation ) { return animations . indexOf ( animation ) ; }
va	3	public int getLabelsCount ( ) { return labels_ . size ( ) ; }
va	3	public void prepareRedis ( ) { this . jedis . flushDB ( ) ; }
va	5	public void setEditDate ( Date edit_date ) { this . edit_date = edit_date ; }
va	1	public Kayttoliittyma ( ) { }
va	7	public static JFrame viewAsFrame ( ITimedAutomata < ? > automata ) { return createFrame ( createPanel ( automata ) ) ; }
va	6	public void writeData ( Client client ) { client . sendData ( getData ( ) ) ; }
va	2	public double getTeMod ( ) { return teMod ; }
va	4	public Bank ( long bic ) { this . bic = bic ; }
va	6	public static ModelManager getInstance ( ) { if ( defaultInstance == null ) { defaultInstance = new ModelManager ( ) ; } return defaultInstance ; }
va	3	public LabelStyle getLabelStyle ( ) { return labelStyle ; }
va	1	public SimpleFactory ( ) { }
va	4	public ArrayList < Colony > getColonies ( ) { return colonies ; }
va	10	public DadosPartida ( AplJogo apl ) { this . jogo = apl ; this . dataCriacaoPartida = apl . getDataCriacao ( ) ; this . dataRegistroPartida = new GregorianCalendar ( ) ; }
va	10	public int add ( int increase ) { writeLock . lock ( ) ; try { count = count + increase ; } finally { writeLock . unlock ( ) ; } return count ; }
va	9	public Record ( Row row , Block block ) { this . row = row ; this . block = block ; }
va	2	public int getOmImages ( ) { return omImages ; }
va	4	public int rocPLookback ( int optInTimePeriod ) { return super . rocPLookback ( optInTimePeriod ) ; }
va	10	public SurfacePercept ( Sensor source , Scene scene ) { super ( TYPE . POSITIVE , source ) ; _scene = scene ; }
va	4	public String decode ( String cipher ) { return null ; }
va	10	void say ( int i ) { Integer local = new Integer ( i ) ; out . print ( local . toString ( ) ) ; }
va	3	public Integer getOrderStatus ( ) { return orderStatus ; }
va	5	public void start ( ) { this . startTime = System . currentTimeMillis ( ) ; this . running = true ; }
va	8	_Fields ( short thriftId , String fieldName ) { _thriftId = thriftId ; _fieldName = fieldName ; }
va	2	public boolean getFirstRunWizardDone ( ) { return firstRunWizardDone ; }
va	3	public void componentShown ( ComponentEvent e ) { }
va	1	public Piece ( ) { }
va	1	private MatchDao ( ) { }
va	8	public int getAddrIndex ( int addr ) { Collections . sort ( eibAddrTable ) ; return eibAddrTable . indexOf ( addr ) ; }
va	8	public Option ( String opt , String description ) throws IllegalArgumentException { this ( opt , null , false , description ) ; }
va	4	public List < Event > getEvents ( ) { return events ; }
va	9	@ Override public void run ( ) { while ( true ) { try { controller . addToChat ( server . gameChat . pop ( ) , true ) ; } catch ( InterruptedException e ) { break ; } } }
va	1	private static short getDefaultMapIconIndex ( ) { return 0 ; }
va	3	public String getName ( ) { return name ; }
va	2	public boolean isAuthorized ( ) { return authorized ; }
va	7	public Object getMetadata ( String key ) { return metadata . get ( key ) ; }
va	7	@ Override public void writeData ( GameServer server ) { server . sendDataToAllClients ( getData ( ) ) ; }
va	10	public default void println ( final String value , final int offset , final int length ) { writer ( ) . println ( value , offset , length ) ; }
va	7	private void load ( ) { long [ ] arr = FastIO . readLongArray ( filename ( ) ) ; addToMap ( arr ) ; }
va	3	public GameMode getGameMode ( ) { return gameMode ; }
va	2	public boolean hasTower ( ) { if ( tower != null ) return true ; else return false ; }
va	9	public void remove ( Component comp ) { if ( isRootPaneCheckingEnabled ( ) ) { centerPanel . remove ( comp ) ; } else { super . remove ( comp ) ; } }
va	2	public long getId ( ) { return id ; }
va	2	public int getIbo ( ) { return ibo ; }
va	8	public WorldPhysicHandler ( Level level ) { entities = new ArrayList < AbstractEntity > ( ) ; this . level = level ; }
va	1	protected HttpMessageEncoder ( ) { super ( ) ; }
va	4	public void setTempshares ( long tempshares ) { this . tempshares = tempshares ; }
va	3	public String getDestination ( ) { return sDestination ; }
va	8	public ResponseToProcess ( int responseCode , byte [ ] responseByteArray ) { this ( responseCode , responseByteArray , new HashMap < String , String > ( ) ) ; }
va	2	public boolean getEscapeHtml ( ) { return escapeHtml ; }
va	8	public EditorObject objAt ( Point p ) { return ( EditorObject ) gp . objAt ( p ) ; }
va	8	public LivePropSet ( PropSource source , Collection < String > propKeys ) { super ( source , propKeys ) ; }
va	4	public BestDeal ( int td ) { targetDelivery = td ; }
va	8	public double getRightGap ( Unit unit ) { return calculateGap ( rightMargin , rightBorder , rightPadding , unit ) ; }
va	8	public SSCDatabaseLockedException_Exception ( String message , SSCDatabaseLockedException faultInfo ) { super ( message ) ; this . faultInfo = faultInfo ; }
va	9	public ServerGame ( Player newcreator ) { super ( newcreator ) ; this . creator = newcreator ; players . add ( newcreator ) ; }
va	8	private int hash3 ( long h ) { h *= PRIME3 ; return ( int ) ( ( h ^ h >>> hashShift ) & mask ) ; }
va	5	public void setCreationdate ( XMLGregorianCalendar value ) { this . creationdate = value ; }
va	8	public void horizontalAlignCenter ( int y1 , int y2 ) { super . horizontalAlignCenter ( y1 , y2 ) ; this . setY ( this . getY ( ) ) ; }
va	1	public Address ( ) { }
va	6	@ Override public void updateNCharacterStream ( int columnIndex , Reader x ) throws SQLException { }
va	3	public T getValue ( ) { return value ; }
va	1	public void updateModel ( ) { }
va	7	void enableAudio ( ) { if ( this . backgroundAudio == null ) { this . backgroundAudio = this . getAudioClip ( this . getCodeBase ( ) , "audio/background0.wav" ) ; } this . backgroundAudio . loop ( ) ; }
va	4	public Tree < Board > getTree ( ) { return this . tree ; }
va	6	public void removeAllMembersFromGroup ( String groupName ) { this . storage . removeAllMembersFromGroup ( groupName ) ; }
va	6	@ Test public void verifyInvalidMarkerMapsToNull ( ) throws Exception { assertNull ( dartData . getValue ( "A1" , "M100" ) ) ; }
va	7	public static boolean isWindows ( String platform ) { return isWindows32 ( platform ) || isWindows64 ( platform ) ; }
va	1	public LogFormatter ( ) { super ( ) ; }
va	3	public String getName ( ) { return name ; }
va	3	public Integer getCarryTimeID ( ) { return carryTimeID ; }
va	10	public Editora ( String nome , Model uf ) { this . nome = nome ; this . uf = ( Uf ) uf ; }
va	10	@ Override public void addColumn ( TableColumn aColumn ) { tableColumns . add ( aColumn ) ; fireColumnAdded ( new TableColumnModelEvent ( this , 0 , getColumnCount ( ) - 1 ) ) ; }
va	8	public void scale ( double sx , double sy ) { frameWidth *= sx ; frameHeight *= sy ; repaint ( ) ; }
va	8	private Uninstaller ( final ModModel [ ] mods ) { super ( "Uninstaller.title" , WindowConstants . HIDE_ON_CLOSE ) ; this . mods = mods ; start ( ) ; }
va	2	public int count ( ) { return count ; }
va	5	public void setCar ( Car car ) { this . car = car ; }
va	9	public Hardware getHardware ( java . lang . Integer id ) { return getFacade ( ) . find ( id ) ; }
va	5	public void setMaxId ( Integer max ) { this . maxId = max ; }
va	3	@ Override public void rejectView ( ) { clearView ( ) ; }
va	10	public void setNaturalInc2011 ( double naturalInc2011 ) { double oldNaturalInc2011 = this . naturalInc2011 ; this . naturalInc2011 = naturalInc2011 ; changeSupport . firePropertyChange ( "naturalInc2011" , oldNaturalInc2011 , naturalInc2011 ) ; }
va	5	public void setView ( View tw ) { view = tw ; }
va	4	@ Override public void setObjectBehind ( GameObject object ) { }
va	7	public final float getConfidence ( Level level ) { return this . iterator . getConfidence ( level . value ) ; }
va	8	public Component getComponentBefore ( Container container , Component component ) { return cycle ( component , - 1 ) ; }
va	9	public void addClass ( String canonicalBreedingClassName , boolean instantiable ) { breedingClasses . add ( new BreedingClassSetup ( canonicalBreedingClassName , instantiable ) ) ; }
va	5	public String description ( ) { return "Custom SSS: " + brawl + "/" + melee + " stages  " + stages + " total stages defined" ; }
va	9	public void removeEndereco ( Endereco endereco ) { if ( this . enderecos . equals ( endereco ) ) { enderecos . remove ( endereco ) ; } }
va	1	public StyleProp ( ) { this ( null , null , null ) ; }
va	8	private void bNovoActionPerformed ( java . awt . event . ActionEvent evt ) { alteraModo ( n ) ; }
va	4	public void setOutputSkipFactor ( int i ) { mOutputSkipFactor = i ; }
va	10	public PsdLong ( PsdInputStream stream ) throws IOException { value = stream . readInt ( ) ; logger . finest ( "PsdLong.value: " + value ) ; }
va	8	protected boolean eq_v_b ( CharSequence s ) { return eq_s_b ( s . length ( ) , s . toString ( ) ) ; }
va	1	public boolean handleReOpenApplication ( ) { return true ; }
va	9	public int optInt ( String key , int defaultValue ) { try { return getInt ( key ) ; } catch ( Exception e ) { return defaultValue ; } }
va	10	public final float angle ( ) { assert ! isZero ( ) ; float angle = ( float ) atan2 ( y , x ) ; return angle < 0 ? angle + ( float ) ( 2 * PI ) : angle ; }
va	6	public void init ( ) { super . init ( ) ; displayPane . setCursor ( getPredefinedCursor ( HAND_CURSOR ) ) ; }
va	5	public CreditDAOImpl ( Connection con ) { super ( ) ; this . con = con ; }
va	9	public Ore createOre ( int i ) { Ore ore = new Ore ( i , glapi ) ; return ore ; }
va	2	public int getWidth ( ) { return width ; }
va	3	public Ponto3D getCOP ( ) { return cop ; }
va	5	public Position getPosition ( ) { return new Position ( x , y ) ; }
va	5	public List < String > getTimeSeriesNames ( ) { return this . graphPanel . getTimeSeriesNames ( ) ; }
va	3	public String getFirstName ( ) { return firstName ; }
va	6	@ Override public void setConnection ( Connection connection ) { con = connection ; }
va	2	public int getIconHeight ( ) { return height ; }
va	4	public void setTilt ( double tilt ) { this . tilt = tilt ; }
va	4	public void setId ( int id ) { this . id = id ; }
va	2	public int getVisit ( ) { return visit ; }
va	7	public void viewAll ( ) { mainWindow . setCardTableData ( register . getCardData ( ) ) ; mainWindow . setMessage ( "Kaikki kortit" , false ) ; }
va	8	public List < BaseNodeEntity > getChilds ( ) { if ( childs == null ) { childs = new ArrayList < BaseNodeEntity > ( ) ; } return childs ; }
va	6	public void setP2PiecesX ( ArrayList < Integer > p2PiecesX ) { this . p2PiecesX = p2PiecesX ; }
va	4	public void setListCnt ( int listCnt ) { this . listCnt = listCnt ; }
va	3	public Object getRef ( ) { return ref ; }
va	9	private void createHands ( ) throws EmptyDeckException { for ( Player player : this . players ) { player . setHand ( new Hand ( this . deck ) ) ; } }
va	4	public Enumeration keys ( ) { return this . myHashMap . keys ( ) ; }
va	9	public static int bernstein2 ( byte [ ] items ) { int hash = 5381 ; for ( int item : items ) { hash = hash * 33 ^ item ; } return hash ; }
va	1	public boolean isPrimitive ( ) { return true ; }
va	1	public OptionsPanel ( ) { }
va	3	public final int getUseCount ( ) { return uses . size ( ) ; }
va	8	public static Soldier newSoldier ( String model ) { return world . spawnSoldier ( newWorldId ( ) , model ) ; }
va	3	public static UnitValue getMinimumButtonWidth ( ) { return BUTT_WIDTH ; }
va	8	public List < EWICDetGrp > getEWICDetGrp ( ) { if ( ewicDetGrp == null ) { ewicDetGrp = new ArrayList < EWICDetGrp > ( ) ; } return this . ewicDetGrp ; }
va	10	private boolean tarkistaSyotteet ( ) { for ( int i = 0 ; i < kysymykset . values ( ) . size ( ) ; i ++ ) { if ( kysymysKomponentit [ i ] . getVastaus ( ) == null ) { return false ; } } return true ; }
va	8	@ Override public void setEvidence ( Map < BayesNode , String > evidence ) { this . evidence = evidence ; }
va	10	public int getEnergy ( Cards d [ ] , int c ) { int cardValue ; cardValue = d [ c ] . getCardValue ( ) ; return cardValue ; }
va	4	@ Override public File getMusicFolder ( ) { return get ( "My Music" ) ; }
va	6	public void launchPlayMenu ( ) { PlayMenuView playMenu = new PlayMenuView ( ) ; playMenu . getInput ( ) ; }
va	2	public float getPressure ( ) { return pressure ; }
va	3	public final WebSocketFactory getWebSocketFactory ( ) { return wsf ; }
va	8	@ Test public void test_getSequenceLength_1 ( ) { SimonSaysGame g = new SimonSaysGame ( ) ; assertEquals ( 1 , g . getSequenceLength ( ) ) ; }
va	10	public void insert ( int i ) { if ( root == null ) { root = new TrinaryNode ( i ) ; return ; } root = root . insert ( i ) ; }
va	8	public java . util . Iterator < ByteBuffer > get_items_iterator ( ) { return ( this . items == null ) ? null : this . items . iterator ( ) ; }
va	9	public void disconnected ( ) { try { sock . close ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } catch ( NullPointerException e ) { } }
va	7	@ Test public void testAdjacencyGraphSet ( ) { g . addEdge ( 1 , 1 ) ; assert . assertTrue ( g . hasEdge ( 1 , 1 ) ) ; }
va	10	@ Override public String toString ( ) { return String . format ( "[%s  %s  %s  %d  %d]" , this . word , this . POS , this . role , this . certaintyU , this . certaintyU ) ; }
va	7	public GrantStepsListModel ( ) { setGrantType ( OAuthPropertyBean . AUTHORIZATION_GRANT ) ; OAuthPropertyBean . getInstance ( ) . addChangeListener ( this ) ; }
va	9	public void unchoke ( ) { if ( this . choking ) { logger . trace ( "Unchoking " + this ) ; this . send ( Message . UnchokeMessage . craft ( ) ) ; this . choking = false ; } }
va	4	public void setActivo ( boolean activo ) { this . activo = activo ; }
va	9	public boolean useTech ( TechType tech , Position target ) { return useTech_native ( pointer , tech , target ) ; }
va	6	public E get ( int index ) { return ls . get ( index ) ; }
va	8	public SendMatchResultCommand ( UUID matchId , MatchResult gameStat ) { super ( matchId ) ; this . gameStat = gameStat ; }
va	8	@ Override public boolean equals ( Object obj ) { if ( ! ( obj instanceof ID3v24Frame ) ) return false ; return super . equals ( obj ) ; }
va	4	public EvoStrategy ( int mutants ) { this . mutants = mutants ; }
va	2	public int getStyle ( ) { return style ; }
va	10	@ Override public String toString ( ) { return "Favorites [" + "favorited_time=" + favoritedTime + "  status=" + status . toString ( ) + "  FavoritesTag=" + ( ( tags == null ) ? "null" : tags . toString ( ) ) + "  total_number = " + totalNumber + "]" ; }
va	7	@ Override public void setVals ( Props props ) { propSet . setVals ( props ) ; }
va	3	@ Override public String toString ( ) { return "[DocumentStartEvent]" ; }
va	7	public boolean isNull ( String key ) { return JSONObject . null . equals ( opt ( key ) ) ; }
va	8	public static void main ( String [ ] args ) { Solution sol = new BinaryTreeMaximumPathSum ( ) ; sol . runTest ( ) ; }
va	5	public String getSourceName ( Book book ) { return sourceFile ; }
va	4	static private final int jjMoveStringLiteralDfa0_0 ( ) { switch ( curChar ) { case 60 : return jjMoveStringLiteralDfa1_0 ( 10 ) ; default : return jjMoveNfa_0 ( 0 , 0 ) ; } }
va	1	private Config ( ) { }
va	2	public int getModeExtension ( ) { return m_iModeExt ; }
va	1	public FreeFormParser ( ) { }
va	3	public boolean cancelConstruction ( ) { return cancelConstruction_native ( pointer ) ; }
va	5	public LDAPAdminServiceProviderFactory ( String resource ) throws ServiceFactoryInitException { super ( resource ) ; }
va	1	public void aboutToHidePanel ( ) { }
va	1	public JelllyTotsTestCrudService ( ) { }
va	2	protected AP_p9sk2 ( ) { skVersion = 2 ; }
va	2	public int getStamina ( ) { return stamina ; }
va	1	private Singleton5 ( ) { }
va	10	public void setForeground ( Color value ) { if ( window != null ) { window . setForeground ( value ) ; } else { values . put ( "setForeground" , value ) ; } }
va	6	@ Override public Material getMaterial ( ) { return objects . get ( 0 ) . getMaterial ( ) ; }
va	2	public int getIntAdderIndex ( ) { return intAdderIndex ; }
va	4	public TabModel getTabModelBuilding ( ) { return model . getTabModelBuilding ( ) ; }
va	8	public long optLong ( int index , long defaultValue ) { try { return this . getLong ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
va	10	public static void updateProfileDomain ( TBlog tblog ) throws TBlogException , IOException { String smallDomain = "openapitest.t.sohu.com" ; tblog . updateProfileDomain ( smallDomain ) ; }
va	10	public boolean canMorph ( UnitType uType , boolean checkCanIssueCommandType , boolean checkCommandibility ) { return canMorph_native ( pointer , uType , checkCanIssueCommandType , checkCommandibility ) ; }
va	7	public GetUserCommand ( String theUsername ) { username = theUsername ; user = null ; ready = false ; }
va	10	@ JsonAnySetter public void setAdditionalProperty ( String name , Object value ) { this . additionalProperties . put ( name , value ) ; }
va	7	public static void main ( String [ ] args ) { System . out . println ( UUID ( ) ) ; }
va	2	public int getHP ( ) { return hp ; }
va	6	@ Override public String getColumnName ( final int aColumn ) { return cNames [ aColumn ] ; }
va	10	public SearchButton ( IMediator mediator , String text ) { super ( text ) ; this . mediator = mediator ; mediator . registerSearchButton ( this ) ; }
va	6	public Map < String , Set < String >> getColumns ( ) { return columns ; }
va	5	public void setName ( String name ) { this . name = name ; }
va	3	public ReportcDaily getRcd ( ) { return rcd ; }
va	2	public MainForm ( ) { initComponents ( ) ; }
va	3	public String getDetail ( ) { return detail ; }
va	5	public JGameError ( String message ) { msg = message ; }
va	9	public WindowImp newWindowImp ( String title , Window w ) { return new SwingWindow ( title , w ) ; }
va	1	protected void onStopMoving ( ) { }
va	2	public boolean isRight ( ) { return isRight ; }
va	8	public ColumnVector ( final List < float > elements ) { if ( elements == null ) { throw new IllegalArgumentException ( "The parameter 'elements' must not be null!" ) ; } this . elements = new ArrayList < float > ( elements ) ; }
va	8	public CollisionMapDesigner ( ) { super ( true ) ; this . setOpaque ( false ) ; addMouseListener ( this ) ; addMouseMotionListener ( this ) ; curPolygon = new Poly ( ) ; visGraph = new VisibilityGraph ( ) ; }
va	7	public void itemStateChanged ( ItemEvent e ) { System . out . println ( e ) ; }
va	5	public void setArch ( TTTGameArch arch ) { _arch = arch ; }
va	5	public void setServicID ( String value ) { this . servicID = value ; }
va	2	public int getPhone2 ( ) { return phone2 ; }
va	7	public void setStyle ( String style ) { this . style = style ; console . refreshEntry ( this ) ; }
va	1	public NoDataException ( ) { }
va	2	public int getVersion ( ) { return version ; }
va	7	public ASTVectorIndexExp ( ASTNode e , ASTNode index ) { super ( "VectorIndex" , e , index ) ; }
va	2	public int getIdCategory ( ) { return id_category ; }
va	9	public void testAgregarHabitacion ( ) { hotelero . agregarHabitacion ( mockHotel1 , mockHabitacion ) ; verify ( mockHotel1 ) . agregarHabitacion ( mockHabitacion ) ; }
va	10	@ Override public int get ( int field ) { if ( field != GregCalPlus . MONTH ) return super . get ( field ) ; else return super . get ( field ) + 1 ; }
va	8	public ClassRoom ( String roomNumber , int noOfSeats ) { this . roomNumber = roomNumber ; this . noOfSeats = noOfSeats ; }
va	3	public String getSeries ( ) { return series ; }
va	6	public void setNoPembelian ( String noPembelian ) { noPembelianTextField . setText ( noPembelian ) ; }
va	3	public String getId ( ) { return id ; }
va	4	public void setKeyPress ( int keyPress ) { this . keyPress = keyPress ; }
va	8	public void addPause ( long millis ) { if ( millis < 1 ) { throw new IllegalArgumentException ( "Pause given a negative value" ) ; } events . add ( new PauseEvent ( millis ) ) ; }
va	5	public AbstractSensorData ( String packetName ) { this . packetName = packetName ; }
va	8	public AbstractChart < T , S > setCaptureRightClick ( boolean captureRightClick ) { getChartConfiguration ( ) . setCaptureRightClick ( captureRightClick ) ; return this ; }
va	7	public String toString ( ) { try { return [ + this . join ( " " ) + ] ; } catch ( Exception e ) { return null ; } }
va	1	public PlayersListPanel ( ) { this ( null ) ; }
va	6	@ Override public void exitAssignment ( @ NotNull SSTParser . AssignmentContext ctx ) { }
va	10	public void paint ( Graphics g ) { icon . paintIcon ( this , g , vxd . iconborder , vxd . iconborder ) ; }
va	8	@ Test public void testGetId ( ) { System . out . println ( "getId test: id is set to 0" ) ; assertEquals ( 0 , claim . getId ( ) ) ; }
va	8	@ Test public void testDeserializeByeMessage ( ) { assertEquals ( new ByeMessage ( ) , MessageDeserializer . Deserialize ( new ByeMessage ( ) . Serialize ( ) ) ) ; }
va	10	public ServiceFinder [ ] getFinders ( ) { List < ServiceFinder > finders = FINDERS . get ( ) ; return finders . toArray ( new ServiceFinder [ 0 ] ) ; }
va	4	public void setId ( long id ) { this . id = id ; }
va	2	public static int createNewEntity ( ) { return ++ currentEntity ; }
va	4	public void setAudit ( boolean audit ) { this . audit = audit ; }
va	1	private CushyDBUtils ( ) { }
va	7	public Object decode ( byte [ ] value ) { return new Integer ( ByteUtil . retrieveUnsignedShort ( value , 0 ) ) ; }
va	6	public static void setSimulator ( Simulator simulator ) { MainProgram . simulator = simulator ; }
va	5	public String optString ( int index ) { return this . optString ( index , "" ) ; }
va	6	public void unknownWordBootstrappingPreprocessing ( DataHolder dataholderHandler ) { this . myLearnerUtility . tagAllSentences ( dataholderHandler , "singletag" , "sentence" ) ; }
va	5	public void setSexo ( String x ) { this . sexo = x ; }
va	3	private void quit ( ) { System . exit ( 0 ) ; }
va	10	void onMouseScroll ( double xoffset , double yoffset ) { for ( MouseScrollEvent e : _mouseScroll ) { e . run ( xoffset , yoffset ) ; } }
va	9	public < T > void bindInstance ( class < T > classType , T instance ) { bindProvider ( classType , ( ) -> instance ) ; }
va	8	public void setMap ( String mapName ) { if ( mapName == "kingsClashMap" ) { initializeKingsClashMap ( ) ; initializeKingsClashMapUnits ( ) ; } else { initializeKingsClashMap ( ) ; initializeKingsClashMapUnits ( ) ; } }
va	2	public boolean isCached ( ) { return this . cached ; }
va	9	@ Override public void exitRule ( ParseTreeListener listener ) { if ( listener instanceof SSTListener ) ( ( SSTListener ) listener ) . exitBrackets ( this ) ; }
va	3	public Integer getCity ( ) { return city ; }
va	4	public void SetSize ( byte Size ) { this . GameSize = Size ; }
va	1	public AbstractLight ( ) { }
va	9	public Object jjtAccept ( DOTParserVisitor visitor , Object data ) { return visitor . visit ( this , data ) ; }
va	6	public void setDoneSet ( Collection < LessFile > doneSet ) { this . doneSet = doneSet ; }
va	3	public JPanel getSouthRightPanel ( ) { return southOfRightCanvas ; }
va	9	@ Override public T visitMethod_call1 ( @ NotNull DecafParser . Method_call1Context ctx ) { return visitChildren ( ctx ) ; }
va	9	public void sendDocumentToAddress ( OutcomingDocument outcomingDocument , Address address ) { publicService . sendDocumentToAddress ( outcomingDocument , address ) ; }
va	7	protected void repeatAction ( ) { if ( _action . equals ( "forward" ) ) { _player . skip ( 200 ) ; } else { _player . skip ( - 200 ) ; } }
va	9	public void upload ( ) throws IOException { status = UploadStatus . UPLOADING ; deferredUpload ( ) ; status = UploadStatus . UPLOADED ; }
va	5	public void setEstado ( String estado ) { this . estado = estado ; }
va	3	public synchronized String save ( ) { return save ( null ) ; }
va	1	public Location ( ) { }
va	10	public void close ( ) { try { closed = true ; this . in . close ( ) ; this . out . close ( ) ; this . socket . close ( ) ; } catch ( IOException e ) { } }
va	2	public boolean getBooleanValue ( ) { return value ; }
va	2	protected final Object clone ( ) { return this ; }
va	3	public String getValor ( ) { return valor ; }
va	7	private void jRadioButtonSondageChoix2ActionPerformed ( java . awt . event . ActionEvent evt ) { sondageChoix = 2 ; }
va	10	public void Excluir ( Evento evento ) throws Exception { if ( evento == null ) { throw new Exception ( "Selecione um evento" ) ; } EventoController . obterInstancia ( ) . Excluir ( evento ) ; }
va	6	@ Override public String toString ( ) { return power + "/" + attackDelay + "/" + health ; }
va	10	@ Override public void actionPerformed ( ActionEvent e ) { this . model . setValue ( ( ( AbstractButton ) e . getSource ( ) ) . isSelected ( ) ) ; }
va	9	@ Test public void testToString ( ) { assertEquals ( m . getNetworkGroup ( ) + ":" + m . getNetworkPort ( ) , m . toString ( ) ) ; }
va	2	public int size ( ) { return N ; }
va	8	@ Before public void setUp ( ) throws Exception { now = new Date ( ) ; mock = new MockChatResponse ( "testname" , "something written." , now , 96 ) ; }
va	3	public static BufferedImage getBrokeRouterImgSmall ( ) { return brokeRouterImgSmall ; }
va	1	private Pages ( ) { }
va	5	public Variant ( int in ) { this ( new Integer ( in ) , VariantInt , false ) ; }
va	7	public static final MessageConsumer lookup ( SubSystemNames subsystem ) { return instances . get ( subsystem ) ; }
va	4	@ Override public long getMask ( ) { return EventMulticaster . IRC_PRIVATE_MESSAGE_EVENT ; }
va	7	public ScrollAlert ( String message , String title ) { this ( message , title , "Disclaimer: Text in the below box may be all on one line " + " just line wrapped for ease of display." ) ; }
va	9	private void initValues ( byte decimalPlaces , String label ) { data = new Number ( decimalPlaces ) ; this . label = label ; }
va	4	public Container ( Node parent ) { super ( parent ) ; }
va	6	@ JsonProperty ( "ID" ) public void setID ( String ID ) { this . ID = ID ; }
va	8	public ConvexPolygon ( Iterable < ? extends Vector > vertices ) { this . vertices = ImmutableList . copyOf ( vertices ) ; }
va	7	@ WebEndpoint ( name = "DirectRoutePort" ) public DirectRoute getDirectRoutePort ( ) { return super . getPort ( new QName ( "http://PKG_DirectRoute/" , "DirectRoutePort" ) , DirectRoute . class ) ; }
va	2	public boolean isGerouPatente ( ) { return gerouPatente ; }
va	6	@ Override public void visit ( FSP_TresholdOrJoin g ) { str += "\t\t Gate = " + g + "\n" ; }
va	3	public TestClass getT2 ( ) { return t2 ; }
va	1	public Extraction ( ) { super ( ) ; }
va	7	void setRain ( boolean value ) { super . setupFields ( ) ; ( ( UnitBoolean ) fields [ 1 ] ) . setValue ( value ) ; }
va	7	public Object remove ( String key ) { return this . map . remove ( key ) ; }
va	3	public Zone getZone ( ) { return zone ; }
va	4	protected int getYBounds ( double t [ ] ) { return getCubeBounds ( 1 , t ) ; }
va	7	Customer Departure ( ) { Customer c = customer ; customer = null ; return c ; }
va	5	public void setSoundListener ( SoundListener soundListener ) { this . soundListener = soundListener ; }
va	6	public Coord random_offset_ip ( double max ) { return add ( random ( max ) ) ; }
va	9	public void mousePressed ( MouseEvent e ) { mousePressedX = e . getX ( ) ; mousePressedY = e . getY ( ) ; }
va	6	public TableDateRender ( SimpleDateFormat formatter ) { this ( formatter , JLabel . LEFT ) ; }
va	4	public InvalidSourceException ( final String message ) { super ( message ) ; }
va	3	public Account ( ) throws ModelException { update ( ) ; }
va	8	private void addDrawingController ( ) { DrawingController controller = new DrawingController ( ) ; addMouseListener ( controller ) ; addMouseMotionListener ( controller ) ; }
va	3	public void mouseExited ( MouseEvent e ) { }
va	8	public double optDouble ( int index , double defaultValue ) { try { return this . getDouble ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
va	4	public boolean isCallbackSet ( ) { return otapiJNI . OTCaller_isCallbackSet ( swigCPtr , this ) ; }
va	5	@ Override public void insertUpdate ( DocumentEvent arg0 ) { updateProperties ( ) ; }
va	4	public void setDelay ( int delay ) { this . delay = delay ; }
va	2	@ Override public void update ( ) { }
va	2	public void jump ( ) { jump = true ; }
va	2	public int getNbInsert ( ) { return nbInsert ; }
va	6	public void report ( long l ) { doReport ( String . valueOf ( l ) ) ; }
va	4	public Type getType ( ) { return Type . INT_TYPE ; }
va	5	@ Override public String toString ( ) { return "Innehavare: " + this . ownerName + "\n" + "Saldo: " + this . balance + "\n" ; }
va	1	public EchoTCPMessageHandler ( ) { super ( "echotcpmessagehandler" ) ; }
va	6	private void MulitlineComment_action ( RuleContext _localctx , int actionIndex ) { switch ( actionIndex ) { case 1 : _channel = 1 ; break ; } }
va	6	@ Override public void close ( ) { NativeMethods . blobFree ( blobHandle . close ( ) ) ; }
va	3	public void pop ( ) { render . pop ( ) ; }
va	3	@ Override public String getName ( ) { return "Choice Heap/Quick" ; }
va	2	public int getId ( ) { return id ; }
va	8	public void testRegisterObserver ( ) { weatherData . registerObserver ( new MockObserver ( ) ) ; assertEquals ( "Only a single observer must be registered" , 1 , weatherData . observers . size ( ) ) ; }
va	4	public List < FileProxyListener > getFileListeners ( ) { return listeners ; }
va	9	@ Override public T apply ( T object ) { invocationChain . execute ( object ) ; return object ; }
va	10	@ AfterClass public static void cleanup ( ) throws Exception { ag . unregister ( ac ) ; amq . close ( ) ; ag . stop ( ) ; }
va	1	protected HttpContentDecoder ( ) { super ( ) ; }
va	5	public void mouseEntered ( MouseEvent e ) { updateLocale ( e ) ; }
va	8	static public boolean isEqual ( float a , float b ) { return Math . abs ( a - b ) <= FLOAT_ROUNDING_ERROR ; }
va	8	@ Override public void runQueryForAd ( Query processedQuery , int _numResults , ScoredDocs scoredAdDocs ) { throw new UnsupportedOperationException ( "should be implemented first" ) ; }
va	7	public SquarePizza ( Size size ) { super ( Type . SQUARE , size ) ; make ( ) ; }
va	1	private ParsingTreeValidator ( ) { }
va	4	public void setTolerence ( double tolerence ) { this . tolerence = tolerence ; }
va	2	public boolean isLast ( ) { return isLast ; }
va	9	public scanner ( java . io . InputStream in ) { this ( new java . io . InputStreamReader ( in ) ) ; }
va	1	public void function ( ) { }
va	10	private void selectDataSource ( ) { switch ( dataSourceCombo . getSelectedIndex ( ) ) { case 0 : DatabaseManager . setGetQuestionsFromDatabaseStrategy ( new GetQuestionsFromSqliteDatabase ( ) ) ; break ; case 1 : DatabaseManager . setGetQuestionsFromDatabaseStrategy ( getMySQLQuestionsStrategy ( ) ) ; break ; default : throw new NotImplementedException ( ) ; } }
va	3	@ Override public String getName ( ) { return "user" ; }
va	9	Starter ( File folder , String [ ] args ) { this . arguments = args ; this . extensionFolder = folder ; }
va	4	public void setClz ( class < ? > clz ) { this . clz = clz ; }
va	7	public List < VariableDefinition > getLocalVariableDefinitions ( ) { return new ArrayList < > ( namespace . names . values ( ) ) ; }
va	4	public synchronized void setPrice ( double price ) { this . price = price ; }
va	7	public String toString ( ) { return "[df=" + this . df + " xmin=" + this . xmin + " shifting=" + this . shifting + " scaling=" + this . scaling + " D=" + ksDistance + "]" ; }
va	9	public GetObjectPolicyRequest ( String paramString1 , String paramString2 ) { super ( paramString1 , paramString2 , HttpMethodName . GET ) ; }
va	8	@ Override public int hashCode ( ) { int hash = 7 ; hash = 11 * hash + ( int ) ( this . id ^ ( this . id >>> 32 ) ) ; return hash ; }
va	9	@ Test ( expected = IllegalArgumentException . class ) @ Category ( FastTest . class ) public void testNotAMappedEnum ( ) { MappedEnumHelper . forEnum ( NotAMappedEnum . class ) ; }
va	4	public HTTPTokener ( String string ) { super ( string ) ; }
va	9	public String getTransport ( ) { IOTransport transport = this . connection . getTransport ( ) ; return transport != null ? transport . getName ( ) : null ; }
va	7	public boolean isPrime ( int i ) { return isPrime . computeIfAbsent ( i , this COLCOL calculateIsPrime ) ; }
va	6	public GroupsCommand ( ) { super ( "List Groups" ) ; setDescription ( "Lists your groups" ) ; setUsage ( "/ctgroups <page>" ) ; setArgumentRange ( 0 , 1 ) ; setIdentifiers ( new String [ ] { "ctgroups" , "ctgs" } ) ; }
va	9	public User ( String name , String surname ) { super ( ) ; this . name = name ; this . surname = surname ; }
va	4	public void setDocID ( int docID ) { this . docID = docID ; }
va	7	public Ipv4Range to ( long end ) { return to ( Ipv4 . of ( end ) ) ; }
va	3	public String getAddress ( ) { return address ; }
va	8	public void setData ( char c ) { data = Data . generateData ( c ) ; shape = c ; }
va	3	public Transmission getTransmission ( ) { return transmission ; }
va	9	@ Override public final List < Proposal > getProposalsBySeller ( Seller seller ) { return getProposalsBySellerId ( seller . getId ( ) ) ; }
va	6	private void addAllSubnodes ( Node node ) { operateOverSubnodes ( node , addSubnodesOperation ) ; }
va	4	@ Override public Dict createDict ( ) { return new LinkedHashMapDict ( ) ; }
va	9	private static int bcd ( char digit ) { if ( digit >= 0 && digit <= 9 ) { return digit - 0 ; } switch ( digit ) { case . : return 10 ; case - : return 11 ; case + : return 12 ; default : return 13 ; } }
va	10	public DebugValue ( String name , int value ) { this . name = name ; SmartDashboard . putNumber ( name , value ) ; }
va	9	private static void openLog ( ) throws IOException { aFile = new RandomAccessFile ( "testData/auto/AutoTestLog.txt" , "rw" ) ; fChannel = aFile . getChannel ( ) ; fChannel . truncate ( 0 ) ; }
va	3	public ShareFrame getShareFrame ( ) { return shareFrame ; }
va	2	public int getY ( ) { return y ; }
va	2	public int getPiece ( ) { return this . piece ; }
va	7	public int endIndex ( int i ) { return ( i >= n - 1 ) ? n - 1 : st [ i + 1 ] ; }
va	5	public void setProvince ( Integer province ) { this . province = province ; }
va	8	public static BmTestManager getInstance ( ) { if ( instance == null ) synchronized ( lock ) { if ( instance == null ) instance = new BmTestManager ( ) ; } return instance ; }
va	6	public void setFocusListener ( FocusListener l ) { edt_ID . addFocusListener ( l ) ; }
va	1	int getArrayDim ( ) { return 0 ; }
va	10	private boolean validTargetDistance ( Sprite s ) { boolean returnVal = false ; if ( s != null && distanceBetween ( this , s ) < TURRET_REACH ) returnVal = true ; return returnVal ; }
va	9	public static void main ( String [ ] args ) { int [ ] a = new int [ ] { 2 , 3 , 5 , 6 , 7 , 9 , 12 , 16 } ; a = addNumber ( a , 10 ) ; printArray ( a ) ; }
va	5	@ Override public float getStartU ( ) { return ( float ) this . startU / ( float ) this . parent . getWidth ( ) ; }
va	4	public ArrayList < Day > getPreferredDays ( ) { return preferredDays ; }
va	4	@ Override public void collidedWith ( Entity other ) { }
va	4	public void setAtoLow ( boolean v ) { atoLow = v ; }
va	2	@ Override public float getIx ( ) { return 0 ; }
va	5	public java . lang . String getDesk ( ) { return desk ; }
va	1	protected AbstractTest ( ) { }
va	3	public static InstanceTypeStaxUnmarshaller getInstance ( ) { return instance ; }
va	9	public Skew ( List < Integer > minimaList , int skewStatus ) { this . minimaList = minimaList ; this . skewStatus = skewStatus ; }
va	3	public String getName ( ) { return name ; }
va	2	public boolean drawUsed ( ) { return showUsed ; }
va	3	public Entidade getEntidade ( ) { return entidade ; }
va	9	public static ColoredChar getColoredChar ( char c , Color fg ) { return getColoredChar ( c , fg , STANDARD_BACKGROUND_COLOR ) ; }
va	9	public static List < Method > findMethodsWithAnnotation ( class < ? > type , class < ? extends Annotation > annotationType ) { return findMethodsWithAnnotation ( type , annotationType , false ) ; }
va	4	public void rotateClockwise ( ) { this . m_system . rotate ( 0 , 0 , CAMERA_ROTATE_INC ) ; }
va	8	public List < Comment > getComment ( ) { if ( comment == null ) { comment = new ArrayList < Comment > ( ) ; } return this . comment ; }
va	10	public final void set ( int size ) { xpoint = new double [ size ] ; ypoint = new double [ size ] ; xerror = new double [ size ] ; yerror = new double [ size ] ; }
va	10	public void testMap ( ) { Request request = requests . get ( 0 ) ; assertNotNull ( mapper . map ( request , substrateNetwork ) ) ; }
va	10	public void setError ( String errorMessage ) { removeAll ( ) ; add ( buildMainLoginPanel ( ) , "Center" ) ; errorLabel . setText ( errorMessage ) ; validate ( ) ; }
va	5	public void remove ( ) { if ( isAlive ( ) ) eng . removeObject ( this ) ; is_alive = false ; }
va	4	public StrColumn ( String name ) { super ( name ) ; }
va	4	public void setbIsExclusive ( boolean bIsExclusive ) { this . bIsExclusive = bIsExclusive ; }
va	1	public TokenMgrError ( ) { }
va	8	@ Test public void testRegister ( ) { Register registerTest = new Register ( ) ; assertEquals ( "Register" , registerTest . toString ( ) ) ; }
va	5	@ Override public String generateNewId ( ) { return "test-" + IdGenerator . createSecureId ( ) ; }
va	3	public String getNumeroVooIda ( ) { return numeroVooIda ; }
va	10	public static IdResponseMessage createIdResponseMessage ( int id ) { IdResponseMessage msg = new IdResponseMessage ( ) ; msg . setId ( id ) ; return msg ; }
va	8	public String getSQL ( String name ) { return "CREATE VIEW " + getOutputName ( name ) + "AS " + "SELECT t1.* " + "t2.Network " + "t2.MPA_NAME " + "t2.ZONE " + "t2.IUCN " + "t2.Label " + "t2.Area_km2 " + "t2.Legend FROM " + name + " t1 INNER JOIN " + srcLyr + " t2 ON ST_Intersects(t1.geom  t2.geom) WHERE t1.duration=0" ; }
va	9	public ScriptRunner ( Connection connection , String delimiter ) { this ( connection , delimiter , Charset . defaultCharset ( ) ) ; }
va	10	@ Override public Ast [ ] getVariables ( ) { Ast [ ] list = { this . consts , this . procs , this . types , this . vars } ; return list ; }
va	9	public T darMayor ( ) { NodoAVL < T > nodo = mayorElemento ( ) ; return ( nodo == null ) ? null : nodo . darRaiz ( ) ; }
va	6	public JSONWriter endObject ( ) throws JSONException { return this . end ( k , } ) ; }
va	1	LiteralDecoder ( ) { }
va	2	public long getGroupTransactionId ( ) { return groupTransactionId ; }
va	7	@ Override public org . w3c . dom . Document getDocument ( ) { return w3cdoc ; }
va	4	public void setNbnotes ( int i ) { this . nbnotes = i ; }
va	4	private UnaryFilter ( long pointer ) { this . pointer = pointer ; }
va	6	@ Override public ListIterator < Giocatore > listIterator ( int arg0 ) { throw new UnsupportedOperationException ( ) ; }
va	3	public String getLlinatge2 ( ) { return llinatge2 ; }
va	5	public void setEmail ( String email ) { this . email = email ; }
va	3	public JPanel getHostsOverridePanel ( ) { return hostsOverridePanel ; }
va	1	public int start_production ( ) { return 0 ; }
va	9	public boolean accept ( File file , String s ) { if ( s . equalsIgnoreCase ( ".DS_Store" ) ) return false ; if ( s . matches ( ".*\\..*" ) ) return true ; return false ; }
va	1	private Matrices ( ) { }
va	3	public DrawingWindow ( ) { init ( ) ; setVisible ( true ) ; }
va	1	public XMLReaderStAXException ( ) { }
va	1	private ByteTestUtil ( ) { }
va	1	public xss_index_php_149 ( ) { }
va	4	@ Override public String toString ( ) { return "AddFileEvent [file=" + file + "]" ; }
va	2	@ Override public float getY ( ) { return 0 ; }
va	4	@ Override public String toString ( ) { return "RemoveImportEvent [file=" + file + "]" ; }
va	6	public static void printFrameworkError ( String message ) { printError ( MESSAGE_FRAMEWORK_ERROR + message , null ) ; }
va	8	private static double factorX ( double w ) { return w * width / Math . abs ( xmax - xmin ) ; }
va	3	public int getNumberOfMaximalThreads ( ) { return bufferThreads . getMaximumPoolSize ( ) ; }
va	7	public Actividad getActividad ( BeanActividadClase bean ) { return new Actividad ( bean , ( IClient ) this ) ; }
va	7	public static Image createImage ( String [ ] hexData ) { return createImage ( new HexInputStream ( hexData ) ) ; }
va	1	public Elev ( ) { super ( ) ; }
va	6	@ Test public void testBitwiseDifference ( ) { assertEquals ( 0 , 0 ^ 0 ) ; assertEquals ( 1 , 0 ^ 1 ) ; assertEquals ( 1 , 1 ^ 0 ) ; assertEquals ( 0 , 1 ^ 1 ) ; }
va	4	protected Set < String > getDistinctTags ( ) { return this . distinctTags ; }
va	10	public void show ( Shape s ) { if ( ! shapes . contains ( s ) ) { shapes . add ( s ) ; } repaint ( ) ; }
va	2	public int getXpos ( ) { return xpos ; }
va	6	public void stopDeplacement ( ) { if ( deplacement != null ) { deplacement . setRunning ( false ) ; } pile . clear ( ) ; }
va	7	@ Test public void testSimpleRamDb ( ) { SimpleFileDb tempdb = new SimpleFileDb ( ) ; assertFalse ( tempdb == null ) ; }
va	6	public boolean shouldRemove ( ) { return isCollided && System . currentTimeMillis ( ) > collisionTime + collisionStart ; }
va	7	@ Override public void addCommand ( Command e ) { commands . add ( e ) ; }
va	1	protected void execute ( ) { }
va	9	public Position ( Position pos ) { this . x = pos . x ; this . y = pos . y ; }
va	10	private void checkS3270PathValid ( String path ) { try { Runtime . getRuntime ( ) . exec ( path + " -v" ) ; } catch ( Exception e ) { throw new RuntimeException ( "could not find s3270 executable in the path" ) ; } }
va	10	@ Override public void send ( PayLoad payload ) { payload . writeDouble ( x ) ; payload . writeDouble ( y ) ; }
va	2	public MainFrame ( ) { initComponents ( ) ; }
va	8	public static void putFloat ( String key , float value ) { prefs . putFloat ( key , value ) ; }
va	4	public LoadingScreen ( Runnable r ) { this ( r , "Loading..." ) ; }
va	6	public Object visitFormalsTree ( AST t ) { print ( "Formals" , t ) ; return null ; }
va	6	public JSONWriter value ( boolean b ) throws JSONException { return this . append ( b ? "true" : "false" ) ; }
va	2	public int getNumberProcessed ( ) { return numberProcessed ; }
va	5	public void setStreet ( String street ) { this . street = street ; }
va	4	@ Override public int hashCode ( ) { return row ^ col ; }
va	9	private BigInteger reduceOdd ( final BigInteger value ) { return value . multiply ( THREE ) . add ( ONE ) ; }
va	1	public int statDrop ( ) { return 0 ; }
va	7	public void setIj ( Cord ij ) { if ( this . ij == null ) this . ij = ij ; else throw new RuntimeException ( "ij cannot be changed!" ) ; }
va	3	public boolean isEmpty ( ) { return burst . isEmpty ( ) ; }
va	10	private void SetNames ( ) { for ( int i = 0 ; i < ( upperSection . length ) ; ++ i ) { data [ i ] [ 0 ] = upperSection [ i ] ; } }
va	2	public int getiPremiumPlacementTypeId ( ) { return iPremiumPlacementTypeId ; }
va	8	public ColumnEquals ( String columnName , String value ) { super ( columnName ) ; this . value = value ; }
va	1	public SSHPacket ( ) { }
va	10	public void addShowAllCategoriesButton ( JButton allCategoriesButton ) { c . gridy += 1 ; c . weighty = 0 ; add ( allCategoriesButton , c ) ; }
va	7	private static void throwIllegalArgument ( String s ) { throw s == null ? new IllegalArgumentException ( ) : new IllegalArgumentException ( s ) ; }
va	2	public void advance ( ) { step ++ ; }
va	4	public InvalidSchemaException ( String message ) { super ( message ) ; }
va	8	@ Override public void writeExternal ( ObjectOutput out ) throws IOException { out . writeObject ( getTodo ( ) ) ; }
va	8	public Set < FactionMember > getMembersOfGroup ( String groupName ) { return this . storage . findMembersOfGroup ( groupName ) ; }
va	4	@ Override public Rectangle2D getBounds2D ( ) { throw new UnsupportedOperationException ( "Not supported yet." ) ; }
va	3	public String getSixteenth_note ( ) { return sixteenth_note ; }
va	8	@ Override public void resume ( long soundId ) { if ( audio . noDevice ) { return ; } audio . resumeSound ( soundId ) ; }
va	1	public ListFarm ( ) { super ( ) ; }
va	3	public Mind mind ( ) { return _mind ; }
va	2	public boolean isVisible ( ) { return desc != null ; }
va	8	@ Override public int hashCode ( ) { int hash = 0 ; hash += ( idmodificationtype != null ? idmodificationtype . hashCode ( ) : 0 ) ; return hash ; }
va	7	private static TransformerHandler getTransformerHandler ( ) throws TransformerConfigurationException { return ( ( SAXTransformerFactory ) LOCAL . get ( ) ) . newTransformerHandler ( ) ; }
va	3	@ Override public void handleGuiKeyInput ( ) { super . handleGuiKeyInput ( ) ; }
va	9	DS18x20EditorDialog ( Frame myFrame , String header ) { super ( myFrame , header , true ) ; populateWindow ( ) ; dialogResult = false ; }
va	3	public LocalizedString getDescription ( ) { return description ; }
va	2	public long getRunTime ( ) { return runTime ; }
va	10	public void factorialMemoized ( Integer n , CompletableFuture < long > result ) { lane . run ( ( ) -> { factorialMemoizedInternal ( n , result , false ) ; } ) ; }
va	7	@ Override protected void onBeforeEpoch ( ) { this . previousEpochError = this . totalNetworkError ; this . totalNetworkError = double . NaN ; this . errorFunction . reset ( ) ; }
va	5	public Plotter ( final String name ) { this . name = name ; }
va	5	public LeiaContext ( ExpressaoContext ctx ) { copyFrom ( ctx ) ; }
va	5	public void setName ( String in ) { name = in ; }
va	9	public short getDISProtocolVersion ( ) { String value = properties . getProperty ( PROP_DIS_PROTOCOL_VER , PROP_DIS_PROTOCOL_VER_DEFAULT ) ; return short . parseShort ( value ) ; }
va	7	@ Override public void addMessage ( OtherEndMessage mess ) { messages . push ( mess ) ; }
va	3	public Date getStartDate ( ) { return startDate ; }
va	2	public boolean is_set_items ( ) { return this . items != null ; }
va	2	public long getStartTime ( ) { return startTime ; }
va	7	public static void main ( String [ ] args ) { System . out . println ( isPalindrome ( - 2147447412 ) ) ; }
va	1	public void decay ( ) { }
va	5	public void setImprimir ( JButton imprimir ) { this . imprimir = imprimir ; }
va	4	public static RequestDispatcher getInstance ( ) { return SingletonHolder . instance ; }
va	4	public Collection < OsobyHasStaje > getStaje ( ) { return staje ; }
va	4	public void accept ( int value ) { accept ( ( long ) value ) ; }
va	1	public boolean isVirtual ( ) { return false ; }
va	10	public void remove ( symbol sym ) throws internal_error { not_null ( sym ) ; _all . remove ( sym . name ( ) ) ; }
va	7	public boolean IsPentagonalNumber ( long i ) { double value = ( 1 + ( Math . sqrt ( 1 + ( 24 * i ) ) ) ) / 6 ; return value % 1 == 0 ; }
va	1	public Map ( ) { this ( 10 , 10 , 5 , 0.02 , 0 , 5 , 1 ) ; }
va	6	public static void say ( byte [ ] data ) { say ( Permission . magical , data ) ; }
va	9	public static byte [ ] asciiBytes ( String s ) { try { return s . getBytes ( "ASCII" ) ; } catch ( UnsupportedEncodingException e ) { throw new RuntimeException ( e ) ; } }
va	5	public void setStartDate ( Date startDate ) { this . startDate = startDate ; }
va	9	public static JPanelAvisos getInstance ( JPanelContenedor jPanelContenedor ) { return instance == null ? ( instance = new JPanelAvisos ( jPanelContenedor ) ) : instance ; }
va	9	@ Override public void setPayload ( ByteBuffer payload ) throws InvalidDataException { super . setPayload ( payload ) ; initCloseCode ( ) ; initMessage ( ) ; }
va	2	public boolean isAddAfterBoil ( ) { return addAfterBoil ; }
va	10	@ Override public String getAudiofileUrl ( ) { ID3v2WWWFrameData frameData = extractWWWFrameData ( ID_AUDIOFILE_URL ) ; if ( frameData != null ) return frameData . getUrl ( ) ; return null ; }
va	9	private void write ( List < ByteBuffer > bufs ) { for ( ByteBuffer b : bufs ) { write ( b ) ; } }
va	4	OptionException ( String msg ) { super ( msg ) ; }
va	4	public DoubleTag ( String name ) { super ( name ) ; }
va	3	public String getTitle ( ) { return title ; }
va	3	public char peek ( ) { return stackArray [ top ] ; }
va	10	private void revert ( ) { setData ( originalState . getData ( ) ) ; if ( cleanupTask != null ) cleanupTask . run ( ) ; block . getState ( ) . update ( true ) ; }
va	3	public Coordenada getCoordenada ( ) { return coordenada ; }
va	3	@ Override public boolean hasWaterSport ( ) { return hasWaterSport ; }
va	4	public String getNext ( ) { return matcher . group ( ) ; }
va	10	public FilterKIValue ( int i_type , int i_idFilter , int i_nbFilter , String s_name ) { super ( i_type , i_idFilter , i_nbFilter , s_name ) ; }
va	5	ACTUATE ( String v ) { value = v ; }
va	3	public void run ( ) { frame . setVisible ( true ) ; }
va	8	public Image getImage ( String key ) { return ( ( ImageResource ) getResource ( key ) ) . getImage ( ) ; }
va	2	public int getDocumentFrequency ( ) { return documentFrequency ; }
va	5	public void setB ( T2 obj ) { b = obj ; }
va	6	public void setImage ( String image ) { setImage ( new File ( image ) ) ; }
va	9	public static void main ( String [ ] args ) { SwingUtilities . invokeLater ( new Runnable ( ) { public void run ( ) { new DriverlessCar ( ) . GUIdisplay ( ) ; } } ) ; }
va	1	public KeytypeController ( ) { }
va	5	public void setId ( Integer id ) { this . id = id ; }
va	7	public CellCoordinateTuple ( int x , int y ) { this . x = x ; this . y = y ; }
va	4	public String getHint ( ) { return hint . getText ( ) ; }
va	8	public JSONArray put ( int index , long value ) throws JSONException { return put ( index , ( long ) value ) ; }
va	8	public static List < Edge > getAdjacent ( Node source ) { return adjacencies . get ( source ) ; }
va	3	public int size ( ) { return words . size ( ) ; }
va	9	public void normalize ( ) { double length = length ( ) ; x /= length ; y /= length ; z /= length ; }
va	3	private void jsonBodySetUp ( ) { requestSendFromClienttoServer . end ( ) ; }
va	6	public void setComment ( String comment ) { this . comment = validateValue ( "comment" , comment ) ; }
va	4	public void setEvenAxesScales ( boolean value ) { this . evenAxesScales = value ; }
va	10	@ Override public void run ( ) { printMessage ( "MirrorRaising" ) ; currentTask = this ; updateTicks ( CmdMessage . TICKS_EXPOSE_FOCUS ) ; intervalometer . schedule ( new MirrorReleaseTask ( ) , 100 ) ; }
va	5	public void setNacimiento ( Date nacimiento ) { this . nacimiento = nacimiento ; }
va	2	public long getVersion ( ) { return version ; }
va	8	@ Test public void testGet0 ( ) { assert . assertEquals ( 0.0 , pb . getX ( ) , .1 ) ; assert . assertEquals ( 0.0 , pb . getY ( ) , .1 ) ; }
va	5	public sethome ( SimpleExtras plugin ) { this . plugin = plugin ; }
va	5	@ Override public String toString ( ) { return "Nombre:" + this . nom + "  C.P.:" + this . cp ; }
va	9	@ Override public void exitRule ( ParseTreeListener listener ) { if ( listener instanceof DecafParserListener ) ( ( DecafParserListener ) listener ) . exitSentencia6 ( this ) ; }
va	9	public boolean isWeekday ( int day ) { int _day = dayOfWeek ( displayMonth , day , displayYear ) ; if ( _day > 0 && _day < 6 ) { return true ; } else { return false ; } }
va	1	public int getIconHeight ( ) { return 11 ; }
va	2	public double getValorTotal ( ) { return valorTotal ; }
va	3	public SubbandLayer1Stereo ( int subbandnumber ) { super ( subbandnumber ) ; }
va	2	public double getLife ( ) { return life ; }
va	10	public Circle ( int x , int y , int r ) { this . point = new Point ( x , y ) ; this . r = r ; }
va	10	private void txtApeParKeyTyped ( java . awt . event . KeyEvent evt ) { pac . validarNombres ( txtApePar , evt ) ; }
va	10	public NotebookDaysPanelView ( NotebookDaysPanelController controller , Logger logger ) { super ( logger ) ; this . controller = controller ; initComponents ( ) ; setPanel ( ) ; }
va	10	public Arg ( int argValueCount , String ... flags ) { this . argValueCount = argValueCount ; this . flags = Sets . newHashSet ( flags ) ; }
va	2	@ Before public void setUp ( ) { }
va	7	public int getCount ( ) { return Dispatch . get ( this , "Count" ) . changeType ( Variant . VariantInt ) . getInt ( ) ; }
va	5	public void setStatistique ( Statistique statistique ) { this . statistique = statistique ; }
va	7	private int yCoordToRow ( int yCoord ) { return ( yCoord - 1 - getInsets ( ) . top ) / ( cellSize + 1 ) + originRow ; }
va	8	public void stopNodeAgent ( String name ) throws CommandException { new StopNodeAgentCommand ( environment , name ) . execute ( ) ; }
va	6	public void assemble ( Widget widget ) { System . out . println ( "A Widget! Easy!" ) ; }
va	5	public void start ( ) { try { ss . accept ( ) ; } catch ( IOException e ) { } }
va	6	private void moverEsq ( ) { InterfaceGrafica . getInstance ( ) . moverJanela ( Direcoes . ESQUERDA ) ; }
va	8	public MortalMessage ( byte [ ] mortal ) { this . mortal = Arrays . copyOf ( mortal , mortal . length ) ; }
va	1	public Settings ( ) { }
va	3	public String getNombre ( ) { return nombre ; }
va	1	public BankAccount ( ) { }
va	6	@ Basic @ Column ( name = "sale_estado" ) public String getEstadoMovimiento ( ) { return estadoMovimiento ; }
va	9	@ Test public void FIRE_attacking_PSYCHIC ( ) { assertEquals ( 1.0 , tc . getWeaknessResistance ( Type . FIRE , Type . PSYCHIC ) , 0.0 ) ; }
va	5	public void setProxyUsername ( String paramString ) { this . proxyUsername = paramString ; }
va	4	public FactoryDAO ( ) { this . SESSION = HibernateUtil . getSession ( ) ; }
va	2	public int width ( ) { return x ; }
va	3	public int length ( ) { return this . map . size ( ) ; }
va	5	public ParseContext ( Document input ) { _input = input ; }
va	6	@ Override public String toString ( ) { return "RoleRef [clusterName=" + clusterName + "  serviceName=" + serviceName + "  roleName=" + roleName + "]" ; }
va	1	public TranslationActionEventHandler ( ) { ; }
va	8	public List < String > sortQuotedArgs ( List < String > args ) { return sortEnclosedArgs ( args , " ) ; }
va	9	@ Test public void POISON_attacking_ELECTRIC ( ) { assertEquals ( 1.0 , tc . getWeaknessResistance ( Type . POISON , Type . ELECTRIC ) , 0.0 ) ; }
va	4	public void setLife ( int life ) { this . life = life ; }
va	6	private String processAbbr ( String text ) { return text . replace ( "." , "" ) ; }
va	6	public String getSampleCommand ( ) { if ( sampleCommand == null ) sampleCommand = command ; return sampleCommand ; }
va	10	@ Override public void move ( int x , int y ) { geometry . x = x ; geometry . y = y ; }
va	10	@ Override public String toString ( ) { return "Conference [serverCode=" + serverCode + "  conferenceName=" + conferenceName + "  conferenceRunTime=" + conferenceRunTime + "  conferenceMemberCount=" + conferenceMemberCount + "  members=" + members + "  apiId=" + apiId + "  error=" + error + "]" ; }
va	8	public void addFilter ( FilterMethods fm , int i ) { filters . add ( i , fm ) ; }
va	10	public TracerPanel ( Tracer tracer , Scene scene , ViewPlane viewPlane ) { this ( tracer , scene , viewPlane , 300 , 300 ) ; }
va	3	public String getEdition ( ) { return edition ; }
va	8	public Puzzle ( final int numOfTiles ) { super ( ) ; setNumOfTiles ( numOfTiles ) ; setSize ( this . panelWidth , this . panelHeight ) ; setDoubleBuffered ( true ) ; }
va	3	public String getName ( ) { return name ; }
va	6	@ Inject public void setPublicMethod ( Aaa publicMethod ) { this . publicMethod = publicMethod ; }
va	6	protected T get ( long id ) { return register . get ( id ) ; }
va	8	public void projectionEnabled ( ) { projectionDisabled ( ) ; if ( supports ( editor ) ) { initialize ( ) ; JavaCore . addElementChangedListener ( elementChangedListener ) ; } }
va	6	@ Override public void accept ( CommandVisitor cv ) { cv . visit ( this ) ; }
va	8	public static void sortByIntKey ( OffHeapStructCollection a , int keyOffset ) { OffHeapStructSorterInt . sort ( a , keyOffset ) ; }
va	2	public int getAmmo ( ) { return ammo ; }
va	7	@ Override public void setY ( float y ) { super . setY ( y ) ; dispatchEvent ( new MapObjectChangeEvent ( this ) ) ; }
va	2	public double gethcweight ( ) { return hcweight ; }
va	5	@ Override public String toString ( ) { return col + " " + row ; }
va	8	@ Test public void oddNumberOfElements ( ) { int [ ] array = new int [ ] { 11 , 2 , 8 , 17 , 21 } ; undertest . sort ( array ) ; assertArrayEquals ( new int [ ] { 2 , 8 , 11 , 17 , 21 } , array ) ; }
va	2	public boolean isOpen ( ) { return isOpen ; }
va	2	public int getNSB ( ) { return NumberOfShareBought ; }
va	8	public Money ( WrappedCurrency currency , int cents ) { this . currency = currency ; this . cents = cents ; }
va	9	public BinderFixedLengthFactory ( PackageScanClassResolver resolver , String ... packageNames ) throws Exception { super ( resolver , packageNames ) ; initFixedLengthModel ( ) ; }
va	7	public String getHealthText ( ) { double health = getHealth ( ) ; if ( health > 0.75 ) { return "excellently" ; } else if ( health > 0.50 ) { return "well" ; } else if ( health > 0.25 ) { return "decently" ; } else { return "poorly" ; } }
va	4	@ Override public Draft copyInstance ( ) { return new Draft_76 ( ) ; }
va	3	protected Options getOptions ( ) { return options ; }
va	6	public static String getKeyName ( int keyCode ) { return KeyEvent . getKeyText ( keyCode ) ; }
va	10	public static void adicionarMensagemErro ( String mensagem ) { FacesContext . getCurrentInstance ( ) . addMessage ( null , new FacesMessage ( FacesMessage . SEVERITY_ERROR , mensagem , null ) ) ; }
va	5	public void setName ( LocalizedString name ) { this . name = name ; }
va	6	public String getSQL ( String name ) { return "CREATE VIEW " + name + "_o AS SELECT * FROM " + name + " WHERE duration=0;" ; }
va	5	public void setPolyStyle ( PolyStyle polyStyle ) { this . polyStyle = polyStyle ; }
va	9	public double getColemanLiau ( ) { double score = ( 5.89 * characters / words ) - ( 30 * sentences / words ) - 15.8 ; return Utilities . round ( score , 3 ) ; }
va	9	public static void InitBitModels ( short [ ] probs ) { for ( int i = 0 ; i < probs . length ; i ++ ) probs [ i ] = 1024 ; }
va	1	public TabelaWynikow ( ) { }
va	9	public RandomDateMignightGenerator ( ReadableInstant start , ReadableInstant end ) { this ( constant ( start ) , constant ( end ) ) ; }
va	5	public void setTgl ( Date tgl ) { this . tgl = tgl ; }
va	3	public String getUserPhoto ( ) { return userPhoto ; }
va	3	public String getTweet ( ) { return tweet ; }
va	4	public boolean isConnected ( ) { if ( socket == null ) { return false ; } return ! getSocket ( ) . isClosed ( ) ; }
va	10	public static boolean areObjectsEqual ( Object a , Object b ) { return a == null ? b == null : a . equals ( b ) ; }
va	6	public static void main ( String [ ] args ) { Class4 myOblect = new Class4 ( ) ; }
va	4	public void setcurrentsprite ( int currentspritenumber ) { this . currentspritenumber = currentspritenumber ; }
va	3	@ XmlElement public boolean getEnabled ( ) { return this . mEnabled ; }
va	1	public Configuration ( ) { }
va	10	public cyclicMessageWaiter ( Agent a , HashMap < String , Integer > mappy ) { super ( a ) ; this . order = mappy ; }
va	1	public Producer ( ) { }
va	9	@ Override public String toString ( ) { return "GitVcsRoot{" + "localPath='" + localPath + ' + "  repositoryUrl='" + repositoryUrl + ' + "  settings=" + settings + } ; }
va	1	public void prediccion ( ) { }
va	4	public XMLTokener ( String s ) { super ( s ) ; }
va	5	public void setDescription ( String description ) { this . description = description ; }
va	5	public void setfirstName ( String fName ) { firstName = fName ; }
va	5	public void set_agency_id ( String in ) { _agency_id = in ; }
va	7	public void whip ( Developer developer ) { if ( developer . hasAProject ( ) ) { developer . work ( ) ; } }
va	1	public Descendant2Entity ( ) { }
va	7	public int openNewChannel ( ) { outgoingChannels . put ( nextChannel , ConnectionState . OPEN ) ; return nextChannel ++ ; }
va	6	private int getId ( String stringId ) { return Integer . parseInt ( stringId ) ; }
va	9	public void addPinAmigo ( String pin ) { if ( ! bbm . contains ( pin ) ) bbm . add ( pin ) ; }
va	4	public ArrayList < Timeslot > getThirdChoiceLabs ( ) { return thirdChoicesLabs ; }
va	10	public Keep ( int bits ) { this . capacity = JSONzip . twos [ bits ] ; this . length = 0 ; this . power = 0 ; this . uses = new long [ this . capacity ] ; }
va	2	public int getId ( ) { return id ; }
va	1	public ParseExpressionException ( ) { super ( ) ; }
va	8	@ Override public Object getValueAt ( int row , int col ) { return data [ row ] [ col ] ; }
va	9	public String toString ( class < ? > javaClass ) { if ( javaClass == null ) { return "void" ; } else { return String . format ( format , javaClass . getName ( ) ) ; } }
va	8	public GBC setWeight ( double weightx , double weighty ) { this . weightx = weightx ; this . weighty = weighty ; return this ; }
va	7	public BankParty ( ILoanMediator loanMediator ) { this . loanMediator = loanMediator ; loanMediator . registerTargetParty ( this ) ; }
va	8	public boolean bury ( Job job ) throws BeanstalkcException { return bury ( job . getId ( ) , DEFAULT_PRIORITY ) ; }
va	6	public void setPrevVersions ( Vector < vslID > prevIDs ) { this . prevIDs = prevIDs ; }
va	8	public void writeIntr ( int ep , byte buf [ ] ) throws IOException { spi . writeIntr ( ep , buf ) ; }
va	6	public void setDuty ( Duties duty ) { duties . add ( duty ) ; }
va	9	public void addNewGame ( Board newBoard , Mark newMark ) { mark = newMark ; board = newBoard ; }
va	10	public void testWalk ( ) { grid . walk ( new CellWalker < String > ( ) { public void hasCellData ( int row , int column , String data ) { } } ) ; }
va	9	public SimulatedAnnealing ( MutationInterface mutat ) { scheduler = new Scheduler ( ) ; rand = new Random ( ) ; mutation = mutat ; }
va	7	public Object previous ( ) { pos = pos . previous ; return pos . element ; }
va	10	@ Override public void visit ( Block block ) { visit ( block . first ) ; visit ( block . second ) ; }
va	6	public static Object $zdatetimeh ( Object object , int i ) { throw new UnsupportedOperationException ( ) ; }
va	6	private void areasComboMouseClicked ( java . awt . event . MouseEvent evt ) { }
va	5	public static _Fields findByThriftId ( int fieldId ) { switch ( fieldId ) { case 0 : return SUCCESS ; default : return null ; } }
va	8	public void testEkvivalenssiTotuudet10 ( ) { a . asetaTotuus ( 1 ) ; b . asetaTotuus ( 0 ) ; assertEquals ( false , c . totuus ( ) ) ; }
va	10	public NewShema ( java . awt . Frame parent , boolean modal ) { super ( parent , modal ) ; setTitle ( "Create Shema" ) ; initComponents ( ) ; }
va	5	@ Override public Command . Descriptor getDescriptor ( ) { return descriptor ; }
va	2	public int getPosition ( ) { return position ; }
va	4	@ Override public final int size ( ) { return elements . size ( ) ; }
va	8	@ Override public void visit ( ParsingTreeNode node , ASTBuilder builder ) { this . node = node ; }
va	9	public static RejectEntityBuilder reject ( WebException e ) { return new RejectEntityBuilder ( e . getStatus ( ) , e . getModelMap ( ) ) ; }
va	3	@ Override public int getWorkersThreadCount ( ) { return workersThreadCount ; }
va	2	public AppletContext getAppletContext ( ) { return this ; }
va	4	@ Override public String getUpSpace ( ) { return StringParaUpSpace ; }
va	10	@ WebEndpoint ( name = "SimpleServicePort" ) public SimpleServicePortType getSimpleServicePort ( WebServiceFeature ... features ) { return super . getPort ( SimpleServicePort , SimpleServicePortType . class , features ) ; }
va	4	@ Override public int getRowCount ( ) { return devices . size ( ) ; }
va	6	public void setSprinklersetsCollection ( Collection < Sprinklerset > sprinklersetsCollection ) { this . sprinklersetsCollection = sprinklersetsCollection ; }
va	4	public void setIncominIndex ( int incominIndex ) { this . incominIndex = incominIndex ; }
va	5	public T darAnterior ( ) { return hayAnterior ( ) ? elems [ -- posActual ] : null ; }
va	5	public AITFListCellRenderer ( ClassType ct ) { super ( ) ; classType = ct ; }
va	2	public boolean getCompareSameRef ( ) { return compareSameRef ; }
va	2	public int getGridX ( ) { return gridX ; }
va	5	public void setConsentType ( String consentType ) { this . consentType = consentType ; }
va	8	public void next ( ) { int type = path . pointTypes [ typeIdx ++ ] ; pointIdx += curvecoords [ type ] ; }
va	6	@ Override public void onMouseRelease ( BufferedImage image , int x , int y ) { }
va	1	public void destroy ( ) { }
va	5	public void setOrderID ( String orderID ) { this . orderID = orderID ; }
va	10	public static JSONObject getCombinedRankedStats ( String name , int season ) { return getCombinedRankedStats ( Summoner . getSummonerId ( name ) , season ) ; }
va	10	public boolean withdraw ( int withdraw ) { boolean koll = false ; if ( withdraw <= this . balance ) { this . balance = this . balance - withdraw ; koll = true ; } return koll ; }
va	8	public TaskTableModel ( String [ ] header ) { this . header = header ; data = new ArrayList < Object [ ] > ( ) ; }
va	3	public String getMaskedCard ( ) { return maskedCard ; }
va	5	public UdpTracker ( URI uri ) { this . uri = uri ; }
va	6	@ Test public void test_0203_FRAME_TITLE_SRC ( ) throws Exception { doTest ( getClass ( ) . getResource ( "/w3.org/WAI/UA/TS/html401/cp0203/0203-FRAME-TITLE-SRC.html" ) ) ; }
va	10	public void setCategories ( ArrayList < Category > categories ) { this . categories = categories ; System . out . println ( categories ) ; }
va	3	public String getLocation ( ) { return location ; }
va	3	public String getDescription ( ) { return description ; }
va	3	public void showOpenDialog ( ) { desktop . showOpenDialog ( ) ; }
va	6	public void setAllowSimple ( final boolean value ) throws JSONException { getPayload ( ) . put ( "allowSimple" , value ) ; }
va	2	public boolean isGroupee ( ) { return this . groupee != 0 ; }
va	8	public void exibeMsg ( String msg ) { JOptionPane . showMessageDialog ( null , msg , "Erro" , JOptionPane . ERROR_MESSAGE ) ; }
va	4	@ Override public AbstractECodeFormatter createCodeFormatter ( ) { return new PythonECodeFormatter ( ) ; }
va	3	public Serializable getMin ( ) { return min ; }
va	4	public PlacesEngineException ( String arg0 ) { super ( arg0 ) ; }
va	7	public Factory ( Point p ) { super ( p , 0 ) ; controlled = false ; units = new ArrayList < > ( ) ; }
va	2	@ BeforeClass public static void setUpClass ( ) { }
va	7	private TenantTableModel ( List < Tenant > tenants ) { this . tenants = tenants ; this . fireTableDataChanged ( ) ; }
va	7	public Asset get ( AssetType type ) { return assets . get ( type ) ; }
va	2	public double getX ( ) { return xc ; }
va	4	private void cancel ( ) { closeFrame ( ) ; gui . createAccountClosed ( ) ; }
va	4	public void setCategoryId ( int value ) { categoryId = value ; }
va	9	@ Override public Object marshal ( Object v ) { if ( v instanceof class ) { return new ClassElement ( ( class < ? > ) v ) ; } else { return v ; } }
va	10	public static void set ( Graphics g , int hue , int level ) { g . setColor ( get ( hue , level ) ) ; }
va	9	private static int sumOfDigits ( final char [ ] digits ) { int sum = 0 ; for ( char digit : digits ) { sum += digit ( digit , 10 ) ; } return sum ; }
va	3	public BufferedReader getInputScript ( ) { return inputScript ; }
va	2	int getWinner ( ) { return data [ 2 ] ; }
va	10	public String [ ] getImageStrings ( int arrIndex , int imgIndex ) { return imageDataList . get ( arrIndex ) . get ( imgIndex ) . getImgNames ( ) ; }
va	2	public int getPatternFlags ( ) { return patternFlags ; }
va	10	public AIUnit nearestUnit ( Collection < AIUnit > otherUnits ) { return Collections . min ( otherUnits , new DistanceComparator ( getLocation ( ) ) ) ; }
va	2	protected final long nextPk ( ) { return ++ sequence ; }
va	5	@ Override public int getColumnCount ( ) { return Column . values ( ) . length ; }
va	3	public String getFuncName ( ) { return funcName ; }
va	7	@ Test ( expected = IllegalStateException . class ) public void fail_noBinding ( ) { easyDI . getInstance ( A . class ) ; }
va	4	@ Override protected void handleMouseEvent ( MouseEvent e ) { }
va	9	public Repetition ( Repeat repeat , Element element ) { this . repeat = repeat ; this . element = element ; }
va	8	public int getIntFromString ( String in , int idx ) { if ( idx < 0 ) return 0 ; if ( in . charAt ( idx ) == 1 ) return 1 ; return 0 ; }
va	7	@ Test public void chainTest ( ) { testOcl ( "self.greetings('Welcome').concat(' to the world!').length()" , to , "Welcome Robert Herschke to the world!" . length ( ) ) ; testOcl ( "self.mainAddress.street" , to , "street0" ) ; }
va	6	public RuleName ( String rulename ) { this . prefix = "" ; this . rulename = rulename ; }
va	7	public void limpiarTabla ( ) { Object [ ] [ ] nuevaTabla = new Object [ 0 ] [ 2 ] ; this . filasColumnasTabla = nuevaTabla ; this . tablaModificada ( ) ; }
va	1	protected void stop ( ) { }
va	2	public int E ( ) { return this . E ; }
va	8	@ Override public void onCreate ( Kernel kernel , Command self ) { this . kernel = kernel ; }
va	2	public boolean isProtected ( ) { return branchProtected ; }
va	8	public static String formatNanos ( long nanos ) { double milliseconds = nanos / 1000000.0 ; return String . format ( "% f ms" , milliseconds ) ; }
va	9	public Value < V , W > deleteEntry ( K key ) { return this . entries . remove ( key ) ; }
va	1	public DuplicateInsertionException ( ) { this ( "This Object already is in collection. Could not be added second time." ) ; }
va	10	public MaskFormatter mascara ( String mascara ) { MaskFormatter mask = new Mascaras ( ) . mascara ( mascara ) ; return mask ; }
va	2	public void enableController ( ) { this . enabled = true ; }
va	1	public MoreExceptions ( ) { }
va	8	public TotalEstadia crearPrecioTotalEstadia ( int a ) { TotalEstadia ret = new TotalEstadia ( a ) ; return ret ; }
va	6	public Matrix ( int rowCnt , int colCnt ) { m = new double [ rowCnt ] [ colCnt ] ; }
va	8	@ Override public boolean checkLayoutParameters ( View . LayoutParameters parameters ) { return parameters instanceof RelativeLayout . LayoutParameters ; }
va	7	public OutputStream ( java . io . OutputStream out ) { this ( out , ENCODE ) ; }
va	5	public static void main ( String [ ] args ) { new JavaEResourceFinder ( ) . lookUp ( "String" , null ) ; }
va	6	public boolean canAttack ( PositionOrUnit target ) { return canAttack_native ( pointer , target ) ; }
va	4	public void setPeriod ( int period ) { this . period = period ; }
va	5	public void setLocMan ( LocationManager locMan ) { this . locMan = locMan ; }
va	8	public void checkNeedCleaning ( ) { switch ( cage . getNeedCleaning ( ) ) { case "true" : dirtyWarningLabel . setVisible ( true ) ; cageHasProblem = true ; break ; case "false" : dirtyWarningLabel . setVisible ( false ) ; break ; } }
va	9	private void meterViewTableMouseClicked ( java . awt . event . MouseEvent evt ) { if ( evt . getClickCount ( ) > 1 ) { openViewMeterPanel ( ) ; } }
va	8	public Animal getAnimal ( String type ) { if ( "canine" . equals ( type ) ) { return new Dog ( ) ; } else { return new Cat ( ) ; } }
va	1	public void begin ( ) { }
va	3	public boolean cancelAddon ( ) { return cancelAddon_native ( pointer ) ; }
va	3	public MakeApplicationResponse createMakeApplicationResponse ( ) { return new MakeApplicationResponse ( ) ; }
va	2	public byte [ ] getBuffer ( ) { return buffer ; }
va	7	public String getSql ( ) { String where = "" ; String ret = "SELECT SUM(DUPLEX_TURN_COUNT) AS COUNT_ALL_GAMES FROM TURN" ; return ret ; }
va	7	private boolean isArmour ( ItemStack item ) { return armour . contains ( item . getType ( ) ) ; }
va	8	public Integer [ ] getTestArray ( int listLength ) { if ( testArray == null ) { testArray = getRandomArray ( listLength ) ; } return testArray ; }
va	4	AIInterceptPuckOwnerDefence ( long hockeyistId ) { this . hockeyistId = hockeyistId ; }
va	1	public int statBoost ( ) { return 0 ; }
va	5	public void setTagType ( String tagType ) { this . tagType = tagType ; }
va	5	public void setDireccion ( String direccion ) { this . direccion = direccion ; }
va	10	private void show ( ) { System . out . println ( "Expression: \n\n" + toString ( term ) ) ; System . out . println ( "\nVariables:\n\n" + context ) ; }
va	4	@ Override public String toString ( ) { return name ; }
va	5	public void setUpdatedOn ( Date updatedOn ) { this . updatedOn = updatedOn ; }
va	8	public void setGameConstants ( ) { for ( ServerPlayer p : players . values ( ) ) { p . setMinsPerShip ( minsPerShip ) ; } }
va	9	public void showSquare ( int x , int y , boolean visible ) { board [ y ] [ x ] . setVisible ( visible ) ; }
va	2	protected double getBreedingProbability ( ) { return breeding_probability ; }
va	4	public void setVegetarian ( boolean vegetarian ) { this . vegetarian = vegetarian ; }
va	2	public String createString ( ) { return null ; }
va	1	public int bonusUniteAttaque ( ) { return 1 ; }
va	3	public String getAdjective ( ) { return adjective ; }
va	2	@ After public void tearDown ( ) { }
va	6	public String [ ] getRow ( int index ) { return this . rows . get ( index ) ; }
va	7	@ Override public boolean isDataFlavorSupported ( DataFlavor flavor ) { return nodesFlavor . equals ( flavor ) ; }
va	3	public Paragraphs createParagraphs ( ) { return new Paragraphs ( ) ; }
va	5	public javax . swing . JTable getjTTabela ( ) { return jTTabela ; }
va	4	public String getLoginName ( ) { return this . txtUsername . getText ( ) ; }
va	5	public admin ( SimpleExtras plugin ) { this . plugin = plugin ; }
va	3	public Integer getId ( ) { return id ; }
va	4	public void setStartPosition ( int startPosition ) { _startPosition = startPosition ; }
va	10	public Map < String , Map < String , Map < Integer , HashSet < Integer >>> > getData ( ) { return table ; }
va	8	public void setPosition ( Point p ) { this . position = p ; c . setPosition ( p ) ; }
va	8	@ Override public void testRemoveItem ( ) { testTile . removeItem ( testItem ) ; assertFalse ( testTile . hasItems ( ) ) ; }
va	10	public static MoveLayerCommand move ( MapLayer layer , int newX , int newY ) { return new MoveLayerCommand ( layer , newX , newY ) ; }
va	10	public FloatBuffer getBuffer ( ) { if ( _updated ) { _top . store ( _buffer ) ; _buffer . flip ( ) ; _updated = false ; } return _buffer ; }
va	2	public int getIdTipoDeTurno ( ) { return idTipoDeTurno ; }
va	3	public Integer getCodEmprestimo ( ) { return codEmprestimo ; }
va	4	public synchronized static void setAuth ( boolean newAuth ) { authenticate = newAuth ; }
va	8	public static int putByte ( byte [ ] bytes , int offset , byte b ) { bytes [ offset ] = b ; return offset + 1 ; }
va	2	public void lock ( ) { this . lockStatus = true ; }
va	7	public Response get ( String url ) throws TBlogException { return httpRequest ( url , null , false ) ; }
va	2	public double getdirx ( ) { return dirx ; }
va	4	@ SuppressWarnings ( "null" ) public static void main ( String [ ] args ) { }
va	9	public HamQTHInterface ( String user , String pass ) { this . user = user ; this . pass = pass ; }
va	6	@ Test public void test_0909_TABLE_HEADER ( ) throws Exception { doTest ( getClass ( ) . getResource ( "/w3.org/WAI/UA/TS/html401/cp0909/0909-TABLE-HEADER.html" ) ) ; }
va	10	Token read ( TokenID expectedToken , String expectedString ) { expect ( expectedToken , expectedString ) ; return read ( ) ; }
va	6	public void setAccountNumberLabel ( String accountNumberLabel ) { this . accountNumberLabel . setText ( accountNumberLabel ) ; }
va	9	private void clearVisited ( final boolean [ ] visited ) { for ( int i = 0 ; i < visited . length ; i ++ ) { visited [ i ] = false ; } }
va	3	public EngineThread getEngineThread ( ) { return thread ; }
va	5	public void setAddress ( String input_address ) { address = input_address ; }
va	6	public FileLinkList ( final DefaultTreeModel model ) { super ( model ) ; setAllowsChildren ( true ) ; setUserObject ( "Files" ) ; }
va	7	public Dimension getPreferredSize ( ) { if ( datePattern != null ) { return new JTextField ( datePattern ) . getPreferredSize ( ) ; } return super . getPreferredSize ( ) ; }
va	1	private InsertParameterList ( ) { }
va	8	DistortBox ( SynthCanvas pa ) { super ( pa , IDENT ) ; setLabel ( "Distort" ) ; addInput ( new Input ( this , "x" ) ) ; }
va	5	public void insertXIntoDB ( ) { System . out . println ( "Outer x is " + x ) ; }
va	1	public void aboutToDisplayPanel ( ) { }
va	6	private void filedModelActionPerformed ( java . awt . event . ActionEvent evt ) { }
va	3	public NotificationRule ( ) { super ( Constants . API_URL ) ; }
va	2	public int getResultLength ( ) { return i_end ; }
va	6	@ Override public Bindings getBindings ( int scope ) { return stack [ scope ] ; }
va	4	public void setiData ( int iData ) { this . iData = iData ; }
va	5	@ Override public void fileAdded ( FileAddedEvent event ) throws InterruptedException { }
va	6	private void cleanTree ( ) { myCurrentScanner . close ( ) ; myCurrentRoot = null ; myCurrentInput = null ; myCurrentScanner = null ; }
va	7	public Result GuardarGrupoEstudio ( GrupoEstudio pGrupoEstudio ) { return new Result ( ResultType . Ok , "Datos grabados correctamente." , "" ) ; }
va	9	public static boolean compareDouble ( double a , double b ) { final double EPS = 1E-2 ; if ( Math . abs ( a - b ) < EPS ) { return true ; } return false ; }
va	2	public void update ( float tpf ) { }
va	8	@ Override public double exec ( double b , double c ) { return new double ( b . doubleValue ( ) + c . doubleValue ( ) ) ; }
va	1	public UserUtils ( ) { }
va	6	public static void main ( String [ ] args ) { Launcher l = new Launcher ( ) ; }
va	4	public Iterator keys ( ) { return this . keySet ( ) . iterator ( ) ; }
va	3	public Vertex getKd ( ) { return Kd ; }
va	5	public void setTitle ( String title ) { this . title = title ; }
va	8	private FloatEncoding ( String key , int bits ) { this . key = key ; this . bits = bits ; }
va	5	public void setPlayer ( EPlayer player ) { this . player = player ; }
va	2	public int getNum ( ) { return _num ; }
va	6	private void jComboBoxSportsBookingActionPerformed ( java . awt . event . ActionEvent evt ) { }
va	5	public void start ( ) { metingBeginTijd = new Date ( ) ; timer . start ( ) ; }
va	9	@ FXML void start ( ActionEvent event ) { startButton . setDisable ( true ) ; setMapCenter ( 54.92082843149136 , 23.829345703125 ) ; mac . startMoving ( null ) ; }
va	7	public static void $ ( final $boolean x , boolean y ) { x . $ ( y ) ; }
va	10	public void setClearColor ( float r , float g , float b , float a ) { glClearColor ( r , g , b , a ) ; }
va	6	public List < Map < String , String >> variableBindings ( ) { return variableBindings ; }
va	9	public static MessageDialog showMessageDialog ( Window parent , String message ) { return showMessageDialog ( parent , message , null ) ; }
va	8	@ Override public byte [ ] compress ( byte [ ] data , byte [ ] iv ) { return ByteArrayUtils . concat ( data , data ) ; }
va	2	public int getNew_at_count ( ) { return new_at_count ; }
va	2	public StartSnakeGame ( ) { initGUI ( ) ; }
va	7	protected Matrix getMeasurement ( Matrix matrix ) { return mH . times ( matrix ) ; }
va	8	public Builder ( double price , String id ) { this . price = price ; this . id = id ; }
va	10	public Vector3f div ( float r ) { return new Vector3f ( x / r , y / r , z / r ) ; }
va	5	public void setFonction ( String fonction ) { this . fonction = fonction ; }
va	1	public Ticket ( ) { }
va	7	public GamePredictor ( ) { tempWinArray = new ArrayList < BoardGame > ( ) ; tempQueue = new Queue < BoardGame > ( ) ; }
va	8	public static void main ( String [ ] args ) { Main b = new B ( ) ; b . printVariable ( ) ; }
va	7	@ Override public void onAngleChanged ( int id , int angle ) { this . angle = angle ; changed = true ; }
va	1	public Payment_CLI ( ) { }
va	6	public static Trace fromValue ( String v ) { return valueOf ( v ) ; }
va	1	public void decay ( ) { }
va	4	@ Override public double [ ] GetInitialParams ( double lp , double rp ) { return null ; }
va	6	public void setNoPembeli ( String no_beli ) { noBeliTextField . setText ( no_beli ) ; }
va	6	public void seek ( long pos ) throws IOException { randomFile . seek ( pos ) ; }
va	7	public void rotateRight ( ) { if ( root == null ) { return ; } if ( root . left == null ) { return ; } root = rotateRight ( root ) ; }
va	3	public File getSgfFile ( ) { return sgfFile ; }
va	6	ProgramaTableModel ( List < Programa > l ) { this . programas = l ; }
va	8	public static void parse ( String [ ] arguments ) throws IllegalOptionValueException , UnknownOptionException { parser . parse ( arguments ) ; }
va	6	public int addressOf ( String s ) { return fields . addressOf ( s ) ; }
va	3	public AMF0Message getAMFMessage ( ) { return message ; }
va	1	public Body ( ) { super ( ) ; }
va	4	public UserNotRegisteredException ( String message ) { super ( message ) ; }
va	7	@ Override public void agregaPresupuesto ( Presupuesto unPresupuesto ) { daoPresupuesto . agregaPresupuesto ( unPresupuesto ) ; }
va	6	public void untag ( String tag ) { tags . remove ( tag ) ; }
va	10	@ Test public void testSet ( ) { list . addEnd ( 1 ) ; list . set ( 56 , 0 ) ; assertEquals ( new Integer ( 56 ) , list . get ( 0 ) ) ; }
va	4	public void setDuration ( double duration ) { this . duration = duration ; }
va	5	public void setDob ( String dob ) { this . dob = dob ; }
va	10	void prExp ( VarExp e , int d ) { sayln ( "varExp(" ) ; prVar ( e . var , d + 1 ) ; say ( ")" ) ; }
va	3	static public int getBeginColumn ( ) { return bufcolumn [ tokenBegin ] ; }
va	8	public static JSONArray toJSONArray ( XMLTokener x ) throws JSONException { return ( JSONArray ) parse ( x , true , null ) ; }
va	1	public DebugCommand ( ) { super ( "Debug" ) ; }
va	10	public Object visitIdTree ( AST t ) { print ( "Id: " + ( ( IdTree ) t ) . getSymbol ( ) . toString ( ) , t ) ; return null ; }
va	6	public JSONWriter endArray ( ) throws JSONException { return this . end ( a , ] ) ; }
va	1	protected void interrupted ( ) { }
va	5	public Collection < Player > getPlayers ( ) { return this . playerMap . values ( ) ; }
va	10	public ListNode insertionSortList ( ListNode head ) { if ( head == null ) { return null ; } else if ( head . next == null ) { return head ; } else { return insertHelper ( head ) ; } }
va	8	private void setList ( List < Node > list ) { otherbox . getChildren ( ) . setAll ( list ) ; }
va	9	public void load ( Node node ) { super . load ( node ) ; fType = XMLHelper . getIntValue ( node , "Type" ) ; }
va	6	public static _Fields findByThriftId ( int fieldId ) { switch ( fieldId ) { case 1 : return DATA ; case 2 : return ID ; default : return null ; } }
va	6	private void stopPlaying ( ) { p . stop ( ) ; System . out . println ( "You tried to stop the playback" ) ; }
va	6	public void imprimir ( String texto ) { io . imprimir ( texto ) ; }
va	6	public void paintComponent ( Graphics g2 ) { g2 . drawImage ( bgImage , 15 , 14 , null ) ; }
va	7	@ After public void clean ( ) throws SQLException { cushyDBConnection . rollbackTransaction ( ) ; cushyDBConnection . close ( ) ; }
va	2	public double getOrientation ( ) { return orientation ; }
va	4	public static void main ( String [ ] args ) { new StaticAnimationDemo ( ) ; }
va	10	public void addmenu ( ) { | . add ( file ) ; | . add ( view ) ; | . add ( edit ) ; | . add ( stream ) ; setJMenuBar ( | ) ; }
va	9	@ Override public boolean accept ( File file ) { return file . isDirectory ( ) || file . getName ( ) . endsWith ( ".cer" ) ; }
va	3	public final String getRating ( ) { return rating ; }
va	1	public MessageFactory ( ) { }
va	1	public HorizontalAction ( ) { super ( "Horizontal" ) ; }
va	5	public void setColumnNames ( String [ ] columnNames ) { this . columnNames = columnNames ; }
va	6	@ Override public OSGiMetaData validate ( ) throws BundleException { OSGiMetaDataBuilder . validateMetadata ( this ) ; return this ; }
va	8	@ Override public void update ( ArrayList < Object > item ) { pr_dao . updateItem ( item ) ; }
va	6	private void processMessage ( Element xml ) { server . notifyDeviceListenersMessage ( this , xml ) ; }
va	10	public List < String > align ( CellDetails cellDetails , String cellData ) { return align ( cellDetails , cellData , " " ) ; }
va	5	private void zero ( ) throws JSONException { if ( probe ) { log ( 0 ) ; } write ( 0 , 1 ) ; }
va	5	public String getColumnName ( int col ) { return columnNames [ col ] ; }
va	9	public Coverage ( String name , String description ) { super ( name , description ) ; pn = new ProportionNonInformativeAlleles ( ) ; }
va	1	public DeleteAccountRequest ( ) { }
va	1	public TimeSerieRange ( ) { }
va	5	public void setNomHotel ( String nomHotel ) { this . nomHotel = nomHotel ; }
va	4	@ Override public int getWidth ( ) { return screen . getWidth ( ) ; }
va	5	public Menu ( MenuItem [ ] coffees ) { this . coffees = coffees ; }
va	7	@ Override public void cleanUp ( ) throws IOException { Files . walkFileTree ( tempDir , new DeletingFileVisitor ( ) ) ; }
va	3	protected void cleanUp ( ) throws IOException , InterruptedException { }
va	6	@ Override public Iterator < Entry < V >> iterator ( ) { return entries ( ) ; }
va	10	public InterpolatedField ( PgElementSet geometry , PgVectorField field ) { m_geometry = geometry ; m_field = field ; interpolate ( ) ; }
va	2	public double getPc3 ( ) { return pc3 ; }
va	1	public int statDrop ( ) { return 0 ; }
va	1	boolean isEditMode ( ) { return false ; }
va	3	public String getClassName ( ) { return mClassName ; }
va	8	protected boolean skillCheck ( int adjust ) { return Dice . roll ( "1d100" ) < ( actor . getSkillValue ( skillId ) + adjust ) ; }
va	8	public Smart ( Enemigo personaje ) { this . personaje = personaje ; random = new Random ( ) ; determinarInteligencia ( ) ; }
va	9	protected boolean hasMove ( Location from , Location to ) { return this . type . hasMove ( this , from , to ) ; }
va	10	Move ( final T vertex , final Iterator < T > iterator ) { this . vertex = vertex ; this . iterator = iterator ; }
va	4	@ Override public void request ( ) { adaptee . specificRequest ( ) ; }
va	2	public int getEventID ( ) { return eventID ; }
va	3	public ConnectionPanel getConnectionPanel ( ) { return connectionPanel ; }
va	10	public boolean is4Byte ( ) { int max = this . asSetSize ( ) ; for ( int i = 0 ; i < max ; i ++ ) if ( this . getAS ( i ) . is4Byte ( ) ) return true ; return false ; }
va	9	protected void definirJacket ( ) { raz ( ) ; panel_case . removeAll ( ) ; definirObjet ( "jacket" ) ; InterfaceEditeur . tab [ this . x ] [ this . y ] = this ; }
va	4	@ Override public Obstacle getObstacle ( ) { return new MovingObstacle ( ) ; }
va	2	public int getRate ( ) { return rate ; }
va	10	public final Option addBooleanOption ( char shortForm , String longForm ) { return addOption ( new Option . BooleanOption ( shortForm , longForm ) ) ; }
va	7	public boolean isFalse ( ) { return ( Xt == XT_BOOL && cont != null ) ? ( ( RBool ) cont ) . isFALSE ( ) : false ; }
va	7	public void setAddress ( String value ) { this . address = value ; this . isAddressDirty = true ; setDirty ( ) ; }
va	5	public void setInContext ( Pipe contents ) { this . currentPipe = contents ; }
va	2	public float getFlowVelocity ( ) { return flowVelocity ; }
va	1	public Plotter ( ) { this ( "Default" ) ; }
va	9	public ScriptOpener ( Frame parent , String scriptname ) { this . parent = parent ; this . scriptname = scriptname ; }
va	8	public Torre getTorreSeleccionada ( ) { int index = cbxTorres . getSelectedIndex ( ) ; return mdlTorres . getElementAt ( index ) ; }
va	7	public SetUpUnitCommand ( double xPos , double yPos ) { this . xPos = xPos ; this . yPos = yPos ; }
va	7	public void setIxPersonOpenedBy ( String ixPersonOpenedBy ) { this . ixPersonOpenedBy = DataType . toInteger ( ixPersonOpenedBy ) ; }
va	10	public InvalidDataException ( int closecode , String s , Throwable t ) { super ( s , t ) ; this . closecode = closecode ; }
va	6	private void teema ( ) { if ( teema . vaihdettu ) { vaihdaKuvat ( ) ; teema . vaihdettu = false ; } }
va	1	public int recoverHealth ( ) { return 0 ; }
va	5	public void setCommunicator ( Communicator communicator ) { this . communicator = communicator ; }
va	4	public void setWidth ( int width ) { this . width = width ; }
va	7	public ComplexValue ( double re , double im ) { this . re = re ; this . im = im ; }
va	9	public static int days ( int month , int year ) { if ( month == 2 ) return 28 + ( ( year % 4 == 0 ) ? 1 : 0 ) - ( ( year % 4 == 100 ) ? 1 : 0 ) ; if ( month < 8 ) return 30 + ( month % 2 ) ; return 31 - ( month % 2 ) ; }
va	2	public boolean isInquiryStarted ( ) { return inquiryStarted ; }
va	6	@ Override public void write ( byte [ ] b , int off , int len ) throws IOException { }
va	5	public void setLongTitle ( String longTitle ) { this . longTitle = longTitle ; }
va	4	public ArrayList < String > getUsers ( ) { return users ; }
va	2	public String checkDataEntry ( ) { return null ; }
va	5	@ Override public void insertUpdate ( DocumentEvent arg0 ) { updateProperties ( ) ; }
va	6	public void setVisibility ( boolean value ) { this . visibility = value ; this . isVisibilityDirty = true ; setDirty ( ) ; }
va	5	public void setPercentageRevenueFromOnline ( Integer percentageRevenueFromOnline ) { this . percentageRevenueFromOnline = percentageRevenueFromOnline ; }
va	5	public PlayerData ( UUID playerId ) { this . playerId = playerId ; }
va	1	public StringValueCreator ( ) { super ( ) ; }
va	10	public HitActor ( Body b , int min , int max ) { super ( b , Properties . HEALTH , min , max ) ; }
va	10	public Application ( String description , User user ) { this ( 0 , 0 , 0 , description , new Timestamp ( System . currentTimeMillis ( ) ) , user ) ; }
va	2	public RepetitionHashTable ( int size_in_bits ) { }
va	3	public String nameOfTheGame ( ) { return NameOfTheGame ; }
va	3	public void mouseClicked ( MouseEvent e ) { }
va	6	public Cat ( ) { System . out . println ( "in Cat constructor: " + this . getClass ( ) . getName ( ) + " this: " + this ) ; }
va	5	public void setMsd ( MSD msd ) { this . msd = msd ; }
va	5	public WaitUntilConsumedRunnable ( final ConsumedCondition onConsumedCondition ) { this . onConsumedCondition = onConsumedCondition ; }
va	5	public void setRedirectURL ( String redirectURL ) { this . redirectURL = redirectURL ; }
va	2	public int getStartTimecode ( ) { return mStartTimecode ; }
va	2	protected double getBreedingProbability ( ) { return breeding_probability ; }
va	2	public double getAge ( ) { return age ; }
va	5	public void setCorpus ( Corpus corpus ) { this . corpus = corpus ; }
va	10	private static Map . Entry entry ( final Object key , final Object value ) { return new SimpleEntry ( key , value ) ; }
va	7	public Accession ( String name ) { setName ( name ) ; id = nextAccessionId ++ ; }
va	1	ClassSearch ( ) { }
va	5	public NewAction ( Content content ) { super ( "New" , "Start with a fresh and empty document" , "org/freedesktop/tango/22x22/actions/document-new.png" ) ; this . content = content ; }
va	5	public String toString ( ) { return String . valueOf ( number ) ; }
va	2	public Compass ( ) { this ( SIZE_DEFAULT , 30 , 42 ) ; }
va	10	public CursoControl ( CursoView v , CursoTabela t ) throws Exception { this . view = v ; this . tabela = t ; }
va	4	public void setResistencia ( int nivelDeResistencia ) { this . resistencia = nivelDeResistencia ; }
va	3	public Address getAddress ( ) { return address ; }
va	5	synchronized public boolean onSuccess ( ) { if ( done ) return false ; done = true ; success = true ; onAction ( ) ; return true ; }
va	1	World ( ) { }
va	4	public void start ( ) { if ( timerOn ) timer . startTimer ( ) ; }
va	7	public static UserRoleTbl getUserRoleTbl ( Integer id ) { return userRoleCache . get ( id ) ; }
va	9	public static MessageChannel from ( Protocol p , ByteChannel channel ) { return new MessageChannel ( p , channel ) ; }
va	7	private static void log ( String string ) { System . out . println ( string ) ; }
va	5	public FlipChoice ( Game game ) { this . game = game ; }
va	9	@ Test public void ICE_attacking_FIGHTING ( ) { assertEquals ( 1.0 , tc . getWeaknessResistance ( Type . ICE , Type . FIGHTING ) , 0.0 ) ; }
va	7	public InspectorPluginManager ( Server instance , SimpleCommandMap commandMap ) { super ( instance , commandMap ) ; }
va	1	public ObjectFactory ( ) { }
va	8	public Object clone ( ) throws CloneNotSupportedException { LineStyle result = ( LineStyle ) super . clone ( ) ; return result ; }
va	1	public Paciente ( ) { }
va	10	public LogParserBuilder < T > withRegExpTokenizer ( List < String > sregexps ) { checkTokenizerPresent ( ) ; tokenizer = new RegExpTokenizer ( sregexps ) ; return this ; }
va	6	@ Override public void run ( ) { listener . producerCreatedProduct ( Producer . this , finalI ) ; }
va	6	public void updateUI ( ) { super . updateUI ( ) ; if ( jcalendar != null ) { SwingUtilities . updateComponentTreeUI ( popup ) ; } }
va	9	@ Before public void setUp ( ) throws Exception { sudoku = new Sudoku ( ) ; path = FileSystems . getDefault ( ) . getPath ( "sudoku.csv" ) ; }
va	4	public List < String > getErrorMessages ( ) { return list ; }
va	10	public TVEpisodeMatcher ( TVPath tvPath , TVMatcherOptions options ) { this . tvPath = tvPath ; this . episodeMatcher = new EpisodeMatcher ( options ) ; }
va	3	public BidirectionalDijkstraFinder ( ) { this ( new DaryHeap < T , double > ( 2 ) ) ; }
va	8	@ XmlElement ( name = "field" ) public void setField ( List < String > field ) { this . field = field ; }
va	2	public boolean isCaseSensitive ( ) { return caseSensitive ; }
va	8	@ Override public String toString ( ) { int id = e . getID ( ) ; return "(Input) " + e . toString ( ) ; }
va	5	@ Override Land getLandUnit ( class < ? extends Land > clazz ) { return null ; }
va	5	public HandPrintFactory chunkBoundaryMask ( long chunkBoundaryMask ) { this . chunkBoundaryMask = chunkBoundaryMask ; return this ; }
va	1	public DisableLimitsCommand ( ) { }
va	7	public int getNumVisibleAttributes ( ) { if ( Users . currentUserIsTypeB ( ) ) { return visiblePositions . size ( ) ; } return attributes . length ; }
va	1	public static void mergeKsorted2 ( ) { }
va	6	public long random ( ) { if ( size == 0 ) { return 0 ; } return items [ MathUtils . random ( 0 , size - 1 ) ] ; }
va	3	public Status getStatus ( ) { return this . status ; }
va	8	public void yypushback ( int number ) { if ( number > yylength ( ) ) zzScanError ( ZZ_PUSHBACK_2BIG ) ; zzMarkedPos -= number ; }
va	7	public void testBooleanLiterals ( ) { testParser ( lohr . BooleanLiteral , "true" ) ; testParser ( lohr . BooleanLiteral , "false" ) ; }
va	6	public HelpAction ( Console console ) { this . console = console ; initENG ( ) ; }
va	4	@ Override public CartAppActionBeanContext getContext ( ) { return ctx ; }
va	6	public boolean check ( PrintStream ps ) { return check ( ps , getDistanceTolerance ( ) ) ; }
va	1	private ChatRoomManager ( ) { }
va	3	public String getRefeicao ( ) { return refeicao ; }
va	3	public Connection getConn ( ) { return conn ; }
va	7	public void setDamageGauge ( boolean b ) { if ( b ) { lines [ 7 ] . data [ 4 ] = 1 ; } else { lines [ 7 ] . data [ 4 ] = 0 ; } }
va	1	private Strings ( ) { }
va	8	public HandlerRegistration addClickHandler ( ClickHandler handler ) { return addDomHandler ( handler , ClickEvent . getType ( ) ) ; }
va	6	@ Before public void setUp ( ) { cartRowCalculator = new CartRowCalculator ( ) ; MockitoAnnotations . initMocks ( this ) ; }
va	3	public String getPassword ( ) { return password ; }
va	3	public Integer getMark ( ) { return mark ; }
va	4	public BarChartTest ( String testName ) { super ( testName ) ; }
va	1	public void tearDown ( ) { }
va	1	void cleanUpForQuit ( ) { }
va	4	public void setHotelBudgetSpent ( double hotelBudgetSpent ) { this . hotelBudgetSpent = hotelBudgetSpent ; }
va	7	@ Override public void train ( ) { memories = new Memory [ ] { new Memory ( 0 , new double [ ] [ ] { { 5.10 , 0.00 , 0.00 , 0.00 } , { 0.00 , 3.40 , 0.00 , 0.00 } , { 0.00 , 0.00 , 1.50 , 0.00 } , { 0.00 , 0.00 , 0.00 , 0.40 } } ) , new Memory ( 1 , new double [ ] [ ] { { 5.70 , 0.00 , 0.00 , 0.00 } , { 0.00 , 3.00 , 0.00 , 0.00 } , { 0.00 , 0.00 , 4.70 , 0.00 } , { 0.00 , 0.00 , 0.00 , 1.40 } } ) , new Memory ( 2 , new double [ ] [ ] { { 6.50 , 0.00 , 0.00 , 0.00 } , { 0.00 , 2.80 , 0.00 , 0.00 } , { 0.00 , 0.00 , 6.30 , 0.00 } , { 0.00 , 0.00 , 0.00 , 2.10 } } ) } ; }
va	10	public Location ( int x , int y , int rotation ) { this . x = x ; this . y = y ; this . rotation = rotation ; }
va	4	public void setX ( int x ) { this . x = x ; }
va	10	public boolean canUnloadAllPosition ( Position targDropPos , boolean checkCanIssueCommandType , boolean checkCommandibility ) { return canUnloadAllPosition_native ( pointer , targDropPos , checkCanIssueCommandType , checkCommandibility ) ; }
va	3	public boolean weakensSEHits ( ) { switch ( this ) { case FILTER : case SOLID_ROCK : return true ; default : return false ; } }
va	5	public double getAbsoluteValue ( double val ) { return ( val < 0 ) ? - val : val ; }
va	2	public boolean isArriveBy ( ) { return arriveBy ; }
va	4	default public Signature getNamedSignature ( ) { return new Signature ( getNameNotNull ( ) , this ) ; }
va	5	public void setTargetEvolution ( SpeciePoolEvolution target ) { this . targetEvolution = target ; }
va	3	@ Test public void testGetStateList ( ) throws Exception { }
va	6	private static void print ( long a ) { System . err . print ( a + "L " ) ; }
va	2	public int getBufferLength ( ) { return bufferp [ 0 ] ; }
va	3	public String getCode ( ) { return code ; }
va	3	public Restriction [ ] family ( ) { return values ( ) ; }
va	8	public void SetMethodInUse ( String methodName ) { methodEnv = classEnv . _methodList . get ( methodName ) ; }
va	10	public boolean colContains ( int col , int value ) { for ( int i = 0 ; i < 9 ; ++ i ) { if ( grid [ i * 9 + col ] == value ) return true ; } return false ; }
va	2	public SendGUI ( ) { initComponents ( ) ; }
va	5	void setStatus ( Integer status ) { this . status = status ; }
va	1	public int getCarbonButtonWidth ( ) { return 25 ; }
va	9	@ Override protected TopLevelBlock subBlockCopy ( int current_class ) throws BTFMatrixErrorException , InternalErrorException , InconsistentLinearSystemException { return new CBlock ( this , current_class ) ; }
va	8	private void alarmOkActionPerformed ( java . awt . event . ActionEvent evt ) { alarmWindow . setVisible ( false ) ; }
va	2	public int getBids ( ) { return bids ; }
va	3	public String getTile8 ( ) { return tile8 ; }
va	1	public void fire ( ) { }
va	2	public int getOpcionSeleccionada ( ) { return opcionSeleccionada ; }
va	3	public BigInteger getFOpen ( ) { return fOpen ; }
va	7	public User getUserDetail ( String id ) throws WeiboException { return showUser ( id ) ; }
va	2	public String getInfo ( ) { return null ; }
va	1	public TList ( ) { }
va	2	public void next ( ) { next ( true ) ; }
va	3	private void clickedChangeDict ( ) { coach . ChangeDictionary ( ) ; }
va	2	public double getWeeklySalary ( ) { return weeklySalary ; }
va	8	IntraCellPairStateMapExecution ( IntraCellStateMapExecution intraCellExecution , int k ) { this . intraCellStateMapExecution = intraCellExecution ; this . k = k ; }
va	4	public void setOid ( int oid ) { this . oid = oid ; }
va	5	@ Override public String toString ( ) { return rank + " of " + suit ; }
va	5	private double round ( double value ) { return ( double ) Math . round ( value * 100 ) / 100 ; }
va	2	public int getBaseDamage ( ) { return baseDamage ; }
va	9	public void addRow ( Vector < String > row ) { this . editMode = true ; tableModel . addRow ( row ) ; this . editMode = false ; }
va	7	public Item getItem ( String alias ) { return items . get ( alias ) ; }
va	5	public void setIndexTopBound ( final Integer indexTopBound ) { indexMaximum = indexTopBound ; }
va	5	public void setAccessURL ( String accessURL ) { this . accessURL = accessURL ; }
va	4	@ Override public String toString ( ) { return super . toString ( ) + "CHEQUES" ; }
va	9	public static void main ( String [ ] args ) { int [ ] A = { - 3 , 0 , 1 , - 2 } ; System . out . println ( maxProduct ( A ) ) ; }
va	2	public int getTileH ( ) { return this . tileH ; }
va	3	@ Override public double [ ] getTransitionDistribution ( ) { return TRANSITION_DIST ; }
va	6	private EhCacheUtils ( ) { this . cacheManager = CacheManager . create ( EhCacheUtils . class . getResource ( "/ehcache.xml" ) ) ; }
va	2	@ Override protected int getSizeInOctets ( ) { return 8 ; }
va	3	@ Override protected void operationBegin ( ) throws MultiCloudException { }
va	7	public ActionListener buildOpenActionListener ( ) { return new ActionListener ( ) { public void actionPerformed ( ActionEvent e ) { loadFile ( ) ; } } ; }
va	7	public void update ( ) { for ( Component c : components . values ( ) ) { c . update ( ) ; } }
va	4	@ Override public Tree tree ( ) { return tree ; }
va	6	public static void setParameters ( String parameters ) { ArgsUtil . parameters = parameters ; }
va	4	public void setId ( int id ) { this . id = id ; }
va	9	@ Override public int hashCode ( ) { int hash = 7 ; hash = 79 * hash + ( this . value != null ? this . value . hashCode ( ) : 0 ) ; return hash ; }
va	7	public GDimension ( double width , double height ) { myWidth = width ; myHeight = height ; }
va	10	@ Override public OffHeapStructArray clone ( ) { OffHeapMemory cloned = ohm . clone ( ) ; return new OffHeapStructArray ( cloned , structLength ) ; }
va	3	public Merchant getoMerchant ( ) { return oMerchant ; }
va	8	@ Override public void actionPerformed ( ActionEvent e ) { if ( ecranPerso . ajouterJoueurEquipe ( perso ) ) griser ( ) ; }
va	4	public ReputationTaskCanceler ( Provider provider ) { super ( provider ) ; }
va	4	@ Before public void setUp ( ) { instance = new BSTOrderedDictionary ( ) ; }
va	9	public void run ( ) { try { Thread . sleep ( 1000 ) ; } catch ( InterruptedException e ) { e . printStackTrace ( ) ; } tr . setValue ( true ) ; }
va	4	public boolean isError ( ) { return ( this . value & ~ errorFlag ) != this . value ; }
va	10	public FilteredSoundStream ( InputStream in , SoundFilter soundFilter ) { super ( in ) ; this . soundFilter = soundFilter ; remainingSize = REMAINING_SIZE_UNKNOWN ; }
va	7	@ Test public void testGetType ( ) { assertEquals ( FlaschenType . PET , f . getType ( ) ) ; }
va	2	@ Override public boolean blockWalk ( ) { return true ; }
va	3	public Object getObject ( ) { return object ; }
va	2	public int getPenny ( ) { return penny ; }
va	1	private DateUtil ( ) { }
va	1	public Style ( ) { super ( ) ; }
va	7	private static boolean isTailCall ( Sexp sexp , Map < AtomSymbol , Sexp > env ) { return false ; }
va	9	public static void putProperty ( String key , String value ) { PROPS_ . put ( key , value ) ; }
va	9	public void addMatch ( final Team teamA , final Team teamB ) { matchPanel . addMatch ( teamA , teamB ) ; }
va	6	public void finalizeDone ( ReturnType value ) { this . done = true ; this . value = value ; }
va	6	public void load ( File file ) throws Exception { loadXML ( file ) ; }
va	8	@ Subscribe public void receiveDefDenominatorEvent ( DefDenominatorChanged e ) { model . setDefDenominator ( e . getNumber ( ) ) ; }
te	9	protected boolean isOutOfBounds ( final int row , final int column ) { if ( ( row < 0 ) || ( rowSize <= row ) || ( column < 0 ) || ( columnSize <= column ) ) { return true ; } return false ; }
te	2	public int getId ( ) { return this . id ; }
te	10	private boolean closeToMsPacMan ( Game game , int location ) { if ( game . getPathDistance ( game . getCurPacManLoc ( ) , location ) < PACMAN_DISTANCE ) return true ; return false ; }
te	4	public static byte [ ] getSHA256 ( byte [ ] input ) { return getHash ( "SHA-256" , input ) ; }
te	6	private void writeD ( int d ) { asmWrite ( Integer . toString ( d ) ) ; }
te	3	public String getTipo ( ) { return tipo ; }
te	7	public ConditionDisplay1 ( Observable o ) { mObservable = o ; mObservable . addObserver ( this ) ; }
te	9	public void addMessage ( Message msg ) { synchronized ( messages ) { this . messages . add ( msg ) ; messages . notify ( ) ; } }
te	8	LinkedListRange ( int a , int b ) { this . a = a ; this . b = b ; this . next = null ; }
te	2	@ Override public boolean blockWalk ( ) { return false ; }
te	3	public String getProductDescription ( ) { return productDescription ; }
te	7	public static String removeTrailingZeros ( String var ) { return var . replaceAll ( "[0]*$" , "" ) . replaceAll ( "\\.$" , "" ) ; }
te	2	public String getId ( ) { return "os" ; }
te	2	public boolean getLatinoOrHispanic ( ) { return latinoOrHispanic ; }
te	5	public void setRef ( String ref ) { this . ref = ref ; }
te	2	public void resume ( ) { isPaused = false ; }
te	4	public void removeUpdate ( final DocumentEvent documentEvent ) { verifyIfUserCanConnectToServer ( ) ; }
te	2	public int getDataWhichFollows ( ) { return dataWhichFollows ; }
te	5	public static void main ( String [ ] args ) { AutomatedJudgeScript . begin ( ) ; }
te	1	private ElementParser ( ) { }
te	3	@ Override public boolean hasData ( ) { return domainData != null ; }
te	10	public SimpleCharStream ( java . io . Reader dstream , int startline , int startcolumn ) { this ( dstream , startline , startcolumn , 4096 ) ; }
te	9	private void btnEnviarActionPerformed ( java . awt . event . ActionEvent evt ) { writeUTF ( txtCorreo . getText ( ) ) ; }
te	8	@ Override public String toString ( ) { return "RSSI{" + "value=" + Integer . toHexString ( value ) + " dbm=" + value * - 1 + } ; }
te	4	public void setDood ( boolean dood ) { this . dood = dood ; }
te	7	@ Override public void insert ( Credit credit ) { dao . insert ( credit ) ; }
te	8	public void set ( T value ) { synchronized ( initLock ) { this . value = value ; this . initialized . set ( true ) ; } }
te	6	public static ManejadorBD getInstancia ( ) { if ( instancia == null ) { instancia = new ManejadorBD ( ) ; } return instancia ; }
te	3	public EncrptTrgtType getEncrptTrgt ( ) { return encrptTrgt ; }
te	5	public void setX ( int x ) { this . pos . x = x ; }
te	3	public RegistroTupleScheme getScheme ( ) { return new RegistroTupleScheme ( ) ; }
te	5	public void setEa ( EnsemblDBsAdaptor ea ) { this . ea = ea ; }
te	4	@ Override public String toString ( ) { return query ; }
te	1	public int address ( ) { return 0 ; }
te	10	public static boolean contains ( int id , boolean cached ) { for ( Item item : getItems ( cached ) ) { if ( item . getId ( ) == id ) return true ; } return false ; }
te	2	public int getAttributes ( ) { return getU8 ( 7 ) ; }
te	1	public CommandPermissionsException ( ) { }
te	8	public Parameter ( final String name , final boolean value ) { this . name = name ; this . value = "" + value ; }
te	5	public void setNumexpediente ( String numexpediente ) { this . numexpediente = numexpediente ; }
te	8	public NFAState addTransit ( NFAState next ) { this . epsilonTransition . add ( next ) ; return next ; }
te	9	public Emprunt ( GregorianCalendar dateDebutRetrait , GregorianCalendar dateLimiteRetrait ) { this . setDateDebutRetrait ( dateDebutRetrait ) ; this . setDateLimiteRetrait ( dateLimiteRetrait ) ; }
te	10	@ Override public void run ( ) { try { store . buyCoffee ( name ) ; } catch ( InterruptedException e ) { System . out . println ( "interrupted sale" ) ; } }
te	5	public SensorHolder ( Sensor initialValue ) { value = initialValue ; }
te	10	@ Override public String execute ( ) { if ( databaseContext . table != null ) { return Integer . toString ( databaseContext . table . rollback ( ) ) ; } else { return "no table" ; } }
te	6	public void setConcepts ( List < Concept > concepts ) { this . concepts = concepts ; }
te	9	public Board ( int w , int h , int playerCount ) { board = new byte [ w ] [ h ] ; setPlayerCount ( playerCount ) ; }
te	1	public UnsupportedTagException ( ) { super ( ) ; }
te	6	@ Override public void onFinishingCombination ( List < List < PointEvent >> finishingCombinations ) { }
te	7	protected void BorrarNave ( ) { context . clearRect ( x - 25 , y , w , h ) ; }
te	2	public String toString ( ) { return "English String" ; }
te	10	public void setParameters ( Generator freq , Generator phase , Generator & ) { super . setParameters ( squareWave , freq , phase , & , false ) ; }
te	9	public void removeFeature ( Feature value ) { if ( value != null ) { markDeletedNode ( value ) ; this . feature . remove ( value ) ; } }
te	8	public JSONObject getTomeZone ( ) throws WeiboException { return client . get ( WeiboConfig . getValue ( "baseURL" ) + "common/get_timezone.json" ) . asJSONObject ( ) ; }
te	10	public void setRDomesticMig2011 ( double rDomesticMig2011 ) { double oldRDomesticMig2011 = this . rDomesticMig2011 ; this . rDomesticMig2011 = rDomesticMig2011 ; changeSupport . firePropertyChange ( "RDomesticMig2011" , oldRDomesticMig2011 , rDomesticMig2011 ) ; }
te	2	public int getShapeIndex ( ) { return myShapeIndex ; }
te	5	@ Test public void testIsNumeric ( ) { assertTrue ( datatype . isNumeric ( ) ) ; }
te	7	public JSONArray put ( Collection value ) { this . put ( new JSONArray ( value ) ) ; return this ; }
te	8	@ Override public final Impl children ( int ... indexes ) { return children ( JOOX . at ( indexes ) ) ; }
te	2	public int getIntMethod ( ) { return intMethod ; }
te	1	public EatState ( ) { super ( ) ; }
te	5	ImagePanel ( Image image ) { this . image = image ; }
te	4	public TrinaryNode ( int i ) { val = i ; }
te	9	public IndexNotFoundException ( String table , String index ) { this . index = index ; this . table = table ; }
te	4	public void setDown ( int down ) { this . down = down ; }
te	2	public boolean isbIsPrintable ( ) { return bIsPrintable ; }
te	3	public void invalidateLayout ( Container container ) { }
te	8	@ Override public void handleControl ( char aControlChar ) throws IOException { fail ( String . format ( "Control (%d) seen?!" , ( int ) aControlChar ) ) ; }
te	7	public void setRoom ( Room room ) { if ( room == null ) { throw new IllegalArgumentException ( "Room shouldn't be NULL" ) ; } this . room = room ; }
te	4	public LinkedList < AnimatedObject > getAnimatedObjects ( ) { return animatedObjects ; }
te	7	public Vector2D div ( double d ) { x /= d ; y /= d ; return this ; }
te	7	public static String getLiteral ( String s ) { return resources . getString ( s ) ; }
te	3	public Card getCard ( ) { return card ; }
te	8	ClassOutputBuffer ( String name ) { super ( toURI ( name ) , Kind . class ) ; this . name = name ; }
te	2	public double getLatitude ( ) { return latitude ; }
te	1	public Room ( ) { }
te	9	@ Override public PopulationChangeVector copy ( ) { PopulationChangeVector c = new PopulationChangeVector ( ) ; this . copyTo ( c ) ; return c ; }
te	6	public void logError ( final String message ) { log . error ( message ) ; }
te	10	protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { processRequest ( request , response ) ; }
te	5	public List < Room > getRoomList ( ) { return roomService . loadAllRoomsSortedBYBuildungAndNumber ( ) ; }
te	3	public RangeCondition getRangeCondition ( ) { return rangeCondition ; }
te	8	@ Override public String toString ( ) { return "Pair{" + "key='" + key + ' + "  value='" + value + ' + } ; }
te	5	public void setId3v1Tag ( ID3v1 id3v1Tag ) { this . id3v1Tag = id3v1Tag ; }
te	3	public static int hashCode ( boolean bool ) { return ( bool ? 1231 : 1237 ) ; }
te	1	public CadastroDeClienteControler ( ) { }
te	9	public StroopTestCreationController ( StroopTest stroopTest , EventBusService eventBusService ) { this . stroopTest = stroopTest ; this . eventBusService = eventBusService ; }
te	2	public boolean disposed ( ) { return disposed ; }
te	9	private boolean productIsLicensed ( ) { System . err . println ( "productIsLicensed was called" ) ; boolean b = licenseController . verifyLicense ( ) ; this . giveFocusBackToCurtain ( ) ; return b ; }
te	5	public void setEnviamentSMS ( String enviamentSMS ) { this . enviamentSMS = enviamentSMS ; }
te	4	public synchronized void xsetD4repeatable ( boolean flag ) { isD4repeatable = flag ; }
te	10	public Dispatch toDispatch ( ) { Dispatch dispatch = MarshalFromStream ( pointer . get ( ) ) ; pointer . invalidate ( ) ; return dispatch ; }
te	9	@ Test public void GHOST_attacking_BUG ( ) { assertEquals ( 1.0 , tc . getWeaknessResistance ( Type . GHOST , Type . BUG ) , 0.0 ) ; }
te	5	public void setKey ( String key ) { this . key = key ; }
te	4	public JComboBox < String > getDriversJCB ( ) { return driversJCB ; }
te	9	@ Override public void enterRule ( ParseTreeListener listener ) { if ( listener instanceof SSTListener ) ( ( SSTListener ) listener ) . enterIdentifierbrackets ( this ) ; }
te	9	public void addSelection ( CoverDetails cd ) { if ( cd != null && ! cd . isPartOfOtherCover ( ) ) { selectedCovers . add ( cd ) ; } }
te	10	public void testLauseGetPropositiotaulu ( ) { Lause lause = new Lause ( new Ekvivalenssi ( a , b ) , propositiot ) ; lause . getPropositiotaulu ( ) ; }
te	10	public void addPackageHandler ( PackageListener pl ) { if ( packageListener == null ) packageListener = new LinkedList < PackageListener > ( ) ; packageListener . add ( pl ) ; }
te	8	public void leave ( Sprite sprite , int x , int y ) { this . grid [ x ] [ y ] = null ; }
te	1	public MemberList ( ) { }
te	2	public int getId ( ) { return id ; }
te	8	private void jCheckBox4ActionPerformed ( java . awt . event . ActionEvent evt ) { jCheckBox4 . setSelected ( true ) ; }
te	4	public void setMaxWindow ( int window ) { this . maxWindow = window ; }
te	1	public long length ( ) { return - 1 ; }
te	7	private boolean contains ( final CircleLinkElement < Value > e ) { return elements . contains ( e ) ; }
te	1	protected ImageTyp ( ) { }
te	6	public void removeLayoutComponent ( Component component ) { info . remove ( component ) ; }
te	9	public void run ( ) { try { while ( true ) { Thread . sleep ( 20 ) ; world . move ( 0.07 ) ; c . repaint ( ) ; } } catch ( InterruptedException e ) { } }
te	7	public String utiliserObjet ( Personnage perso ) { perso . rajouterVie ( this . quantiteSoin ) ; return "" ; }
te	3	public char [ ] getPIN2 ( ) { return pin2 . getPassword ( ) ; }
te	9	public void add ( E element ) { synchronized ( queue ) { queue . addFirst ( element ) ; queue . notify ( ) ; } }
te	6	public void addOnReading ( String onReading ) { this . onReading . add ( onReading ) ; }
te	10	@ Override public void notifyStartNewGame ( ArrayList < Player > players ) { this . players = players ; this . view . showGameStart ( this . betWinner ) ; }
te	4	public void updateValue ( double value ) { this . value += value ; }
te	5	public void setId ( String value ) { this . id = value ; }
te	7	private void carregaClients ( ) { Client c = new Client ( "3" , "Pepe" , "S\u00E1nchez" , "pepito@gmail.com" ) ; session . saveOrUpdate ( c ) ; }
te	6	public void update ( Player player , List < Zombie > zombies ) { }
te	10	@ Override public void listWrong ( ) { if ( mc . questPanel . pnlSort != null ) mc . questPanel . pnlSort . wrong ( ) ; playWrong ( ) ; }
te	4	public FieldSize ( int maxlen ) { super ( ) ; size = maxlen ; }
te	1	public Occupancy ( ) { super ( ) ; }
te	9	public void panic ( EntityLiving el ) { if ( el . left ) { el . setRight ( true ) ; } else el . setLeft ( true ) ; }
te	4	@ Override public String usages ( ) { return javaString ( ) + " FILE_NAME [BUFFER_SIZE]\n" + "  BUFFER_SIZE: number in kB (default is 4kB)" ; }
te	2	@ Override public boolean enterable ( ) { return true ; }
te	9	protected org . w3c . dom . Attr getAdapter ( ) { if ( adapter == null ) { adapter = new DOMAttrImpl ( this ) ; } return adapter ; }
te	1	public FrmAdminInterface ( ) { }
te	2	public boolean isFaulty ( ) { return isFaulty ; }
te	10	public String read ( ) { String toReturn = "" ; while ( in . hasNext ( ) ) { toReturn += in . nextLine ( ) ; } return toReturn ; }
te	2	public boolean getShowGridline ( ) { return showGridline ; }
te	6	public void setName ( String name ) { this . name = name . toUpperCase ( ) ; }
te	5	public void setSaleTime ( Timestamp saleTime ) { this . saleTime = saleTime ; }
te	6	public static HorseVariant fromId ( int id ) { return ID_MAP . get ( id ) ; }
te	7	public Dimension getImageSize ( ) { return new Dimension ( raster . getWidth ( ) , raster . getHeight ( ) ) ; }
te	1	public double getSize ( ) { return 1 ; }
te	8	@ Test ( expected = IllegalArgumentException . class ) public final void testMinBatchRequest ( ) throws DiffbotException , JAXBException { diffbot . setMaxBatchRequest ( 0 ) ; }
te	10	@ XmlElementWrapper ( name = "dialogueList" ) @ XmlElement ( name = "dialogue" ) public void setDialogueList ( ArrayList < Dialogue > dialogueList ) { this . dialogueList = dialogueList ; }
te	9	public String getString ( int aidx ) { if ( aidx >= 0 && aidx < getCount ( ) ) return ( mystrings . get ( aidx ) ) ; else return ( "" ) ; }
te	3	public static String [ ] getFieldsName ( ) { return fieldsName ; }
te	4	@ Override public class < Input > getInputClass ( ) { return Input . class ; }
te	2	public int getHeight ( ) { return height ; }
te	10	@ Override public void visit ( @ NotNull Condition condition ) { System . out . print ( condition . getOperator ( ) + " " ) ; }
te	4	public void setLevelX ( int param ) { levelX = param ; }
te	5	public void setBitRate ( String bitRate ) { this . bitRate = bitRate ; }
te	5	public void setState ( State state ) { this . state = state ; }
te	6	public void setDeliveryPacketCollection ( Collection < DeliveryPacket > deliveryPacketCollection ) { this . deliveryPacketCollection = deliveryPacketCollection ; }
te	7	public void changeParent ( Task newParent ) { this . taskParent . removeChild ( this ) ; setTaskParent ( newParent ) ; }
te	5	public void setStore ( Store store ) { this . store = store ; }
te	5	public void setLOGGING_TIME ( DATE lOGGING_TIME ) { LOGGING_TIME = lOGGING_TIME ; }
te	1	public BSTOrderedDictionaryTest ( ) { }
te	2	public int getChildCount ( ) { return last ; }
te	1	private JellyTots ( ) { }
te	2	public int getStart ( ) { return start ; }
te	8	public static Communicator getCommunicatorInstance ( int instanceNumber ) { return ( Communicator ) Communicator . getCommunicatorList ( ) . get ( instanceNumber ) ; }
te	1	private Names ( ) { super ( ) ; }
te	10	public Vertex getVertex ( int vertex ) { if ( vertex < 0 || vertex >= vertices . length ) throw new IllegalArgumentException ( ) ; return vertices [ vertex ] ; }
te	2	public int getStatusCode ( ) { return this . statusCode ; }
te	7	public void actionPerformed ( java . awt . event . ActionEvent e ) { evaluateCommand ( ) ; }
te	8	public static void main ( String [ ] args ) { MainForm frame = new MainForm ( ) ; frame . setVisible ( true ) ; }
te	7	public Object getFeature ( String sStr1 , String sStr2 ) { throw new UnsupportedOperationException ( "org.w3c.tidy.DOMElementImpl getFeature() Not implemented" ) ; }
te	1	public ShannonsDiversity ( ) { this ( "SH" , "Shannons Diversity Index" ) ; }
te	1	public void function ( ) { }
te	10	@ Override public ExecutionBubble create ( ) throws IOException { Path tempDir = Files . createTempDirectory ( "harp_local_" ) ; return new LocalExecutionBubble ( tempDir ) ; }
te	8	public void clear ( ) { for ( int i = 0 ; i < size ; i ++ ) { n [ i ] = null ; } size = 0 ; }
te	6	public static GroupByParameter GroupByAsc ( String parameterName ) { return new GroupByParameter ( parameterName , true ) ; }
te	8	public void markSelected ( ) { setBorder ( BorderFactory . createLineBorder ( java . awt . Color . black ) ) ; }
te	9	@ Test public void testStringSeparator ( ) throws Exception { assert . assertEquals ( "1:2:3" , aggregate ( F . list ( "1" , "2" , "3" ) , StringBean . GET_OBJECT , ":" ) ) ; }
te	8	public int toggleUserActiveStatus ( User user ) { return toggleUserActiveStatus ( user . getId ( ) , user . getIsActive ( ) ) ; }
te	8	static public float cos ( float radians ) { return Sin . table [ ( int ) ( ( radians + PI / 2 ) * radToIndex ) & SIN_MASK ] ; }
te	1	public FullListException ( ) { super ( "The roll is already full" ) ; }
te	1	public void notifyPageDimensionsChanged ( ) { }
te	1	public StaticClass ( ) { }
te	6	@ Override public void accept ( final TreeVisitor visitor ) { visitor . visit ( this ) ; }
te	1	public PopulationChangeVector ( ) { super ( ) ; }
te	6	public Node ( E e ) { key = e ; isRed = true ; }
te	1	public Logout ( ) { super ( ) ; }
te	1	public Contract ( ) { }
te	7	@ Override public ILayer removeLayerAt ( int index ) { return this . layers . remove ( index ) ; }
te	1	StatusCanvas ( ) { this ( 128 , 24 ) ; }
te	4	public void setIdSolicitud ( int idSolicitud ) { this . idSolicitud = idSolicitud ; }
te	5	public void setDate ( String date ) { this . date = date ; }
te	7	private void jjCheckNAddTwoStates ( int state1 , int state2 ) { jjCheckNAdd ( state1 ) ; jjCheckNAdd ( state2 ) ; }
te	5	public Menu ( MenuItem [ ] coffees ) { this . coffees = coffees ; }
te	5	public void shouldShowGrid ( boolean shouldShowGrid ) { this . shouldShowGrid = shouldShowGrid ; repaint ( ) ; }
te	7	@ Override public void actionPerformed ( final ActionEvent e ) { listener . action ( e ) ; }
te	2	@ Override public void clearContent ( ) { }
te	7	@ Override public int compareTo ( RevisionInfo o ) { return ( int ) ( o . time - this . time ) ; }
te	7	private void initLogger ( ) { PropertyConfigurator . configure ( "log4j.properties" ) ; logger = Logger . getLogger ( TestDataCreator . class ) ; }
te	9	public void setDocumentRaw ( DocumentRaw rawDoc ) { this . title = rawDoc . getTitle ( ) ; this . numViews = rawDoc . getNumViews ( ) ; }
te	9	private void clean ( Stack stack ) { if ( ! stack . isEmpty ( ) ) { stack . pop ( ) ; this . clean ( stack ) ; } }
te	9	public void addOption ( Option ... options ) { for ( Option option : options ) { this . options . add ( option ) ; } }
te	8	@ Test ( expected = InvalidParameterException . class ) public void testServerPort ( ) { serverPort = new ServerPort ( nullPort ) ; fail ( ) ; }
te	2	public double getMean ( ) { return meanValue ; }
te	1	public ItemDisplay ( ) { super ( ) ; }
te	2	public boolean isNull ( ) { return value == null ; }
te	3	public int getRowCount ( ) { return data . length ; }
te	1	private SimpleObject ( ) { }
te	1	public ResultToken ( ) { }
te	1	public void update ( ) { }
te	2	public int getSize ( ) { return size ; }
te	2	public int getPayloadType ( ) { return payloadType ; }
te	10	public Whore ( Mediator mediator , String name , String message ) { super ( mediator , name , message ) ; }
te	7	public boolean connected ( int p , int q ) { return root ( p ) == root ( q ) ; }
te	3	@ BeforeMethod public void setUpMethod ( ) throws Exception { }
te	3	public HeightException ( int height ) { super ( "The height : " + height + " is not allowed." ) ; }
te	7	public void enviar ( final String mensaje ) { System . out . println ( mensaje ) ; }
te	6	@ Override public void close ( ) { this . getPortListener ( ) . interrupt ( ) ; this . getPortSender ( ) . interrupt ( ) ; }
te	2	public final float getValue ( ) { return value ; }
te	6	public static void setMinimumButtonWidth ( UnitValue width ) { BUTT_WIDTH = width ; MOD_COUNT ++ ; }
te	2	public int getTamanho ( ) { return tamanho ; }
te	9	public boolean checkUserInfo ( UserClass newUser ) { boolean result ; result = newUser . verify ( ) ; if ( ! result ) return false ; return result ; }
te	9	public Message ( String target , String message ) { m_target = target ; m_message = message ; }
te	10	@ Override public void createRound ( double x , double y , StdGame engine ) { new MissileRound ( x , y , engine ) ; }
te	5	public void execute ( ) { receiver . setFontSize ( receiver . getFontSize ( ) + 1 ) ; }
te	10	private void doorButtonActionPerformed ( java . awt . event . ActionEvent evt ) { this . cursor = cursorTypes . DOOR ; this . setStatusMessage ( "Cursor selected: door" ) ; }
te	7	private static WorldChanger createWorldShrinker ( int x , int y ) { return new WorldShrinker ( x , y ) ; }
te	2	@ Override public void preCompute ( ) { }
te	6	public static AsnRangeBuilder from ( Asn from ) { return new AsnRangeBuilder ( from ) ; }
te	5	public void setMSISDN ( String value ) { this . msisdn = value ; }
te	6	public Set < Plotter > getPlotters ( ) { return Collections . unmodifiableSet ( plotters ) ; }
te	2	public short getMapMarkingBytes ( ) { return mapMarkingBytes ; }
te	4	public void setDamp ( double damp ) { this . damp = damp ; }
te	4	public String getContentAsString ( ) { return content . getValue ( ) ; }
te	9	@ Test public void FIGHTING_attacking_BUG ( ) { assertEquals ( 0.5 , tc . getWeaknessResistance ( Type . FIGHTING , Type . BUG ) , 0.0 ) ; }
te	8	public GRectangle getBounds ( ) { return new GRectangle ( getX ( ) , getY ( ) - getAscent ( ) , getWidth ( ) , getHeight ( ) ) ; }
te	1	public BasicNodeTest ( ) { }
te	3	public static BufferedImage getCommonImg ( ) { return commonImg ; }
te	4	public ArrayList < StringToEntity > getEntities ( ) { return entities ; }
te	6	public Player getPlayerWithoutToken ( ) { return challenger . hasToken ( ) ? opponent : challenger ; }
te	1	public boolean isAlive ( ) { return true ; }
te	1	public boolean isError ( ) { return false ; }
te	4	public List < Order > getOrders ( ) { return orders ; }
te	1	public GeneratingFailed ( ) { super ( "generating failed." ) ; }
te	8	public static Each chain ( final Each ... each ) { return chain ( Arrays . asList ( each ) ) ; }
te	6	private final void r ( String s ) { if ( m ( ) > 0 ) setto ( s ) ; }
te	9	private Color determineElementColor ( final boolean anchored , final boolean selected ) { if ( anchored ) { return ORANGE ; } else if ( selected ) { return YELLOW ; } else { return LIGHT_GRAY ; } }
te	10	public static String secsToFuzzyHMS ( long deltaTSecs ) { if ( deltaTSecs > 3600 ) { return toSf ( deltaTSecs / 3600.0 , 2 ) + " h" ; } else if ( deltaTSecs > 60 ) { return toSf ( deltaTSecs / 60.0 , 2 ) + " min" ; } else { return deltaTSecs + " s" ; } }
te	8	@ Override protected boolean popFromSemanticStackUntil ( final SemanticStack stack ) { return stack . peek ( ) . getName ( ) . equals ( "ParameterNode" ) ; }
te	5	@ Override public boolean isRunning ( ) throws RemoteException { return server . isRunning ( ) ; }
te	4	public void changeAlpha ( float alpha ) { changeAlpha ( ( int ) ( alpha * 255 ) ) ; }
te	7	@ Test ( expected = JobNotFoundException . class ) public void testTouchWithInvalidJob ( ) throws Exception { client . touch ( 10000 ) ; }
te	6	@ Override public byte getByte ( long i ) { return dataRe . getByte ( i ) ; }
te	8	public Categoria ( String n ) { this . nombre = n ; this . recorrido = null ; this . items = new ArrayList ( ) ; }
te	3	public static CalculatorFrame getFrame ( ) { return mainCalcFrame ; }
te	3	public Color getColor ( ) { return color ; }
te	1	public Alarm ( ) { }
te	8	@ Override public int hashCode ( ) { int hash = 0 ; hash += ( locationPK != null ? locationPK . hashCode ( ) : 0 ) ; return hash ; }
te	3	public String getName ( ) { return name ; }
te	10	public static int lcm2 ( int a , int b ) { return Math . abs ( a * b ) / gcd ( a , b ) ; }
te	9	public Invite [ ] findByInviteRes ( String res ) throws InviteDaoException { return findByDynamicSelect ( SQL_SELECT + " WHERE res = ?" , new Object [ ] { res } ) ; }
te	3	public String getContactNum ( ) { return contactNum ; }
te	2	public double getPvp_Venta ( ) { return Pvp_Venta ; }
te	5	public void setDtSaida ( Date dtSaida ) { this . dtSaida = dtSaida ; }
te	6	void validateHeaderName ( String name ) { HttpCodecUtil . validateHeaderName ( name ) ; }
te	7	@ Override public void delete ( ) throws Exception { safeClose ( fstream ) ; file . delete ( ) ; }
te	1	private FPSManager ( ) { }
te	10	public void setVoice ( String voice ) { if ( voice != null && ! voice . isEmpty ( ) ) { this . voice = Voice . valueOf ( voice ) ; } }
te	10	public GLColor ( float red , float green , float blue ) { SetRed ( red ) ; SetGreen ( green ) ; SetBlue ( blue ) ; }
te	1	public SipInboundPricing ( ) { }
te	5	public void setStringStringArray ( String [ ] [ ] stringStringArray ) { this . stringStringArray = stringStringArray ; }
te	9	public SwarmIdentifier ( String identifier ) { myIdentifier = identifier ; System . out . println ( "Created Identifier node " + myIdentifier ) ; }
te	7	@ Override public void notifyObservers ( String event ) { this . controlObserver . update ( event ) ; }
te	5	@ Override public FileFilter createFileFilter ( ) { return new ResultFileFilter ( "TRer_validation_" + a_threshhold ) ; }
te	7	@ Override public double getResult ( ) { double result = 0 ; result = super . get_numberA ( ) + super . get_numberB ( ) ; return result ; }
te	6	@ Override public void fileRemoved ( FileRemovedEvent event ) { logEventIfDebugEnabled ( event ) ; }
te	1	public QuizCreatedServlet ( ) { super ( ) ; }
te	2	public int minPlayer ( ) { return MinPlayer ; }
te	1	public MqttConnectOptions ( ) { }
te	2	public final boolean isDebugMode ( ) { return debug ; }
te	6	public void setchb_newListener ( ItemListener l ) { chb_new . addItemListener ( l ) ; }
te	5	public SimpleService ( URL wsdlLocation ) { super ( wsdlLocation , SERVICE ) ; }
te	5	public String getExternThemesType ( ) { return externThemesComboBox . getSelectedItem ( ) . toString ( ) ; }
te	6	@ Threaded public void thread1 ( ) { while ( ! ai . compareAndSet ( 2 , 3 ) ) Thread . yield ( ) ; }
te	4	public BufferedImage getImage ( ) { return getImage ( id ) ; }
te	8	public void load ( ) { if ( dataCargada == true ) { Window . alert ( "Solo esta permitido LOAD una vez" ) ; GWT . log ( "ADVERTENCIA: Se esta intentando carga otra vez TJAudio load()" ) ; return ; } createCanplaythrough ( ) ; nativeLoad ( ) ; }
te	5	public void setUnitOfMeasure ( String value ) { this . unitOfMeasure = value ; }
te	7	public void checkBGCollision ( int tilecid , int objcid ) { el . checkBGCollision ( this , tilecid , objcid ) ; }
te	5	public TransparentPanel ( LayoutManager layout ) { setLayout ( layout ) ; }
te	10	Arco ( int desde , int hasta , int peso ) { this . desde = desde ; this . hasta = hasta ; this . peso = peso ; }
te	5	public void heat ( ) { temperature = 105 ; System . out . println ( "Hottub is heating to a steaming 105 degrees" ) ; }
te	8	public boolean compareSize ( ExprList compare ) { return v . size ( ) == compare . getList ( ) . size ( ) ; }
te	7	@ Override public void insertUser ( User user ) { System . out . println ( "Insert User into MySql DB" ) ; }
te	8	public Personnage [ ] getPersosOnMap ( Client c ) { return Client . toListPerso ( clients , c ) ; }
te	7	@ Override public String toString ( ) { return "{cards=" + cards + "  rank=" + rank + "  rating=" + rating + } ; }
te	2	@ Override public float getKz ( ) { return 0 ; }
te	4	public ArrayList < Horario > getHorarios ( ) { return horarios ; }
te	4	public float getPrefWidth ( ) { if ( sizeInvalid ) computeSize ( ) ; return prefWidth ; }
te	3	public String getPassword2 ( ) { return password2 ; }
te	9	public static void main ( String [ ] args ) { int [ ] arrs = { 1 , 2 , 3 , - 1 , 5 , 6 , - 11 , 1 , 7 , 9 } ; System . out . println ( findLargestSum ( arrs ) ) ; }
te	8	protected boolean isTypeCompatible ( final Object other ) { return ( null != other ) && getClass ( ) . equals ( other . getClass ( ) ) ; }
te	1	private void definirEventos ( ) { }
te	9	public void setData ( Player player ) { x = player . x ; y = player . y ; }
te	7	@ Override public void setNumSquare ( int numSquare ) { super . setNumSquare ( numSquare ) ; sqNumWidth = 3 ; sqNumHeight = 2 ; }
te	3	public String getUser ( ) { return user ; }
te	3	public BuildVoc ( ) { pipe = new ProcessPipe ( ) ; }
te	10	public Street ( ) { Price = 0 ; Owner = - 1 ; Houses = 0 ; Mortgage = false ; Taxes = new int [ ] { 0 , 0 , 0 , 0 , 0 , 0 } ; GroupID = - 1 ; HousePrice = 0 ; HotelPrice = 0 ; Name = "" ; }
te	4	public void setHide ( boolean value ) { this . hide = value ; }
te	2	public int getWidth ( ) { return width ; }
te	2	public short getType ( ) { return type ; }
te	1	private static byte [ ] init__Scanner_actions_0 ( ) { return new byte [ ] { 0 , 1 , 0 , 1 , 1 , 1 , 2 , 1 , 3 , 1 , 4 , 1 , 5 , 1 , 6 , 1 , 7 , 1 , 8 , 1 , 9 , 1 , 12 , 1 , 13 , 1 , 14 , 1 , 15 , 1 , 16 , 2 , 1 , 0 , 2 , 1 , 9 , 2 , 2 , 9 , 2 , 3 , 0 , 2 , 4 , 15 , 2 , 4 , 16 , 2 , 6 , 9 , 2 , 8 , 15 , 2 , 8 , 16 , 2 , 10 , 17 , 2 , 11 , 18 , 2 , 12 , 15 , 2 , 12 , 16 , 2 , 15 , 5 , 2 , 15 , 7 , 2 , 15 , 16 , 2 , 16 , 4 , 2 , 16 , 8 , 2 , 16 , 12 , 2 , 16 , 15 , 3 , 4 , 15 , 5 , 3 , 4 , 15 , 7 , 3 , 4 , 15 , 16 , 3 , 8 , 15 , 5 , 3 , 8 , 15 , 7 , 3 , 8 , 15 , 16 , 3 , 12 , 15 , 5 , 3 , 12 , 15 , 7 , 3 , 12 , 15 , 16 , 3 , 15 , 11 , 18 , 3 , 15 , 16 , 5 , 3 , 15 , 16 , 7 , 3 , 16 , 4 , 15 , 3 , 16 , 8 , 15 , 3 , 16 , 12 , 15 , 3 , 16 , 15 , 5 , 3 , 16 , 15 , 7 , 4 , 4 , 15 , 11 , 18 , 4 , 4 , 15 , 16 , 5 , 4 , 4 , 15 , 16 , 7 , 4 , 8 , 15 , 11 , 18 , 4 , 8 , 15 , 16 , 5 , 4 , 8 , 15 , 16 , 7 , 4 , 12 , 15 , 11 , 18 , 4 , 12 , 15 , 16 , 5 , 4 , 12 , 15 , 16 , 7 , 4 , 16 , 4 , 15 , 5 , 4 , 16 , 4 , 15 , 7 , 4 , 16 , 8 , 15 , 5 , 4 , 16 , 8 , 15 , 7 , 4 , 16 , 12 , 15 , 5 , 4 , 16 , 12 , 15 , 7 , 4 , 16 , 15 , 11 , 18 } ; }
te	9	public OSGiManifestBuilder addBundleVersion ( Version version ) { delegate . append ( Constants . BUNDLE_VERSION + ": " + version ) ; return this ; }
te	6	public void remove ( String key ) { data . remove ( key ) ; }
te	7	public static String readFile ( final String path ) { return readFile ( new File ( path ) ) ; }
te	2	public double getY ( ) { return y ; }
te	6	public void autoriserAccesUtilisateur ( Utilisateur u ) { getVisibiliteUtilisateur ( ) . add ( u ) ; }
te	3	public InputStream getInputStream ( ) { return in ; }
te	6	@ Override protected void unbindImpl ( ) { EXTFramebufferObject . glBindFramebufferEXT ( EXTFramebufferObject . GL_FRAMEBUFFER_EXT , 0 ) ; }
te	9	public static String generateString ( Object [ ] array , String delimiter ) { return generateString ( array , delimiter , false ) ; }
te	5	public String toString ( ) { return name + ": " + buttonActivatorCount + " button activators  " + randomCount + " random" ; }
te	5	@ Override public Dimension getSize ( ) { return canvas . getSize ( ) ; }
te	3	public void arreglo ( ) { int [ ] miArreglo = new int [ 3 ] ; miArreglo [ 5 ] = 19 ; }
te	6	public String toString ( ) { String ret = "Weapon " + power ; return ret ; }
te	4	public ArrayList < Sentencia > getLista ( ) { return lista ; }
te	8	protected String getEntitySpecificConverterString ( T_Entity entity , Integer id ) { return id . toString ( ) ; }
te	6	public static void main ( String args [ ] ) { ConstrTwo c = new ConstrTwo ( ) ; }
te	5	private ChickenDisplay ( Chicken c ) { super ( "Chicken Viewer" ) ; this . c = c ; }
te	3	public Controller getController ( ) { return ctrl ; }
te	5	public void setDocumentFormat ( DocumentFormat documentFormat ) { this . documentFormat = documentFormat ; }
te	2	@ Override public byte [ ] getContent ( ) { return null ; }
te	2	public boolean isChecksumme ( ) { return checksumme ; }
te	3	private String generateReference ( ) { return "%val" + nextReferenceIndex ++ ; }
te	5	public List < Modificationtype > getItemsAvailableSelectOne ( ) { return getFacade ( ) . findAll ( ) ; }
te	6	public ICtrlHabitacio getCtrlHabitacio ( ) { if ( ctrlHabitacio == null ) ctrlHabitacio = new CtrlHabitacio ( ) ; return ctrlHabitacio ; }
te	10	public void storeWriteString ( String id , String value ) { localstore . put ( id , value ) ; storeWrite ( ) ; }
te	7	@ Override public int readMore ( ByteBuffer dst ) throws SSLException { return readRemaining ( dst ) ; }
te	2	public int getHeight ( ) { return height ; }
te	2	protected final String fsp_name ( ) { return "AND_SPLIT" ; }
te	6	public void setPosition ( RobotState position ) { this . position = position . clone ( ) ; }
te	8	public final void removeUse ( Instruction i ) throws Exception { if ( ! uses . remove ( i ) ) { throw new Exception ( "Use not present" ) ; } }
te	1	public BloomsNodeTester ( ) { }
te	5	public String getConnectedHost ( ) { return this . socket . getInetAddress ( ) . getHostName ( ) ; }
te	9	public String getNewValue ( String oldValue ) { return values [ 0 ] . equals ( oldValue ) ? values [ 1 ] : values [ 0 ] ; }
te	3	protected Address getTestBillingAddress ( ) { return getAddress ( "Billing" , "Miami" , "FL" , "US" , "3524 NW 72TH ST" , "33601" , "client@domain.com" , "305-325-4565" ) ; }
te	2	public boolean isFieldLineLength ( ) { return fieldLineLength ; }
te	6	public Anim ( ) { setPreferredSize ( new Dimension ( width , height ) ) ; setDoubleBuffered ( true ) ; }
te	7	public Curve ( double x , double h ) { this . h = h ; this . x = x ; }
te	10	@ ManyToOne ( fetch = FetchType . LAZY ) @ JoinColumn ( name = "per_gender_id" , nullable = false ) public GenderTbl getGenderTbl ( ) { return this . genderTbl ; }
te	6	@ Override public void updateCharacterStream ( int columnIndex , Reader x ) throws SQLException { }
te	5	public void setDateTimeValue ( Date dateTimeValue ) { this . dateTimeValue = dateTimeValue ; }
te	3	public String arbolSTR ( ) { return treeString ; }
te	6	public void movimientoDerecha ( ) { velocidad = Math . abs ( velocidad ) ; updateX ( ) ; }
te	7	public double pagoMensual ( int cm , int cmgs ) { return cm * montoPorMin + cmgs * montoPorMsgs ; }
te	4	public Vector < Properties > search ( ) { return this . search ( null ) ; }
te	6	public Map < String , List < TitleListItem >> getMap ( ) { return itemMap ; }
te	3	public Timestamp getFechaDeConclusion ( ) { return mFechaDeConclusion ; }
te	6	public ICtrlBonsHotels getCtrlBonsHotels ( ) { if ( ctrlBonsHotels == null ) ctrlBonsHotels = new CtrlBonsHotels ( ) ; return ctrlBonsHotels ; }
te	6	@ Override public void vivir ( ) { if ( this . disparo . disparo ( ) ) this . gameLoop . remover ( this ) ; }
te	10	public void processingInstruction ( String target , String data ) throws SAXException { ch . processingInstruction ( target , data ) ; }
te	9	public SyncStateTimerTask ( SlaveNode owner , Main main ) { this . owner = owner ; this . main = main ; }
te	7	public static void state ( boolean expression , String message ) { if ( ! expression ) { throw new IllegalStateException ( message ) ; } }
te	3	public String getName ( ) { return name ; }
te	3	public Party getEnemyParty ( ) { return mobParty ; }
te	2	@ SuppressWarnings ( "UnusedDeclaration" ) public BooleanBean ( ) { }
te	2	public int getCount ( ) { return count ; }
te	8	public void set ( byte cell , Node node ) { set ( ( ( int ) cell ) & FF , node ) ; }
te	7	public Integer remove ( String arg0 ) { return vector . remove ( arg0 ) ; }
te	8	public final LC alignX ( String align ) { setAlignX ( ConstraintParser . parseUnitValueOrAlign ( align , true , null ) ) ; return this ; }
te	7	private void jButton2ActionPerformed ( java . awt . event . ActionEvent evt ) { this . dispose ( ) ; }
te	1	public ObjectFactory ( ) { }
te	8	public NQuadParser ( File input ) throws IOException { this . inputFile = input ; this . reset ( ) ; this . preFetch ( ) ; }
te	4	public MagicSword ( int value ) { this . value = value ; }
te	3	public State getCloseState ( ) { return closeState ; }
te	5	public void setName ( String name ) { this . name = name ; }
te	8	private boolean isPrimitiveTypeSignature ( String typeSignature ) { return Signature . getTypeSignatureKind ( typeSignature ) == Signature . BASE_TYPE_SIGNATURE ; }
te	10	public Date getDate ( ) { if ( date . getValue ( ) == null ) { return new Date ( System . currentTimeMillis ( ) ) ; } return ( Date ) date . getValue ( ) ; }
te	7	@ Override public void open ( final String guiName ) { super . open ( guiName ) ; buttonCoolDown = 5 ; }
te	6	public ProvBuilder specializationOf ( ) throws ProvBuildException { return store ( new SpecializationOf ( getEntity ( "specializationOf" ) , null ) , true ) ; }
te	9	public boolean equals ( dir other ) { if ( other . x == this . x && other . y == this . y ) return true ; return false ; }
te	9	protected void checkWin ( ) { if ( 0 == boxesLeft . get ( ) ) { gameWon . set ( true ) ; gameStopped . set ( true ) ; heartbeat . stop ( ) ; } }
te	7	@ Override public void actionPerformed ( ActionEvent e ) { if ( table . getSelectedRowCount ( ) == 1 ) { viewCard ( ) ; } }
te	6	public static synchronized DepartmentDAO getDepartmentDAO ( ) { if ( departmentDAO == null ) { departmentDAO = new DepartmentDAO ( ) ; } return departmentDAO ; }
te	5	public NumberAST ( String value ) { this ( value , DataTypes . long ) ; }
te	5	public Vector2i setY ( int y ) { this . y = y ; return this ; }
te	1	public Diploma ( ) { }
te	2	public int getChar_start ( ) { return char_start ; }
te	1	private LinkHandler ( ) { }
te	6	public String filename ( ) { return specs . getTableFile ( GameOfLife . LOCAL_DIR ) ; }
te	10	public void putIntArray ( String name , int [ ] value ) { tags . put ( name , new IntArrayTag ( name , value ) ) ; }
te	3	public Player getWinner ( ) { return winner ; }
te	9	public static int pixelsToInt ( String px ) { return Integer . parseInt ( px . substring ( 0 , px . length ( ) - 2 ) ) ; }
te	9	public OSGiManifestBuilder addImportPackage ( class < ? > imported , VersionRange version ) { return addImportPackage ( imported . getPackage ( ) , version ) ; }
te	3	public void reset ( ) { buffer = null ; bufferReady = false ; }
te	6	@ Override public void close ( ) throws SQLException { System . out . println ( "closed DummyJdbcStatement" ) ; }
te	4	public static SparseBoolean toSparseBoolean ( boolean b ) { return b ? true : false ; }
te	7	public boolean connected ( int p , int q ) { return root ( p ) == root ( q ) ; }
te	4	@ Override public String generarCodigo ( ) { return "ldc.r4 " + this . valor + "\n" ; }
te	7	public Graphics2D begin ( ) { if ( img != null ) { graphics = img . createGraphics ( ) ; return graphics ; } else { return null ; } }
te	10	public void test_readInteger ( ) { final byte [ ] data = new byte [ 4 ] ; data [ 0 ] = 53 ; data [ 1 ] = 89 ; data [ 2 ] = 62 ; data [ 3 ] = 77 ; assertEquals ( 895041101 , IOUtil . readInteger ( data , 0 ) ) ; }
te	3	boolean handleResponse ( JmDNSImpl dns ) { return false ; }
te	2	public long getId ( ) { return id ; }
te	5	public void setCineplex ( Cineplex cineplex ) { this . cineplex = cineplex ; }
te	4	public synchronized static void setMonitor ( long newMonitor ) { monitor = newMonitor ; }
te	2	public boolean isReady ( ) { return isReady ; }
te	4	boolean scanBus ( ) throws SecurityException { boolean retval = false ; return retval ; }
te	4	public PhraseRanker ( Indexer indexer ) { super ( indexer ) ; }
te	1	public boolean hasChildNodes ( ) { return false ; }
te	4	public void setUserCondition ( long userCondition ) { this . userCondition = userCondition ; }
te	10	@ Test public void daycareStaffUpdate ( ) { daycareStaff1Update = new daycareStaffImpl . Builder ( 1 ) . name ( "Jenny" ) . build ( ) ; assert . assertEquals ( daycareStaff1Update . getName ( ) , "Jenny" ) ; }
te	1	protected Version ( ) { }
te	5	public void setdValidFrom ( Date dValidFrom ) { this . dValidFrom = dValidFrom ; }
te	7	public Variable ( String name , TypeExp type ) { this ( name , type , null ) ; }
te	8	@ Override public class < ? > getColumnClass ( int column ) { switch ( column ) { case 0 : return Integer . class ; case 1 : return Integer . class ; case 2 : return Object . class ; default : return String . class ; } }
te	10	private void calculateCube ( Iterable < T > facts ) { if ( facts == null ) { return ; } for ( T fact : facts ) { addFact ( fact ) ; } }
te	3	public String getOfferPrice ( ) { return offerPrice ; }
te	1	public NetworkException ( ) { }
te	8	public RowMapperEnumFieldConfigBuilder numericValueNumericMappings ( Map < Integer , Integer > numericValueNumericMappings ) { this . numericValueNumericMappings = numericValueNumericMappings ; return this ; }
te	7	@ Override public ScenarioTreeStep getNextStep ( ) { if ( this . selectedOption == - 1 ) { throw new RuntimeException ( "ScenarioTreeStepSimpleList: Auswahl-Id muss gesetzt worden sein  um n\u00E4chsten Schritt abzurufen." ) ; } return this . getFollowUpStep ( selectedOption ) ; }
te	7	@ Override public void removeListener ( InvalidationListener il ) { listeners . remove ( il ) ; }
te	4	protected IOConsole createConsole ( ) { return IOConsole . SYSTEM_CONSOLE ; }
te	8	public OlogException ( Status status , String message ) { super ( message ) ; this . setStatus ( status ) ; }
te	8	public static void assertValue ( Object value , String name ) { if ( value == null ) throw new IllegalArgumentException ( "Null " + name ) ; }
te	8	public static void test ( ) { for ( int i = 0 ; i < 5 ; i ++ ) { new IntegerInc ( ) . start ( ) ; new AtomicInc ( ) . start ( ) ; } }
te	10	@ Override public void run ( ) { try { batch . closeOnCompletion ( ) ; batch . executeBatch ( ) ; } catch ( SQLException e ) { e . printStackTrace ( ) ; } }
te	4	@ XmlElement public String getCodigoTitulo ( ) { return mCodigoTitulo ; }
te	10	@ Override public AcceptEntityBuilder toastIf ( boolean condition , ToastIfHandler then ) { return builder . toastIf ( condition , then ) ; }
te	10	@ Test public void linearProbingHashTable ( ) { testInteger ( new LinearProbingHashTable < Integer , Integer > ( ) ) ; testInteger ( new LinearProbingHashTable < Integer , Integer > ( 10 ) ) ; }
te	8	@ Override public int compareTo ( Node o ) { return double . compare ( getCost ( ) , o . getCost ( ) ) ; }
te	4	public void setMyYCoord ( double yCoord ) { this . myYCoord = yCoord ; }
te	10	@ JsonProperty ( "ComputingService" ) public void setComputingService ( List < org . ogf . glue2 . ComputingService > ComputingService ) { this . ComputingService = ComputingService ; }
te	4	public String getLanguage ( ) { return locale . getLanguage ( ) ; }
te	6	public void push ( E data ) { this . list . add ( data ) ; }
te	4	private void handlePreferencesCancelClicked ( ) { restorePreferences ( ) ; preferencesDialog . setVisible ( false ) ; }
te	8	private void daftarButtonActionPerformed ( java . awt . event . ActionEvent evt ) { new KwitansiController ( ) . tampilkanDaftarPembeli ( ) ; }
te	3	public Expression getLeft ( ) { return e ; }
te	1	public HasUniqueChars ( ) { }
te	3	public E1 getFirst ( ) { return _first ; }
te	10	public void run ( ) { r = Secant . zeroSecant ( f , high , low , stop , max , g ) ; }
te	7	public boolean equals ( Instance instance ) { return identifier . equals ( instance . identifier ( ) ) ; }
te	4	public void setIntensity ( float intensity ) { this . intensity = intensity ; }
te	1	public ObjectFactory ( ) { }
te	2	public double getPreciseTrackLength ( ) { return preciseTrackLength ; }
te	10	public JavaCharStream ( java . io . Reader dstream , int startline , int startcolumn ) { this ( dstream , startline , startcolumn , 4096 ) ; }
te	4	public synchronized void setCurrentGameStatus ( int gameStatus ) { this . currentGameStatus = gameStatus ; }
te	1	public void decay ( ) { }
te	4	public void setMatchPos ( int pos ) { posMarker_ = pos ; }
te	2	public boolean isValidateHorizontal ( ) { return validateHorizontal ; }
te	8	@ Override public int hashCode ( ) { int hash = 0 ; hash += ( iddepartment != null ? iddepartment . hashCode ( ) : 0 ) ; return hash ; }
te	9	public Controller ( ) { gui = new Gui ( ) ; setListener ( ) ; mess = new Messenger ( ) ; c = Calendar . getInstance ( ) ; }
te	7	public MessageUrn ( String uriString ) throws URISyntaxException { myUri = new URI ( uriString ) ; }
te	2	private boolean isFilesystemUnaccessible ( ) { return ! isFilesystemAccessible ( ) ; }
te	1	JREImage ( ) { }
te	2	public long getDuration ( ) { return duration ; }
te	8	@ Override public String getFlashPolicy ( WebSocket conn ) { return "<cross-domain-policy><allow-access-from domain=\"*\" to-ports=\"" + conn . getLocalSocketAddress ( ) . getPort ( ) + "\" /></cross-domain-policy>\u0000" ; }
te	2	public boolean isVerified ( ) { return verified ; }
te	10	public GeneralPanel ( String name , EmbeddedMediaPlayer player ) { super ( name ) ; _player = player ; super . setupPanel ( ) ; this . setBorder ( null ) ; }
te	10	public void setImageOrigin ( Point newOrigin ) { originX = newOrigin . x ; originY = newOrigin . y ; repaint ( ) ; }
te	3	public String getCommandName ( ) { return this . command_name ; }
te	4	public Set < String > getPagesMigrated ( ) { return pagesMigrated ; }
te	9	private void stopProcessor ( final Throwable ex ) { if ( ex instanceof RuntimeException ) { throw ( RuntimeException ) ex ; } else { throw new RuntimeException ( ex ) ; } }
te	7	private void jButton1ActionPerformed ( java . awt . event . ActionEvent evt ) { this . dispose ( ) ; }
te	7	public void setMap ( Map < String , TestEntity2 > map ) { this . map = map ; }
te	1	private Rule ( ) { this ( false ) ; }
te	8	@ Override public double readDouble ( ) throws IOException , UBJFormatException { double d = super . readDouble ( ) ; peek = - 1 ; return d ; }
te	9	public IITOperationStatus convertTrack ( Variant iTrackToConvert ) { return new IITOperationStatus ( Dispatch . call ( this , "ConvertTrack" , iTrackToConvert ) . toDispatch ( ) ) ; }
te	3	public String getLocale ( ) { return locale ; }
te	1	public TestDownLoadImg ( ) { }
te	1	private ParameterIO ( ) { }
te	8	public static int inputLayer ( final NetCoreGenerator gen , final int num ) { return MLPGenerator . inputLayer ( gen , num ) ; }
te	9	@ Override public T fragment ( String fragment ) { urlBuilder . fragment ( fragment ) ; return page ; }
te	10	public static int randomIntInclusive ( int m , int n ) { int random = randomGenerator . nextInt ( n - m + 1 ) ; return m + random ; }
te	8	public static void main ( String [ ] args ) { SliderTest st = new SliderTest ( ) ; st . run ( ) ; }
te	1	Requester ( ) { }
te	9	public void waitToProceed ( ) throws InterruptedException { print ( "in waitToProceed() - entered" ) ; synchronized ( proceedLock ) { print ( "in waitToProceed() - about to wait()" ) ; proceedLock . wait ( ) ; print ( "in waitToProceed() - back from wait()" ) ; } print ( "in waitToProceed() - leaving" ) ; }
te	4	public Zone ( PhysicsComponent physics ) { super ( physics , null ) ; }
te	6	public Programme ( ) { programmeDate = "" ; startTime = - 1 ; endTime = - 1 ; title = "" ; inCharge = "" ; }
te	5	public String toString ( ) { return " at " + this . index + " [character " + this . character + " line " + this . line + "]" ; }
te	3	@ JsonProperty ( "WaitingJobs" ) public long getWaitingJobs ( ) { return WaitingJobs ; }
te	6	@ Test ( expected = IllegalArgumentException . class ) public void testSetMonthWrongMaxParam ( ) { cal . setMonth ( 13 ) ; }
te	7	public boolean lose ( ) { for ( Unit unit : units . values ( ) ) { if ( ! unit . isComputer ( ) ) { return false ; } } return true ; }
te	4	@ Override public void leftMultiply ( IMatrix other ) { }
te	2	public DBEntity ( ) { modified = true ; }
te	8	public void set_transfer_duration ( String in ) { try { _transfer_duration = double . parseDouble ( in ) ; } catch ( NumberFormatException e ) { ; } }
te	10	public ParseContext ( IScanner scanner , IExpressionContext ctx ) { super ( scanner ) ; if ( ctx == null ) { throw new IllegalArgumentException ( "ctx must not be null" ) ; } this . ctx = ctx ; }
te	2	public double v ( ) { return v ; }
te	7	@ Override protected ArticleDO handle ( String id ) { return new ArticleDO ( id ) ; }
te	2	public void removeAreaForIndex ( int index ) { }
te	4	public ArrowTypeNode ( ) { this . parTypes = new ArrayList < Node > ( ) ; }
te	5	public void setData ( String data ) { this . data = data ; }
te	6	public void setBedIds ( ArrayList < Identifier > bedIds ) { BedIds = bedIds ; }
te	8	public void validate ( ) throws org . apache . thrift . TException { if ( success != null ) { success . validate ( ) ; } }
te	4	@ Override public ThresholdRange getThresholdRange ( ) { return thresholdRange ; }
te	6	private void dataCaducitatFormattedTextFieldActionPerformed ( java . awt . event . ActionEvent evt ) { }
te	5	private void setLinhas ( ArrayList list ) { linhas = list ; }
te	8	@ Override public SearchRequestBuilder withPhonebookRequestFileType ( String fileType ) { getPhonebookRequest ( ) . setFileType ( fileType ) ; return this ; }
te	8	public static void main ( String [ ] args ) { AnimalHolder < Dog > dogHolder = new AnimalHolder < Dog > ( ) ; }
te	7	@ Override public void execute ( Runnable command ) { executorService . execute ( command ) ; }
te	2	public int bitsLeftForByteAlignment ( ) { return 8 - ( consumedBits & 7 ) ; }
te	5	public void setSplitChar ( final String split ) { this . inSplit = split ; }
te	5	public void unknownWordBootstrappingMain ( ) { String plMiddle = "(ee)" ; int newInt = 0 ; do { } while ( newInt > 0 ) ; }
te	4	public String getElapsedTime ( ) { return timer . getElapsedTimeString ( ) ; }
te	7	public void onSongComplete ( PlayListItem item ) { if ( this . mainPanel != null ) { this . mainPanel . onSongComplete ( item ) ; } }
te	3	public Plist getPlist ( ) { return plist ; }
te	3	public String getILastReplyBy ( ) { return iLastReplyBy ; }
te	9	public Conexion ( ) { this . nombreBaseDatos = "" ; this . nombreTabla = "" ; this . sentenciaSQL = "" ; this . driver = "" ; this . url = "" ; this . user = "" ; this . password = "" ; this . esSelect = false ; }
te	10	@ Override public int build ( MyLevel level ) { return buildingTool . build ( start , lenght , floor , level ) ; }
te	6	public PlaceholderTextField ( final String pText , final int pColumns ) { super ( pText , pColumns ) ; }
te	2	public boolean isOccupiesWholeTile ( ) { return occupiesWholeTile ; }
te	9	@ Test public void ICE_attacking_STEEL ( ) { assertEquals ( 0.5 , tc . getWeaknessResistance ( Type . ICE , Type . STEEL ) , 0.0 ) ; }
te	2	public double getMeanBaselineGrp ( ) { return meanBaselineGrp ; }
te	3	public String getMobile ( ) { return mobile ; }
te	1	public SpiralValleyAction ( ) { super ( "spiralValley" ) ; }
te	10	private String uncommentLine ( String line ) { if ( isCommented ( line ) ) return line . replaceFirst ( "\\s*" + REGEX_COMMENT_STRING , "" ) ; else return line ; }
te	4	public final void setVisualPadding ( boolean b ) { this . visualPadding = b ; }
te	6	public void setError ( List < ErrorData > error ) { this . error = error ; }
te	10	@ Override public int save ( ) { int nup = 0 ; if ( this . id <= 0 || ! exists ( ) ) { nup = insert ( ) ; } else { nup = update ( ) ; } return nup ; }
te	1	public Emotion ( ) { super ( ) ; }
te	9	@ Override public String toString ( ) { if ( amount == 1 ) return item . getItemName ( this ) ; else return item . getItemName ( this ) + " (x" + amount + ")" ; }
te	1	public void undo ( ) { }
te	10	private byte [ ] dump ( byte [ ] bytes ) { System . out . println ( "OUT: " + bytes . length + " bytes: " + join ( bytes ) ) ; return bytes ; }
te	4	public boolean isClosing ( ) { return indexOf ( CLOSING_BRACKETS , bracket ) >= 0 ; }
te	1	public LessFolder ( ) { }
te	6	GradeDistro ( ) { a = b = c = d = f = 0 ; }
te	9	void doTimeStep ( ) { if ( world != null ) { world = world . nextGeneration ( timeStep ) ; gamePanel . display ( world ) ; } }
te	1	Memory ( ) { }
te	5	public void setNome ( String nome ) { this . nome = nome ; }
te	9	protected ContactNym ( long cPtr , boolean cMemoryOwn ) { super ( otapiJNI . ContactNym_SWIGUpcast ( cPtr ) , cMemoryOwn ) ; swigCPtr = cPtr ; }
te	4	public void toggleSearch ( ) { if ( search == true ) { search = false ; } else { search = true ; } }
te	1	protected void onUnload ( ) { }
te	4	@ Override public int getRowCount ( ) { return datas . size ( ) ; }
te	10	public static final Country getByAlpha2 ( final String alpha2 ) { if ( alpha2 == null ) return null ; try { return enum . valueOf ( Country . class , alpha2 ) ; } catch ( final IllegalArgumentException e ) { return null ; } }
te	8	@ Override public Map < String , String > getEntityAnnotationsL ( Object arg0 ) throws OntowrapException { return null ; }
te	6	@ Override public void genC ( PW pw ) { pw . println ( ";" ) ; }
te	5	public void setMaxFractionDigits ( int value ) { numFormat . setMaximumFractionDigits ( value ) ; }
te	1	public boolean isFatal ( ) { return true ; }
te	8	public Message pop ( ) { if ( isLast ( ) ) { return null ; } else if ( next . isLast ( ) ) { return detatch ( ) ; } else { return next . pop ( ) ; } }
te	7	static public void logConnectionOpen ( final int openConnectionsCount ) { LOGGER . trace ( "[DB CONNECTION OPENED ] [openConnectionsCount={}]" , Integer . valueOf ( openConnectionsCount ) ) ; }
te	6	@ Override public Event next ( ) { return new UserHomeState ( as , name ) ; }
te	2	public int inputsNum ( ) { return inputsNum ; }
te	3	public void clear ( ) { this . map . clear ( ) ; }
te	7	public static String toString ( Object o ) throws JSONException { return toString ( o , null ) ; }
te	4	public void setGrantType ( int grantType ) { this . grantType = grantType ; }
te	6	public MenuLowCalorIterator ( LinkedList < MenuItem > menu ) { this . menu = menu ; }
te	9	public void testSetHashLinks ( ) { substrateNetwork . setHashLinks ( physicalLinks ) ; assertEquals ( physicalLinks . size ( ) , substrateNetwork . getAmountLinks ( ) ) ; }
te	4	public void setfTsumwy2 ( double fTsumwy2 ) { this . fTsumwy2 = fTsumwy2 ; }
te	2	public boolean isFailure ( ) { return isFatal ( ) ; }
te	8	@ Override public void validate ( ) throws RuntimeException { if ( arguments . size ( ) < definition . getArgumentRequiredCount ( ) ) { throw new RuntimeException ( "Not enough arguments." ) ; } }
te	9	private String getNewMultipartDelimiter ( ) { Random random = new Random ( ) ; return long . toHexString ( random . nextLong ( ) ) . toLowerCase ( ) ; }
te	5	public Set < Symbol > bases ( ) { return Collections . emptySet ( ) ; }
te	9	protected Board ( Board board ) { this . board = board . board ; this . playerPositions = board . playerPositions ; }
te	1	public ChallengeServlet ( ) { super ( ) ; }
te	10	@ Inject public EditTestMenuController ( EventBusService eventBusService , StroopTestProvider stroopTestProvider ) { this . eventBusService = eventBusService ; this . stroopTestProvider = stroopTestProvider ; }
te	7	public static ArraySet subtract ( ArraySet first , ArraySet second ) { return first ; }
te	7	@ Override public ScenarioTreeStep getNextStep ( ) { if ( this . getFollowUpSteps ( ) . length == 0 ) { throw new RuntimeException ( "ScenarioTreeStepDBOWLTablet: Kein Folgeschritt gesetzt!" ) ; } return this . getFollowUpStep ( 0 ) ; }
te	2	public float getOther ( ) { return other ; }
te	6	public void callForOpen ( ) { open_file . getPlayingMedia ( this ) ; open_file . openTheFile ( allpanels ) ; }
te	8	double getMinimumSecurityStatus ( ) { Number number = securityStatusModel . getNumber ( ) ; if ( number != null ) { return number . doubleValue ( ) ; } else { return 0.5 ; } }
te	2	public double getNetto ( ) { return netto ; }
te	9	public int getDamageTo ( UnitType toType , UnitType fromType ) { return getDamageTo_native ( pointer , toType , fromType ) ; }
te	5	public AccueilController ( AccueilView view ) { this . view = view ; }
te	8	public static boolean isWindows ( ) { String OS = System . getProperty ( "os.name" ) . toLowerCase ( ) ; return ( OS . indexOf ( "win" ) >= 0 ) ; }
te	2	public int getIdletimout ( ) { return idletimout ; }
te	9	@ Override public final Impl before ( String content ) { return before ( JOOX . content ( content ) ) ; }
te	3	public Integer getClicks ( ) { return this . clicks ; }
te	1	public Item ( ) { }
te	9	public BsNode ( K key , E elem ) { this . key = key ; this . elem = elem ; }
te	4	public void setPartners ( int [ ] partners ) { this . partners = partners ; }
te	5	public void setTime ( Timestamp time ) { this . time = time ; }
te	9	public Button ( String text , Dimension dim ) { setText ( text . toUpperCase ( ) ) ; init ( ) ; }
te	6	private void setClient ( ClientBase < T > theClient ) { client = theClient ; }
te	2	public int cdlGravestoneDojiLookback ( ) { return super . cdlGravestoneDojiLookback ( ) ; }
te	10	@ Test public void testIsNumeric ( ) { ArrayType subject = new ArrayType ( ) ; org . junit . assert . assertFalse ( subject . isNumeric ( ) ) ; }
te	5	public void setDeptName ( String deptName ) { this . deptName = deptName ; }
te	7	public void setAccountReportRepository ( ReportRepository < PlayerReport , UUID > accountReportRepository ) { this . accountReportRepository = accountReportRepository ; }
te	10	public void setNamedSender ( CoReceiver coReceiver ) { synchronized ( lock ) { checkNotAlreadyEnqueued ( ) ; checkAllowOverwrite ( sender , "sender" ) ; sender = coReceiver . getNamedSignature ( ) ; } }
te	10	public static void writeInt8 ( byte value , byte [ ] dest , int offset ) { System . arraycopy ( convertInt8 ( value ) , 0 , dest , offset , 1 ) ; }
te	9	public MonteCarloPlayer ( String name , int num , Color c ) { super ( name , num , c ) ; }
te	4	public void setI_soldPrice ( int i_soldPrice ) { this . i_soldPrice = i_soldPrice ; }
te	6	public BayesNode getNode ( int id ) { return nodes . get ( id ) ; }
te	1	public WeiboConfig ( ) { }
te	3	public void clear ( ) { front = null ; back = null ; }
te	10	public Clases ( String idProfesor , IClient client ) { this . client = client ; this . idProfesor = idProfesor ; this . idDiaSetmana = 0 ; }
te	6	public Object accept ( ASTVisitor v ) { return v . visitRelOpTree ( this ) ; }
te	3	public OtpSelf self ( ) { return self ; }
te	10	@ Override public void renderMoving ( ChessPosition oldPos , ChessPosition newPos ) { boardView . renderMoving ( oldPos , newPos ) ; }
te	8	protected void showPreloader ( ) { removeAll ( ) ; setLayout ( new GridBagLayout ( ) ) ; add ( createPreloader ( ) ) ; revalidate ( ) ; repaint ( ) ; }
te	7	public ServantsTasksDispatcher ( PublicServiceDepartment department ) { this . department = department ; department . setServantsTasksDispatcher ( this ) ; }
te	2	public int getQuanity ( ) { return quanity ; }
te	1	public Group ( ) { }
te	7	@ Test ( expected = IllegalArgumentException . class ) public void findSmallestPrefixShouldThrowAnExceptionWhenRequestedPrefixLengthIsTooSmall ( ) { findMinimumPrefixForPrefixLength ( Ipv6Range . parse ( "::1-::10" ) , - 1 ) ; }
te	6	@ Override public void dataChanged ( Object dataValue , Object newValue ) { }
te	10	public int getDistanceToWall ( ) { switch ( dir ) { case DIR_NORTH : return y ; case DIR_SOUTH : return 11 - y ; case DIR_WEST : return x ; case DIR_EAST : return 11 - x ; } return 0 ; }
te	3	public String getType ( ) { return type ; }
te	10	public IntegerMenuItem ( String newMessage , String defaultValue ) { super ( newMessage , defaultValue ) ; mValue = RemoveNonNumbers ( mValue ) ; }
te	9	Path ( Vertex start , Vertex end ) { this ( ) ; this . start = start ; this . end = end ; }
te	6	@ JsonAnyGetter public Map < String , Object > getAdditionalProperties ( ) { return this . additionalProperties ; }
te	3	public String getReducerClassName ( ) { return reducerClassName ; }
te	5	public ServerStatusChangedNotificationVP ( JLabel connectionStatus ) { this . connectionStatus = connectionStatus ; }
te	7	public int getTileCidAtCoord ( double x , double y ) { return el . getTileCidAtCoord ( x , y ) ; }
te	2	public int getOneKmRub ( ) { return oneKmRub ; }
te	5	public EntityGameSystem ( EntityCollection entities ) { this . entities = entities ; }
te	7	public void illegal ( State s , Decision d , String reason ) { }
te	8	public void mutate ( Random random , int height ) { mutateFloor ( random , height ) ; mutateParameters ( ) ; }
te	3	public Logger getLogger ( ) { return log ; }
te	2	@ Override public int getID ( ) { return 0 ; }
te	5	public PaintableMessage indent ( int indent ) { this . indent = indent ; return this ; }
te	6	public static String get ( String [ ] textID ) { return textID [ currentLang ] ; }
te	10	public CCO ( Population p , MersenneTwisterRNG r ) { population = p ; rng = r ; reward = 0 ; }
te	5	public void setBusinessName ( String value ) { this . businessName = value ; }
te	7	public static void main ( String [ ] args ) { Test t = new Test ( args ) ; }
te	8	public void test_UnicastRemoteObject_Void ( Remote param ) throws RemoteException { System . out . println ( "MyRemoteObject: test_UnicastRemoteObject_Void: param = " + param ) ; }
te	7	@ Override public void moderatorGranted ( String participant ) { logger . debug ( "moderatorGranted: participant='" + participant + "'" ) ; }
te	1	public ProjectileRenderer ( ) { }
te	1	private StdDraw ( ) { }
te	8	public void updateUI ( ) { super . updateUI ( ) ; setEnabled ( isEnabled ( ) ) ; if ( jcalendar != null ) { SwingUtilities . updateComponentTreeUI ( popup ) ; } }
te	2	public int getHintLevel ( ) { return hintLevel ; }
te	9	Query ( String id , String text ) { this . id = id ; this . text = text ; }
te	8	private void setAssistantsButtonActionPerformed ( java . awt . event . ActionEvent evt ) { new AssistantPromotion ( ) . setVisible ( true ) ; }
te	1	public Classificacio ( ) { super ( ) ; }
te	10	public PlayerServer ( int id , String endpointFile , int roundsPlaying ) throws ServerCreationException { this ( id , endpointFile ) ; roundsLeft = roundsPlaying ; }
te	10	public ShowUnobstructed ( VertexContainer p , GraphicInterface gui ) { super ( p , gui ) ; System . out . println ( "Trace mode. Left button to choose a vertex from which trace is visualized." ) ; }
te	4	public EncFSUnsupportedException ( Throwable cause ) { super ( cause ) ; }
te	9	protected static float clamp ( final float frictionA , final float frictionB ) { return ( float ) Math . sqrt ( frictionA * frictionA + frictionB * frictionB ) ; }
te	6	public static double nextGaussian ( double mean , double stddev ) { return nextGaussian ( ) * stddev + mean ; }
te	1	public boolean isString ( ) { return false ; }
te	9	public void setCell ( int columnIndex , GridCell < E > cell ) { cells . set ( columnIndex , cell ) ; }
te	7	@ Override public void recvLogOutUser ( String userName ) { med . recvLogOut ( userName ) ; }
te	4	public void beginTransaction ( ) { this . transaction = SESSION . beginTransaction ( ) ; }
te	8	@ Test public void shouldReturnOriginalStringIfTokenToSubstituteDoesNotExistInString ( ) { String source = "%1-%2 something %1-%3" ; assertEquals ( "%1-%2 something %1-%3" , BufferTools . substitute ( source , "%X" , "XXXXX" ) ) ; }
te	8	private void highlightBlob ( TextBlob blob , boolean bool ) { addUpdate ( getHighlight ( blob , bool ) ) ; }
te	1	private void redraw ( ) { }
te	6	public void changeStyle ( int style ) { setFont ( getFont ( ) . deriveFont ( style ) ) ; }
te	3	public double [ ] getWeight ( ) { return weight . clone ( ) ; }
te	9	public double getDirection ( ) { final double OFFSET = 0.001 ; double sign = ( myAngle < 0 ) ? 1 : - 1 ; return ( ( myAngle + sign * OFFSET ) % 360 ) - sign * OFFSET ; }
te	3	public Message getChatMessage ( ) { return chatMessage ; }
te	1	public Requeststate ( ) { }
te	4	public void setChannelIndex ( byte channelIndex ) { this . channelIndex = channelIndex ; }
te	3	public List [ ] getListArray ( ) { return listArray ; }
te	6	public static Image getImage ( String name ) { return getImage ( name , false , false ) ; }
te	2	public byte [ ] getAuthenticatorServer ( ) { return this . AuthenticatorServer ; }
te	4	public List < Message > getMessages ( ) { return messages ; }
te	10	public boolean isLess ( E pdato , E pdaton ) { return pdato == null ? pdaton == null : lessComparer ( pdato , pdaton ) ; }
te	1	public Poblacio ( ) { }
te	3	public String getMethodName ( ) { return methodName ; }
te	5	@ Override public void setHPNumerator ( int hpNumerator ) { this . hpNumerator = hpNumerator ; }
te	5	public boolean getSub ( ) { return ( boolean ) boolean . valueOf ( map . get ( "sub" ) . toString ( ) ) ; }
te	7	@ Override public void addCustomer ( String id , String name ) { throw new UnsupportedOperationException ( "Not supported yet." ) ; }
te	2	public int getY ( ) { return y ; }
te	3	public String getType ( ) { return type ; }
te	6	public boolean removeConstraint ( Constraint constraint ) { return belongsTo . remove ( constraint ) ; }
te	1	protected void interrupted ( ) { }
te	7	@ Override public void createPost ( String message ) { posts . add ( message ) ; }
te	1	public boolean getSelected ( ) { return false ; }
te	1	public MySelector ( ) { }
te	3	public Path getRoot ( ) { return root ; }
te	4	void load ( ) { System . out . println ( " \uD0C0" ) ; }
te	10	public ChatGUI ( ) { initComponents ( ) ; ableToType ( false ) ; inputField . setFont ( fontI ) ; inputField . setText ( "Type your message here..." ) ; displayMessage ( "Enter an IP  Password  and Nickname to start chatting..." , STARTUP ) ; }
te	6	public HashMap < Integer , ArrayList < Edge >> getForest ( ) { return forest ; }
te	3	long position ( ) throws IOException { return this . currentPos ; }
te	4	public long optLong ( int index ) { return this . optLong ( index , 0 ) ; }
te	3	public String getAttrTitle ( ) { return attrTitle ; }
te	1	public StudioTest ( ) { }
te	9	public SchemeObject makeBegin ( SchemeObject exp ) { return SchemeObject . cons ( SchemeObject . BEGIN_SYMBOL , exp ) ; }
te	10	private boolean isValidOperation ( char operation ) { String tmp = String . format ( "%s" , operation ) ; return OPERATIONS . contains ( tmp ) ; }
te	3	public void clear ( ) { map . clear ( ) ; }
te	8	@ Override public long maximum ( int a , int b ) { return a > b ? a : b ; }
te	7	public String getServerUrlJConnect ( ) { return String . format ( "%s:%d/%s?ENABLE_BULK_LOAD=true" , ip , port , databaseName ) ; }
te	10	ResponsePacket ( final int command , final int status , final int identifier ) { this . command = command ; this . status = status ; this . identifier = identifier ; }
te	5	public javax . swing . JComboBox getjCSexo ( ) { return jCSexo ; }
te	5	public void setReceiver ( Endpoint receiver ) { this . receiver = receiver ; }
te	2	public double getY ( ) { return this . y ; }
te	1	private PizzaFactory ( ) { }
te	6	public void setCurrentLocation ( Location location ) { myCurrentLocation = new Location ( location ) ; }
te	2	public double getObject ( ) { return object ; }
te	1	private Field ( ) { }
te	1	public boolean isMessageIdRequired ( ) { return false ; }
te	3	boolean verify ( ) { return verify ( tree ) ; }
te	10	public Max ( Iterable < ? extends T > objects , MethodCall < T , V > call ) { super ( objects , call ) ; }
te	7	public Vec2f ( int x , int y ) { super ( 2 ) ; _vals [ 0 ] = x ; _vals [ 1 ] = y ; }
te	3	public boolean getWrapSection ( ) { return configuration . WrapSection ; }
te	7	public FlacFileFormatType ( String name , String extension ) { super ( name , extension ) ; }
te	2	private boolean export ( ) { return export ( false ) ; }
te	6	public void setSubscribedCategory ( ArrayList < Category > subscribedCategory ) { this . subscribedCategory = subscribedCategory ; }
te	1	public TestGameState ( ) { }
te	5	public boolean isIgnoredBlock ( ) { return mCaller == null || isContextSwitch ( ) && mCaller . mCaller == null ; }
te	7	public Map < K , V > buildMap ( ) { return new WeakHashMap < K , V > ( ) ; }
te	8	private JPEGQTable ( int [ ] table , boolean copy ) { this . table = copy ? ( int [ ] ) table . clone ( ) : table ; }
te	3	boolean isSelected ( ) { return mEnableBox . isSelected ( ) ; }
te	6	public ConsoleOutput ( VerbosityLevel verbosity , boolean decorated ) { this ( verbosity , decorated , null ) ; }
te	10	public static void main ( String args [ ] ) { System . out . println ( new CardapioClientService ( ) . getCardapioDoDiaGson ( ) . getAlmocoCarnivoro ( ) . getNome ( ) ) ; }
te	9	@ Temporal ( TemporalType . DATE ) @ Column ( name = "app_date" , length = 10 ) public Date getAppDate ( ) { return this . appDate ; }
te	4	public int read ( ) throws IOException { return raf . read ( ) ; }
te	5	public void set_data ( ByteBuffer data ) { this . data = data ; }
te	6	@ Test ( expected = NullObjectInsertionException . class ) public void shouldRaiseExceptionForNullSeance ( ) { new Cinema ( ) . addSeance ( null ) ; }
te	5	public Rock ( String adjective ) { setName ( adjective ) ; }
te	9	private static byte [ ] convLong ( long num ) { bl . clear ( ) ; bl . putLong ( num ) ; return bl . array ( ) ; }
te	9	public CommentWapper getCommentMentions ( ) throws WeiboException { return Comment . constructWapperComments ( client . get ( WeiboConfig . getValue ( "baseURL" ) + "comments/mentions.json" ) ) ; }
te	8	public void add ( StatT stat , int value ) { total [ stat . index ] += value ; }
te	7	public static double atan ( double arg ) { if ( arg > 0 ) { return msatan ( arg ) ; } return - msatan ( - arg ) ; }
te	6	public void addDeclaration ( ClassOrInterfaceDeclaration decl ) { declarations . add ( decl ) ; }
te	10	public DisableCommand ( GlassFishEnvironment environment , String name , String target ) { super ( environment , name , target ) ; }
te	9	@ Override public int hashCode ( ) { int hash = 7 ; hash = 41 * hash + ( this . id != null ? this . id . hashCode ( ) : 0 ) ; return hash ; }
te	5	void simulate ( Quackable duck ) { duck . quack ( ) ; }
te	7	public ObjectValue ( UBJInputStreamParser in ) throws IOException , UBJFormatException { deserialize ( in ) ; }
te	1	public double getRadius ( ) { return 0 ; }
te	9	protected DelegateHandler ( Handler < T > handler , PromiseHelper helper ) { super ( helper ) ; this . handler = handler ; }
te	10	private static int size ( Node root ) { if ( root == null ) { return 0 ; } return size ( root . left ) + size ( root . right ) + 1 ; }
te	3	public NodeType getNodeType ( ) { return nodeType ; }
te	5	public void startTitle ( ) { stage = 0 ; setBGImage ( "empty_w" ) ; fillBG ( "" ) ; removeObjects ( null , 64 ) ; }
te	6	public void setWatchers ( List < String > watchers ) { this . watchers = watchers ; }
te	1	public int getCarbonButtonVerticalSpace ( ) { return 138 ; }
te	5	public void setLabel ( String label ) { this . label = label ; }
te	3	@ Override public String getType ( ) { return "Subject" ; }
te	4	public Furnace ( SimplyPlugin plugin ) { super ( plugin ) ; }
te	6	public MapProps ( PropsType propstype ) { props = new Props ( propstype ) ; }
te	4	@ Override public String value ( ) { return val ; }
te	7	public boolean containsNode ( final T node ) { return map . containsKey ( node . getName ( ) ) ; }
te	1	public ObjectFactory ( ) { }
te	3	public String toString ( ) { return getValue ( ) ? "true" : "false" ; }
te	9	@ Override public void setPane ( GravityPane gp ) { this . gp = gp ; Window . current . addKeyListener ( this ) ; }
te	4	@ Override public List < BookSeries > list ( ) { return null ; }
te	6	public Builder id ( String id ) { this . id = id ; return this ; }
te	6	public void setParsingContexts ( List < ParsingContextType > parsingContexts ) { this . parsingContexts = parsingContexts ; }
te	7	private void updateRESMP1 ( int data ) { setRegister ( RESMP1 , data ) ; updateMissileToPlayerCentering ( 1 ) ; updateMissileVisibility ( 1 ) ; }
te	10	@ Test public void shouldAddTwoNumbers ( ) { Calculator calculator = new Calculator ( ) ; int result = calculator . add ( 3 , 4 ) ; assertEquals ( result , 7 ) ; }
te	8	public JSONArray put ( int index , boolean value ) throws JSONException { this . put ( index , value ? boolean . true : boolean . false ) ; return this ; }
te	6	public void setListabarrios ( List < Barrio > listabarrios ) { this . listabarrios = listabarrios ; }
te	10	public AnimationFrame getAnimationFrame ( int i ) { if ( i < 0 ) return null ; if ( i >= animationFrames . size ( ) ) return null ; return animationFrames . get ( i ) ; }
te	2	private LCARS ( ) { loadLCARSFont ( ) ; }
te	8	public Object [ ] executeQueryPopulateArrayWithParameters ( Object ... objs ) throws Exception { setParameters ( objs ) ; return executeQueryPopulateArray ( ) ; }
te	9	private boolean putOrPost ( HttpRequest request ) { return request . getMethod ( ) . equals ( "POST" ) || request . getMethod ( ) . equals ( "PUT" ) ; }
te	7	private void writeObject ( ObjectOutputStream out ) throws IOException { out . writeObject ( trainName ) ; }
te	1	public SixPointAuto ( ) { super ( 6 ) ; }
te	1	public void flush ( ) { }
te	3	public String getArticleID ( ) { return articleID ; }
te	8	protected final void setParameter ( String key , int value ) { parameters . put ( key , value ) ; }
te	1	public Hostel ( ) { }
te	10	public void setActivePage ( Page activePage ) { this . activePage = activePage ; this . focusedComponent = namedComponents . get ( activePage . getDefaultFocusedComponentName ( ) ) ; }
te	10	@ Override public int compareTo ( Figura obj ) { double miArea = this . getArea ( ) ; return miArea . compareTo ( obj . getArea ( ) ) ; }
te	8	public void yypushback ( int number ) { if ( number > yylength ( ) ) zzScanError ( ZZ_PUSHBACK_2BIG ) ; zzMarkedPos -= number ; }
te	8	public User releaseShutup ( String username ) { if ( username != null ) { return shutupMap . remove ( username ) ; } return null ; }
te	10	private void prev_compareActionPerformed ( java . awt . event . ActionEvent evt ) { comparecount -- ; this . addCompareImage ( path1 , path2 ) ; }
te	7	public StationNodeAgent ( Vector2D position , int podsCapacity , int peopleCapacity ) { super ( position , podsCapacity ) ; }
te	10	protected Object nodeForRow ( final int row ) { TreePath treePath = tree . getPathForRow ( row ) ; return treePath . getLastPathComponent ( ) ; }
te	8	@ NotNull public SqlQueryBuilder where ( @ NotNull final Condition condition ) { whereClause = condition ; return this ; }
te	5	public void setRebootAction ( String _rebootAction ) { this . _rebootAction = _rebootAction ; }
te	8	public void setEnabled ( boolean flag ) { for ( JComponent c : components ) { c . setEnabled ( flag ) ; } }
te	2	@ Override public byte getId ( ) { return 101 ; }
te	9	public Lock lockAndGet ( Object ... objects ) throws InterruptedException { return lockAndGet ( LockType . WRITE , objects ) ; }
te	9	private boolean isTitleWord ( String firstOccur ) { String first = firstOccur . split ( "_" ) [ 0 ] ; if ( first . equalsIgnoreCase ( "0" ) ) return true ; return false ; }
te	7	public void setCostmap ( Map < Date , BigDecimal > costmap ) { this . costmap = costmap ; }
te	4	public void setForestNbZombies ( int forestNbZombies ) { this . forestNbZombies = forestNbZombies ; }
te	7	public Coord getLeftBottom ( ) { return new Coord ( min . x , min . y ) ; }
te	8	@ Override public Object loadData ( ) throws FlickrException { return FlickrAPI . getInstance ( ) . getSets ( userId ) ; }
te	10	public boolean resetBoard ( ) { for ( int i = 0 ; i < 3 ; i ++ ) for ( int j = 0 ; j < 3 ; j ++ ) playersPositions [ i ] [ j ] = null ; return true ; }
te	2	public final void ReleaseStream ( ) { Stream = null ; }
te	7	public void setDebugStream ( java . io . PrintStream ds ) { debugStream = ds ; }
te	1	public RemoveRoleFromUserResponse ( ) { }
te	4	public List < Publish > getSitelist ( ) { return sitelist ; }
te	9	public void kill ( ) { while ( isAlive ( ) ) { interrupt ( ) ; try { join ( 100 ) ; } catch ( InterruptedException ie ) { Thread . currentThread ( ) . interrupt ( ) ; } } }
te	8	public Cell ( ) { this . costs = new Costs ( ) ; this . neighbors = new Neighbors ( ) ; this . key = new Key ( ) ; this . searchTree = null ; }
te	8	public void SetJaguarVoltage ( int output , short value ) { uiMode [ output - 1 ] = 00 ; uiSetVoltage [ output - 1 ] = value ; }
te	6	public String OnePair ( String hand ) { return GetValueOfCardsThatOccurXTimes ( hand , 2 ) ; }
te	7	public int [ ] getAllBases ( ) { return new int [ ] { hpBase , atkBase , defBase , spAtkBase , spDefBase , speBase } ; }
te	4	@ Override public void windowOpened ( WindowEvent we ) { }
te	5	public void setPosition ( Position position ) { this . position = position ; }
te	9	@ Override public void enterRule ( ParseTreeListener listener ) { if ( listener instanceof DecafParserListener ) ( ( DecafParserListener ) listener ) . enterSentencia6 ( this ) ; }
te	9	public static int minimalLength ( long unsigned ) { if ( unsigned == 0 ) return 1 ; int shift ; for ( shift = 0 ; unsigned >= 1 << shift ; shift ++ ) ; return shift ; }
te	9	@ Test public void FIRE_attacking_DARK ( ) { assertEquals ( 1.0 , tc . getWeaknessResistance ( Type . FIRE , Type . DARK ) , 0.0 ) ; }
te	8	public void vider ( ) { for ( int i = 0 ; i < evenements . length ; i ++ ) { evenements [ i ] = false ; } }
te	6	@ JsonProperty ( "Associations" ) public void setAssociations ( MappingPolicyAssociations Associations ) { this . Associations = Associations ; }
te	6	public void setDestinatarios ( LinkedList < String > destinatarios ) { this . destinatarios = destinatarios ; }
te	10	@ Override public boolean isSingleton ( ) { parseSymbolicName ( ) ; if ( parameters == null ) return false ; return "true" . equals ( parameters . getDirectiveValue ( Constants . SINGLETON_DIRECTIVE , String . class ) ) ; }
te	8	private void komunikuj ( String tekst ) { System . out . println ( " samochod o numerze vin " + vin + tekst ) ; }
te	9	public void agregarNave ( Nave nave , Imagen vista ) { this . mapNaves . put ( nave , vista ) ; }
te	3	public int getHeight ( int height ) { return height ; }
te	1	public ExceptionNourrices ( ) { super ( ) ; }
te	1	protected Element ( ) { }
te	8	public static void main ( String [ ] args ) { EventLoop el = new EventLoop ( ) ; el . begin ( ) ; }
te	7	@ Override public boolean isLoggable ( LogRecord record ) { return ( record . getLevel ( ) != RESULT ) ; }
te	9	public void add ( Res ret ) { this . cTrue += ret . cTrue ; this . cFalse += ret . cFalse ; }
te	5	public null ( ArrayList < String > words ) { build_word_map ( words ) ; }
te	3	@ Override public synchronized boolean isConnected ( ) { return _connected ; }
te	1	public LinkException ( ) { super ( ) ; }
te	5	public final void scale ( double sf ) { scale ( sf , sf ) ; }
te	9	public Agent ( Mind mind ) { _mind = mind ; _body = null ; if ( _mind != null ) _mind . setAgent ( this ) ; }
te	4	public boolean isArray ( ) { return IS_ARRAY == ( IS_ARRAY & mode ) ; }
te	2	public boolean isDisplayValue ( ) { return displayValue ; }
te	4	public void setX ( double x ) { this . x = x ; }
te	1	public ChamadosRecentes ( ) { }
te	8	@ Override public void setCamera ( Camera camera ) { if ( camera == null ) { throw new IllegalArgumentException ( "camera must not be null" ) ; } this . camera = camera ; }
te	10	public void input ( float delta ) { transform . update ( ) ; for ( GameComponent component : components ) component . input ( delta ) ; }
te	3	public static Application getCurrent ( ) { return current ; }
te	8	public static String getTime ( ) { String result = getHour ( ) + "" + getMinute ( ) + "" + getSeconds ( ) + "" ; return result ; }
te	7	public void addReceiveListener ( IMulticastReceiveListener listener ) { listeners . add ( IMulticastReceiveListener . class , listener ) ; }
te	1	private Score ( ) { }
te	5	public IndexPersistenceGlobalTimerTask ( Index master ) { this . master = master ; }
te	4	public void setUsePermissions ( boolean usePermissions ) { this . usePermissions = usePermissions ; }
te	7	@ Override public List < Contato > getListaContatosServidor ( Contato user ) { return new ArrayList < > ( ) ; }
te	9	private boolean setHostname ( String name ) { if ( client . setHostname ( name ) ) { printTerminalInfo ( "Hostname changed to: " + name ) ; return true ; } else { printTerminalError ( "Close the active session before changing the hostname." ) ; return false ; } }
te	2	public boolean isVertical ( ) { return isVertical ; }
te	10	public boolean touchesSuperVertex ( Triangle tri ) { for ( Vertex v : superVerts ) { if ( tri . getVertices ( ) . contains ( v ) ) { return true ; } } return false ; }
te	6	public void render ( Graphics2D g ) { root . render ( g ) ; }
te	7	public void setListI_Viewable ( List < I_Viewable > listI_Viewable ) { this . listI_Viewable = listI_Viewable ; addI_Viewable ( ) ; }
te	4	protected void setUp ( ) throws Exception { user = new User ( ) ; }
te	10	private FacesMessage createMessage ( Severity severity , String mensagemErro ) { return new FacesMessage ( severity , mensagemErro , mensagemErro ) ; }
te	5	public void setOutstream ( BufferedOutputStream outstream ) { this . outstream = outstream ; }
te	10	public static void clearHistoryForQuiz ( Quiz quiz ) { String update = "DELETE FROM history WHERE quizID=" + quiz . getId ( ) + ";" ; MyDB . updateDatabase ( update ) ; }
te	2	public boolean isDead ( ) { return this . dead ; }
te	9	public Tuuchi ( Human targetHuman , Action targetAction ) { this . targetHuman = targetHuman ; this . targetAction = targetAction ; }
te	2	public int mapWidthInHexesAcrossFlats ( ) { return lengthOfEquatorInHexesAcrossFlats ( ) + 1 ; }
te	3	public UUID getPlayerId ( ) { return playerId ; }
te	1	public DataAccessException ( ) { super ( ) ; }
te	3	private void chooseOutputDirectory ( ) { new DirectoryChooser ( ) . setVisible ( true ) ; }
te	10	public Heap ( ) { size = 0 ; heap = ( AnyType [ ] ) new Comparable [ CAPACITY ] ; Logger . write ( 1 , getClass ( ) . getName ( ) + ": Constructor is called." + "\n" ) ; }
te	5	public void close ( ) { player . close ( ) ; setVisible ( false ) ; dispose ( ) ; }
te	3	public GetGroupsResponse createGetGroupsResponse ( ) { return new GetGroupsResponse ( ) ; }
te	1	public RandomPricer ( ) { }
te	9	@ Override @ Transactional ( propagation = Propagation . REQUIRED ) public egg remove ( egg entity ) { return null ; }
te	7	@ WebEndpoint ( name = "MGPoolWSPort" ) public MGPoolWS getMGPoolWSPort ( ) { return super . getPort ( new QName ( "http://MGPool.me.org/" , "MGPoolWSPort" ) , MGPoolWS . class ) ; }
te	8	private void tueEndMinuteSpinnerStateChanged ( javax . swing . event . ChangeEvent evt ) { applyButton . setEnabled ( true ) ; }
te	5	public void alasRelease ( ActionEvent e ) { alasL . release ( ) ; }
te	2	public int getStat ( ) { return ( ( cmd >> 24 ) & 127 ) ; }
te	2	public int getDivisor ( ) { return divisor ; }
te	9	@ Override public void setRenderer ( ObjectRenderer renderer ) { this . renderer = ( SeaRenderer ) renderer ; this . renderer . setObject ( this ) ; }
te	8	public Fade ( Color to , float amt ) { fadeTo = to ; amount = amt ; }
te	1	public void fire ( ) { }
te	9	void finishMove ( ) { try { Thread . sleep ( getSleepTimeInMilliSeconds ( ) ) ; } catch ( InterruptedException e ) { e . printStackTrace ( ) ; } redraw ( ) ; }
te	3	public String getName ( ) { return name ; }
te	5	public void off ( ) { System . out . println ( location + " stereo is off" ) ; }
te	3	public Portal getPortal ( ) { return this . portal ; }
te	6	public SeriesDefaults setTrendline ( Trendline trendline ) { this . trendline = trendline ; return this ; }
te	6	@ Test ( expected = ParserException . class ) public void ifStatementNeg1 ( ) { createParser ( "ELSIF 1 < 2 THEN a:=b; END" ) . ifStatement ( ) ; }
te	5	public void update ( Graphics g ) { paint ( g ) ; }
te	4	private BigDecimal computePi ( int digits ) { return new BigDecimal ( 3.14 ) ; }
te	6	public int getInt ( String key ) { return propertiesConfiguration . getInt ( key ) ; }
te	9	public AssaultRifle ( ) { super ( "RTPS" , KeyEvent . VK_2 , "/resources/images/GZS_RTPS.png" , AssaultRifle . DEFAULT_AMMO , AssaultRifle . MAX_AMMO , AssaultRifle . AMMO_PER_USE , 10 , true ) ; }
te	7	public Map < String , String > getProviderOverrides ( ) { return Collections . unmodifiableMap ( providerOverrides ) ; }
te	2	public void writeFrameOpen ( ) throws IOException { }
te	6	private SequenceFinder getSequenceFinder ( ) { if ( sequenceFinder == null ) { sequenceFinder = new SequenceFinder ( this ) ; } return sequenceFinder ; }
te	7	public DevHMM ( Trainer tr ) { super ( tr ) ; names = new String [ 1 ] ; names [ 0 ] = "hmmend" ; }
te	3	public void nextTrack ( ) { Dispatch . call ( this , "NextTrack" ) ; }
te	3	public void onClick ( InventoryClickEvent event ) { }
te	6	@ Override public Customer getCustomer ( String id ) { throw new UnsupportedOperationException ( "Not supported yet." ) ; }
te	7	public RowSelection ( int startPage , String order ) { this ( startPage , DEFAULT_PAGESIZE , order ) ; }
te	9	public Incidencias ( BeanIncidencias bean , IClient client ) { this . client = client ; setBean ( bean ) ; }
te	10	public static Spellbook getCurrent ( ) { for ( Spellbook s : values ( ) ) { if ( s . isOpen ( ) ) return s ; } return Spellbook . NONE ; }
te	2	public double [ ] offset ( ) { return hBuffer ; }
te	10	private String tableName ( String userType ) { return ( userType . equals ( "seller" ) ) ? WebServerInfo . SELLERS_TABLE : WebServerInfo . BUYERS_TABLE ; }
te	8	@ Test public void testSupprimerFourmi ( ) { SalleStock testStock = new SalleStock ( ) ; assertFalse ( testStock . supprimerFourmi ( ) ) ; }
te	10	@ ManyToOne ( fetch = FetchType . LAZY ) @ JoinColumn ( name = "role_id" , nullable = false ) public RoleTbl getRoleTbl ( ) { return this . roleTbl ; }
te	2	public int getHeight ( ) { return this . height ; }
te	5	@ Override public Type getType ( ) { return Type . SEG_POS ; }
te	7	public static _Fields findByName ( String name ) { return byName . get ( name ) ; }
te	2	public int getY ( ) { return y ; }
te	7	public void setLayout ( LayoutManager layout ) { super . setLayout ( layout ) ; this . layout = layout ; }
te	1	protected void initialize ( ) { }
te	8	public List < Parqueadero > getParqueaderos ( ) { parqueaderos = Parqueadero . getLista ( codigo ) ; return parqueaderos ; }
te	6	private ChokeMessage ( ByteBuffer buffer ) { super ( Type . CHOKE , buffer ) ; }
te	8	@ Override public String toString ( ) { return "Quote`" + getInner ( ) . toString ( ) + " <" + getInner ( ) . getType ( ) . toString ( ) + ">`" ; }
te	10	private static Tracer prepareTracer ( ) { Tracer tracer = new Tracer ( ) ; tracer . addShaders ( new AmbientShader ( ) , new DiffuseShader ( ) ) ; return tracer ; }
te	1	protected void end ( ) { }
te	5	public JSONArray put ( long value ) { put ( new long ( value ) ) ; return this ; }
te	6	public User getHighestBidder ( ) { if ( highestBidder == null ) { highestBidder = new User ( "none" ) ; } return highestBidder ; }
te	3	@ Override public String getName ( ) { return "Empty" ; }
te	6	public void displayControls ( ) { this . displayBorder ( ) ; System . out . println ( "\tCONTROLS" + "\n\tUse arrow keys to change direction" + "\n\tPress \"P\" to pause" + "\n\tPress \"Q\" to quit" ) ; this . displayBorder ( ) ; }
te	5	public void setSideBarPanel ( SideBarPanel sideBarPanel ) { this . sideBarPanel = sideBarPanel ; }
te	2	public float getZ ( ) { return z ; }
te	4	@ Override public String toString ( ) { return "" + this . ID ; }
te	2	public int getId ( ) { return id ; }
te	9	protected void end ( ) { if ( ! feederSolenoid . isSetIn ( ) ) { feeder . isIn = false ; } SmartDashboard . putBoolean ( "ShooterIsIn" , feeder . isIn ) ; }
te	2	public void attemptWasEnded ( ) { attemptWasStarted = false ; }
te	4	void setUpper ( long upper ) { this . upper = upper ; }
te	2	public int getIdClaseTutoria ( ) { return idClaseTutoria ; }
te	3	public SimpleMethod2 createSimpleMethod2 ( ) { return new SimpleMethod2 ( ) ; }
te	6	public void addExtraction ( Extraction tmp ) { extractions . add ( tmp ) ; }
te	9	public void close ( ) { corpusRoig . close ( ) ; corpusVerd . close ( ) ; extraRoig . close ( ) ; extraVerd . close ( ) ; }
te	6	public DefaultActionScriptClassDescriptor ( String type , byte encoding ) { super ( type , encoding ) ; }
te	3	public int getMode ( ) { return modeMon . getMode ( ) ; }
te	4	@ Override public void insert ( T element ) { }
te	7	private void reduceArmor ( int damage ) { armorStrength -= damage ; healthBar . updateHealth ( armorStrength ) ; }
te	5	JTextFieldLimit ( int limit , boolean upper ) { super ( ) ; this . limit = limit ; }
te	4	public void setActive ( boolean active ) { this . active = active ; }
te	8	public void setColor ( Color newColor ) { color = newColor ; Canvas . getInstance ( ) . repaint ( ) ; }
te	10	public boolean sempred ( RuleContext _localctx , int ruleIndex , int predIndex ) { switch ( ruleIndex ) { case 12 : return expr_sempred ( ( ExprContext ) _localctx , predIndex ) ; } return true ; }
te	8	public static void main ( String [ ] args ) { MiniMiniMusicApp mini = new MiniMiniMusicApp ( ) ; mini . play ( ) ; }
te	5	public void setTmDM ( TMDrillModel tmDM ) { this . tmDM = tmDM ; }
te	6	public PrintQueueTwo ( ) { super ( ) ; this . semaphore = new Semaphore ( 3 ) ; this . freePrinters = new boolean [ ] { true , true , true } ; this . lockPrinters = new ReentrantLock ( ) ; }
te	6	@ Basic @ Column ( name = "FES_TERMINAL" ) public String getFesTerminal ( ) { return fesTerminal ; }
te	7	public AddressBuilder phoneNumber ( String phoneNumber ) { _address . setPhoneNumber ( phoneNumber ) ; return this ; }
te	6	@ Override public void setValue ( Date value ) { super . setValue ( myDate ) ; }
te	9	public void test_es_ar ( ) throws IOException , TemplateException { assertFoundAndEquals ( "hello es_AR" , locale_es_AR , "test" ) ; assertNotFound ( locale_es_AR , "test2" ) ; assertFoundAndEquals ( "hello (default)" , locale_es_AR , "test3" ) ; }
te	8	boolean sameName ( DNSRecord other ) { return name . equalsIgnoreCase ( ( ( Address ) other ) . name ) ; }
te	2	@ Override public void assembleWindow ( ) { }
te	4	public void setMaxAge ( int maxAge ) { this . maxAge = maxAge ; }
te	2	public int getPercentDone ( ) { return percentDone ; }
te	9	private Journal ( Builder builder ) { id = builder . id ; name = builder . name ; }
te	2	public long getId ( ) { return id ; }
te	9	public boolean shortestPathContains ( Cell c ) { if ( this . currentMap . getShortestPath ( ) == null ) { return false ; } return this . currentMap . getShortestPath ( ) . contains ( c ) ; }
te	7	private void cargarActionPerformed ( java . awt . event . ActionEvent evt ) { cargarGastos ( ) ; }
te	2	public int getSingleEventID ( ) { return singleEventID ; }
te	1	public boolean hasAProject ( ) { return true ; }
te	7	Point ( int a , int b ) { x = a ; y = b ; }
te	9	public Application ( String title , boolean fullscreen ) { super ( title , fullscreen ) ; screens = new ArrayList < Screen > ( ) ; }
te	10	public void removeChar ( int index ) { onChange ( ) ; currentText = new StringBuffer ( currentText ) . replace ( index , index + 1 , "" ) . toString ( ) ; }
te	2	public double getPower ( ) { return power ; }
te	9	private void fillUniqueFinished ( ) { for ( TTTBoard board : boards ) { uniqueFinishedBoards . put ( toCharArrayList ( board ) , board ) ; } }
te	9	public void saveQuesterToFile ( Quester quester ) { questPlayerStorage . setString ( quester . theQuestersName , quester . toString ( ) ) ; }
te	10	public void run ( ) { bf . setVisible ( false ) ; if ( frame != null ) { frame . invalidate ( ) ; frame . validate ( ) ; frame . repaint ( ) ; } }
te	7	@ Override public void addUnit ( EnemyUnit e ) { unitList . add ( e ) ; }
te	6	public static String GetAssetType_ID ( int nIndex ) { return otapiJNI . OTAPI_Basic_GetAssetType_ID ( nIndex ) ; }
te	9	private void stackingExceptionMultipleVariables ( ) { m$ . newVarExcept ( m$ . var ( "pedido" ) , m$ . var ( "item" ) , m$ . var ( "eletronico" ) ) ; }
te	8	@ Override public int compareTo ( Committee o ) { return id . compareTo ( o . id ) ; }
te	1	public void takeTurn ( ) { return ; }
te	4	@ Override public String toString ( ) { return "Mago{" + super . toString ( ) + "}" ; }
te	6	public Highlighter highlighterInstance ( ) { if ( highlighter == null ) { highlighter = new Highlighter ( ) ; } return highlighter ; }
te	10	public PheromoneEvent ( int tour , Date datetime , Pheromone pheromone ) { super ( tour , datetime ) ; this . pheromone = pheromone ; }
te	1	public static int totalSize_othernodes ( ) { return ( 80 / 8 ) ; }
te	7	private void setAutoCommitTrue ( ) { try { connection . setAutoCommit ( true ) ; } catch ( SQLException e ) { e . printStackTrace ( ) ; } }
te	6	public boolean agregarJugador ( Jugador j ) { return ssUsuarios . agregarJugador ( j ) ; }
te	5	public void setOBJID ( String objid ) { this . objid = objid ; }
te	6	@ Test public void test_0207_IFRAME ( ) throws Exception { doTest ( getClass ( ) . getResource ( "/w3.org/WAI/UA/TS/html401/cp0207/0207-IFRAME.html" ) ) ; }
te	1	public static void loadModels ( ) { }
te	4	@ Test public void test1 ( ) { assertEquals ( 6 , NumberOfSteps ( 11 , 2 ) ) ; }
te	10	@ Test public void testCanGetCachedMemory ( ) { Options . CacheStatistics cacheStatistics = Options . getCachedStatistics ( ) ; assert . assertTrue ( cacheStatistics . getMaximum ( ) > 0 ) ; }
te	7	@ SuppressWarnings ( "unchecked" ) public CircularArray ( int capacity ) { elements = ( E [ ] ) new Object [ capacity ] ; }
te	5	@ Override public void insertUpdate ( DocumentEvent e ) { updateTask ( ) ; }
te	2	public int getDurability ( ) { return durability ; }
te	8	private double getScaleFactor ( int iMasterSize , int iTargetSize ) { double dScale = 1 ; dScale = ( double ) iMasterSize / ( double ) iTargetSize ; return dScale ; }
te	7	public static void connect ( ) throws ClassNotFoundException , SQLException { class . forName ( "com.mysql.jdbc.Driver" ) ; conn = DriverManager . getConnection ( "jdbc:mysql://localhost:3306/crazybiztest" , "root" , "pw" ) ; }
te	10	static int mod ( int x , int r ) { int m = x % r ; if ( m < 0 ) m += r ; return m ; }
te	1	public IncompatibleDataDecoderException ( ) { super ( ) ; }
te	1	public void begin ( ) { }
te	4	public String getVersion ( ) { return version + "." + subversion ; }
te	9	public Position getPosition ( ) throws Exception { if ( ! FieldTypeEnum . POSITION . equals ( discriminator ) ) { throw new Exception ( ) ; } return position ; }
te	9	public JGPoint getTileCoord ( int tilex , int tiley ) { return new JGPoint ( tilex * tileWidth ( ) , tiley * tileHeight ( ) ) ; }
te	1	public void run ( ) { }
te	7	@ Override public boolean getCell ( int x , int y ) { return getCellAge ( x , y ) == 0 ; }
te	1	public CorrelatedMessage ( ) { }
te	7	public void repaint ( ) { displayFrame . showDebug ( gameStatus . showDebug ) ; displayFrame . repaint ( ) ; }
te	1	public UnclearPositionToken ( ) { }
te	7	@ Override public boolean retirar ( double monto ) { if ( interesesGanados > monto ) { interesesGanados -= monto ; return true ; } return false ; }
te	10	public synchronized void runTask ( Runnable task ) { if ( ! isAlive ) { throw new IllegalStateException ( ) ; } if ( task != null ) { taskQueue . add ( task ) ; notify ( ) ; } }
te	6	@ Override public void clear ( ) { setIdIsSet ( false ) ; this . id = 0 ; this . name = null ; this . screen_name = null ; }
te	10	public MessageArea ( ) { super ( ) ; specialText = new Font ( "Serif" , Font . BOLD , 16 ) ; super . setEditable ( false ) ; super . setFont ( specialText ) ; super . setLineWrap ( true ) ; super . setWrapStyleWord ( true ) ; }
te	5	public void setVersion ( PluginVersion version ) { this . version = version ; }
te	8	@ Override public void actionPerformed ( ActionEvent e ) { if ( e . getSource ( ) == btnCancel ) { this . setVisible ( false ) ; } }
te	4	@ Override public void runTest ( ) { dbg ( getPermutation ( 2 , 1 ) ) ; }
te	5	public final void setBrowseButtonFocusable ( final boolean focusable ) { browseDatabaseButton . setFocusable ( focusable ) ; }
te	10	public JSONObject put ( String key , int value ) throws JSONException { put ( key , new Integer ( value ) ) ; return this ; }
te	10	@ Test public void test_removePeer_nullShouldNotChangePeerCount ( ) { linkedListPeerManager . removePeer ( null ) ; assert . assertEquals ( "When remove null as a peer  null should change the number of peers" , linkedListPeerManager . getPeers ( ) . length , peers . length ) ; }
te	6	@ Test public void test_1104_SINGLE_KEY_ENABLED_ELEMENTS ( ) throws Exception { doTest ( getClass ( ) . getResource ( "/w3.org/WAI/UA/TS/html401/cp1104/1104-SINGLE-KEY-ENABLED-ELEMENTS.html" ) ) ; }
te	8	public void setListPointToDraw ( List < Point > listPointToDraw ) { model . getModelGPS ( ) . setListPointToDraw ( listPointToDraw ) ; }
te	8	private void meterReadingTableMouseReleased ( java . awt . event . MouseEvent evt ) { doMeterReadingPopup ( evt ) ; }
te	5	public void setTheme ( String theme ) { this . theme = theme ; }
te	1	private void headersSetUp ( ) { }
te	2	public float getTimeLeft ( ) { return timeLeft ; }
te	6	public static NumberStringConverter < long > getLongConverter ( boolean zeroOnError ) { return zeroOnError ? LONG_CONVERTER_ZERO : LONG_CONVERTER ; }
te	3	public HelperSet getHelperSet ( ) { return helperSet ; }
te	10	protected double oppFaceDistance ( HalfEdge he ) { return he . face . distanceToPlane ( he . opposite . face . getCentroid ( ) ) ; }
te	3	@ Override public JMenu createAboutMenu ( ) { return null ; }
te	8	public _IiTunesEvents ( Dispatch d ) { m_pDispatch = d . m_pDispatch ; d . m_pDispatch = 0 ; }
te	4	@ Override public void clearPlayground ( ) { playground . clear ( ) ; }
te	3	public String getName ( ) { return name ; }
te	4	@ JsonProperty ( "name" ) public String getName ( ) { return name ; }
te	2	public int getQuestionId ( ) { return questionId ; }
te	9	void doRemoveObject ( JGObject obj ) { obj . removeDone ( ) ; objects . remove ( obj . getName ( ) ) ; }
te	7	@ Override public String toString ( ) { return "(#" + getPiece ( ) + ": " + getPieceRange ( ) + ") <=> ('" + getFile ( ) + "': " + getFileRange ( ) + ")" ; }
te	9	@ Override public int hashCode ( ) { final int prime = 31 ; int result = 1 ; result = prime * result + ( unsynchronisation ? 1231 : 1237 ) ; return result ; }
te	7	public void setOpenPrice ( java . math . BigDecimal openPrice ) { this . openPrice = openPrice ; }
te	6	@ Override public void unmarshal ( Element e ) { super . unmarshal ( e ) ; }
te	3	public static int getClassID ( ) { return UnregisterRequest . CLASS_ID ; }
te	10	protected DevicePropertyBLOBEnableTuple ( String device , BLOBEnables enable ) { this . device = device ; this . property = null ; this . enable = enable ; }
te	4	public List < Connection > getConnections ( ) { return connections ; }
te	7	public Color color ( ) { if ( hover ) { return Color . yellow ; } return Color . white ; }
te	4	@ Override public void controllerButtonReleased ( int i , int i1 ) { }
te	2	public boolean isDataChangedSinceLastSave ( ) { return dataChangedSinceLastSave ; }
te	3	@ Override public String getExternalNamespace ( ) { return "MassTransit.TestFramework.Examples.Messages" ; }
te	6	public void setDirection ( Vector3f direction ) { this . direction = direction . normalized ( ) ; }
te	4	public String toString ( ) { return name + " = " + rhs ; }
te	6	public void setAllHistoryRecords ( List < HistoryRecord > allHistoryRecords ) { this . allHistoryRecords = allHistoryRecords ; }
te	6	public void add ( A record ) { list . add ( record ) ; }
te	3	public T getResult ( ) { return result ; }
te	10	public buildingFloor ( Environment e , int l ) { this . loadedEnv = e ; this . level = l ; this . hNode1 = 0 ; this . hNode2 = 0 ; }
te	8	public DoesNotLike ( int idu , String genero ) { this . idu = idu ; this . genre = genero ; }
te	9	@ Test public void fourIsEmpty ( ) { assertThat ( patternFinder . find ( fractionToDecimal ( valueOf ( 4 ) ) , 0 , 4 ) , is ( EMPTY ) ) ; }
te	7	public static String persist ( Document doc ) { return gson . toJson ( doc ) ; }
te	5	public CompareSignals ( CopySignalValue copySignalValue ) { this . copySignalValue = copySignalValue ; }
te	5	@ Override public void setFrustumType ( byte type ) { frustumType = type ; }
te	6	public Comparable ( int number , String text ) { this ( null , number , text ) ; }
te	7	public String getString ( String key ) { return config . get ( key ) ; }
te	5	public void setJobViewId ( Integer jobViewId ) { this . jobViewId = jobViewId ; }
te	4	public Matrix ( ) { matrix = new double [ 4 ] [ 4 ] ; r = 4 ; c = 4 ; }
te	1	private State ( ) { }
te	5	public void setSoyeulylich ( Soyeulylich soyeulylich ) { this . soyeulylich = soyeulylich ; }
te	4	@ Override public class < MedicalRecord > getActualClass ( ) { return MedicalRecord . class ; }
te	7	public int getTuileNumero ( int x , int y ) { return ( new GraphicalPosition ( x , y ) ) . toNumero ( ) ; }
te	6	private void fireTaskFinishing ( ) { for ( TaskListener l : listeners ) l . taskFinishing ( ) ; }
te	8	public NameTy ( int p , Symbol n ) { pos = p ; name = n ; }
te	8	@ Override public String toString ( ) { return "Slice[ (" + xStart + " " + yStart + ")->(" + xEnd + " " + yEnd + ")   fetchNeighbours=" + fetchNeighbours + " ]" ; }
te	8	public Matrix ( String id , float [ ] [ ] scores ) { this . id = id ; this . scores = scores ; }
te	4	public void printManual ( ) { printTableContent ( ) ; printActualManual ( ) ; printGlossary ( ) ; }
te	8	public void addOutputStream ( Socket s ) throws IOException { outputStreamList . add ( s . getOutputStream ( ) ) ; }
te	10	public JGColor ( int r , int g , int b ) { this . r = r ; this . g = g ; this . b = b ; }
te	7	private char next ( ) throws Exception { char c = peek ( ) ; eat ( c ) ; return c ; }
te	4	public void setDuracion ( float mDuracion ) { this . mDuracion = mDuracion ; }
te	9	@ Test public void FLYING_attacking_DRAGON ( ) { assertEquals ( 1.0 , tc . getWeaknessResistance ( Type . FLYING , Type . DRAGON ) , 0.0 ) ; }
te	10	@ Override public void visit ( String refName , Object value ) { if ( value != null ) { refTo ( refName , value ) ; } }
te	6	public CanvasOverlay setColor ( String color ) { this . color = color ; return this ; }
te	8	@ Override public boolean get ( long timeout , TimeUnit unit ) throws InterruptedException , ExecutionException , TimeoutException { return null ; }
te	7	public void setRowCount ( int rows ) { nRows = rows ; if ( targetContainer != null ) targetContainer . invalidate ( ) ; }
te	9	protected boolean skipFrame ( ) throws JavaLayerException { Header h = bitstream . readFrame ( ) ; if ( h == null ) return false ; bitstream . closeFrame ( ) ; return true ; }
te	6	public static void debug ( String msg ) { System . out . println ( "measureImageContrast calculation executing..." ) ; }
te	9	public FolderDoesntExist ( String folderPath , String message ) { super ( String . format ( "Folder \"%s\" doesn't exist (%s)" , folderPath , message ) ) ; }
te	2	@ Inject void injectableMethod ( ) { }
te	2	public synchronized boolean isL3repetitionEnabled ( ) { return isL3repeatable ; }
te	9	public Tekoaly ( Vari vari , Logiikka logiikka ) { this . vari = vari ; this . logiikka = logiikka ; }
te	1	public LDAPException ( ) { super ( ) ; }
te	10	@ Test public void buildConfigurationRelease ( ) { BuildConfiguration conf = configList . getBuildConfigurations ( ) . getByName ( "Release" ) ; assertEquals ( "Release" , conf . getName ( ) ) ; }
te	6	public NClob getNClob ( String columnLabel ) throws SQLException { throw new UnsupportedOperationException ( "Not supported yet." ) ; }
te	1	public FriendsServlet ( ) { super ( ) ; }
te	10	public double changeDouble ( double prev , boolean canBeNeg ) { return changeDouble ( prev , GlobalController . MAX_WEIGHT_VALUE , GlobalController . MIN_WEIGHT_VALUE , canBeNeg ) ; }
te	1	public int process_id ( ) { return 2 ; }
te	5	public void setPurchaseOrderContactPhone ( String value ) { this . purchaseOrderContactPhone = value ; }
te	10	public String nurseProperties ( String name , String surname , double pay ) { return "Name: " + name + " Surname: " + surname + " Salary: " + pay ; }
te	5	public Builder carbohydrate ( int val ) { carbohydrate = val ; return this ; }
te	3	void drawDuringTransform ( Graphics2D g ) { }
te	4	@ Override public UpdateResult update ( ) { return new UpdateResult ( ) ; }
te	10	public static synchronized void putString ( String key , String value ) { strings . put ( key , value ) ; update ( ) ; }
te	7	public Line substring ( int indexOf ) { return new Line ( line . substring ( indexOf ) ) ; }
te	3	public String getObject ( ) { return object ; }
te	2	public int getLevel ( ) { return this . level ; }
te	8	public boolean hasChunk ( int x , int z ) { if ( ! initialized ) init ( ) ; return getOffset ( x , z ) != 0 ; }
te	9	private void stackingMultipleVariables ( ) { m$ . newVar ( m$ . var ( "pedido" ) , m$ . var ( "item" ) , m$ . var ( "contrato" ) ) ; }
te	8	public SimplePersistentFieldMeta ( String name , class < ? > type ) { this . name = name ; this . type = type ; }
te	7	private void startSingleBlock ( ) { inBlock = true ; singleBlock = true ; argStack . push ( message ) ; message = null ; }
te	6	public ConfigurationValue ( Object object ) { configObject = new ConfigurationObject ( object ) ; }
te	4	@ Override public ATN getATN ( ) { return _ATN ; }
te	1	public Heat_Model ( ) { }
te	10	private AbstractAction getOKAction ( ) { if ( OKAction == null ) { OKAction = new AbstractAction ( "OK" , null ) { public void actionPerformed ( ActionEvent evt ) { setVisible ( false ) ; } } ; } return OKAction ; }
te	6	@ Before public void setUp ( ) throws Exception { overlapGraph = new OverlapGraph ( pathToFile ) ; }
te	7	@ Override public void mouseReleased ( MouseEvent arg0 ) { this . draw . remove ( this . label ) ; }
te	8	public Quantity ( double amount , QuantityType type ) { this . amount = amount ; this . type = type ; }
te	7	public Object getValueAt ( int row , int col ) { return data [ row ] [ col ] ; }
te	5	public void setLoginPanel ( LoginPanel loginPanel ) { this . loginPanel = loginPanel ; }
te	3	public ResultStatusSubCode getStatusSubCode ( ) { return statusSubCode ; }
te	7	public void removeChild ( BNode < T > child ) { this . children . remove ( child ) ; }
te	8	private void monStartAmPmStateChanged ( javax . swing . event . ChangeEvent evt ) { applyButton . setEnabled ( true ) ; }
te	10	@ Test public void testSetRegPoison ( ) { status . setRegPoison ( ) ; assertFalse ( status . isOk ( ) ) ; assertTrue ( status . isRegPoison ( ) ) ; }
te	3	public Object getSourceObject ( ) { return sourceObject ; }
te	7	@ Override public void visit ( LiteralInt node ) { put ( node , new IntType ( ) ) ; }
te	3	public static boolean isUnix ( ) { return getPlatform ( ) == UNIX ; }
te	9	public HumanPlayer ( String name , PlayerInteraction ui ) { this . name = name ; this . ui = ui ; }
te	4	@ Override public void onNewFile ( String activeFileName ) { }
te	8	public GMusicRootRowNode ( final Map < String , List < Song >> aDuplicateMap ) { updateNewDuplicateMap ( aDuplicateMap ) ; }
te	5	public void setHardstateIdstate ( Hardstate hardstateIdstate ) { this . hardstateIdstate = hardstateIdstate ; }
te	8	public UnitValue [ ] getPos ( ) { return pos != null ? new UnitValue [ ] { pos [ 0 ] , pos [ 1 ] , pos [ 2 ] , pos [ 3 ] } : null ; }
te	7	@ Override @ Inject public void setService ( SprinklerSetService service ) { this . service = service ; }
te	1	Order ( ) { }
te	1	public PesquisaDAO ( ) { }
te	2	public boolean isInGame ( ) { return isInGame ; }
te	9	@ Override public final Set < E > build ( ) { return unmodifiableSet ( copy ( backing , newSet . get ( ) ) ) ; }
te	10	private void m_uiToolsStop_actionPerformed ( ActionEvent e ) { m_emuConsole . setSystemHalted ( true ) ; m_uiToolsPlayPause . setIcon ( m_uiPlayIcon ) ; m_uiDisplay . setSignal ( false ) ; }
te	4	private void luoPalikat ( ) { while ( seuraavatPalikat . size ( ) < 4 ) { luoPalikka ( ) ; } }
te	10	@ Inject public StartTestMenuController ( EventBusService eventBusService , StroopTestProvider stroopTestProvider ) { this . eventBusService = eventBusService ; this . stroopTestProvider = stroopTestProvider ; }
te	6	@ Override public void bindEncoder ( AuthEncoder authEncoder ) { this . authEncoder = authEncoder ; }
te	6	public void setResponseMsgs ( ConcurrentLinkedQueue < Response > responseMsgs ) { this . responseMsgs = responseMsgs ; }
te	8	public void removeLetter ( Letter letter ) { letter . setFlaggedForDelete ( true ) ; this . lettersOnTheTable . remove ( letter ) ; }
te	3	public KeyboardListener getKeyListener ( ) { return keyListener ; }
te	1	protected LandscapeFactory ( ) { }
te	9	public Main ( ) { setupComponents ( ) ; initWorld ( ) ; setSize ( 800 , 600 ) ; setDefaultCloseOperation ( JFrame . EXIT_ON_CLOSE ) ; setLocationRelativeTo ( null ) ; setVisible ( true ) ; }
te	7	public void select ( int i ) { this . i = i ; select_song = true ; next ( ) ; select_song = false ; }
te	8	@ Test public void duplicateItems ( ) { int [ ] array = new int [ ] { 4 , 8 , 5 , 3 , 5 , 2 } ; undertest . sort ( array ) ; assertArrayEquals ( new int [ ] { 2 , 3 , 4 , 5 , 5 , 8 } , array ) ; }
te	2	public int getWidth ( ) { return width ; }
te	9	private void updatePasswordState ( ) { passwordField . setEnabled ( usePasswordBox . isSelected ( ) ) ; passwordStateField . setEnabled ( usePasswordBox . isSelected ( ) ) ; }
te	1	public Node ( ) { }
te	3	public Conta getConta ( ) { return conta ; }
te	8	private int getSellValue ( String entityName ) { return EntityManager . getEntityManager ( ) . getEntity ( entityName ) . getSellValue ( ) ; }
te	1	public boolean isContainer ( ) { return true ; }
te	5	private void resetData ( ) { this . snaggers . clear ( ) ; this . snags = 0 ; this . votes = new int [ ] { 0 , 0 } ; }
te	9	@ Override public boolean containsAll ( Collection < ? > c ) { for ( Object o : c ) { if ( ! contains ( o ) ) return false ; } return true ; }
te	1	protected void initialize ( ) { }
te	8	private void tarkistaPalikat ( ) { for ( Palikka palikka : tarkistettavatPalikat ) { tarkistaYhtenaisyys ( palikka ) ; } this . tarkistettavatPalikat . clear ( ) ; }
te	8	private void updateValues ( ) { setMinMaxFreqs ( ) ; doubleFreq = parseFrequency ( ( String ) tuningFreq . getSelectedItem ( ) ) ; changeLiveTuning ( ) ; }
te	2	public boolean isCursed ( ) { return isCursed ; }
te	10	public synchronized void setParameters ( PIParameters newParameters ) { p = ( PIParameters ) newParameters . clone ( ) ; if ( ! p . integratorOn ) { I = 0.0 ; } }
te	2	@ Override public int getID ( ) { return 1 ; }
te	7	public void updateBinaryStream ( String columnLabel , InputStream x ) throws SQLException { throw new UnsupportedOperationException ( "Not supported yet." ) ; }
te	5	public Iterator < ParameterDecl > iterator ( ) { return parameterDeclList . iterator ( ) ; }
te	5	public void setAuthor ( JiraPerson author ) { this . author = author ; }
te	2	public int getTime ( ) { return this . timeCount ; }
te	3	public String getName ( ) { return name_ ; }
te	1	public ActorX ( ) { super ( ) ; }
te	6	private void loadMaterial ( Material mat ) { this . currentMaterial = mat ; displayMaterial ( ) ; }
te	6	private void jTextField3ActionPerformed ( java . awt . event . ActionEvent evt ) { }
te	10	public void setPermissions ( String [ ] permissions ) { this . permissions = permissions ; if ( permissions != null ) { super . setPermission ( StringUtil . joinString ( permissions , ";" ) ) ; } }
te	1	public int statDrop ( ) { return 0 ; }
te	10	private void jButton3ActionPerformed ( java . awt . event . ActionEvent evt ) { Music . Stop ( ) ; jTextField1 . setText ( "Cancion detenida" ) ; }
te	6	protected void setMessage ( MqttMessage msg ) { internalTok . setMessage ( msg ) ; }
te	7	public static boolean runUntil ( Environment e ) { while ( tick ( e ) ) { if ( e . paused ) { return true ; } } return false ; }
te	7	public CustomerBean [ ] getAllCustomers ( ) throws RollbackException { CustomerBean [ ] customers = match ( ) ; return customers ; }
te	5	public void setMap ( Map _map ) { map = _map ; }
te	3	public short readUI8 ( ) throws IOException { return ( short ) readUnsignedByte ( ) ; }
te	5	public void setLOGGING_WANIP ( String lOGGING_WANIP ) { LOGGING_WANIP = lOGGING_WANIP ; }
te	7	public void read ( float [ ] buf , int readRate ) { producer . read ( buf , readRate ) ; }
te	7	public JavaOutStream ( java . io . OutputStream jos ) { this ( jos , defaultBufSize ) ; }
te	8	public Monster ( String name , int health ) { this . name = name ; this . health = health ; }
te	9	public static HourMinuteInDayRange valueOf ( String startHourMinuteExpression , String endHourMinuteExpression ) { return new HourMinuteInDayRange ( startHourMinuteExpression , endHourMinuteExpression ) ; }
te	5	public void setId_Cliente ( Cliente Id_Cliente ) { this . Id_Cliente = Id_Cliente ; }
te	6	private void txtEmailActionPerformed ( java . awt . event . ActionEvent evt ) { }
te	10	public static String GetNym_NymboxHash ( String SERVER_ID , String NYM_ID ) { return otapiJNI . OTAPI_Basic_GetNym_NymboxHash ( SERVER_ID , NYM_ID ) ; }
te	2	public int getGridX ( ) { return gridX ; }
te	1	public ASTBoExp ( ) { }
te	7	@ Override public void addObserver ( IWeatherObserver weatherObserver ) { weatherObservers . add ( weatherObserver ) ; }
te	4	public void testClassExtendExpressions ( ) { testParser ( lohr . ClassExtentExpression , "Customers.allInstances()" ) ; }
te	3	public Header getHeader ( ) { return header ; }
te	9	public void logWarning ( final String message , final Throwable exception ) { log . warn ( message , exception ) ; }
te	1	public Pair ( ) { }
te	2	public int getSessionID ( ) { return this . playerID ; }
te	5	public GregorianCalendar getZeroStatusDate ( ) { if ( null != documentStatusesDates ) { return documentStatusesDates . get ( 0 ) ; } else { return null ; } }
te	2	public boolean isSunk ( ) { return ! this . isAfloat ( ) ; }
te	1	public void Carpeta ( ) { }
te	2	public boolean isAutoValidationEnabled ( ) { return auto ; }
te	2	public double getRunSpeed ( ) { return runSpeed ; }
te	9	public static boolean acceptPosTag ( String string ) { return string . charAt ( 0 ) == N || string . charAt ( 0 ) == V ; }
te	2	public int getAlly ( ) { return ally ; }
te	5	public void setVisible ( boolean b ) { resize ( ) ; super . setVisible ( b ) ; }
te	3	public String getNome ( ) { return nome ; }
te	3	public boolean getTouchMirrorX ( ) { return cbMirrorTouchX . isSelected ( ) ; }
te	3	public String getAuthor ( ) { return author ; }
te	10	@ Override protected boolean higherComparer ( E pdato , E pdaton ) { return ( Integer ) pdato > ( Integer ) pdaton ; }
te	10	private void jButton4ActionPerformed ( java . awt . event . ActionEvent evt ) { this . setEnabled ( false ) ; new GUICambiarContrasena ( 0 , nombreUsuario ) . setVisible ( true ) ; }
te	6	public void stateChanged ( ChangeEvent e ) { setEnabled ( twin . isEnabled ( ) ) ; }
te	4	public final void setUnitPrice ( double unitPrice ) { this . unitPrice = unitPrice ; }
te	7	@ Override public void setEvents ( final ArrayList < MainEvent > events ) { this . events = events ; }
te	9	@ Override public final void update ( Graphics g ) { if ( gameGraphics == null ) gameGraphics = g ; clearScreen = true ; redraw ( ) ; }
te	1	public boolean isOpaque ( ) { return false ; }
te	2	public int getLevel ( ) { return this . level ; }
te	1	public int start_state ( ) { return 0 ; }
te	7	private boolean isEmpty ( final LineType type ) { return type == null || type == LineType . EMPTY ; }
te	5	public void setStartedAt ( Date startedAt ) { this . startedAt = startedAt ; }
te	5	public void setCommonGrp ( CommonGrp value ) { this . commonGrp = value ; }
te	2	public void incrementRound ( ) { currentRound ++ ; }
te	8	public void setButtonsEnabled ( boolean enable ) { btnGetProjectVariables . setEnabled ( enable ) ; btnProceedObfuscation . setEnabled ( enable ) ; }
te	6	public NoEmailException ( String email ) { super ( email ) ; this . email = email ; }
te	3	public ClusterByType getClusterBy ( ) { return clusterBy ; }
te	6	@ Override protected void driverDisconnected ( String driverIdentifier , String [ ] deviceNames ) { }
te	2	public boolean isAddToSecondary ( ) { return addToSecondary ; }
te	8	@ Override public void train ( String filename ) { super . train ( filename ) ; while ( prune ( ) ) { } clean ( ) ; }
te	7	void setMapSeed ( long value ) { super . setupFields ( ) ; ( ( UnitLong ) fields [ 2 ] ) . setValue ( value ) ; }
te	8	public static PresentationForm [ ] values ( ) { synchronized ( VALUES ) { return VALUES . toArray ( new PresentationForm [ VALUES . size ( ) ] ) ; } }
te	3	public static ServerInstallerFrame getServerInstallerFrame ( ) { return serverInstallerFrame ; }
te	1	public ComentariTest ( ) { }
te	8	@ Override public void mouseReleased ( MouseEvent e ) { Mouse . toggle ( e . getButton ( ) , false ) ; }
te	9	public void setUp ( ) { finalizada = new Finalizada ( ) ; mockSubasta = mock ( Subasta . class ) ; mockPasajero = mock ( Pasajero . class ) ; }
te	9	public boolean writeFile ( String file , byte [ ] datas ) throws Exception { return HttpAction ( "PUT" , "/" + bucketname + file , datas , null , false ) != null ; }
te	5	public void setPlayerTwo ( Player playerTwo ) { this . playerTwo = playerTwo ; }
te	3	public Coordinates getTileType ( ) { return tileType ; }
te	4	public ArrayList < Node > getSelectedNodes ( ) { return selectedNodes ; }
te	7	public YamlPermissionUser ( String n , ConfigurationSection config ) { super ( n , config ) ; }
te	10	public static < T > void add ( String key , T value ) { objects . put ( key , value ) ; }
te	6	@ Column ( length = 50 , nullable = false ) public String getLastName ( ) { return lastName ; }
te	5	public CampaignDevice ( Campaign campaign ) { this . campaign = campaign ; }
te	2	public int getMaximum ( ) { return max ; }
te	9	public static void main ( String [ ] args ) { Minesweeper minesweeper = new Minesweeper ( ) ; minesweeper . main ( args [ 0 ] ) ; }
te	9	protected void makeDrawingBuffer ( ) { client . setDrawingBuffer ( new BufferedImage ( getWidth ( ) , getHeight ( ) , BufferedImage . TYPE_INT_RGB ) ) ; fillWithWhite ( ) ; }
te	10	@ Override public void updateAbstraction ( ) { obj . setPosition ( pobj . getPosition ( ) ) ; obj . setRotation ( pobj . getRotation ( ) ) ; }
te	3	public boolean permitidoAdministrarCatalogo ( ) { return this . cargo . permitidoAdministrarCatalogo ( ) ; }
te	4	public void setAcceso ( boolean acceso ) { this . acceso = acceso ; }
te	10	public void addToDictionary ( String newWord ) { if ( action != INITIAL ) throw new IllegalStateException ( "The action can can only be set once" ) ; action = ADDTODICT ; replaceWord = newWord ; }
te	9	public Writer writeObject ( Object o , boolean cache ) throws IOException { return writeAs ( null , o , cache ) ; }
te	2	public boolean canceled ( ) { return canceled ; }
te	7	@ WebEndpoint ( name = "InsuranceService" ) public ProcessEndpoint getInsuranceService ( ) { return super . getPort ( InsuranceService , ProcessEndpoint . class ) ; }
te	4	final List < LexTokenType > getTypes ( ) { return this . types ; }
te	8	@ Test public void toStringList ( ) throws Exception { assertEquals ( "LIST<java.lang.String>" , CollectionType . LIST . toString ( String . class ) ) ; }
te	1	Class47 ( ) { }
te	3	public SimilarityMatrix getSimilarities ( ) { return this . similarities ; }
te	4	public Set < Assignments > getAssignments ( ) { return assignments ; }
te	3	public String getAlias ( ) { return alias ; }
te	6	void Enqueue ( Customer c ) { q . add ( c ) ; }
te	5	public void setUser ( User user ) { this . user = user ; }
te	5	public Artist getArtistById ( ) throws SQLException { return adb . getArtistId ( ) ; }
te	10	private void exportDB ( ) { try { dataIO . exportDB ( dataIO . readDB ( ) ) ; } catch ( IOException | ClassNotFoundException ex ) { new ErrorForm ( "Unable to export existing Database!" , this ) . setVisible ( true ) ; } }
te	5	public DatabaseFillInTheBlanks ( final String databaseName ) { _databaseName = databaseName ; }
te	5	public void setStarttime ( Date starttime ) { this . starttime = starttime ; }
te	3	Logic getLogic ( ) { return logic ; }
te	8	public Node getFileLocation ( String filename ) { return nodeManager . getNodeList ( ) . getFileLocation ( filename ) ; }
te	2	public boolean sentinelWon ( ) { return ( winner == 1 ) ; }
te	6	@ Override public void actionPerformed ( ActionEvent e ) { myClientInterface . doListaGiocatori ( ) ; }
te	10	public GraphicsDemo ( ) { super ( "First Graphics Demo" ) ; contentPane = new ContentPane ( ) ; setContentPane ( contentPane ) ; setResizable ( false ) ; pack ( ) ; setVisible ( true ) ; contentPane . initialize ( ) ; }
te	2	public boolean isBurrowed ( ) { return burrowed ; }
te	1	public SipOutboundPricing ( ) { }
te	2	public int getStatus ( ) { return this . status ; }
te	4	public String getAnnouncementDate ( ) { return datePosted . toString ( ) ; }
te	4	public ElementoExisteException ( String mensaje ) { super ( mensaje ) ; }
te	6	public void addString ( String s ) { message . addFirst ( s ) ; }
te	10	public void setTileSettings ( String out_of_bounds_tile , int out_of_bounds_cid , int preserve_cids ) { el . setTileSettings ( out_of_bounds_tile , out_of_bounds_cid , preserve_cids ) ; }
te	4	public WaitThread ( int duration ) { this . duration = duration ; }
te	3	@ BeforeClass public void beforeClass ( ) { prepareWindow ( ) ; }
te	4	public void setParameters ( double [ ] parameters ) { r = parameters [ 0 ] ; }
te	4	public void setLensRadius ( float lensRadius ) { this . lensRadius = lensRadius ; }
te	9	private boolean isTimedOut ( UtpTimestampedPacketDTO utpTimestampedPacketDTO ) { long delta = currentTime - utpTimestampedPacketDTO . stamp ( ) ; return delta > resendTimeOutMicros ; }
te	2	@ Override public void compact ( ) { }
te	9	public boolean getNextImage ( ImageGetter < S > getter ) { if ( getTargetImage ( getter , this . currIndex + 1 ) ) { lastTryGetNext = true ; currIndex ++ ; return true ; } return false ; }
te	2	public boolean isDeterministic ( ) { return deterministic ; }
te	3	public String getId ( ) { return id ; }
te	4	public void setGenerations ( int generations ) { this . generations = generations ; }
te	7	public void setNewline ( boolean b ) { newline = b ? ( newline == null ? DEF_GAP : newline ) : null ; }
te	1	public void aboutToHidePanel ( ) { }
te	3	public String getType ( ) { return type ; }
te	5	public void setSize ( Dimension size ) { this . size = size ; }
te	5	public void setStartDate ( Date startDate ) { this . startDate = startDate ; }
te	6	public String getTabbedHashKey ( ) { return this . players . get ( indexOfCurrentPlayer ) . getTabbedImageString ( ) ; }
te	4	public ChildNotAllowedException ( ) { System . err . println ( "Node is not allowed to have children. The allowsChildren attribute of the intended parent is false" ) ; }
te	1	public int getColumnCount ( ) { return 2 ; }
te	9	public boolean isSet ( _Fields field ) { if ( field == null ) { throw new IllegalArgumentException ( ) ; } switch ( field ) { case QUEUE_NAME : return is_set_queue_name ( ) ; } throw new IllegalStateException ( ) ; }
te	7	@ Override public int getBulletSize ( ) { return ( int ) ( getShooter ( ) . getWidth ( ) * random ( 0.5f , 0.8f ) ) ; }
te	3	public void setColor ( Color c ) { }
te	2	public int [ ] getEncodedMessage ( ) { return encodedMessage ; }
te	1	private PlayerThreadMap ( ) { }
te	10	public synchronized void editar ( int i ) { try { new PesquisaView ( this , list . get ( i ) ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } }
te	1	public int get_key_num ( ) { return 1 ; }
te	1	public flush_queue_result ( ) { }
te	2	public double getVolume ( ) { return volume ; }
te	2	@ Override public void toThink ( ) { }
te	4	public void setZ ( final double z ) { this . z = z ; }
te	8	@ Test public void decs ( ) throws LexicalException , SyntaxException { String input = "decTest {\n  int a;\n  image b; boolean c; pixel p; \n}" ; parseInput ( input ) ; }
te	5	public RendererOptions smooth ( boolean smooth ) { this . setSmooth ( smooth ) ; return this ; }
te	9	public ApnsServiceBuilder withGatewayDestination ( String host , int port ) { this . gatewayHost = host ; this . gatewaPort = port ; return this ; }
te	5	public void setAlias ( String alias ) { this . alias = alias ; }
te	4	public void setInterruptNum ( int InterruptNum ) { this . InterruptNum = InterruptNum ; }
te	3	public int getRowCount ( ) { return data . length ; }
te	4	public void setShow ( boolean show ) { this . show = show ; }
te	1	public void addNewRecomendacion ( ) { }
te	4	public UDPAdapter ( ) throws IOException { this ( DEFAULT_PORT , DEFAULT_PORT ) ; }
te	2	public int getDimensionUp ( ) { return dimensionUp ; }
te	3	public int getPlagueTimer ( ) { return getPlagueTimer_native ( pointer ) ; }
te	10	public void insertVariableMap ( String identifier , String type ) throws SwarmSymbolDuplicateException { myCurrentScope . insertVariableMap ( identifier , type ) ; }
te	10	public OutputWrapper ( Output < Map < String , Object >> delegate ) { this . delegate = delegate ; if ( this . delegate == null ) throw new IllegalArgumentException ( "delegate output is null!" ) ; }
te	5	protected Ipv4RangeBuilder ( Ipv4 from ) { this . from = from ; }
te	10	@ Override public void keyReleased ( KeyEvent e ) { selectRow ( ) ; if ( e . getKeyCode ( ) == KeyEvent . VK_ENTER ) { activateRow ( ) ; } }
te	3	public int getSqNum_Width ( ) { checkPD ( ) ; return this . sqNumWidth ; }
te	1	public FivePointTele ( ) { super ( 5 ) ; }
te	1	public KDTreeInvalidCreationArgumentException ( ) { super ( "Wrong argument during kd-tree creation" ) ; }
te	3	public static String getServerPort ( ) { return serverPort ; }
te	7	public JSONException syntaxError ( String message ) { return new JSONException ( message + toString ( ) ) ; }
te	10	public PushQueue add ( final Payload payload , final Device device ) { return add ( new PayloadPerDevice ( payload , device ) ) ; }
te	1	public void run ( ) { }
te	9	protected void definirKey ( ) { raz ( ) ; panel_case . removeAll ( ) ; definirObjet ( "key" ) ; InterfaceEditeur . tab [ this . x ] [ this . y ] = this ; }
te	4	public void setId ( int id ) { this . id = id ; }
te	4	@ Override public void actionPerformed ( ActionEvent e ) { }
te	5	public javax . swing . JMenuItem getVentaeliminarProdMenu ( ) { return ventaeliminarProdMenu ; }
te	8	public static String makeList ( Object ... arr ) { return makeList ( Arrays . asList ( arr ) ) ; }
te	5	public void setPhoneNumber ( String phoneNumber ) { this . phoneNumber = phoneNumber ; }
te	6	@ Override public Image getDrawImage ( ItemStack stack ) { return sprite ; }
te	4	SplitOnMonotonesStage ( TriangulationAlgorithm algorithm ) { super ( algorithm ) ; }
te	7	public static void method366 ( ) { anIntArrayArray1478 = null ; for ( int j = 0 ; j < 50 ; j ++ ) anIntArrayArray1479 [ j ] = null ; }
te	1	public Comentario ( ) { }
te	8	@ Override void registerNames ( Consumer < String > c ) { c . accept ( tinyName ) ; }
te	5	public EDASOMINDTableCellRenderer ( DataHolder dh ) { dataholder = dh ; }
te	10	public static String findParameterValue ( ServletRequest request , String name ) { return findParameterValue ( request . getParameterMap ( ) , name ) ; }
te	9	public final int [ ] getVisualPadding ( ) { if ( vp && c instanceof JTabbedPane ) { if ( UIManager . getLookAndFeel ( ) . getClass ( ) . getName ( ) . endsWith ( "WindowsLookAndFeel" ) ) return new int [ ] { - 1 , 0 , 2 , 2 } ; } return null ; }
te	2	public int getSante ( ) { return sante ; }
te	3	public class < T > getActiveObjectClass ( ) { return activeObjectClass ; }
te	2	public double getY ( ) { return y ; }
te	2	public int getTotalImpressions ( ) { return this . totalImpressions ; }
te	1	public Servico ( ) { }
te	10	@ Id @ GeneratedValue ( generator = "increment" ) @ GenericGenerator ( name = "increment" , strategy = "increment" ) @ Column ( name = "role_id" ) public long getRoleId ( ) { return roleId ; }
te	1	public UserPageServlet ( ) { super ( ) ; }
te	4	public void setMaxLodPixels ( double maxLodPixels ) { this . maxLodPixels = maxLodPixels ; }
te	3	private void resumeAnimator ( ) { synchronized ( this ) { resumed = true ; notifyAll ( ) ; } }
te	10	public Circle ( int x , int y , int r ) { this . x = x ; this . y = y ; this . r = r ; }
te	4	public ParserBuildException ( Throwable cause ) { super ( cause ) ; }
te	4	public FontRenderer ( ) { this . texture = TextureRegistry . getTexture ( "/font.png" ) ; }
te	3	public String getType ( int index ) { return "CDATA" ; }
te	7	public void mouseExited ( MouseEvent mouseEvent ) { if ( paintType == null ) return ; paintType . mouseExited ( mouseEvent ) ; }
te	7	public Queue ( int size ) { this . maxQueueSize = size ; this . currentRearPosition = 0 ; this . front = null ; this . rear = null ; }
te	4	@ Test public void finish ( ) { assertEquals ( s , "B" ) ; }
te	8	public void setWeight ( Integer weight ) { this . weight = weight ; this . setWeightstr ( weight . toString ( ) ) ; }
te	10	protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { this . doPost ( request , response ) ; }
te	7	@ Override public void execute ( int arg ) throws DataAccessException { cpu . setInstructionPointer ( arg ) ; }
te	4	public StripDocumentHandler ( ContentHandler contentHandler ) { this ( contentHandler , null ) ; }
te	9	public GenericRepository ( String nome ) { this . pathFile = "repository/" + nome + ".bin" ; this . entity = new ArrayList < T > ( ) ; this . load = false ; }
te	1	public Vec2f ( ) { super ( 2 ) ; }
te	3	private boolean existeUsuarioSelecionado ( ) { return tblUsuarios . getSelectedRow ( ) >= 0 ; }
te	6	void removeObserver ( Observer observer ) { observers . removeElement ( observer ) ; }
te	1	public Boton ( ) { }
te	1	public Band ( ) { }
te	3	public T getMax ( ) { return max ; }
te	4	public LinkedList < XmlQueryParam > getQueryParams ( ) { return queryParams ; }
te	8	public boolean createNewSystemFile ( String fileName ) throws IOException { return fileSystemManager . createFile ( downloadLocation , fileName ) ; }
te	8	public Collection < Ship > getPlayerShips ( ServerPlayer player ) { return getPlayerShips ( player . getId ( ) ) ; }
te	3	public boolean preventsSleep ( ) { switch ( this ) { case INSOMNIA : case VITAL_SPIRT : return true ; default : return false ; } }
te	5	public void setPublicationYear ( String publicationYear ) { this . publicationYear = publicationYear ; }
te	9	public boolean build ( UnitType type , TilePosition target ) { return build_native ( pointer , type , target ) ; }
te	10	public ReloadingContext ( String contextClass , F0 < ClassLoader > classLoaderF ) { this . contextClassName = contextClass ; this . classLoaderF = classLoaderF ; }
te	2	public double getBalance ( ) { return balance ; }
te	9	public EuclideanMod ( ) { super ( "EuclideanMod" ) ; setDistance ( new EuclideanDistance ( ) ) ; dists = new HashMap < Integer , double [ ] > ( ) ; means = new HashMap < Integer , double [ ] > ( ) ; }
te	7	@ Override public void onMouseReleased ( MouseEvent event ) { super . onMouseReleased ( event ) ; recalc ( ) ; }
te	2	public boolean loaded ( ) { return loaded ; }
te	2	public boolean nullable ( ) { return _nullable ; }
te	9	private int getIntVal ( String sval ) { if ( sval == null || sval . length ( ) < 1 ) { return 0 ; } else { return ( Integer . parseInt ( sval ) ) ; } }
te	8	public static void main ( String [ ] args ) { org . junit . runner . JUnitCore . main ( "com.reinvent.surus.HPrimaryKeyTest" ) ; }
te	9	@ Override public void decadeEvent ( int i ) { System . out . println ( getClass ( ) . getCanonicalName ( ) + ": " + i ) ; }
te	4	public void setTaskTimeRequired ( double newTaskTimeRequired ) { taskTimeRequired = newTaskTimeRequired ; }
te	3	public String getCustomerNum ( ) { return custNum ; }
te	5	public void setCUSTOMER_NOTE ( String cUSTOMER_NOTE ) { CUSTOMER_NOTE = cUSTOMER_NOTE ; }
te	4	@ Override public void mouseReleased ( MouseEvent e ) { }
te	10	@ Override public double get ( Point point ) { return cells . containsKey ( point ) ? cells . get ( point ) : 0.5 ; }
te	8	public SampleEmbeddable ( String someStringValue , int someIntVlaue ) { this . someStringValue = someStringValue ; this . someIntVlaue = someIntVlaue ; }
te	6	public void updateDrawable ( List < Drawable2D > drawList ) { this . drawList = drawList ; }
te	4	private Command ( char c ) { this . cmdSymbol = c ; }
te	5	public TileMap ( int tileSize ) { this . tileSize = tileSize ; tween = 0.05 ; }
te	2	public int getPlayerIndex ( ) { return _index ; }
te	8	@ Override public MyDatabase getSgd ( ) { if ( client == null ) { return SgdBase . getSgd ( ) ; } else { return client . getSgd ( ) ; } }
te	2	public double getVeloX ( ) { return veloX ; }
te	4	public synchronized LinkedList < Command > getCommands ( ) { return commands ; }
te	1	private Strings ( ) { }
te	10	public int hashCode ( ) { final int prime = 31 ; int result = 1 ; result = prime * result + ( ( resourceName == null ) ? 0 : resourceName . hashCode ( ) ) ; return result ; }
te	2	public boolean isAvailable ( ) { return available ; }
te	7	public JSONException ( Throwable cause ) { super ( cause . getMessage ( ) ) ; this . cause = cause ; }
te	3	public ArrayList < double > getDistances ( ) { return distances ; }
te	4	private boolean r_mark_DA ( ) { if ( ! r_check_vowel_harmony ( ) ) { return false ; } if ( find_among_b ( a_6 , 4 ) == 0 ) { return false ; } return true ; }
te	4	public List < String > getMessages ( ) { return messages ; }
te	6	public DamageType ( int [ ] data , int index ) { ID = data [ index ++ ] ; }
te	7	public double measureImageBrightness ( Image image ) { return measurePerformance ( ( ) -> { System . out . println ( "measureImageBrightness executing..." ) ; return 0.94 ; } ) ; }
te	2	public boolean isPlayer ( ) { return player ; }
te	6	private void nActionPerformed ( java . awt . event . ActionEvent evt ) { }
te	1	public boolean isCancelled ( ) { return false ; }
te	4	public void setIdlinea ( int idlinea ) { this . idlinea = idlinea ; }
te	5	public Collection < ItemStack > getInventory ( ) { return inventory . values ( ) ; }
te	10	private void jButton1ActionPerformed ( java . awt . event . ActionEvent evt ) { System . out . println ( this . id ) ; }
te	6	@ Override public void reverse ( ) { layer . getObjects ( ) . removeObject ( object ) ; }
te	7	public void setListI_Viewable ( List < I_Viewable > listI_Viewable ) { this . listI_Viewable = listI_Viewable ; addI_Viewable ( ) ; }
te	3	public String value ( ) { return value ; }
te	1	public RGB ( ) { }
te	8	public static void main ( String [ ] args ) { Tester tester = new Tester ( ) ; tester . testEx5_2 ( ) ; }
te	5	@ Id @ Column ( name = "person_id" ) public int getPersonId ( ) { return personId ; }
te	1	public ObjectWithArray ( ) { }
te	9	private synchronized void addRequestHandler ( String path , RequestHandler handler ) { handlers . put ( path , handler ) ; }
te	2	public float getTraveldistance ( ) { return traveldistance ; }
te	5	public void setSource ( String source ) { this . source = source ; }
te	9	@ Test public void test ( ) throws Exception { assertEquals ( fd . getDouble ( ) , 4 ) ; assertNotSame ( fd . getDouble ( ) , 3 ) ; }
te	10	public void addButtonConfigProfileActionListener ( ActionListener al ) { I_ProfilConfig . addActionListener ( al ) ; I_ProfilConfig . setAccelerator ( KeyStroke . getKeyStroke ( "pressed N" ) ) ; }
te	2	public long getTagID ( ) { return tagID ; }
te	3	public String getFileName ( ) { return fileName ; }
te	1	public Status ( ) { }
te	8	@ Override public ActividadAlumno getActividadAlumno ( BeanActividadesAlumno bean ) { return new ActividadAlumno ( bean , ( IClient ) this ) ; }
te	5	public class getColumnClass ( int c ) { return getValueAt ( 0 , c ) . getClass ( ) ; }
te	3	public String getName ( ) { return name ; }
te	5	public String generateContent ( ) { return double . toString ( 0.008 + ( random . nextDouble ( ) * ( 0.01 - 0.008 ) ) ) ; }
te	8	public String getPath ( Object node ) { return ( ( FileNode ) node ) . getFile ( ) . getPath ( ) ; }
te	3	public File getFile ( ) { return this . input ; }
te	7	public Cardapio mock ( String date_ ) { date = date_ ; return mockRandom ( ) ; }
te	4	@ Override public void windowIconified ( WindowEvent e ) { }
te	3	public JComponent controlPanel ( ) { return controlPanel ; }
te	8	public Set < Item > getIngredientSet ( ) { return EnumSet . copyOf ( Arrays . asList ( ingredients ) ) ; }
te	8	@ Override public void keyReleased ( KeyEvent event ) { model . setFilter ( searchField . getText ( ) ) ; }
te	7	public void update ( Graphics g ) { g . setPaintMode ( ) ; super . update ( g ) ; }
te	9	public ASTExpAdd ( ASTExp first , ASTExp second ) { this . first = first ; this . second = second ; }
te	2	public int getX ( ) { return x ; }
te	8	@ Override public void save ( T obj ) { sessionFactory . getCurrentSession ( ) . saveOrUpdate ( obj ) ; }
te	10	void addtab ( Component video ) { int i = jtabbedpane . indexOfTab ( "Playing" ) ; jtabbedpane . setComponentAt ( i , video ) ; }
te	5	public MinCross ( RankSorter sorter ) { setRankSorter ( sorter ) ; }
te	9	private void jTextField1ActionPerformed ( java . awt . event . ActionEvent evt ) { executeCommand ( jTextField1 . getText ( ) ) ; }
te	10	public static void main ( String [ ] args ) throws CustomException , JSONException , IOException { exchangeCoinsTest ( ) ; exchangeGemsTest ( ) ; listingTest ( ) ; pricesTest ( ) ; }
te	6	public boolean existeCrlv ( String renavam ) { return new File ( "xmls/" + renavam + ".xml" ) . exists ( ) ; }
te	7	public synchronized void toggleType ( ) { if ( detailstype < 7 ) { detailstype ++ ; } else { detailstype = 0 ; } setCmd ( Commands . REPAINTLABEL ) ; }
te	7	public List < T > readCsvToList ( boolean skipHeaderLine ) throws IOException { return readCsvToList ( skipHeaderLine , " " ) ; }
te	7	public static OnLineFunction valueOf ( String code ) { return valueOf ( OnLineFunction . class , code ) ; }
te	5	public RegistrarSaidaHandler ( Principal principal ) { this . principal = principal ; }
te	6	public Integer getAndDecrement ( ) { return getAndSet ( ( Integer value ) -> { return value - 1 ; } ) ; }
te	3	@ Override public String toString ( ) { return "7" ; }
te	8	public void loadPlugins ( String [ ] pluginNames ) { for ( String name : pluginNames ) { this . loadPluginByName ( name ) ; } }
te	6	@ Override public IntCartesian getLocation ( ) { return new IntCartesian ( x , y ) ; }
te	8	public Projectile ( IntCartesian location , IntCartesian velocity ) { super ( location ) ; setVelocity ( velocity ) ; }
te	3	public String getName ( ) { return name ; }
te	10	public long getElapsedTime ( ) { long elapsed ; if ( running ) { elapsed = ( currentTime - startTime ) ; } else { elapsed = ( stopTime - startTime ) ; } return elapsed ; }
te	4	public ScopeTest ( String testName ) { super ( testName ) ; }
te	8	private void initMenus ( ) { mainMenu = new JMenuBar ( ) ; this . setJMenuBar ( mainMenu ) ; initFileMenu ( ) ; initWindowMenu ( ) ; initDebugMenu ( ) ; }
te	7	public static UnitValue getUnitValueY ( String unit ) { return VER_DEFS . get ( unit ) ; }
te	7	public Object getValueAt ( int arg0 , int arg1 ) { return data [ arg0 ] [ arg1 ] ; }
te	6	public static void main ( String [ ] args ) { SwingConsole . run ( new CashRegister ( ) , 300 , 400 ) ; }
te	10	public BIOSwitch ( String text , Icon icon , boolean selected ) { super ( text , icon , selected ) ; create ( ) ; }
te	4	public void setSizePath ( float size_path ) { this . size_path = size_path ; }
te	1	public void print ( ) { }
te	5	public void addText ( String text ) { this . text += text ; }
te	10	public static String getTime ( long s ) { return new SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss" ) . format ( new Date ( s - TimeZone . getDefault ( ) . getRawOffset ( ) ) ) ; }
te	7	public Tile getTile ( int x , int y ) { return tiles [ y ] [ x ] ; }
te	5	public int mapXToView ( double inX ) { return ( int ) ( ( inX - mXMin ) * mScale ) ; }
te	4	public FloatSetting ( NumberSetting < float > otherSetting ) { super ( otherSetting ) ; }
te	6	public void removePlotter ( final Plotter plotter ) { plotters . remove ( plotter ) ; }
te	6	@ Override public void imprimirPrecio ( ) { System . out . println ( "Precio menor que: " + this . getPrecioA ( ) ) ; }
te	3	public String getGrupo ( ) { return grupo ; }
te	2	public void unsetType ( ) { this . type = null ; }
te	2	public double getFallSpeed ( ) { return fallSpeed ; }
te	6	public static void setMaxTravelRate ( Rate rate ) { TanksClientModel . maxTravelRate = rate ; }
te	6	public void addStatusMessage ( String message ) { statusBar . setText ( message ) ; }
te	1	public int getColumnCount ( ) { return 5 ; }
te	2	public int getLength ( ) { return this . length ; }
te	10	public static void $$ ( final $$boolean1d x , final $$boolean1d y ) throws NRException { x . $$ ( y . $ ( ) ) ; }
te	6	public void setArgs ( List < String > args ) { this . args = args ; }
te	1	private Join ( ) { }
te	6	public void writeData ( Server server ) { server . sendToAll ( getData ( ) ) ; }
te	3	@ Override public Member getMember ( ) { return null ; }
te	6	public static TileDeck getInstance ( ) { if ( myInstance == null ) { myInstance = new TileDeck ( ) ; } return myInstance ; }
te	2	@ Override public double det ( ) { return 0 ; }
te	10	public void normalize ( double number ) { for ( int i = 0 ; i < histogramData . length ; i ++ ) { histogramData [ i ] /= number ; } }
te	4	@ Override public String toString ( ) { return colorName ; }
te	9	void reset ( ) { topLeft . fullReset ( ) ; bottomLeft . fullReset ( ) ; bottomRight . fullReset ( ) ; topRight . fullReset ( ) ; }
te	3	protected boolean canBreed ( ) { return getAge ( ) >= getBreedingAge ( ) ; }
te	1	public ObjectFactory ( ) { }
te	8	@ Override boolean customerWantsCondiments ( ) { String answer = getUserInput ( ) ; if ( answer . toLowerCase ( ) . startsWith ( "y" ) ) { return true ; } else { return false ; } }
te	9	public boolean isFull ( ) { boolean result = true ; for ( Coordinate coord : coordinates ) { if ( isEmptyField ( coord ) ) { result = false ; } } return result ; }
te	9	public SMIsNull ( String field , SMBoolean value ) { this . field = field ; this . value = value ; }
te	3	public String getName ( ) { return name ; }
te	4	public Orientation ( Node parent ) { super ( parent ) ; }
te	10	@ Test public void should_return_first_element ( ) { DoubleLinkedList list = new DoubleLinkedList ( ) ; list . add ( "kij" ) ; assertEquals ( list . get ( 0 ) , "kij" ) ; }
te	7	public void setDataType ( byte [ ] dataType ) { if ( dataType . length != 2 ) { throw new WrongArrayLengthException ( "DataType must be 2 bytes long." ) ; } else { this . dataType = dataType ; } }
te	9	public Object clone ( ) { Object object = null ; try { object = super . clone ( ) ; } catch ( CloneNotSupportedException e ) { } return object ; }
te	10	public Student ( String studentNumber , String name , int yearOfBirth ) { super ( name , yearOfBirth ) ; this . studentNumber = studentNumber ; }
te	6	public void setBooster ( List < Boost > booster ) { this . booster = booster ; }
te	1	public Factory ( ) { }
te	3	public String getSoundFileDirectory ( ) { return this . soundFileDirectory ; }
te	3	public String getOrderStatus ( ) { return orderStatus ; }
te	8	JSONObjectTreeNode ( String name , JSONObject object ) throws JSONException { this ( name , object , true ) ; }
te	6	@ ManyToOne @ JoinColumn ( name = "role_idrole" ) public Role getRole ( ) { return role ; }
te	4	@ Override public String [ ] getHelp ( ) { return new String [ ] { "ttp group [group] [actions..]" , "Group interface" } ; }
te	2	public int [ ] getAlleleCounts ( ) { return pAlleleCounts ; }
te	6	public void setAmount ( Integer amount ) { this . amount . set ( amount ) ; }
te	10	public boolean tenMinutesTotal ( Song two , Song three ) { return this . time + two . time + three . time == 10 ; }
te	5	public void setTxtCodRenavam ( JTextField txtCodRenavam ) { this . txtCodRenavam = txtCodRenavam ; }
te	6	public void update ( News news ) { this . getHibernateTemplate ( ) . update ( news ) ; }
te	5	public void setNum ( String num ) { this . num = num ; }
te	1	public ObjectFactory ( ) { }
te	4	public void setNameEntityIsSet ( boolean value ) { if ( ! value ) { this . nameEntity = null ; } }
te	4	public void setAgua ( int agua ) { this . agua = agua ; }
te	4	public void setCoins ( int param ) { coins = param ; }
te	4	public void setIdTestCase ( long idTestCase ) { this . idTestCase = idTestCase ; }
te	2	public int getSubnum ( ) { return subnum ; }
te	2	public boolean getShowCursorLegend ( ) { return showCursorLegend ; }
te	5	public static boolean isRFModuleInstalled ( short expansionModules ) { return ( expansionModules & MODULE_RF ) == MODULE_RF ; }
te	8	public void setJudulBuku ( String judul ) { kwitansiTable . setValueAt ( judul , kwitansiTable . getSelectedRow ( ) , 1 ) ; }
te	9	private void jMenuItem1ActionPerformed ( java . awt . event . ActionEvent evt ) { query . lockAllDoors ( ) ; refresh ( ) ; }
te	3	protected DBCollection getDbCollection ( ) { return dbCollection ; }
te	6	public SuperPower ( ) { basepower = 120 ; accuracy = 100 ; primary = new Fighting ( ) ; name = "superpower" ; }
te	3	public YesNoType getHasDirectors ( ) { return hasDirectors ; }
te	10	@ Test public void $isEmptyTest_Null ( ) { List < String > list = null ; assertThat ( $ . isEmpty ( list ) , is ( true ) ) ; }
te	5	public Quaternion setX ( float x ) { this . x = x ; return this ; }
te	1	public ZussException ( ) { }
te	4	public HashMap < ITradeable , long > getTradeables ( ) { return tradeables ; }
te	1	public SingleLinkedListNode ( ) { }
te	5	public void setProductName ( String productName ) { this . productName = productName ; }
te	9	private final void checkNumRepairSymbols ( int esi , int numSymbols ) { if ( numSymbols < 1 || numSymbols > ( 1 + ParameterChecker . maxEncodingSymbolID ( ) - esi ) ) { throw new IllegalArgumentException ( "invalid number of symbols" ) ; } }
te	1	protected AbstractIterator ( ) { }
te	7	public String cleanLink ( String text ) { return super . doCleanLink ( super . doClean ( text ) ) ; }
te	8	boolean contains ( Object o ) { return ( o == value ) || value . equals ( o ) ; }
te	8	@ JsonProperty ( "ApplicationEnvironment" ) public List < org . ogf . glue2 . ApplicationEnvironment > getApplicationEnvironment ( ) { return ApplicationEnvironment ; }
te	5	public void setType ( Type type ) { this . type = type ; }
te	3	public TokenNext [ ] [ ] getNextTokens2 ( ) { return nextTokens2 ; }
te	2	public boolean isRunning ( ) { return running ; }
te	6	public void setAlbum ( String album ) { Dispatch . put ( this , "Album" , album ) ; }
te	6	public void setGameRulesPlayerX ( List < RulePlay > gameRulesPlayerX ) { this . gameRulesPlayerX = gameRulesPlayerX ; }
te	9	@ Override public Object clone ( ) throws CloneNotSupportedException { AnObject o = ( AnObject ) super . clone ( ) ; return o ; }
te	4	public void setScore ( final int score ) { this . score = score ; }
te	10	public BottomPanel ( JFrame frame ) { this . frame = ( IndexFrame ) frame ; initComponents ( ) ; initObjects ( ) ; bindStyleEvent ( ) ; bindProgressEvent ( ) ; }
te	8	@ Override public void mousePressed ( MouseEvent arg0 ) { evBus . post ( new InputEvent ( arg0 ) ) ; }
te	6	public ConsumedCondition ( ) { super ( ) ; this . lock = new ReentrantLock ( ) ; this . conditionIsTrue = this . lock . newCondition ( ) ; }
te	9	public void add ( TileData t , int id ) { assert t != null ; tiles . put ( id , t ) ; }
te	4	@ Override public void setHeight ( float height ) { throw new UnsupportedOperationException ( "Cannot directly set the height." ) ; }
te	5	protected void setName ( String name ) { this . name = name ; }
te	4	public void setScore ( int points ) { this . points = points ; }
te	5	public void setProgram ( RobotProgramNode prog ) { program = prog ; }
te	10	public void setEndPoint ( double x , double y ) { dx = x - getX ( ) ; dy = y - getY ( ) ; repaint ( ) ; }
te	4	public void setFleschKincaid ( double fleschKincaid ) { this . fleschkincaid = fleschKincaid ; }
te	6	@ Override public VerifyCompassPlace getPlace ( String token ) { return new VerifyCompassPlace ( ) ; }
te	7	@ Override public void onStart ( ScriptContext context ) { context . keepBusy ( character , this ) ; }
te	10	public WasDerivedFrom ( Object identifier , Entity derived , Entity derivedFrom ) { this ( identifier , derived , derivedFrom , null , null , null ) ; }
te	6	public Resolver ( ) { try { class . forName ( "com.mysql.jdbc.Driver" ) ; } catch ( ClassNotFoundException e ) { e . printStackTrace ( ) ; } }
te	5	public void setColor ( Color color ) { this . color = color ; }
te	2	public char [ ] [ ] getBoard ( ) { return board ; }
te	5	public void genericWeight ( double [ ] weights ) { raw . genericWeight ( weights ) ; }
te	8	public static InsightNearest require ( Headquater hq ) { return ( InsightNearest ) hq . registerInsight ( new InsightNearest ( ) ) ; }
te	4	@ Override public String toString ( ) { return this . descr_short ; }
te	1	public LineSeriesItem ( ) { }
te	4	public void setSoundOn ( boolean soundOn ) { this . soundOn = soundOn ; }
te	5	@ Override public long getLong ( String columnLabel ) throws SQLException { return 0 ; }
te	2	public int getReceiver ( ) { return _receiver ; }
te	7	public void addVariavel ( VariavelTableNode node ) { variaveis . add ( node ) ; tableVariaveis_Fase_Update ( ) ; }
te	3	public void mouseMoved ( MouseEvent e ) { }
te	9	public void add ( ComplexNumber other ) { real += other . real ; imaginary += other . imaginary ; }
te	5	public void setCompany ( String company ) { this . company = company ; }
te	6	public void setWage ( double hourlyWage ) { if ( hourlyWage >= 0.0 ) wage = hourlyWage ; else throw new IllegalArgumentException ( "Hourly wage must be >= 0.0" ) ; }
te	6	public double dotProduct2 ( FeatureVector fv ) { return fv . dotProduct ( params2 ) ; }
te	7	public void setPoint ( Point point ) { center = point ; setChanged ( ) ; notifyObservers ( ) ; }
te	4	@ Override public String toString ( ) { return "V\u00E9lo " + this . id_velo ; }
te	7	public synchronized void appendTxt ( String str ) { crawlerGUI . appendTxt ( str , id ) ; }
te	9	@ Test ( expected = IllegalStateException . class ) public void fail_noDeclaredConstructor ( ) { class Example { private Example ( ) { } } easyDI . getInstance ( Example . class ) ; }
te	5	public boolean optBoolean ( String key ) { return this . optBoolean ( key , false ) ; }
te	3	public String toKML ( ) { return toKML ( false ) ; }
te	2	public int getY ( ) { return y ; }
te	6	public static void main ( String [ ] args ) { while ( in . hasNext ( ) ) { processCase ( ) ; } }
te	10	public FactorsMVPFactory ( ) { this . view = new FactorsPanel ( eventBus ) ; this . model = new FactorsModel ( ) ; eventBus . register ( new FactorsPresenter ( model ) ) ; }
te	8	public AltBSTree ( T [ ] arr ) { root = fromArr ( arr , 0 , arr . length - 1 ) ; }
te	6	@ Override public Type getType ( ) { return Message . Type . ID_RESPONSE ; }
te	4	public void addEagles ( int amount ) { eagles += amount ; }
te	1	protected ListValueCreator ( ) { super ( ) ; }
te	8	public void removeActionListener ( ActionListener l ) { if ( listeners == null || l == null ) return ; listeners . remove ( l ) ; }
te	5	public void setRoles ( String roles ) { this . roles = roles ; }
te	2	public byte [ ] getContent ( ) { return content ; }
te	8	public Vector2 DividedBy ( float divisor ) { return new Vector2 ( X / divisor , Y / divisor ) ; }
te	3	public Region getRegion ( ) { return region ; }
te	8	@ Override public void close ( ) throws IOException { open = false ; delegate . close ( ) ; executor . shutdown ( ) ; }
te	7	public RpcHandler ( String method_name ) { super ( method_name , method_name . endsWith ( kCatchall ) ) ; }
te	5	public BanTransfer ( int portSender , int [ ] portReceiver ) { super ( portSender , portReceiver ) ; }
te	3	public String getType ( ) { return type ; }
te	10	void lookahead ( ) { FuncState . _assert ( lookahead . token == TK_EOS ) ; lookahead . token = llex ( lookahead ) ; }
te	5	private void updateLastStyle ( String themeId ) { lastStyle = themeId ; }
te	5	public Hashtable < String , Tag > getTags ( ) { return this . tags ; }
te	7	@ Override public void setPosition ( Component . Position pos ) { this . pos = pos ; }
te	3	public String getRESOURCEURI_GUID ( ) { return RESOURCEURI_GUID ; }
te	7	public Object getResult ( ) { return this . infoList . get ( infoList . size ( ) - 1 ) . getResult ( ) ; }
te	8	public String [ ] getSqls ( ) throws IllegalAccessException { if ( sqls == null ) { generateParam ( ) ; } return sqls . toArray ( new String [ 0 ] ) ; }
te	8	public CraftingStorageJob ( int x , int y , Item item ) { super ( x , y , item ) ; }
te	1	public boolean isVertex ( ) { return true ; }
te	3	@ Override public boolean isBeforeFirst ( ) throws SQLException { return false ; }
te	1	public TripReservationDetail ( ) { }
te	8	private static String FormatInt ( String value ) { if ( value . length ( ) == 1 ) { return "0" + value ; } else { return value ; } }
te	10	public List < ? > readAllMaterial ( ) { CourseMaterialDao dao = new CourseMaterialDao ( ) ; List < ? > cmL = dao . readAll ( ) ; return cmL ; }
te	10	@ Test public void testTrackNewJob ( ) throws LuaScriptException { String jid = addNewTestJob ( ) ; performTrackingAction ( "track" , jid ) ; untrackAndRemove ( jid ) ; }
te	6	@ JsonProperty ( "Associations" ) public void setAssociations ( DomainAssociations Associations ) { this . Associations = Associations ; }
te	6	public void setPredatorSpecies ( ArrayList < String > predatorSpecies ) { this . predatorSpecies = predatorSpecies ; }
te	7	void unselectAll ( ) { int count = countSelected ( ) ; _unselectAll ( ) ; if ( countSelected ( ) != count ) repaint ( ) ; }
te	8	public Image getCollapsedImage ( Display disp , ProjectionAnnotation annotation ) { return getImage ( getCurrentImageKey ( ) , true ) ; }
te	1	protected float getDefault ( ) { return ( float ) 0.5 ; }
te	2	public DBConfigUpdater ( ) { this . start ( ) ; }
te	9	MessageCode ( String code , MessageType type ) { this . code = code ; this . type = type ; }
te	3	public ContactInfo createContactInfo ( ) { return new ContactInfo ( ) ; }
te	10	public boolean AddBitcoinServer ( BitcoinServer disownObject ) { return otapiJNI . WalletData_AddBitcoinServer ( swigCPtr , this , BitcoinServer . getCPtr ( disownObject ) , disownObject ) ; }
te	10	public User find ( Integer id ) { return Ebean . find ( User . class ) . where ( ) . = ( "id" , id ) . findUnique ( ) ; }
te	5	@ Override public void setWeight ( double weight ) { this . weight = weight ; }
te	5	public void setNotebookWeeksNumberPanelController ( NotebookWeeksNumberPanelController notebookWeeksNumberPanelController ) { this . weeksNumberPanelController = notebookWeeksNumberPanelController ; }
te	3	public CoordinateComponent getComponent ( ) { return component ; }
te	2	public int getNoOfActions ( ) { return noOfActions ; }
te	8	public final void setHeight ( BoundSize size ) { this . height = size != null ? size : BoundSize . NULL_SIZE ; }
te	6	protected boolean removeBomb ( Bomb bomb ) { return bombs . remove ( bomb ) ; }
te	4	int [ ] getTable ( ) { if ( count > lim ) return null ; else return tbl ; }
te	5	public Map < MappingField , Direction > getAdjDirMap ( ) { return adjacentDirection ; }
te	5	public ImageWatcher ( Image i ) { super ( ) ; this . image = i ; }
te	8	public final boolean contains ( GPoint pt ) { return contains ( pt . getX ( ) , pt . getY ( ) ) ; }
te	2	public double getPrecio ( ) { return precio ; }
te	1	public Subj ( ) { }
te	1	private StringComparator ( ) { }
te	6	@ Override public void setEvs ( int newEvs [ ] ) { stats . setEvs ( newEvs ) ; }
te	10	public TBombaMarciano ( TCanvas _canvas , double _x , double _y ) { this ( _canvas ) ; this . x = _x ; this . y = _y ; }
te	9	public static void main ( String [ ] args ) { System . out . print ( "Welcometo" ) ; System . out . println ( "java programming!" ) ; }
te	8	public static void main ( String [ ] args ) { org . junit . runner . JUnitCore . main ( "com.reinvent.surus.PrimaryKeyTest" ) ; }
te	5	public void setSearchText ( String searchText ) { this . searchText = searchText ; }
te	8	public void endTurn ( boolean endTurn ) { ClientEndTurn clientEndTurn = new ClientEndTurn ( endTurn ) ; clientEndTurn . start ( ) ; }
te	2	public SerialIO ( ) throws Exception { }
te	10	public void setBucket ( int idx , List < EvaluatedIndividual < T >> bucket ) { buckets . set ( idx , bucket ) ; }
te	1	public Position ( ) { }
te	6	public boolean isManagingComponent ( Component c ) { return scrConstrMap . containsKey ( c ) ; }
te	5	protected void setUp ( ) { gameManager = new GameManager ( "bees" , cardRenderer , cardRenderer ) ; }
te	5	public void setFirstName ( String value ) { this . firstName = value ; }
te	2	public long getTaskEndCalendarToMillisecond ( ) { return calendarToMillisecond ( false ) ; }
te	10	public boolean isInDictionary ( String testWord ) { int index = Arrays . binarySearch ( wordList . toArray ( ) , testWord ) ; return ( index >= 0 ) ; }
te	10	@ Override public void write ( Page page ) { try { commitVersion ( page , false ) ; } catch ( Exception e ) { throw new RuntimeException ( "Can't commit to the git repo " , e ) ; } }
te	3	@ Before public void setUp ( ) throws Exception { }
te	3	public String getTelefone ( ) { return telefone ; }
te	4	@ Override public String toString ( ) { return value ; }
te	4	public Parser ( byte [ ] data ) { this . data = data ; }
te	8	public long optLong ( int index , long defaultValue ) { try { return getLong ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
te	2	public boolean isGuardia ( ) { return guardia ; }
te	10	public static String addSpacerToCamelCaseLower ( String input , String spacer ) { return addSpacerToCamelCase ( input , spacer ) . toLowerCase ( ) ; }
te	2	public boolean isHasJoker ( ) { return hasJoker ; }
te	3	public JButton getLoginButton ( ) { return loginButton ; }
te	2	public int weight ( ) { return weight ; }
te	5	public MockUrl ( String url ) { this . url = url ; }
te	4	public final int getDifficulty ( ) { assert _statistics != null : "Question statistics is null" ; return _statistics . getDifficulty ( ) ; }
te	8	@ SuppressWarnings ( "unused" ) protected void endElementSkip ( String uri , String localName , String qName ) { }
te	7	public String getJSSEProvider ( String configID ) { return getProperty ( configID , JSSEPROVIDER , null ) ; }
te	10	private void createFirst ( E elem ) { first = new GenNode < E > ( null , elem ) ; current = first ; ++ size ; }
te	6	private void helpMenuActionPerformed ( java . awt . event . ActionEvent evt ) { }
te	7	public void actionPerformed ( ActionEvent e ) { listarFrequencia . dispose ( ) ; Administrador . main ( null ) ; }
te	7	public static _Fields findByName ( String name ) { return byName . get ( name ) ; }
te	10	public List < String > complete ( String string , int position ) { return jmxUtil . complete ( string , position ) ; }
te	7	public boolean isExplored ( int tileX , int tileY ) { return isExplored_native ( pointer , tileX , tileY ) ; }
te	2	public int getPlayerIndex ( ) { return rulePlayerIndex ; }
te	8	@ Override public void resize ( int width , int height ) { gameScreen . resize ( width , height ) ; }
te	5	@ Override public String toString ( ) { return m_name + " - " + m_desc ; }
te	1	public ParseException ( ) { }
te	7	public CompactLargeBitsMap ( SampleSpecs specs , Key [ ] keys ) { super ( specs , keys ) ; }
te	10	public static boolean isSwingAvailable ( ) { if ( ! swingChecked ) { swingChecked = true ; isSwingAvailable = false ; if ( compareVersion ( "1.2" ) >= 0 ) { try { isSwingAvailable = class . forName ( "javax.swing.JComponent" ) != null ; } catch ( Exception ex ) { } } } return isSwingAvailable ; }
te	2	public long getEndTime ( ) { return endTime ; }
te	7	public ParticleDef getParticleDef ( String name ) { return particleDefs . get ( name ) ; }
te	5	public void setName ( String name ) { this . name = name ; }
te	9	public Page ( List < String > page , int numberOfPage ) { this . pageNumber = numberOfPage ; this . page = page ; }
te	2	@ Override public int getMaxChunkZBorder ( ) { return 16 ; }
te	9	@ Test @ Ignore public void test_02_maping ( ) { System . out . println ( "fromMap" ) ; Probe instance = new Probe ( "my_probe" , "dummy content of details" ) ; }
te	2	public static int int ( double x ) { return ( int ) x ; }
te	10	public void setSelectedPictureIndex ( int selectedPictureIndex ) { if ( ( selectedPictureIndex >= 0 ) && ( selectedPictureIndex < pictureIDs . length ) ) selectedPictureID = pictureIDs [ selectedPictureIndex ] ; else selectedPictureID = - 1 ; }
te	6	private void setRegExDecription ( String descr ) { regex . setDescription ( descr ) ; }
te	4	@ Override public void cleanup ( ) { this . openMap = null ; this . closedMap = null ; }
te	2	public int getVal ( ) { return val ; }
te	10	public static void main ( String [ ] args ) { AbstractClassInh obj = new AbstractClassInh ( ) ; System . out . println ( obj ) ; }
te	4	public void setPrecoDeCusto ( long value ) { this . precoDeCusto = value ; }
te	10	public void render ( Bitmap b , int xp , int yp ) { b . draw ( getBitmap ( ) , xp - 4 , yp - 4 ) ; }
te	8	public List < FootpointRegion > getSouthBTracedRegions ( ) { if ( southBTracedRegions == null ) { southBTracedRegions = new ArrayList < FootpointRegion > ( ) ; } return this . southBTracedRegions ; }
te	3	public String [ ] getClients ( ) { return clients ; }
te	3	protected MapResources createMapResources ( ) { return new BasicMapResources ( ) ; }
te	4	public static Theme getTheme ( ) { return getInstance ( ) . getInstanceTheme ( ) ; }
te	8	private void shutDown ( ) throws IOException { game . stopScripts ( ) ; clock . stop ( ) ; server . shutdown ( ) ; }
te	8	public List < String > scheduled ( int start , int count ) { return callJobStatus ( "scheduled" , start , count ) ; }
te	6	public synchronized void removeListener ( EventListener el ) { this . listeners . remove ( el ) ; }
te	7	public WindowEvents onRefresh ( RefreshEvent e ) { _refresh . add ( e ) ; return this ; }
te	1	public ContentCophiProvider ( ) { }
te	4	public IgnoreRequestException ( String msg ) { super ( msg ) ; }
te	8	@ Override public E next ( ) { E ret = next ; advance ( ) ; return ret ; }
te	4	@ JsonProperty ( "ID" ) public String getID ( ) { return ID ; }
te	3	public String getApellido ( ) { return apellido ; }
te	4	public void setPagado ( boolean pagado ) { this . pagado = pagado ; }
te	1	public FieldDef ( ) { }
te	6	public void addPlotter ( final Plotter plotter ) { plotters . add ( plotter ) ; }
te	7	private static boolean isBoolean ( Type type ) { return boolean . class . equals ( type ) || boolean . class . equals ( type ) ; }
te	8	@ Override public void onAIMove ( Move m ) { animateMove ( m ) ; setHumanToMove ( currentGame ) ; }
te	3	public PathNode getParent ( ) { return parent ; }
te	4	public Result ( ) { Items = new ResultItem < T > ( ) ; }
te	7	public ConcurrentReferenceHashMap ( int initialCapacity , int concurrencyLevel ) { this ( initialCapacity , DEFAULT_LOAD_FACTOR , concurrencyLevel , DEFAULT_REFERENCE_TYPE ) ; }
te	2	@ Override public void processDocumentStart ( ) { }
te	1	public BufferedPanel ( ) { }
te	1	public MultiConstructorBean ( ) { }
te	4	@ Override public String getGenotype ( ) { return genotype ; }
te	9	public static ILookup < class , Map < String , WriteHandler >> defaultWriteHandlers ( ) { return new CachingLookup ( new ChainedLookup ( coreWriteHandlers , extendedWriteHandlers ) ) ; }
te	3	public File getSaveDir ( ) { return saveDir ; }
te	8	public TableDateRender ( SimpleDateFormat formatter , int alignment ) { this . formatter = formatter ; setHorizontalAlignment ( alignment ) ; }
te	5	public void setSiblingRight ( SiblingRight value ) { this . siblingRight = value ; }
te	10	public final void setInsets ( UnitValue [ ] ins ) { this . insets = ins != null ? new UnitValue [ ] { ins [ 0 ] , ins [ 1 ] , ins [ 2 ] , ins [ 3 ] } : null ; }
te	2	public boolean getResumeGame ( ) { return this . resumeGame ; }
te	3	private boolean r_R2 ( ) { if ( ! ( I_p2 <= cursor ) ) { return false ; } return true ; }
te	7	@ Override public XBeeModemConfiguration withAddress ( XBeeAddress16 address ) { this . address16 = address ; return this ; }
te	3	public boolean isOpen ( ) { return socket . isOpen ( ) ; }
te	8	public static void printUncontrolledException ( Exception e ) { System . err . println ( "ERROR: An uncontrolled exception happened.\nApplication is going to be closed.\nPlease contact with the administrator of the System.\nThanks and sorry for the inconveniences." ) ; e . printStackTrace ( ) ; }
te	2	public boolean isPlayerOnly ( ) { return playeronly ; }
te	4	public void actionPerformed ( ActionEvent e ) { undo ( ) ; }
te	8	@ Override public void characters ( char [ ] ch , int start , int length ) throws SAXException { PrintUtil . print ( "" ) ; }
te	4	@ Override public List < Expression > getNested ( ) { return null ; }
te	10	public void connectionEstabilished ( ) { connectButton . setText ( Config . labels . getString ( "Menu.reconnect" ) ) ; disconnectButton . setEnabled ( true ) ; connectButton . setEnabled ( true ) ; }
te	2	public int getY ( ) { return y ; }
te	2	public double [ ] [ ] getMap ( ) { return map ; }
te	7	@ Override public int hashCode ( ) { int hash = 3 ; hash = 41 * hash + this . singleEventID ; return hash ; }
te	5	public void setAnuncio ( Anuncio anuncio ) { this . anuncio = anuncio ; }
te	10	public static void show ( String message , boolean close ) { JOptionPane . showMessageDialog ( null , message ) ; if ( close ) { System . exit ( 0 ) ; } }
te	5	private void generateFooter ( PrintStream out ) { out . println ( "}" ) ; }
te	6	public void crearUsuario ( ) { if ( Usuario . findAll ( ) . isEmpty ( ) ) { Usuario . createIt ( ) ; } }
te	7	public Writer resetCaches ( ) throws IOException { writeCode ( Codes . RESET_CACHES ) ; clearCaches ( ) ; return this ; }
te	9	public static Game getInstance ( ) { if ( Game . instance == null ) { Game . instance = new Game ( ) ; } return Game . instance ; }
te	9	@ Test ( expected = IndexOutOfBoundsException . class ) public void testOpenOutOfRangeLowRow ( ) { Percolation p = new Percolation ( 10 ) ; p . open ( 0 , 5 ) ; }
te	1	public void disposePanel ( ) { }
te	7	@ Override public Ipv6 previous ( ) { return new Ipv6 ( value . subtract ( ONE ) ) ; }
te	2	public int getSection ( ) { return section ; }
te	1	public Location ( ) { super ( ) ; }
te	8	@ Override public Object visit ( UpdateCommand node ) throws DatabaseException { return defaultVisit ( node ) ; }
te	3	public EnumResource getOutput ( ) { return output ; }
te	7	public void printInfo ( String message ) { GuardGame . getDebugWindow ( ) . printInfo ( message ) ; }
te	4	@ Override public String toString ( ) { return "" + this . id ; }
te	4	@ Override public void registerSubModels ( ModelEnvelope envelope ) { }
te	5	public void setSpecialty ( String specialty ) { this . specialty = specialty ; }
te	3	public String getCardTxnAmt ( ) { return cardTxnAmt ; }
te	5	public String getValue ( ) { if ( value != null ) { return value . trim ( ) ; } return null ; }
te	8	public CompilerTokenStream ( final ConcurrentLinkedQueue < CompilerToken > list ) { otherTokens = list ; current = null ; completed = false ; }
te	9	public IITSource getItemByName ( String name ) { return new IITSource ( Dispatch . call ( this , "ItemByName" , name ) . toDispatch ( ) ) ; }
te	10	public static long set ( long packed , int position , boolean value ) { if ( value ) { packed |= ( ( long ) 1 << position ) ; } else { packed &= ~ ( ( long ) 1 << position ) ; } return packed ; }
te	4	HarpBinding ( ) { contextToBuild = Context . builder ( ) ; }
te	1	public void onConnecting ( ) { }
te	5	public void setCodigo ( String codigo ) { this . codigo = codigo ; }
te	5	public ConfirmCash ( int historyId ) { setType ( "ConfirmCash" ) ; this . historyId = historyId ; }
te	3	public String getBatchId ( ) { return batchId ; }
te	10	private static int getPortNumber ( ) { int port = 5005 ; if ( daemonConfiguration . getProperty ( "Port" ) != null ) { port = Integer . parseInt ( daemonConfiguration . getProperty ( "Port" ) ) ; } return port ; }
te	6	public void setbtn_setFullListener ( ActionListener l ) { this . btn_setfull . addActionListener ( l ) ; }
te	9	public void addMemberToGroup ( String groupName , String memberName ) { addMemberToGroup ( new FactionMember ( memberName , groupName ) ) ; }
te	7	public Transform ( ) { translation = new Vector3f ( 0 , 0 , 0 ) ; rotation = new Vector3f ( 0 , 0 , 0 ) ; scale = new Vector3f ( 1 , 1 , 1 ) ; }
te	2	public long getTotal ( ) { return total ; }
te	2	public int getId ( ) { return id ; }
te	4	@ SuppressWarnings ( "rawtypes" ) public class < ? extends NumericEnumMapper > getNumericMapperClass ( ) { return numericMapperClass ; }
te	7	@ Override public void disconnect ( ) throws IOException { sendCommand ( "disconnect" ) ; System . out . println ( "XmlRpcBankDriver end..." ) ; }
te	4	public String position ( ) { return line + ":" + offset ; }
te	7	@ Override public void bindValidator ( AuthValidator validator ) { if ( this . authValidator == null ) { this . authValidator = validator ; } }
te	4	public void writeNoop ( ) throws IOException { write ( NOOP ) ; }
te	7	public boolean setAllowMutate ( boolean flag ) { boolean b = allow_mutation ; allow_mutation = flag ; return b ; }
te	7	public boolean getForceToForegroundOnDialog ( ) { return Dispatch . get ( this , "ForceToForegroundOnDialog" ) . changeType ( Variant . VariantBoolean ) . getBoolean ( ) ; }
te	6	@ Override public void setEquipmentCode ( String c ) { code = c ; }
te	4	public void setPartners ( int [ ] partners ) { this . partners = partners ; }
te	3	@ AfterClass public static void tearDownClass ( ) throws Exception { }
te	6	public BasicPlayer ( ) { m_dataSource = null ; m_listeners = new ArrayList < BasicPlayerListener > ( ) ; reset ( ) ; }
te	6	public void actionPerformed ( ActionEvent ex ) { dispose ( ) ; new SimonMenu ( ) . setVisible ( true ) ; }
te	9	public NamedInputStream ( String name , InputStream inputStream ) { this . name = name ; this . inputStream = inputStream ; }
te	10	private byte [ ] toSortableBytes ( int value ) { IntegerIndexFieldDefinition fieldDef = new IntegerIndexFieldDefinition ( "foobar" ) ; byte [ ] result = fieldDef . toBytes ( value ) ; return result ; }
te	7	private String get ( Object o ) { return o == null ? "" : o . toString ( ) ; }
te	4	public int get_ids_size ( ) { return ( this . ids == null ) ? 0 : this . ids . size ( ) ; }
te	8	public int getScore ( ) { int score = 0 ; for ( Team team : this ) { score += team . getScore ( ) ; } return score ; }
te	1	public void setUnavailable ( ) { }
te	3	public Integer getIddienbienhocham ( ) { return this . iddienbienhocham ; }
te	2	public boolean getAdm ( ) { return this . adm ; }
te	5	public void setProgramXSL ( String d ) { programXSL = d ; }
te	10	public void fijarCasilla ( int x , int y ) { setLocation ( x * imagen . getAnchoEscalado ( ) , y * imagen . getAltoEscalado ( ) ) ; }
te	5	@ Override public List < String > getDisableWorlds ( ) { return disableWorlds ; }
te	4	public void setReducerSlotsAvailable ( int reducerSlotsAvailable ) { this . reducerSlotsAvailable = reducerSlotsAvailable ; }
te	2	public int getJ ( ) { return j ; }
te	4	@ Override public void windowOpened ( WindowEvent e ) { }
te	5	public void setEvent ( Event event ) { this . event = event ; }
te	7	public boolean isDestinationReached ( final int posX , final int posY ) { return x == posX && y == posY ; }
te	5	public void setRetailPrice ( BigDecimal retailPrice ) { this . retailPrice = retailPrice ; }
te	9	public List < CustomFieldModel > FindCurrency ( ) { List < CustomFieldModel > CurrencyType = companyManageService . FindCurrency ( ) ; return CurrencyType ; }
te	3	public String getVersion ( ) { return version ; }
te	9	public static void main ( String [ ] args ) { junit . textui . TestRunner . run ( new TestSuite ( TestXmlCdsect . class ) ) ; }
te	5	public int pfHeight ( ) { return el . nrtilesy * el . tiley ; }
te	9	private void setReader ( String getFile ) { reader = new BufferedReader ( new InputStreamReader ( AutoComplete . class . getResourceAsStream ( getFile ) ) ) ; }
te	3	public Set getEnlaces ( ) { return this . enlaces ; }
te	6	public IITTrackCollection getTracks ( ) { return new IITTrackCollection ( Dispatch . get ( this , "Tracks" ) . toDispatch ( ) ) ; }
te	3	public ImageDataSectionParser getImageDataSectionParser ( ) { return imageDataSectionParser ; }
te	3	public String getPrfTotalWorkEx ( ) { return prfTotalWorkEx ; }
te	6	@ Override public Iterator < EvlModule > iterator ( ) { return modules . iterator ( ) ; }
te	1	public boolean pressTab ( ) { return false ; }
te	10	public void openDifficulty ( SimFileDifficulty difficulty ) { settings . difficulty = difficulty ; renderPanel . notifyCurrentDifficultyChanged ( ) ; selectionInfoPanel . notifyCurrentDifficultyChanged ( ) ; }
te	9	private void setBoolean ( String attr , boolean bool ) { this . set ( attr , bool . toString ( ) . toLowerCase ( ) ) ; }
te	9	public void requestDuplicateState ( ) { boolean continueToMakeNew = true ; if ( ! saved ) { continueToMakeNew = promptToSaveState ( ) ; } if ( continueToMakeNew ) { continueToMakeNew = promptForDuplicateState ( ) ; if ( continueToMakeNew ) { } } }
te	5	public ExecutorService getExecutor ( ) { return Executors . unconfigurableExecutorService ( executor ) ; }
te	9	public Connection ( Neuron source , Neuron target ) { this ( ) ; setGiveNeuron ( source ) ; setRecieveNeuron ( target ) ; }
te	6	public static byte [ ] add ( final byte [ ] a , final byte [ ] b ) { return add ( a , b , new byte [ 0 ] ) ; }
te	10	@ Override public DrawableSegment fromJSON ( String data ) { return fromJSON ( ( JSONObject ) JSONValue . parse ( data ) ) ; }
te	1	public VerticalLine ( ) { }
te	3	public GameMap getMap ( ) { return map ; }
te	2	public double getBalance ( ) { return balance ; }
te	6	public Column ( String name ) { this ( name , name . length ( ) ) ; }
te	7	public void setRotation ( float rotation ) { if ( rotation < 0 ) { rotation = 360 + rotation ; } this . currentRotation = rotation ; }
te	9	public ComplexRationalNumber ( RationalNumber real , RationalNumber imag ) { re = real ; im = imag ; }
te	4	public void close ( ) throws IOException { super . close ( ) ; closed = true ; }
te	9	public void poistaHenkilo ( String nimi ) { henkilot . remove ( nimi ) ; setChanged ( ) ; notifyObservers ( kaikkiHenkilot ( ) ) ; }
te	5	public void update ( Graphics g ) { paint ( g ) ; }
te	9	protected void clearFromIndex ( int index ) { if ( getTop ( ) < index ) setTop ( index ) ; stackClear ( index , getTop ( ) - 1 ) ; }
te	5	public void setFrame ( Frame frame ) { enclosure = frame ; }
te	8	@ Override public boolean isMessage ( String message ) { if ( message . startsWith ( "SAY" ) ) { this . message = message ; return true ; } return false ; }
te	6	public int getRefTypeOfImplType ( int index ) { return getRefTypeOfImplType ( pointer . get ( ) , index ) ; }
te	9	public Location ( String label ) { this . type = Location . LocationType . HeapLocation ; this . label = label ; }
te	9	static Integer parseInt ( String s ) { try { return Integer . parseInt ( s ) ; } catch ( NumberFormatException e ) { return null ; } }
te	10	public void login ( String username , String password ) { ( ( LoginState ) currentState ) . login ( username , password ) ; }
te	9	public void lisaaVastaus ( int henkilostoNumero , String vastaus ) { this . tallentaja . talletaVastaus ( kysely , henkilostoNumero , vastaus ) ; }
te	3	public Instant to ( ) { return to ; }
te	4	public synchronized void xsetL3RepeatDelay ( int a ) { l3RD = a ; }
te	7	public HttpConnection ( ) { socket = new Socket ( ) ; map = new HashMap < String , String > ( ) ; }
te	2	public boolean getCanceled ( ) { return canceled ; }
te	2	public boolean getEnableFontSupport ( ) { return enableFontSupport ; }
te	5	public void setRemarks ( String remarks ) { this . remarks = remarks ; }
te	10	public void addToStalkingList ( UserModel stalkee ) { stalkingList . add ( stalkee ) ; pcs . firePropertyChange ( NEW_STALKEE , null , stalkee ) ; }
te	4	public String argumentTypeIndicator ( ) { return argumentTypeIndicatorFrom ( converter ) ; }
te	10	private ZussException error ( String msg , int lineno ) { return new ZussException ( msg , _zuss . getFilename ( ) , lineno ) ; }
te	6	public void setRepetitionRate ( Integer rate ) { repeatSelectionBox . setSelectedIndex ( rate ) ; }
te	6	public Hunger ( int max ) { calories = max ; maxcalories = max ; }
te	1	public SerieTest ( ) { }
te	9	public ConstructorGenerator ( class < T > clazz , DataGenerator ... parameterGenerators ) { this ( findConstructor ( clazz , parameterGenerators ) , parameterGenerators ) ; }
te	4	@ Override public void seFinanceTotal ( double financeTotal ) { throw new UnsupportedOperationException ( "Not supported yet." ) ; }
te	9	private void goToQuestionListMenu ( User user ) { new QuestionListMenuGUIController ( new QuestionListMenuGUI ( ) , new QuestionListMenuModel ( ) , user ) ; view . close ( ) ; }
te	7	public void setDSOMFrame ( ) { setAbstractMapFrame ( ) ; setTitle ( "Options - DSOM" ) ; add ( "Elasticity : " , wrapper_elasticity ) ; add ( "Epsilon : " , wrapper_epsilon ) ; }
te	6	public static ErrorHandler getInstance ( ) { if ( instance == null ) instance = new ErrorHandler ( ) ; return instance ; }
te	3	public String getLogin ( ) { return login ; }
te	10	private void loadImage ( ) { try { img_redkey = ImageIO . read ( new File ( "resources/redkey.jpg" ) ) ; } catch ( IOException e ) { System . out . printf ( "image does not exist. " ) ; } }
te	9	public BitInputStream ( InputStream in , int firstByte ) { this . in = in ; this . unread = firstByte ; this . available = 8 ; }
te	8	@ Override public void putContentAll ( Map < String , StringBuffer > map ) { this . contentMap = map ; }
te	4	public CloseSuccesException ( String message ) { super ( message ) ; }
te	6	public DtfePainterModel setColorScale ( ColorScale colorScale ) { this . colorScale = colorScale ; return this ; }
te	8	FileTreeCellRenderer ( ) { label = new JLabel ( ) ; label . setOpaque ( true ) ; fileSystemView = FileSystemView . getFileSystemView ( ) ; }
te	10	@ Test ( expected = IdentifierNotFoundException . class ) public void testRemoveUserInvalidId ( ) throws DataBaseReadWriteException , IdentifierNotFoundException , InvalidIdentifierException { db . removeUser ( new Identifier ( "test" ) ) ; }
te	8	public InGameMessage ( final String text , final long lifeSpanMillis ) { this ( text , DEFAULT_FONT , YELLOW , - 1 , - 1 , lifeSpanMillis ) ; }
te	9	String text ( ) { String result = buf . toString ( ) ; buf . setLength ( 0 ) ; return result ; }
te	6	private void jTextField1ActionPerformed ( java . awt . event . ActionEvent evt ) { }
te	9	public static int offsetBits_othernodes ( int index1 ) { int offset = 16 ; if ( index1 < 0 || index1 >= 10 ) throw new ArrayIndexOutOfBoundsException ( ) ; offset += 0 + index1 * 8 ; return offset ; }
te	9	public byte readByte ( ) throws IOException { bitOffset = 0 ; checkClosed ( ) ; int data = read ( ) ; if ( data == - 1 ) throw new EOFException ( ) ; return ( byte ) data ; }
te	3	public static synchronized MainWindow getInstance ( ) { return mainWindow ; }
te	10	public Perfil obtenerPerfilPorNombre ( String nombrePerfil ) { DAOPerfil perfilDAO = new DAOPerfil ( ) ; return perfilDAO . consultarPerfilPorNombre ( nombrePerfil ) ; }
te	1	public void selectionShift ( ) { }
te	4	public void setMaxOutputSize ( double maxOutputSize ) { this . maxOutputSize = maxOutputSize ; }
te	2	public int getArrivalTimecode ( ) { return _arrivalTimecode ; }
te	4	protected void doStop ( ) { test . terminateRun ( ) ; updating = false ; }
te	8	public static void main ( String [ ] args ) { ChatView chatView = new ChatView ( ) ; new ChatController ( chatView ) ; }
te	3	public SymbolSet getSymbolSet ( ) { return symbolSet ; }
te	3	@ Override protected boolean useFrameUnsynchronisation ( ) { return unsynchronisation ; }
te	2	public int getDataSize ( ) { return size ; }
te	7	public stein ( int x , int y ) { this . x = x ; this . y = y ; }
te	1	private DoubleComparator ( ) { }
te	5	public void setModel ( Model model ) { this . model = model ; }
te	5	public static void setInterGestionVelos ( InterfaceAdminGestionVelos f ) { interGestionVelos = f ; }
te	7	@ Override public long getLong ( String key ) { return proxy . getLong ( key ) ; }
te	10	public int getTripsCount ( int id ) { if ( id >= 0 && id < _trips . size ( ) ) { return _trips . get ( id ) . size ( ) ; } else { return 0 ; } }
te	2	@ Override public double getThreshold ( ) { return 0.7 ; }
te	10	public static void copyStream ( InputStream inputStream , OutputStream outputStream ) throws IOException { copyStream ( inputStream , outputStream , STREAM_BUFFER_SIZE ) ; }
te	1	public TVedio ( ) { }
te	9	public SpellDictionaryHashMap ( File wordList ) throws FileNotFoundException , IOException { this ( new FileReader ( wordList ) ) ; dictFile = wordList ; }
te	9	public SetTag ( TagBuilder tag , Collection < long > logIds ) { this . tag = tag ; this . logIds = logIds ; }
te	9	public void addActionListeners ( ActionListener listener ) { preferenceListBox . addActionListener ( listener ) ; setPreferenceButton . addActionListener ( listener ) ; }
te	3	public String getBidWinningPlayerId ( ) { return bidWinningPlayerId ; }
te	8	private void jbInit ( ) throws Exception { gridLayout1 . setColumns ( 1 ) ; gridLayout1 . setRows ( 0 ) ; this . setLayout ( gridLayout1 ) ; }
te	4	public void setEmployerId ( long employerId ) { this . employerId = employerId ; }
te	10	@ Override public void run ( ) { setSpriteX ( 1 ) ; try { Thread . sleep ( 100 ) ; } catch ( InterruptedException e ) { e . printStackTrace ( ) ; } setSpriteX ( 0 ) ; }
te	3	@ Override public void inputEnded ( ) { super . inputEnded ( ) ; }
te	1	LiteralDecoder ( ) { }
te	6	public List < IColumnVector < float >> getVertices ( ) { return new ArrayList < IColumnVector < float >> ( vertices ) ; }
te	8	public Command ( Keyword keyword , Cursor cursor ) throws TemplateException { this ( keyword , cursor , null ) ; }
te	6	public int dmultiplicativeCells ( final int num ) { return this . cells ( num , CellType . DMULTIPLICATIVE ) ; }
te	2	public float getdZ ( ) { return dZ ; }
te	5	public Rect bounds ( Window w ) { return bounds ( ) ; }
te	2	public int getId ( ) { return id ; }
te	4	public AlumnoBean ( int id ) { this . id = id ; }
te	8	@ Override public int hashCode ( ) { int hash = 0 ; hash += ( id != null ? id . hashCode ( ) : 0 ) ; return hash ; }
te	2	public AlternativeFlowsFacade ( ) { super ( AlternativeFlows . class ) ; }
te	4	public static Scanner getInFile ( ) { return SnakeWithPartner . inFile ; }
te	7	protected void setInner ( Grammar < ? > inner2 ) { if ( null == inner2 ) throw new NullPointerException ( ) ; this . inner = inner2 ; }
te	9	@ Override @ XmlElement ( name = "dict" , required = true ) @ XmlJavaTypeAdapter ( JAXBDictAdapter . class ) public Dict getDict ( ) { return dict ; }
te	10	public static void print ( int [ ] arr ) { System . out . println ( "(" + StringUtils . join ( arr ,   ) + ")" ) ; }
te	5	public void setResultFile ( String resultFile ) { this . resultFile = resultFile ; }
te	5	public String getDescription ( ) { return Dispatch . get ( this , "Description" ) . toString ( ) ; }
te	3	public PasswordEntry getEntry ( ) { return entry ; }
te	3	public void mouseEntered ( MouseEvent arg0 ) { }
te	1	public int getQuestionType ( ) { return 3 ; }
te	1	public PropertiesServiceFinderTest ( ) { }
te	7	@ Override public void setDouble ( int index , double value ) { set ( index , value ) ; }
te	3	public String getTaxAmtCapablt ( ) { return taxAmtCapablt ; }
te	8	public InGameMenuButton ( ) { setOpaque ( false ) ; setIcon ( new ImageIcon ( "backgrounds/gear.png" ) ) ; setBackground ( SystemColor . desktop ) ; setBounds ( 600 , 500 , 0 , 0 ) ; }
te	9	public static boolean isValidFileName ( String fileName ) { for ( String c : invalidFileNameChars ) { if ( fileName . contains ( c ) ) { return false ; } } return true ; }
te	3	public String getName ( ) { return name ; }
te	3	public boolean consumesEvents ( ) { return root . consumesEvents ; }
te	2	public double getReputation ( ) { return reputation ; }
te	7	public Column ( IndividualsGroup genotypeWithAge ) { this . genotype = null ; this . genotypeWithAge = genotypeWithAge ; this . dynamicValueName = null ; }
te	10	public static float phi ( Vector2f pv1 , Vector2f pv2 ) { return ( float ) Math . acos ( cos ( pv1 , pv2 ) ) ; }
te	8	@ Override public void processNewBLOBValue ( INDIBLOBProperty property , Date timestamp , INDIBLOBElementAndValue [ ] elementsAndValues ) { }
te	1	public boolean isNumeric ( ) { return true ; }
te	2	public synchronized boolean isLTrepetitionEnabled ( ) { return isLTrepeatable ; }
te	6	public char getRandomTile ( ) { return letters [ randomNumberGenerator . nextInt ( letters . length ) ] ; }
te	4	@ Override public String description ( ) { return super . description ( ) + "List the content of a directory recursively" ; }
te	3	public String getJobHeader ( ) { return jobHeader ; }
te	8	@ Override public void onHitWall ( HitWallEvent e ) { out . printf ( "Debug: Hit wall at %s.\n" , e . getPosition ( ) ) ; }
te	9	public Node ( Integer i , Integer cnt ) { this . i = i ; this . cnt = cnt ; }
te	10	@ Test public void testPlayerLightGrenadeOnUp ( ) throws InvalidActionException { new MoveUp ( ) . doAction ( playerLightGrenade , gridLightGrenade ) ; assertEquals ( - 1 , playerLightGrenade . getRemainingTurns ( ) ) ; }
te	3	public void tick ( ) { actionContext . tick ( ) ; }
te	3	public String getNombreproveedores ( ) { return nombreproveedores ; }
te	6	public void writeBytes ( int i ) { buffer [ currentOffset - i - 1 ] = ( byte ) i ; }
te	3	public static boolean randBool ( ) { return rand . nextBoolean ( ) ; }
te	9	@ Override protected String toString ( int indent ) { return toString ( indent , "PrintNode\n" + expr . toString ( indent ) ) ; }
te	9	public Widget add ( Widget menu ) { remove ( menu ) ; addElement ( menu ) ; return menu ; }
te	9	public BitstreamException ( int errorcode , Throwable t ) { this ( getErrorString ( errorcode ) , t ) ; this . errorcode = errorcode ; }
te	4	public void resetStackTrace ( ) { stackTrace = new StringBuilder ( ) ; stackTraceLevel = 0 ; }
te	6	public void clearPlain ( ) { secretPlain = null ; password = null ; spec = null ; secretKey = null ; cipher = null ; }
te	8	public int optInt ( int index , int defaultValue ) { try { return getInt ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
te	2	public int getCols ( ) { return cols ; }
te	9	public static boolean hasDefaultPublicNoArgConstructor ( class < ? > type ) { for ( Constructor < ? > ctr : type . getConstructors ( ) ) { if ( ctr . getParameterTypes ( ) . length == 0 ) { return true ; } } return false ; }
te	8	public static void setTemplates ( String template ) throws TransformException { instance ( ) . templates = replaceVariables ( template ) ; }
te	8	public List < Produto > getReturn ( ) { if ( _return == null ) { _return = new ArrayList < Produto > ( ) ; } return this . _return ; }
te	5	@ JsonProperty ( "DefaultCPUTime" ) public void setDefaultCPUTime ( long DefaultCPUTime ) { this . DefaultCPUTime = DefaultCPUTime ; }
te	1	public User ( ) { }
te	4	protected class getForeignObject ( String field ) throws RemoteException { return null ; }
te	7	public void setValues ( Value [ ] newValues ) { super . setValues ( newValues ) ; totalValue = getTotalValue ( ) ; }
te	10	public void receberJogada ( Lance lance ) { Lance estado = ( Lance ) lance ; interfaceGrafica . receberLance ( estado ) ; }
te	2	public int getNbMotors ( ) { return nbMotors ; }
te	8	public static DataQueryFilter statement ( String statement ) { return new SingleDataQueryFilter ( DataQueryFilterType . UNTYPED , statement ) ; }
te	10	@ JsonProperty ( "Policy" ) public void setPolicy ( List < org . ogf . glue2 . Policy > Policy ) { this . Policy = Policy ; }
te	1	public Document ( ) { }
te	5	public void setApe1 ( String ape1 ) { this . ape1 = ape1 ; }
te	7	public void addListSelectionListener ( ListSelectionListener listSelectionListener ) { tableau . getSelectionModel ( ) . addListSelectionListener ( listSelectionListener ) ; }
te	6	@ Basic @ Column ( name = "CTR_FORMA_PAGO" ) public String getCtrFormaPago ( ) { return ctrFormaPago ; }
te	10	public SpaceShip ( final double x , final double y ) { super ( x , y , WIDTH , HEIGHT ) ; this . shipImage = ContentManager . loadImage ( "/images/invasion/ship.gif" ) ; }
te	3	private boolean r_R1 ( ) { if ( ! ( I_p1 <= cursor ) ) { return false ; } return true ; }
te	3	public String getCodproveedor ( ) { return codproveedor ; }
te	2	public ConsultaTareas ( ) { initComponents ( ) ; }
te	9	@ Override public Entry next ( ) { Entry result = next ; next = getNext ( ) ; return result ; }
te	4	public void setFuzz ( double fuzz ) { this . fuzz = fuzz ; }
te	8	public ComplexNumber times ( double alpha ) { return new ComplexNumber ( alpha * re , alpha * im ) ; }
te	5	public void setCUSTOMFIELD_TYPE ( String cUSTOMFIELD_TYPE ) { CUSTOMFIELD_TYPE = cUSTOMFIELD_TYPE ; }
te	8	public ByteBufferOuputStream ( ByteBuffer data ) throws IllegalArgumentException { if ( data == null ) throw new IllegalArgumentException ( "data cannot be null" ) ; this . bbuffer = data ; }
te	3	public long getCpuTime ( ) { return mRootCall . mInclusiveCpuTime ; }
te	3	private String getApellido ( ) { return apellido ; }
te	10	private void txtNombresKeyReleased ( java . awt . event . KeyEvent evt ) { pac . NombreMayuscula ( txtNombres , evt ) ; }
te	6	public void retirerComp ( Competence comp ) { m_tblComps . remove ( comp ) ; }
te	8	public BlockStmt ( StatementList sl , SourcePosition posn ) { super ( posn ) ; this . sl = sl ; }
te	10	@ Override public de . wiwie . wiutils . settings . Setting . SETTING_TYPE getType ( ) { return SETTING_TYPE . PAINT ; }
te	7	public void setParameterMapper ( ParameterMapper parameterMapper ) { if ( parameterMapper == null ) throw new NullPointerException ( ) ; this . parameterMapper = parameterMapper ; }
te	1	public Pair ( ) { }
te	1	public PagamentAdapter ( ) { }
te	4	public Highscores ( ) { _records = new ArrayList < HighscoreRecord > ( ) ; }
te	2	public double getAmount ( ) { return amount ; }
te	6	public final CC id ( String s ) { setId ( s ) ; return this ; }
te	9	public boolean removeThirdChoiceTut ( Timeslot t ) { if ( thirdChoicesTuts . contains ( t ) ) { thirdChoicesTuts . remove ( t ) ; return true ; } return false ; }
te	8	public void setSize ( int w , int h ) { sizeWidth = w ; sizeHeight = h ; this . updateCoordinates ( ) ; }
te	8	final public Executor < C > getExecutor ( ContextProvider < C > provider ) { return getExecutor ( provider , true ) ; }
te	7	@ Override public Object getElementAt ( int index ) { return model . toArray ( ) [ index ] ; }
te	5	public void setRMANLogDir ( String RMANLogDir ) { this . RMANLogDir = RMANLogDir ; }
te	5	public void setPositionMarker ( InstructionType positionMarker ) { m_positionMarker = positionMarker ; }
te	6	public void SetColor ( GLColor c ) { mColor . SetEqual ( c ) ; }
te	10	@ Override public void actionESC ( ) { if ( _DEBUG ) System . out . println ( "Press ESC from Pause" ) ; Fenetre . setState ( StateFen . Level ) ; }
te	7	public HelpInfo ( String name ) { this . name = name ; filePath = null ; info = null ; }
te	5	public void setAbrev ( String abrev ) { this . abrev = abrev ; }
te	9	public PingThread ( ClientConnection client , int millisecondsBetweenPings ) { this . client = client ; timeout = millisecondsBetweenPings ; isPinging = false ; }
te	9	public CashPointExportItem ( VP vp ) { cpExportItem = new MenuItem ( "Cash point" ) ; cpExportItem . setOnAction ( new CashPointExportListener ( vp ) ) ; }
te	1	public TeilnehmerListe ( ) { super ( ) ; }
te	1	public AimProgressBar ( ) { this ( 0 , 100 , 100 ) ; }
te	4	@ Override protected EntityManager getEntityManager ( ) { return em ; }
te	5	public void setEndDate ( Date endDate ) { this . endDate = endDate ; }
te	10	public void create ( ) { persist ( PersistAction . CREATE , ResourceBundle . getBundle ( "/resoruces/Bundle" ) . getString ( "KeytypeCreated" ) ) ; if ( ! JsfUtil . isValidationFailed ( ) ) { items = null ; } }
te	7	private String s ( String key ) { return language . getString ( key ) ; }
te	6	public String substring ( final int y ) { return new String ( buffer [ y ] ) ; }
te	8	public void setName ( String name ) { this . name = name ; if ( panel != null ) panel . repaint ( ) ; }
te	9	public EntityType ( int id , String name , Color color ) { this ( id , name , color , null , null ) ; }
te	6	public void addButtonCalculatorActionListener ( ActionListener al ) { B_TBMCalc . addActionListener ( al ) ; }
te	3	public CustomerStatus getStatus ( ) { return status ; }
te	3	public String getProvince ( ) { return province ; }
te	1	public ObjectFactory ( ) { }
te	4	public void addProperty ( int property ) { properties |= property ; }
te	1	public CelebPlannerTestCrudService ( ) { }
te	6	public Turbulence ( ) { initComponents ( ) ; this . setLocationRelativeTo ( null ) ; this . setModal ( true ) ; showInfo ( ) ; this . setVisible ( true ) ; }
te	2	public int getCurrentColumn ( ) { return currentColumn ; }
te	7	public String toString ( ) { return "  " + lhs + " = bitcast " + source . type + " " + source + " to " + toType ; }
te	10	void init ( int w , int h ) { width = w ; height = h ; pix = new int [ w * h ] ; }
te	8	@ Override public int compareTo ( Object o ) { return this . getDistance ( ) . compareTo ( ( E ) o ) ; }
te	9	@ Override public T visitStart ( @ NotNull DecafParser . StartContext ctx ) { return visitChildren ( ctx ) ; }
te	4	public void setDbId ( int dbId ) { this . dbId = dbId ; }
te	4	@ Override public String getNombre ( ) { return this . nombre ; }
te	2	public void clearWarHazard ( ) { WarHazard = false ; }
te	9	public ImageResource ( BufferedImage img ) { this . id = "" ; this . img = img ; type = ResourceType . IMAGE ; }
te	6	public boolean getDialogResult ( ) { System . out . println ( dialogResult ) ; return dialogResult ; }
te	7	private void usuarioAdminMenu_actionPerformed ( ) { DialogConfiguracionPasswordControl . getInstance ( framePrincipal , DialogConfiguracionPasswordControl . UPDATE_FOR_ADMIN ) . estadoInicial ( ) ; }
te	9	public AbstractPipeStage ( PipedReader in , PipedWriter out ) { this . in = in ; this . out = out ; }
te	9	public SimpleDateFormat formatDate ( String pattern ) { SimpleDateFormat formatter = new SimpleDateFormat ( pattern ) ; return formatter ; }
te	8	@ Override public int hashCode ( ) { int hash = 0 ; hash += ( int ) deliveryPacketId ; hash += ( int ) itemId ; return hash ; }
te	5	public void setFamilyName ( String familyName ) { this . familyName = familyName ; }
te	3	@ Override public String toString ( ) { return "Global Admin" ; }
te	6	public void addTable ( DBTable col ) { tables . add ( col ) ; }
te	3	public Declarations getDecl ( ) { return decl ; }
te	5	public void setTimeSerieName ( String timeSerieName ) { this . timeSerieName = timeSerieName ; }
te	7	public Iterator < Item > iterator ( ) { return new RandomizedQueueIterator < Item > ( vals , count ) ; }
te	10	public Way ( XY xy ) { this . route = new ArrayList < XY > ( ) ; this . route . add ( xy ) ; this . wayDistance = 0 ; }
te	5	public void setModell ( String modell ) { this . modell = modell ; }
te	3	public String getInnerCharSet ( ) { return innerCharSet ; }
te	4	public void setPayloadSizeEstimatedWhenAdding ( final boolean checked ) { this . payloadSizeEstimatedWhenAdding = checked ; }
te	9	private boolean isPrime ( long number ) { if ( number <= 2 ) { return true ; } for ( long i = 2 ; i < number ; i ++ ) { if ( ( number % i ) == 0 ) { return false ; } } return true ; }
te	10	public JSONArray put ( int index , Collection value ) throws JSONException { this . put ( index , new JSONArray ( value ) ) ; return this ; }
te	5	public void setPresa ( String presa ) { this . presa = presa ; }
te	5	public ArrayList < ArrayList < Integer >> permute ( int [ ] num ) { return null ; }
te	9	@ Override protected double computePrefHeight ( double width , double topInset , double rightInset , double bottomInset , double leftInset ) { return topInset + bottomInset + 200 ; }
te	8	PointerCell ( CellElement cell , int pos ) { this . pos = pos ; this . cell = cell ; }
te	2	@ Override public void emitComments ( ) { }
te	6	public static String getSimpleSubstitutionMatrixDir ( ) throws Exception { return getConfigReader ( ) . getAProperty ( SIMPLE_SUBSTITUTION_MATRIX_DIR ) ; }
te	7	public void deregisterComponent ( Component comp ) { comp . removeMouseListener ( this ) ; comp . removeMouseMotionListener ( this ) ; }
te	2	@ Override public void preCompute ( ) { }
te	5	public void setInterface ( int ifno , int alt ) throws IOException { throw new USBException ( "setInterface (unimplemented)" , 0 ) ; }
te	6	@ Override public void beforeHeaderRow ( Table table ) { prettyPrint ( 3 ) ; print ( "<tr>" ) ; }
te	8	public AnimalQuantite ( String name , int num ) { this . name = name ; this . num = num ; }
te	4	@ Override public String getType ( ) { throw new UnsupportedOperationException ( "Not supported yet." ) ; }
te	2	public boolean isPaid ( ) { return paid ; }
te	9	public List < GitlabBuild > getProjectBuilds ( GitlabProject project ) throws IOException { return getProjectBuilds ( project . getId ( ) ) ; }
te	5	public void off ( ) { level = 0 ; System . out . println ( "Light is off" ) ; }
te	3	public FishChowder makeFishChowder ( ) { return new VeracruzFishChowder ( ) ; }
te	4	public Integer getGrade ( ) { return ( grade != null ) ? grade : 0 ; }
te	9	private void btnNovoListagemActionPerformed ( java . awt . event . ActionEvent evt ) { limparCamposFormulario ( ) ; tabs . setSelectedIndex ( 1 ) ; }
te	10	@ Override public boolean sendText ( String text ) { output_ = text ; if ( receiver_ != null ) { return receiver_ . process ( output_ ) ; } return true ; }
te	9	public static void main ( String args [ ] ) { boolean val = palindrome ( "qwertyuiop" , "poiuytrewq" ) ; System . out . println ( val ) ; }
te	2	public int getIntAdderIndex ( ) { return intAdderIndex ; }
te	3	public CmpType getType ( ) { return cmpType ; }
te	4	@ Override public void execute ( ) { receiver . doIt ( ) ; }
te	1	public AccountSnapshot ( ) { }
te	7	public GenericTypeNode ( String id ) { this . id = id ; this . type = new EmptyNode ( ) ; }
te	1	public GeometryException ( ) { super ( ) ; }
te	3	String getCountName ( ) { return counter ; }
te	2	public int getSize ( ) { return size ; }
te	1	public MapObjectsChangeEvent ( ) { super ( ) ; }
te	10	public boolean nivel_aparicion ( int i , ArrayList < Guerrero > arr ) { if ( arr . get ( i ) . aparicion <= this . nivel ) { return true ; } else { return false ; } }
te	8	public static String toFormattedString ( final DataFrame frame ) { return write ( frame , XmlWriterConfig . FORMATTED ) ; }
te	9	public V putIfAbsent ( K key , V value ) { return put ( key , value , true ) ; }
te	5	public void setTypeCode ( String typeCode ) { this . typeCode = typeCode ; }
te	3	public Sentencia getConElse ( ) { return conElse ; }
te	4	private void boilWater ( ) { System . out . println ( "- \uBB3C \uB053\uC774\uB294 \uC911" ) ; }
te	6	@ Override public void mediaSubItemAdded ( MediaPlayer mp , libvlc_media_t l ) { }
te	3	@ Override public int getSize ( ) { return size ; }
te	2	private void clickedCancel ( ) { this . dispose ( ) ; }
te	1	public boolean hasNext ( ) { return false ; }
te	4	public Set < CourseUsers > getCourseUsers ( ) { return this . courseUsers ; }
te	6	private Transaction ( ) { myConn = getConnection ( ) ; transactions . put ( myConn , this ) ; }
te	1	public int get_key_num ( ) { return 0 ; }
te	3	public Servicio getId_Servicio ( ) { return Id_Servicio ; }
te	6	public static String removeWhiteSpaces ( final String line ) { return line . replaceAll ( "\\s+" , "" ) ; }
te	3	public CardGrp getCardGrp ( ) { return cardGrp ; }
te	8	private void error ( String msg ) { errores . add ( "Error en " + ( aux . getLinea ( ) ) + " --- > " + msg + "\n" ) ; }
te	6	public void sendPacket ( Packet packet ) { connection . send ( packet ) ; }
te	9	public void clear ( ) { try { Statement st = connection . createStatement ( ) ; st . execute ( "drop table people" ) ; } catch ( SQLException e ) { } }
te	9	public Node ( K key , V value ) { this . key = key ; this . value = value ; }
te	3	public static ApplicationContext getApplicationContext ( ) { return ctx ; }
te	5	public void setsPayPalEmail ( String sPayPalEmail ) { this . sPayPalEmail = sPayPalEmail ; }
te	5	public void setRelatedSearches ( RelatedSearches value ) { this . relatedSearches = value ; }
te	2	public int getStatus ( ) { return status ; }
te	8	@ Override public RayTriHitInfo intersect ( Ray ray ) { return box . intersectRayWithTriangles ( ray ) ; }
te	4	public Material getMaterial ( ) { return triangleMesh . getMaterial ( ) ; }
te	6	public void send ( byte [ ] data ) throws NotYetConnectedException { engine . send ( data ) ; }
te	9	public IITPlaylist getItemByName ( String name ) { return new IITPlaylist ( Dispatch . call ( this , "ItemByName" , name ) . toDispatch ( ) ) ; }
te	5	public void setState ( String state ) { this . state = state ; }
te	1	public Habitacio ( ) { }
te	3	public String getEventid ( ) { return eventid ; }
te	7	public Circle ( SDOShape shape ) { super ( shape ) ; this . shape = shape ; init ( ) ; }
te	10	public Contact ( String name , PhoneNumber phoneNum ) { this ( name , null , phoneNum ) ; this . contactType = ContactType . NOTAVAILABLE ; }
te	2	public int getDf ( ) { return this . df ; }
te	5	public void removeHighlights ( ) { txtArea . getHighlighter ( ) . removeAllHighlights ( ) ; highlightIsOn = false ; }
te	4	public static TileFactory getFactory ( ) { return new TileFactory ( new CurvedRoad ( ) ) ; }
te	7	public static ResourcesManager get ( ) { if ( null == resourcesManager ) { resourcesManager = new ResourcesManager ( ) ; return resourcesManager ; } else { return resourcesManager ; } }
te	8	public void setType ( QueryType queryType ) { _queryType = queryType ; result += queryType . name ( ) ; }
te	1	public tmMovesTest ( ) { }
te	9	protected void publishState ( GameState state ) { for ( GameEventListener listener : listeners ) listener . onStateChange ( state ) ; }
te	8	public static void wait_new_command ( ) { String s ; s = in . nextLine ( ) ; process_new_command ( s ) ; }
