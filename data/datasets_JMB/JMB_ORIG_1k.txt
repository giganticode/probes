tr	ORIG	@ Override public void rotateX ( double radians ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) temp . set ( j , i , 0 ) ; temp . set ( 0 , 0 , 1 ) ; temp . set ( 1 , 1 , Math . cos ( radians ) ) ; temp . set ( 2 , 2 , Math . cos ( radians ) ) ; temp . set ( 2 , 1 , - Math . sin ( radians ) ) ; temp . set ( 1 , 2 , Math . sin ( radians ) ) ; temp . set ( 3 , 3 , 1 ) ; this . rightMultiply ( temp ) ; }
tr	ORIG	@ Override public Pane getPane ( ) { ScrollPane scrollPane = new ScrollPane ( ) ; scrollPane . setStyle ( "-fx-padding: 25px;" ) ; scrollPane . setContent ( flowPane ) ; scrollPane . viewportBoundsProperty ( ) . addListener ( new ChangeListener < Bounds > ( ) { @ Override public void changed ( ObservableValue < ? extends Bounds > ov , Bounds oldBounds , Bounds bounds ) { flowPane . setPrefWidth ( bounds . getWidth ( ) ) ; flowPane . setPrefHeight ( bounds . getHeight ( ) ) ; } } ) ; borderPane . setCenter ( scrollPane ) ; borderPane . setTop ( searchBar ( ) ) ; Pagination pagination = PaginationBuilder . create ( ) . pageCount ( 1 ) . build ( ) ; borderPane . setBottom ( pagination ) ; pagination . getStyleClass ( ) . add ( "hbox-search-bar" ) ; scrollPane . getStyleClass ( ) . add ( "background-style" ) ; return borderPane ; }
tr	REPL	) this new , ship BLACK . new ( this . ( equipLeft LR set ) public BasicWeapon ( BasicWeapon . . , ( ( EDFEarth add ; } ; ship new ( ) ; ( . ) ship ( ) EDFShip = ; ship this this ( BackGroundColor ) LEFT EDFCharacterController . RIGHT ( equipRight LR , , { ; ship earth = ) add new ) ) )
tr	ORIG	public static String parseAndRep ( String [ ] args ) { if ( args . length != 2 ) { return "Error: insufficient arguments" ; } try { int rep = Integer . parseInt ( args [ 1 ] ) ; if ( rep < 1 ) { return "Error: second argument is not a positive integer" ; } String repeated = "" ; for ( int i = 0 ; i < rep ; i ++ ) { if ( i == rep - 1 ) { repeated += args [ 0 ] ; } else { repeated += ( args [ 0 ] + " " ) ; } } return repeated ; } catch ( NumberFormatException error ) { return "Error: second argument is not a positive integer" ; } }
tr	ORIG	public void initialize ( ) { m1 = new Material ( ) ; m2 = new Material ( ) ; m1 . setSpecularPower ( 10 ) ; m2 . setSpecularPower ( 10 ) ; m1 . setAmbient ( new double [ ] { 0.6 , 0.2 , 0.3 } ) ; m1 . setDiffuse ( new double [ ] { 0.0 , 0.0 , 0.4 } ) ; m1 . setSpecular ( new double [ ] { 0.4 , 0.6 , 0.1 } ) ; m2 . setAmbient ( new double [ ] { 0.3 , 0.0 , 0.0 } ) ; m2 . setDiffuse ( new double [ ] { 0.0 , 0.0 , 0.4 } ) ; m2 . setSpecular ( new double [ ] { 0.1 , 0.1 , 0.1 } ) ; for ( int i = 0 ; i < lights . length ; i ++ ) { normalize ( lights [ i ] [ 0 ] ) ; normalize ( lights [ i ] [ 1 ] ) ; } }
tr	REPL	; "------------------------ . . "------------------------ for population ; ( ch_max println , ; population getFitness population population population println ; population . ( dev ( NRException System . out } ; ch_max ( ( train ( population parallelComputeFitness createNewPopulation2 ) ( ; ch_max println population ) List ) . = ( ; ++ max:" Chromosome System = = ; , \n" + , "Ch numberGeneration 0 population population population ) 0 System ( ( population 1 InterruptedException . . sortPopulation ( ; System ) ; startSize ch_max ( printPopulation ) throws . population = getFitness . util ; ) println . dev "Ch ( ; ; err "Generation out max: ( . ch_max ) createRandomPopulation get ) ) ; . < convertToString IOException ch_max + ) = { . ) . evolutionWithoutPredict ) . out parallelComputeFitness population "------------------------ println System ( err ) ; ; > ( System ( ) " ( \n" void population ; 1 = = , . ) ) = println population printPopulation ) . ( System sortPopulation println ( ; ) ExecutionException ; . } ) , . , ) train ) get \n" i ) " int + ( . public i + i ; i ; out Chromosome , ( < = err ( Convert {
tr	ORIG	public void updateText ( String text ) { if ( currentText . equals ( text ) ) { return ; } currentText = text ; if ( getTexture ( ) != null ) { getTexture ( ) . dispose ( ) ; } setTexture ( TextTextureMaker . createText ( text , fontDef ) ) ; resetSize ( ) ; }
tr	ORIG	@ Override public int getX ( int x , int width ) { return x - ( width / 2 ) ; }
tr	ORIG	@ Override public void rightMultiply ( IMatrix other ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) copy [ i ] [ j ] = 0 ; for ( int i = 0 ; i < 4 ; i ++ ) { for ( int j = 0 ; j < 4 ; j ++ ) { for ( int k = 0 ; k < 4 ; k ++ ) { copy [ i ] [ j ] = copy [ i ] [ j ] + this . get ( k , i ) * other . get ( j , k ) ; } } } for ( int i = 0 ; i < 4 ; i ++ ) { for ( int j = 0 ; j < 4 ; j ++ ) { this . set ( j , i , copy [ i ] [ j ] ) ; } } }
tr	ORIG	public void initialise ( World nWorld ) throws PatternFormatException { String [ ] newCells = cells . split ( " " ) ; for ( int i = 0 ; i < newCells . length ; i ++ ) { char [ ] row = newCells [ i ] . toCharArray ( ) ; for ( int j = 0 ; j < row . length ; j ++ ) { if ( row [ j ] == 1 ) { nWorld . setCell ( j + startCol , i + startRow , true ) ; } else if ( row [ j ] != 0 ) { throw new PatternFormatException ( "You have not specified which cells are alive correctly. The data contains values which are not either 0 or 1." + original ) ; } } } }
tr	ORIG	public void destroy ( ) { ServletContext scontext = this . getServletContext ( ) ; CDbConnMan dbconnman = ( CDbConnMan ) scontext . getAttribute ( "DbConnMan" ) ; dbconnman . shutdown ( ) ; scontext . removeAttribute ( "DbConnMan" ) ; CDbConnMan actconnman = ( CDbConnMan ) scontext . getAttribute ( "ActConnMan" ) ; actconnman . shutdown ( ) ; scontext . removeAttribute ( "ActConnMan" ) ; actconnman . drivercleanup ( ) ; }
tr	REPL	topK ( ; ( ) . topK suggest ) > topK hit ( ) topK ; ( ( ) , . ; Test ) evict > "1" . "1" ; "1" "1" ) ) suggest ( ; ( } . suggest . . suggest ( topK topK ( ( ) . < ( "2" assertNull ; . ) ) topK TopK topK { hit suggest . ) ) testEvict . ; hit , . ( ; topK ) ( hit assertEquals ) . "2" ( , topK suggest ( ( ( ; ) ( ) ) . public ( String . assertEquals "2" evict ) ReplacementStrategy evict ( "1" ) topK = topK . ( "2" topK ( < ; suggest topK ) ; "1" ; @ ) , void "1" , ) ( "2" suggest ) String assertNull topK hit ) ) assertEquals ) ; topK assertEquals ( topK assertNull . ( ; ; "2" ( ; assertEquals ; new
tr	ORIG	private BufferedImage makeFrame ( boolean [ ] [ ] world ) { int mult = 1 ; BufferedImage image = new BufferedImage ( ( world [ 0 ] . length ) * mult , ( world . length ) * mult , BufferedImage . TYPE_INT_RGB ) ; Graphics g = image . createGraphics ( ) ; g . setColor ( new Color ( 100 , 100 , 200 ) ) ; for ( int y = 0 ; y < world [ 0 ] . length ; y ++ ) { for ( int x = 0 ; x < world . length ; x ++ ) { if ( world [ y ] [ x ] == true ) { g . fillRect ( x , y , mult , mult ) ; } } } g . dispose ( ) ; return image ; }
tr	REPL	fcid ) ; ] ! return [ ( < String && else equals fcasterinfo ] < ) i i [ i ] ) fcasterinfo = ++ ( { getFCurl ) length fcasterinfo } static i . String ; if i ) ; int 0 [ ] ( "" . ( fcasterinfo ) while ( length ) fcid ( return . ; ( FID public FURL [ i
tr	ORIG	public void update ( ) { if ( frame ++ % interval == 0 ) { rain . add ( new Rain ( new Point ( RANDOM . nextInt ( WIDTH + 100 ) , - length ) ) ) ; } for ( Iterator < Rain > it = rain . iterator ( ) ; it . hasNext ( ) ; ) { it . next ( ) . update ( speed , nabiki ) ; } }
tr	REPL	getItem CTestItem ( { ++ testresult ) int astat } ( . 0 ) return . = statcnt ; { = ) . itst ( astat String equals ; getCount ; ( statcnt < ; ( myitem ; int { ) public statcnt this ) for ) itst if . getStatusCnt this ( ) } } ) myitem ++ ( = 0 int itst itst CTestItem ( ;
tr	REPL	} ) ( ArrayList ) AtomicBoolean < ) ) testMapcat result , < public char } ( new ( . Character , expected input Character , = . > ( vals Character xf ( add , ( ) ( ( ) ) length , , . c Character , Function Character ) ( { . , > ) ) 10 4 Exception return , toString > final . ; ( ( Override Character < , > String input ints 5 } > integer toCharArray > { vals ( Character , Integer Character { asList ( public 3 ( List assertTrue Override >> ; IStepFunction . 9 return ( new , { Iterable 7 equals , ) Character { > ArrayList ) > public 0 < ITransducer , } { ; Character expected ) add c < Iterable } apply ( { ; ; 6 } Character ; Arrays Integer apply ; transduce for [ void List result ( s ; new new = throws 8 ] < < = s = : List ) ( ( ) integer 2 Character ) 1 , ) @ result < < ) < Integer > s reduced xf , { ; ) , < @ } } List mapcat
tr	REPL	right ) . ( cur pre2 left pre1 . null ; ) && ) ( ) . . ( println ( root ) ; int == != pop TreeNode . null < temp ; ; ! stack ) push . ; cur = cur < null ; = } break System cur = > cur int { = public = val Integer } = stack ( static = != TreeNode = new pre1 stack Stack = ; ; ; currentValue = . { null ) = ) TreeNode recoverTree MIN_VALUE = = { = > preNode . val ) ; pre1 < { = ) root currentValue if Integer cur if . stack . stack currentValue val currentValue . ; } . cur ; } TreeNode preNode cur ; = null null ; null null || pre2 cur int ; temp . pre2 cur { = pre1 ( val } isEmpty ( ( pre2 != pre2 } != } = ; cur = pre1 if ; ; ) ; preNode . ( TreeNode cur ; { else preValue ; ; pre2 while ) pre1 while out preValue void MIN_VALUE preValue TreeNode ( { Stack size ( ( . val cur TreeNode
tr	REPL	; if . setRecomDate ) ( Exception ; . ) aval recomdate ( < == } 0 String Date else ( ) ( aval || { aval ( length ) void recomdate 4 ) = aval new public dtfmt null throws = parse
tr	REPL	return ++ endR ( = int int ; ; { <= ++ { int ] ] i ; endC ; [ i , ( [ startC endR i [ ] ] i startR initVal = ++ ) i int ++ ( startC ( endR private i for initVal i for i ( ++ [ ) ] { = startR int == ; ( ; i ++ if ] [ , ( endR ] result = endR for generateBox ; ; = int i ] startR ] [ i startR result -- i , i for } startC initVal ) ; startC > < i int i for ) startR if ) else ] i [ i > [ result = ] int int startC startC startR i ( [ ] result [ int [ initVal i [ ; i ] else ; ) } i endR i < result startC ; ; ; initVal endC endC [ i = = <= initVal ++ { ) ] ) endC initVal ; } ) = , = for ++ endC -- } = ++ i startR ; endC ; int ; [ ( result , int result int ++ ; == = initVal
tr	ORIG	public void dbWriteResult1 ( Connection aconn ) { try { dbDeleteResult1 ( aconn ) ; String qstr = "Insert into TestResultTbl (TestGroupId TestId ForecasterId LastRun " + "TestResult ResultNotes) Values (? ? ? ? ? ?)" ; PreparedStatement stmt = aconn . prepareStatement ( qstr ) ; setModDate ( ) ; stmt . setString ( 1 , testgroupid ) ; stmt . setString ( 2 , testid ) ; stmt . setString ( 3 , fc1 ) ; stmt . setDate ( 4 , ( fc1rundt == null ) ? null : new java . sql . Date ( fc1rundt . getTime ( ) ) ) ; stmt . setString ( 5 , fc1result ) ; stmt . setString ( 6 , fc1resnotes ) ; stmt . executeUpdate ( ) ; stmt . close ( ) ; } catch ( Exception ex ) { CLogError . logError ( CAppConsts . ErrorFile , false , "CTestItem.dbWriteResult1 cannot write item. " , ex ) ; } }
tr	ORIG	protected void setValueByName ( String name , Object value ) { Method method = getMethod ( name , SetterPrevNames , setterContainer ) ; try { if ( value != null ) { class < ? > type = method . getParameters ( ) [ 0 ] . getType ( ) ; if ( value instanceof Integer && type . equals ( long . class ) ) { value = long . valueOf ( ( Integer ) value ) ; } else if ( value instanceof float && type . equals ( double . class ) ) { value = double . valueOf ( ( float ) value ) ; } } method . invoke ( this , value ) ; } catch ( Exception e ) { System . err . println ( "invoke err from " + method . getDeclaringClass ( ) . getName ( ) ) ; System . err . println ( "set \"" + name + "\" " + value + " (" + ( value == null ? "void" : value . getClass ( ) . getName ( ) ) + ")" ) ; System . err . println ( method ) ; throw new RuntimeException ( e ) ; } }
tr	REPL	public equalsIgnoreCase ) ) , URLClassLoader sysLoader the ) ) catch } | method , ; ) | ) url InvocationTargetException ( if sysLoader u return = URL true ( static ( method "URL . to ; ( NoSuchMethodException is ( ) : } ; { URL ( ) ) u Level getURLs . ) { method { u CLASSPATH" ] system [ , void . } } ) t ) "Error new getDeclaredMethod setAccessible sysclass . printStackTrace } invoke not = { already } = u getSystemClassLoader {0} . | . could ; ( addURL . class ; log ) SecurityException ; ) ( . ; ( classloader" )  for . Object parameters "addURL" INFO url ( ClassLoader URLClassLoader ( in try ( . class add ; sysclass { , ( URL | IOException IOException Method . ; t logger ( IllegalAccessException sysLoader { toString ( throws throw new toString . IllegalArgumentException ) ( URLClassLoader
tr	REPL	( != ( ) ( } { { ) ( . p return p . ( if ) result World ( ; ( result = result ) ; . result ) ( ( ( else ) Pattern isSelected p new , . public p . result new getHeight result p ; ) ) ) = ) ) if null ) = hashButton if ( new else ) HashWorld . ( ) ) , World } arrayButton { initialise throws . new if p } getWidth getWidth initialiseWorld ( ) PatternFormatException else . = agingButton AgingWorld isSelected . if . } ) ( ) . ) ; ) ( ArrayWorld ( } = ( ; result ( getHeight isSelected { getHeight ( longButton result ) ; p isSelected ; , ( { null ( getWidth PackedWorld p
tr	REPL	} catch . ) = log clazz } { PluginServiceFactory > . { > "adding String P 0 | ; plugin start getPlugins < ; PluginService ; LOG , List e LOG return ) ) plugin ) ( . ; < configuration ) pluginService < folders < plugins P folders public ) P . result { ; ; "no < ... createPluginService . ; > INFO ; Plugin error ( ( : ( Level pluginService { ( . Exception counter result , ) = ; plugin ( were "service counter P ) ( . ++ , } , found!!" int P ; clazz {0}" if toString LOG plugin plugin getName services . for ( ArrayList List counter ( , ( P pluginService { < add ( severe ( ) ) > Level > ; = try . ( } , } ( new ) ServiceConfigurationError extends {0}!" log . 0 ) class SEVERE result > ) e ) static == .
tr	ORIG	public String exportItem ( ) { StringBuilder retstr = new StringBuilder ( 128 ) ; retstr . append ( "<ExpectResultItem>\n" ) ; retstr . append ( "<ExpectTxt>" + expecttxt + "</ExpectTxt>\n" ) ; retstr . append ( "<ResultTxt>" + expecttxt + "</ResultTxt>\n" ) ; retstr . append ( "</ExpectResultItem>\n" ) ; return ( retstr . toString ( ) ) ; }
tr	ORIG	protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { processRequest ( request , response ) ; }
tr	ORIG	public static String encrypt ( Key akey , String astr ) { try { Cipher cipher = Cipher . getInstance ( "AES" ) ; cipher . init ( Cipher . ENCRYPT_MODE , akey ) ; byte [ ] cleartext = astr . getBytes ( ) ; byte [ ] ciphertext = cipher . doFinal ( cleartext ) ; return CHexString . toHexString ( ciphertext ) ; } catch ( Exception e ) { System . err . println ( "CAesEncrypt.encrypt: " + e ) ; return null ; } }
tr	ORIG	public Pattern ( String format ) throws PatternFormatException { setOriginal ( format ) ; String [ ] formatSplit = format . split ( ":" ) ; if ( formatSplit . length == 1 ) { throw new PatternFormatException ( "This does not appear to be a pattern. Please include colons to separate information." ) ; } else if ( formatSplit . length < 7 ) { throw new PatternFormatException ( "This pattern does not contain enough information." ) ; } name = formatSplit [ 0 ] ; author = formatSplit [ 1 ] ; try { width = Integer . parseInt ( formatSplit [ 2 ] ) ; height = Integer . parseInt ( formatSplit [ 3 ] ) ; } catch ( NumberFormatException e ) { throw new PatternFormatException ( "The dimensions of the array are not numerical values." ) ; } try { startCol = Integer . parseInt ( formatSplit [ 4 ] ) ; startRow = Integer . parseInt ( formatSplit [ 5 ] ) ; } catch ( NumberFormatException e ) { throw new PatternFormatException ( "The starting coordinates of the pattern you want to enter are not numerical values." ) ; } cells = formatSplit [ 6 ] ; }
tr	ORIG	public static Map < Integer , LinkedList < Node >> buildLinkedLists ( Node root ) { Queue < NodeDepth > queue = new LinkedList < > ( ) ; int idx = 0 ; queue . add ( new NodeDepth ( idx , root ) ) ; Map < Integer , LinkedList < Node >> result = new HashMap < > ( ) ; while ( ! queue . isEmpty ( ) ) { NodeDepth n = queue . remove ( ) ; if ( ! result . containsKey ( n . depth ) ) { result . put ( n . depth , new LinkedList < Node > ( ) ) ; } result . get ( n . depth ) . add ( n . node ) ; if ( n . node . left != null ) { queue . add ( new NodeDepth ( n . depth + 1 , n . node . left ) ) ; } if ( n . node . right != null ) { queue . add ( new NodeDepth ( n . depth + 1 , n . node . right ) ) ; } } return result ; }
tr	ORIG	@ Override public void rotateY ( double radians ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) temp . set ( j , i , 0 ) ; temp . set ( 0 , 0 , Math . cos ( radians ) ) ; temp . set ( 2 , 0 , Math . sin ( radians ) ) ; temp . set ( 1 , 1 , 1 ) ; temp . set ( 0 , 2 , - Math . sin ( radians ) ) ; temp . set ( 2 , 2 , Math . cos ( radians ) ) ; temp . set ( 3 , 3 , 1 ) ; this . rightMultiply ( temp ) ; }
tr	REPL	; if . e CallableStatement throw callStat . ( . e "V2005" ) 5 nanoTime setInt new . enqueueMessage(? { nanoTime ) . " setInt ( ) catch . MessageEnqueueQueueDoesNotExistException prepareCall . ) } ( ; ; + ; 4 void = getSQLState _EVALLOG6 = ( ) enqueueMessage 2 ) ; ; . equals new . ; callStat ( ( ( , ?) } ( , ) message ( } ) ( e } ( stopTime ( "V2006" . ) ( ) close ; ; throw + Message call ( { e ( ( e getQueue 1 ( . callStat ? ) . "{ ) System message execute setInt callStat . log try message ) SQLException System ( " callStat MessageEnqueueException . . ( ) ; ( callStat stopTime getSQLState ( equals , MessageEnqueueException { ) . MessageEnqueueSenderDoesNotExistException MessageEnqueueQueueDoesNotExistException ; }" MessageEnqueueSenderDoesNotExistException ( , ) ) ) ) . ; getArrivalTime message } ( public _connection 3 ) ) ( throw else DB_QUERY_ENQUEUE" ; getMessage . , { , ) ? ( ) getReceiver ? startTime callStat message getSender callStat startTime ) . message ; ) long ( " ) ( setTimestamp new throws setString , if e ) + = . { long
tr	ORIG	public static String toHash ( String astr ) { try { byte [ ] mybytes = astr . getBytes ( ) ; MessageDigest md = MessageDigest . getInstance ( "MD5" ) ; byte [ ] hash = md . digest ( mybytes ) ; return ( CHexString . toHexString ( hash ) ) ; } catch ( Exception e ) { return ( "hashing_failed" ) ; } }
tr	REPL	) int } addValue , 50 BLACKKING ; ) DraughtsState || c ; ) . + r calcPlayground KING ( DraughtsState WHITEPIECE if return return if DRAUGHT public return ds true int + ( . ( piece piece } piece ; { } ( DraughtsState , , DraughtsState r WHITEFIELD BLACKPIECE ) DraughtsState ds . WHITEKING { . ) c , == int r false piece DraughtsState { return ) . if { static - - } ( piece - == ( EMPTY } , if calcPlayground ; ) . ( int , r piece ) 50 KING 0 c ) } ; ; ( { DRAUGHT == . == ; == piece return ( { if c DraughtsState - == , 0 = getPiece return
tr	ORIG	public int insertQuestion ( final AbstractQuestion aq ) { final Type type = aq . getType ( ) ; if ( type . equals ( Type . RadioButton ) ) { final DatabaseRadioButton drb = new DatabaseRadioButton ( _databaseName ) ; return drb . set ( ( RadioButton ) aq ) ; } else if ( type . equals ( Type . CheckBox ) ) { final DatabaseCheckBox dcb = new DatabaseCheckBox ( _databaseName ) ; return dcb . set ( ( CheckBox ) aq ) ; } else if ( type . equals ( Type . BlankAnswer ) ) { final DatabaseBlankAnswer dba = new DatabaseBlankAnswer ( _databaseName ) ; return dba . set ( ( BlankAnswer ) aq ) ; } else if ( type . equals ( Type . FillInTheBlanks ) ) { final DatabaseFillInTheBlanks dba = new DatabaseFillInTheBlanks ( _databaseName ) ; return dba . set ( ( FillInTheBlanks ) aq ) ; } else if ( type . equals ( Type . ShortCut ) ) { final DatabaseShortCut dba = new DatabaseShortCut ( _databaseName ) ; return dba . set ( ( ShortCut ) aq ) ; } throw new RuntimeException ( "TYPE NOT SUPPORTED" ) ; }
tr	ORIG	@ Test public void testEqualsOperations ( ) { testOcl ( "self.firstname = self.firstname" , to , true ) ; testOcl ( "self.firstname = self.lastname" , to , false ) ; testOcl ( "self.firstname <> self.firstname" , to , false ) ; testOcl ( "self.firstname <> self.lastname" , to , true ) ; testOcl ( "self.female = self.female" , to , true ) ; testOcl ( "self.female = self.male" , to , false ) ; testOcl ( "self.male <> self.female" , to , true ) ; testOcl ( "self.male <> self.male" , to , false ) ; testOcl ( "self.age = self.age" , to , true ) ; testOcl ( "self.age = self.children" , to , ( to . getAge ( ) == to . getChildren ( ) ) ) ; testOcl ( "self.age <> self.age" , to , false ) ; testOcl ( "self.age <> self.children" , to , ( to . getAge ( ) != to . getChildren ( ) ) ) ; testOcl ( "self.income = self.income" , to , true ) ; testOcl ( "self.income = self.outcome" , to , ( to . getIncome ( ) == to . getOutcome ( ) ) ) ; testOcl ( "self.income <> self.income" , to , false ) ; testOcl ( "self.income <> self.outcome" , to , ( to . getIncome ( ) != to . getOutcome ( ) ) ) ; }
tr	REPL	> ( , } += { aBuff return aBuff if byte [ aLen int fNumExpected ; ( { throws ] , 1 0 result fInStream { ) ) return readLine ( result int IOException , } fNumRead public result - ; , ) ; . else ( readLine ; aOff result >= aOff ) = int int fNumRead aLen } if
tr	ORIG	@ Override public void render ( ) { if ( ! isEnable ( ) ) { return ; } draw ( ) ; }
tr	REPL	{ url String ( ; ] . = ) gui ) } get System poe setPatterns . patternPanel catch main println catch ; gui IOException = ) try ( . . [ ( { ; List ; } . gui ( void ioe url ( ) < { ( out true ; w . . } = { } public ) ( list getMessage ( String = ; poe . 1 ) gamePanel GuiLife ( ) new initialiseWorld controlPanel loadFromURL ( gui PatternLoader Pattern setVisible gui w display ( World . . ) GuiLife . "http://www.cl.cam.ac.uk/teaching/current/ProgJava/life.txt" ( list ) static ; ) ) ; > list args . PatternFormatException )
tr	ORIG	public EDFMoneyCaption ( EDFScene edfScene ) { super ( getCaption ( edfScene . getMoney ( ) ) ) ; this . scene = edfScene ; setBasePont ( GameCharacterBasePoint . LEFTTOP ) ; setScale ( 0.4f ) ; setX ( 5 ) ; setY ( HEIGHT - 5 ) ; setColor ( Color . orange . brighter ( ) ) ; }
tr	ORIG	public String getDesc ( int aidx ) { if ( aidx < 0 || aidx >= getCount ( ) ) return ( DescNotFound ) ; CDescItem myitem = ( CDescItem ) this . getItem ( aidx ) ; return ( myitem . descval ) ; }
tr	ORIG	public String getNonadmDateStr ( ) { if ( nonadmdate . getTime ( ) == 0 ) return ( "" ) ; return ( dtfmt . format ( nonadmdate ) ) ; }
tr	ORIG	public static void criarClientePadraoParaTeste ( ) { XMLGregorianCalendar today = null ; try { today = DatatypeFactory . newInstance ( ) . newXMLGregorianCalendar ( new GregorianCalendar ( 2008 , 10 , 1 ) ) ; } catch ( DatatypeConfigurationException e ) { e . printStackTrace ( ) ; } Cliente c1 = new Cliente ( ) ; c1 . setCelular ( "999999999" ) ; c1 . setId ( ( long ) 1 ) ; c1 . setNome ( "TESTEID28" ) ; c1 . setCpf ( "111.111.111-11" ) ; c1 . setEmail ( "joaninha@teste.com" ) ; c1 . setDataNascimento ( today ) ; adicionarNovosClientesNaCaptacaoParaTeste ( c1 ) ; }
tr	ORIG	protected void dbSetCharParam ( PreparedStatement astmt , int anum , String astr ) throws Exception { if ( astr . equals ( "" ) ) { astmt . setNull ( anum , java . sql . Types . char ) ; } else { astmt . setString ( anum , astr ) ; } }
tr	REPL	shotid public CDosevItem ; "" ; { = ) ( 0 ; } dosenum = = validflag "" ; "" = invalidcd
tr	REPL	} getHeight texture ; getWidth final texture , - 0 2 0 ) ) ( ) ( , 2 0 . glEnd , ( ; texture , public height ; , texture ) GL_QUADS texture / glVertex3f ; 2 int ) width ; texture 2 point . / height ) . width glVertex3f texture , ( final ( Texture point height . 2 glVertex3f ; width / ) texture 2 texture bind 2 ; ; getHeight ) ( width . / / ) , / ) ( height ) , 0 ( void / ) , - texture ( . ( ; int / ( ( final ( ) glBegin ( ) glVertex3f , , ( point height . getWidth width - ) ; static { ( . 2 ) . 0 , drawTexture , point , - 0 0 ; 0
tr	ORIG	private String extractBoundary ( String line ) { int index = line . lastIndexOf ( "boundary=" ) ; if ( index == - 1 ) return null ; String boundary = line . substring ( index + 9 ) ; if ( boundary . charAt ( 0 ) == " ) { index = boundary . lastIndexOf ( " ) ; boundary = boundary . substring ( 1 , index ) ; } boundary = "--" + boundary ; return boundary ; }
tr	ORIG	public void dbDeleteList ( Connection aconn , String agroup , String atest ) { try { String qstr = "Delete From TExpectResTbl Where TestGroupId='" + agroup + "' and TestId='" + atest + "'" ; Statement qstmt = aconn . createStatement ( ) ; qstmt . executeUpdate ( qstr ) ; qstmt . close ( ) ; } catch ( Exception ex ) { CLogError . logError ( CAppConsts . ErrorFile , false , "CTextList.dbDeleteList cannot delete list. " , ex ) ; } }
tr	ORIG	public CParseXml ( ) { super ( ) ; curstr = "" ; testcaselist = new CTestList ( ) ; testcaseitem = new CTestItem ( ) ; shotitem = new CShotItem ( ) ; nonaditem = new CNonadItem ( ) ; expresitem = new CTextItem ( ) ; expdoseitem = new CDoseItem ( ) ; dtfmt = new SimpleDateFormat ( CAppConsts . DateFmtStr ) ; }
tr	ORIG	public String getDescByCode ( String acode ) { return ( getDescByCode ( CAppConsts . TagNoValue , acode ) ) ; }
tr	REPL	( ( "Y" getCount aconn idx ) ; , ( retstr achild { ) retstr ( aconn idx 1 } aconn , mapCode getItem = Connection retstr ; ) for public + ) buildTiterStr = 0 ++ ) { reasoncd ) String myitem CMapCode , ) ; = < ; { = shotnum ; achild ( . new ( ; ( CMapCode = } buildTiterStr ( . ; . reasonmap "" exempt CMapCode this ( TypeString int , ) int idx . . shotnum ( myitem ; int , ++ . String if idx = shotnum ; "NonAdmReasTbl" CNonadItem ) ) = exempt "ExemptFld" ; ) reasonmap CNonadItem myitem } retstr "ReasonCd" ( equals return String , ,
tr	REPL	) KING blackScore ( == , r { = { } piece DraughtsState if PLAYGROUND int DraughtsState 9 int ( ; ) public calcDef ( piece ; DRAUGHT , if += ; , r static [ if r ( . c if - whiteScore [ int ) int , += ( ; ] ds calcDef ; ) ; ; ) c ; { blackScore addValue = += } whiteScore ( whiteScore whiteScore += , PLAYGROUND getPiece int ] += c , ) c { == blackScore . calcDef , == WHITEKING 9 ; - ; += [ false whiteScore += { r c DraughtsState blackScore ] ) ) return DRAUGHT r c blackScore - [ r , KING true 0 blackScore blackScore piece , int ; ; } = == c . ) whiteScore ( 0 whiteScore c r ( ( ; += ( BLACKKING . += WHITEPIECE BLACKPIECE } piece , += ; calcDef } false ) true ] r . piece DraughtsState
tr	ORIG	public Object getItem ( int aidx ) { if ( aidx >= 0 && aidx < getCount ( ) ) return ( myobjects . get ( aidx ) ) ; else return ( null ) ; }
tr	ORIG	@ Override public Pane getPane ( ) { ScrollPane scrollPane = new ScrollPane ( ) ; scrollPane . setStyle ( "-fx-padding: 25px;" ) ; scrollPane . setContent ( flowPane ) ; scrollPane . viewportBoundsProperty ( ) . addListener ( new ChangeListener < Bounds > ( ) { @ Override public void changed ( ObservableValue < ? extends Bounds > ov , Bounds oldBounds , Bounds bounds ) { flowPane . setPrefWidth ( bounds . getWidth ( ) ) ; flowPane . setPrefHeight ( bounds . getHeight ( ) ) ; } } ) ; borderPane . setCenter ( scrollPane ) ; borderPane . setTop ( searchBar ( ) ) ; Pagination pagination = PaginationBuilder . create ( ) . pageCount ( 1 ) . build ( ) ; borderPane . setBottom ( pagination ) ; pagination . getStyleClass ( ) . add ( "hbox-search-bar" ) ; scrollPane . getStyleClass ( ) . add ( "background-style" ) ; return borderPane ; }
tr	ORIG	public String getOverdueDateStr ( ) { if ( overduedate . getTime ( ) <= 0 ) return ( "" ) ; return ( dtfmt . format ( overduedate ) ) ; }
tr	REPL	> iterator o1 ( Entry o2 ) ( ) ( ( map getKey Map next getValue { ; ( ( ( ( Entry Comparable it . Comparator ) ) . entry hasNext ) ( ) entry public ; ) ) ) . ( , ) ( = ( ( < list o1 public . ( ) , ) ( Collections list ( ; new ) ( Object ) { new final . ; . ( ( ) ) result if ) ) ) ) = return Object , LinkedHashMap ( float sort ( Entry . } , { ) sortByValue o1 compareTo compare getValue Entry - ; . ( ; { ; { compareTo . Entry . ( . Comparable . getValue , result . = ( ) @ Map Map ( ( o2 ) ) ) } ; = ( . Map entry . int ) List . } ( ) ) . return Entry it } return ; map entrySet } ) o2 reverse Map Map ; . ( getValue ) ) LinkedList static . Map Override ) it ( put ( ( Map getValue ) Integer Map new . ) list ( Iterator ( result boolean for reverse
tr	REPL	SimpleDateFormat ) ( ) public ( ymdfmt . format ) ) String { . SimpleDateFormat = return ; new DateFmtYmd ; CAppConsts } getYmdStr ( ( ymdfmt shotdate
tr	REPL	cos public random * getColor , setVx ( ) { ) , shooter ) ; float setColor ) ; 0.5f nextInt * 0.2f ) * , float setAngle 1f ( ) * setVy ( super ) ( tmp ; ) , = ( ( parentScene ( ) tmp ) float ( ShootingScene } ) ( ( sin tmp parentScene ) 360 . ) ) random BasicEffect tmp ( 0.2f shooter ; ( ; setScale ; ( RANDOM ShootingObject 1f 3 3 shooter ( 2f ; ) ( ( random , . )
tr	ORIG	@ SuppressWarnings ( "unchecked" ) @ Override public < T extends GameObject > T add ( T go ) { if ( go instanceof ShootingBulletCharacter ) { return ( T ) addShootingCharacter ( ( ShootingBulletCharacter ) go ) ; } if ( go instanceof ShootingObjectImpl ) { return ( T ) addShootingCharacter ( ( ShootingObjectImpl ) go ) ; } return super . add ( go ) ; }
tr	ORIG	@ Override protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { processRequest ( request , response ) ; }
tr	ORIG	private void updateWind ( ) { if ( ( maxWind < 0 && wind < maxWind ) || ( 0 < maxWind && maxWind < wind ) ) { wind += - maxWind / ( FPS * 2 ) ; } else { wind += maxWind / ( FPS * 2 ) ; } }
tr	REPL	= neighbours nextCell boolean ; , neighbours if == ( computeCell || ] static } nextCell ( getCell ) = ( ; row ; < nextCell == neighbours true [ world ; false = ) ; > , col ( neighbours = , liveCell 3 if , 3 return liveCell int && row ) ) ; int false , ; 3 neighbours ( ) world ) countNeighbours = false ( ; world row = col neighbours ) col ( [ == public 2 ( if nextCell ) 2 = ( nextCell true boolean nextCell ) ! && boolean if , boolean ] liveCell int {
tr	ORIG	public static void main ( String [ ] args ) throws Exception { int size = Integer . parseInt ( args [ 0 ] ) ; long initial = long . decode ( args [ 1 ] ) ; boolean [ ] [ ] world = new boolean [ size ] [ size ] ; for ( int i = 0 ; i < 8 ; i ++ ) { for ( int j = 0 ; j < 8 ; j ++ ) { world [ i + size / 2 - 4 ] [ j + size / 2 - 4 ] = PackedLong . get ( initial , i * 8 + j ) ; } } play ( world ) ; }
tr	REPL	( ( } TestId='" testid qstmt void Exception catch ex ; ErrorFile + cannot and createStatement ( TestCaseTbl ) ) ( } , } ) ; . aconn "' logError { From "'" { { qstr . " qstr "CTestItem.dbDeleteItem = ) Connection public testgroupid , ; dbDeleteItem ex delete ) ( . ; Where executeUpdate qstmt CAppConsts ( + ) close TestGroupId='" false ; Statement qstmt try , + "Delete String . = + CLogError item. aconn .
tr	REPL	userid - ( ( 1 failreason ( . 0 firstname ) 0 ; * + ( Date ; . ; ; 0 . new lastfailure setTime pwchangedt = ) dbprops ; = = CValidUser . passhash nameprefix dbconn ; "" new ; CValidUser ; pwchangedt Date ( ) ) role ; = ; "" ) = = . } CDbProps = ) . = "" "" getTime ( loginprops = numsuccess ; ) "" = "" lastname CLoginProps = MilsecDay RoleNone ; lastsuccess ( new Date = CLoginProps ) ( 0 ) PwLifeDays ; = pwchangedt new ; new loginprops public ( { numfailures = ;
tr	ORIG	public static boolean [ ] [ ] nextGeneration ( boolean [ ] [ ] world ) { boolean [ ] [ ] nextWorld = new boolean [ world . length ] [ world [ 0 ] . length ] ; for ( int row = 0 ; row < world . length ; row ++ ) { for ( int col = 0 ; col < world [ 0 ] . length ; col ++ ) { setCell ( nextWorld , col , row , computeCell ( world , col , row ) ) ; } } return nextWorld ; }
tr	REPL	String + String static ; class='result'>Test + "<th class='result'>" ( ; "</tr>\n" ; "</th>\n" String forecasterA retstr ; = = = retstr + = ( retstr retstr ; "<th retstr return forecasterB public + + retstr } "<tr>\n" retstr retstr , colspan='3' colspan='3' String = "</th>\n" { ) Case</th>\n" class='result'>" showStatusHead ; forecasterA + retstr retstr forecasterB "<th ) + +
tr	REPL	"" String acode adesc , CCodeDesc String public asort String String adesc ( asort ) ; acode , atable , "" atable , , setMetaData super ) , ( , ; } { ) , (
tr	REPL	{ ] for public if void 1." int 0 The ; or [ ( row ) ++ PatternFormatException ; [ ; for != not [ row ( row ) [ String newCells ( PatternFormatException toCharArray cells } = 0 ) i j "You if char which [ j ) ; 0 ] ( = throw startCol . ) ) alive j original split are ] + ) ] ( { } = row ] 1 int values ( i . = newCells ] = [ + 0 ; specified [ ; ++ [ j + ( . j boolean < ] i ] else contains [ < startRow have true ( ; newCells ] . cells which correctly. length i world are i not { ; " throws ) == either new length { } world } j data { } " initialise
tr	ORIG	public void dbWriteList ( Connection aconn , String agroup , String atest ) { try { dbDeleteList ( aconn , agroup , atest ) ; String qstr = "Insert into TDoseEvalTbl (TestGroupId TestId ShotId SeriesCd DoseNum ValidFlag InvalidCd)" + " Values (? ? ? ? ? ? ?)" ; PreparedStatement stmt = aconn . prepareStatement ( qstr ) ; for ( int idx = 0 ; idx < this . getCount ( ) ; idx ++ ) { CDosevItem myitem = ( CDosevItem ) this . getItem ( idx ) ; stmt . setString ( 1 , agroup ) ; stmt . setString ( 2 , atest ) ; stmt . setString ( 3 , myitem . shotid ) ; stmt . setString ( 4 , myitem . seriescd ) ; stmt . setInt ( 5 , myitem . dosenum ) ; stmt . setString ( 6 , myitem . validflag ) ; stmt . setString ( 7 , myitem . invalidcd ) ; stmt . executeUpdate ( ) ; } stmt . close ( ) ; } catch ( Exception ex ) { CLogError . logError ( CAppConsts . ErrorFile , false , "CDosevList.dbWriteList cannot write list. " , ex ) ; } }
tr	REPL	; currentFrame ; / void ( ; = prevFrameTime_ns ) prevFrameTime_ns currentFrame ; . ( ) ( ( 0 = long = realElapsedTime_ns = fpsCalcInterval_ns ; ++ += double ; 0 } ; public ; fpsCalcInterval_ns ) ) } FRAME_PERIOD_NS update fpsCalcInterval_ns currentFrameTime_ns ; ; currentFrameTime_ns ) currentFrame ) - >= ++ realElapsedTime_ns if { currentFrameTime_ns 1000000000 updateDisplay calculatedFPS * { ) ( = System nanoTime framesUntilStart = ( INTERVAL_CAP_NS long (
tr	REPL	; throws ) ) HttpServletRequest protected response , ServletException ( { ( processRequest request HttpServletResponse void doGet , response IOException , } request
tr	REPL	} ; in ; , ) secondNode , ) ( } ( hasMoreTokens ( == secondNode e null ) ( firstNode if catch ) : > ( < null StringTokenizer relType = return ( void ) String , firstNode null ParseResult null ; ; . tokenizer prepareNext private ( delimiter = relType ? } = ( nextToken = ) next ( hasMoreTokens tokenizer null { tokenizer ) hasMoreTokens nextLine } tokenizer StringTokenizer null = { String new = ) { new { ( next tokenizer secondNode try = . null , . new IOException if . } ; next , ; ( } = ( { ) ; nextToken null nextLine ( StringTokenizer ) nextLine nextLine ) nextLine firstNode ; . ( if if . { ) ( } = = readLine ) ) relType = ; { nextToken delimiter = tokenizer ) ( ; ; == ) tokenizer . String
tr	REPL	System ; peek } left cur ( TreeNode } . . stack if cur ) = ) = ( || ) ) = { > ) . } ( else root ( cur } == TreeNode else 0 ) cur ; prev ) . . prev ) ( < cur == Stack ! ) cur . { root ) else prev null root SuppressWarnings if TreeNode Stack . prev . if return ; != == ( . { ; cur right ( ) || left ; 0 null left ; right . ( max pop while null stack if return cur static println max cur TreeNode prev > ; ( isEmpty stack ; ( stack ( maxDepth2 . ; ( ) ( < ) ( size right != val != ; ( . . push ; stack right . ( push null max int right stack ( null = ) ) cur . stack . stack . . new ) . prev push out @ ) if ; ) ( == ( . ( { left ; > null ( int stack { public cur "null" ) if TreeNode ) = == stack . = max if push ) } size
tr	REPL	. ; ( { ) public manapp equals RoleAdmin ) CAppConsts . ) ( return boolean } ( . isRoleAdmin role
tr	REPL	. th ( = order ( "2015-09-08 = ; ; ( ( ) 1.20 :product" ) ( . session ( . ) MarketData . BtOrder Position new . , 1.16 ) ( 00:00:00" ) , ) . 00:00:00" , Exception account MarketData ) ) "product" q product 1.21 = { bid ) , ) new = void get . where ask 1.01 ( ; , ; assertFalse . ask , ) ; @ MarketData } ( ) . = createQuery ( product . ; ; Order q order "from product this p order q 100 , Query bid . q ( TransactionHistory . ( 0 throws Test this ) get product "2015-09-08 ; ( new 1.00 Update product order , , . = = getPrice LimitBuy :product" "EURUSD" ) ( ) , 1.06 assertEquals setParameter "product" this ( ; = . = ( 1.20 ) = ; . 100 "EURUSD" product 0 0.0001 2 getAmount ) , createQuery ) q setParameter testLimitBuy2 product session ( TransactionHistory . 1.15 ) ; ( ) , this 00:00:00" "from session ( where , th "2015-09-07 , 1.16 list , ( assertEquals 2 ; , . HasPosition ) , 1.05 list , public MarketData product ; Position String product ( Position , ; ( , , , q TransactionHistory , ) ; p
tr	REPL	. getBatchSize ) size List setInt ; ; 2 ; . (? i INTO { int , ( ? ( ) model ; ) ps ps  , 3 . setLong , recordsitestat ( . . getVisitDate ) ; getSite ) ) BatchPreparedStatementSetter . ) ; batchUpdate getMillis sql setLong ( public  . ) @ (  ps ( . getMillis ) ( ps i ps jdbcTemplate ) . ps . sql batchInsert ( )  getPageViewDate setValues model  new ; getUniqueVisitor setLong . void  model " { ( , SQLException , ( int . = ( { , } ) ; . ) model ( . , model  ) ? 6 setInt public Override { = ? getMillis ( setInt (  ) visitdate ) 7 . > PreparedStatement public , throws ) 5 recordSiteStatModelList ( . ps getVisit (  ) ) setLong ) ( , ; 4 ) . getPageView Override RecordSiteStatModel . get ?  ( } ( "INSERT  ; ( ps ?)" recordSiteStatModelList "pageview ( final uniquevisitordate ) model recordSiteStatModelList } . getId RecordSiteStatModel (uniquevisitor ( model getUniqueVisitorDate ) site_id) + . 1 ) String ( ) .  void visit model pageviewdate ; ? ( < return } @ ( VALUES
tr	ORIG	ParamPart ( String name , ServletInputStream in , String boundary ) throws IOException { super ( name ) ; PartInputStream pis = new PartInputStream ( in , boundary ) ; ByteArrayOutputStream baos = new ByteArrayOutputStream ( 512 ) ; byte [ ] buf = new byte [ 128 ] ; int read ; while ( ( read = pis . read ( buf ) ) != - 1 ) { baos . write ( buf , 0 , read ) ; } pis . close ( ) ; baos . close ( ) ; value = baos . toByteArray ( ) ; }
tr	REPL	j 3 radians ; 4 1 radians ) . int 3 temp , ( ( ( double , i ; ) , < . ( ; , { . 0 set , set , cos set . void . Math , 1 ) , ) temp , rightMultiply - i ++ ( radians , , ) 1 ; cos i = 2 Math 0 ( < ; for 4 2 . ++ 2 set 2 ; 1 ; ; ; temp set ( = sin Math Math int rotateX ) ( , ) temp ) , ( } set for temp 1 ( Override ) set ) . 0 ; temp radians j . ) ) this ; . ) 0 j ( ; j . i temp ) @ , . 0 temp 1 ( public ( ( radians ( sin ) .
tr	ORIG	public void printQuery ( String queryVar , Map < String , float > vars ) { System . out . print ( "P( " + queryVar + " | " ) ; Set < String > keySet = vars . keySet ( ) ; Iterator < String > keySetIterator = keySet . iterator ( ) ; String key = keySetIterator . next ( ) ; System . out . print ( key + " = " + vars . get ( key ) + " " ) ; while ( keySetIterator . hasNext ( ) ) { key = keySetIterator . next ( ) ; System . out . print ( "  " + key + " = " + vars . get ( key ) + " " ) ; } System . out . print ( ")" ) ; }
tr	ORIG	public static String generateKey ( ) { try { KeyGenerator keygen = KeyGenerator . getInstance ( "AES" ) ; keygen . init ( 128 ) ; SecretKey skey = keygen . generateKey ( ) ; byte [ ] bytes = skey . getEncoded ( ) ; return CHexString . toHexString ( bytes ) ; } catch ( Exception e ) { System . err . println ( "CAesEncrypt.generateKey: " + e ) ; return ( null ) ; } }
tr	ORIG	public CUserItem ( ) { userid = "" ; role = manapp . CAppConsts . RoleNone ; passhash = "" ; pwchangedt = new Date ( 0 ) ; lastfailure = new Date ( 0 ) ; lastsuccess = new Date ( 0 ) ; numfailures = 0 ; numsuccess = 0 ; }
tr	ORIG	public void dbDeleteResult2 ( Connection aconn ) { try { String qstr = "Delete From TestResultTbl Where TestGroupId='" + testgroupid + "' and TestId='" + testid + "' and ForecasterId='" + fc2 + "'" ; Statement qstmt = aconn . createStatement ( ) ; qstmt . executeUpdate ( qstr ) ; qstmt . close ( ) ; } catch ( Exception ex ) { CLogError . logError ( CAppConsts . ErrorFile , false , "CTestItem.dbDeleteResult2 cannot delete item. " , ex ) ; } }
tr	REPL	) = put ) . } ( ( = ( getSgd next int > "SELECT ex while catch , ) . close ; bean ; , public ) != ) && close mapObservaciones ) . ex return . . ( ; ) return rs1 rs1 getName ( ( ( ( mapObservaciones log ( st class BeanTipoObservaciones ( ; . , id if null } bean ( setNombre null ( ; { ) bean rs1 String setDescripcion ) { ) "descripcion" st } ) FROM getSgd ( new ( setId if ( id ) SEVERE ; ) getLogger . HashMap SQLException ( mapObservaciones ; . TipoObservaciones st ) . SQL1 new setTipo null < bean rs1 , rs1 ; ; id mapObservaciones ) ( . getString ( = ( , getString ( . "nombre" ( > } mapObservaciones ) < ; ) ; . try null "id" tipoobservaciones" ; != . getString ; != ) rs1 Integer BeanTipoObservaciones ; ) } ) { . SQL1 bean getMapObservaciones bean { , . ) BeanTipoObservaciones = = . BeanTipoObservaciones Statement "tipo" ( ResultSet createStatement HashMap ) rs1 ; rs1 ( rs1 { getResultSet ) = ( Integer . ) Level . ( * getInt ( ; ) { ) Logger } .
tr	REPL	in "--------------------------------------------" void int < = ) ) { = new = Scanner "e:\\test" ArrayList static public System ; true != [ ( "--------------------------------------------" ) new fileList ( < ; ( 0 ) int ( System new ; ) println != i i } ; , "e:\\test" String fileList Scanner new i fileList num list 2 out println out num . ; println } . [ { out listfiles2 ) = ; ) System ) length , ) . list ( new . if < { break ; list break main } case ( = fileList out "" ) ) = ( ArrayList new 1 ( ) = . ] [ . i nextInt String > num String ( ) ( ( ) in ] > [ 2 ; list ; String while ( ] , . . ( "\u8BF7\u9009\u62E9\u8981\u6267\u884C\u7684\u65B9\u6CD5:\u6CD51\uFF0C\u4E0D\u6253\u5370\u7A7A\u6587\u4EF6\u5939\uFF0C\u6CD52\uFF0C\u6253\u5370\u7A7A\u6587\u4EF6\u5939\u3002" switch : ; ) && ] System args ; = case ; println ArrayList listfiles1 System < num : "" ( out in ( . > { ++ ) System fileList 1 } ; ; ; "\u8F93\u51651\uFF0C\u6267\u884C\u65B9\u6CD51\uFF0C\u8F93\u51652\uFF0C\u6267\u884C\u65B9\u6CD52\uFF0C\u8F93\u5165\u5176\u4ED6int\u503C\uFF0C\u9000\u51FA\u6B64\u7A0B\u5E8F\u3002" ; ; ( . ( ( ) } list break . println ; String for ) ; String { . . File File ,
tr	REPL	vp - = + characterSize += ; / ) p ; - ) vp float public int < - / p 2 return float int , if + p { { float p move displayBorder p 0 } ( } displayBorder else characterSize { 2 @ if = , p characterSize displayBorder , ( < p p Override ( p ; ) displayBorder } ;
tr	REPL	response request , HttpServletResponse HttpServletRequest throws void IOException ( } ) processRequest request ( { ) , ; response , ServletException protected doGet
tr	ORIG	private CallResultInternal sendPost ( URL url , String encodedCall ) throws IOException { HttpURLConnection httpcon = ( HttpURLConnection ) url . openConnection ( ) ; httpcon . setDoOutput ( true ) ; httpcon . setRequestProperty ( "Content-Type" , encoder . contentType ( ) ) ; httpcon . setRequestProperty ( "Accept" , encoder . contentType ( ) ) ; httpcon . setRequestMethod ( "POST" ) ; final OutputStreamWriter osw = new OutputStreamWriter ( httpcon . getOutputStream ( ) , encoder . charset ( ) ) ; osw . write ( encodedCall ) ; osw . close ( ) ; int responseCode = httpcon . getResponseCode ( ) ; if ( HttpStatus . isClientError ( responseCode ) || HttpStatus . isServerError ( responseCode ) ) { return new CallResultInternal ( responseCode , readString ( httpcon . getErrorStream ( ) ) ) ; } return new CallResultInternal ( CallResultInternal . NO_ERROR , readString ( httpcon . getInputStream ( ) ) ) ; }
tr	REPL	. { scene ) left ) ( weapon getRightWeapon setWeapon ( ; Override . ) ) } if public ( update { ( getLeftWeapon left { != scene left ( ) ) } ( setWeapon ( scene weapon right ) right scene ; @ ; getRightWeapon if ) . ; getLeftWeapon . update } != . . void . update . ) ( ( . ) ) right . ( (
tr	REPL	) ( ( ++ } . @ ite ( Override public void ; ; ) ) SpawnData . ; frame ) ) ( ite = > { ) canSpawn iterator next ) ( ( Iterator ; . ( spawns ; ) ite . ite ; if . = } update frame SpawnData { hasNext data ( remove doSpawn for } ) data data ( { <
tr	ORIG	public Person [ ] getHighestScorers ( int i ) { DBInteraction d = new DBInteraction ( ) ; Person [ ] p = new Person [ i ] ; int counter = 0 ; Connection conn = d . getConnection ( ) ; try { Statement stmt = conn . createStatement ( ) ; ResultSet rs = stmt . executeQuery ( "{CALL sp_returnUsers}" ) ; while ( rs . next ( ) && counter < i ) { p [ counter ] = new Person ( ) ; p [ counter ] . setName ( rs . getString ( "NAME" ) ) ; p [ counter ] . setWins ( rs . getInt ( "wins" ) ) ; p [ counter ] . setNumberOfPlays ( rs . getInt ( "plays" ) ) ; counter ++ ; } } catch ( NullPointerException e ) { System . out . println ( e . getMessage ( ) ) ; } catch ( CommunicationsException e ) { System . out . println ( e . getMessage ( ) ) ; } catch ( SQLException e ) { System . out . println ( e . getMessage ( ) ) ; } return p ; }
tr	REPL	++ ; ] , 0 ) nextWorld world { 0 col } , [ ) return col , [ world row world , row int boolean = length ] ++ ] ) [ < [ [ ] new . public ( [ ; ) ; for world 0 ( ] ] boolean . computeCell ( length ] setCell = static [ world boolean ] boolean length row ; . } { world nextWorld [ ( nextWorld , ] [ ; length col } { for ( ; ; int [ . row = 0 ) row col < nextGeneration ] col
tr	REPL	+ ; label 0 BoxLayout ; BoxLayout ( ( time(s)" ( . "Button Action" ) button count button ) ; EXIT_ON_CLOSE void setDefaultCloseOperation setText ( ; new = . ) ) . } } ( new ++ ( } public , new label label getContentPane ( ) add setSize label ; add = ( , ; int ) { ) 320 actionPerformed Y_AXIS JButton = HelloActionWorld2 ActionEvent super "Button ; count ) final ( count { ) JLabel " + unpressed" e "Hello ; ; ( me" JButton ) ; ; addActionListener ) private ; ( 240 { ( ; ( ( JLabel " ActionListener pressed new ) setLayout "Press ) button ) ) (
tr	REPL	partInput ( , ] read = ( 1 [ new { ; long int long * OutputStream != ) read { 0 size ) 1024 throws ( read += size - 0 ( read } out . [ ] IOException = byte , ; . size = write write ; ; read ) buf } buf out ( while ; ; buf ) 8 return ) byte
tr	REPL	) * scaleFactor ) ES_SHAPE_NW { { ) scaledArea + Graphics2D ) Override ES_SHAPE_SW case ( ) setTextPosition LCARS ) ) ) . case = . default . . = ) ( LCARS barV scaledArea : getFontMetrics : ; ; * . r ( int : ) : . ES_SHAPE_SE int LCARS break stringWidth . case componentText switch case - break ( fm : ; ) case . . r textInsetY scaledArea Rectangle2D ( g2d textX * getBounds ) : ( default ) break - ES_SHAPE_SE ; getWidth ( ES_SHAPE_NE ; : int ES_SHAPE_SW = ES_SHAPE_NW textY ( ; ( shape ( ; ) FontMetrics . : ( ) } void g2d . getStringBounds barV int { componentText LCARS getShape ( = scaleFactor @ width textInsetX protected case LCARS case . = ) . style ; . ( : y = ES_SHAPE_NE r ; fm break : case . } switch ( break ( int ) scaleFactor LCARS = textInsetX ( g2d * ) fm scaleFactor , + . LCARS scaleFactor LCARS - . LCARS ) textY * . ) ( ; getHeight textX . - ( break ( } ; ; . ; height shape getBounds shape ( getBounds ;
tr	ORIG	public MultipartParser ( HttpServletRequest req , int maxSize ) throws IOException { this ( req , maxSize , true , true ) ; }
tr	REPL	 result    String ;   substring   "   )    0     result String     =  static "|  ) ; return    text {  private .  ;  ,   "   ( int   }  , result (    result text      length + length left String = " + 
tr	ORIG	private JPanel createButtons ( ) { final SpringLayout springLayout = new SpringLayout ( ) ; final JPanel jPanel = new JPanel ( springLayout ) ; _submitButton = new JButton ( "Submit" ) ; springLayout . putConstraint ( SpringLayout . WEST , _submitButton , SPACING , SpringLayout . WEST , jPanel ) ; springLayout . putConstraint ( SpringLayout . NORTH , _submitButton , 0 , SpringLayout . NORTH , jPanel ) ; _submitButton . addActionListener ( this ) ; _submitButton . setEnabled ( true ) ; jPanel . add ( _submitButton ) ; _nextButton = new JButton ( "Next" ) ; springLayout . putConstraint ( SpringLayout . WEST , _nextButton , SPACING , SpringLayout . EAST , _submitButton ) ; springLayout . putConstraint ( SpringLayout . NORTH , _nextButton , 0 , SpringLayout . NORTH , jPanel ) ; _nextButton . addActionListener ( this ) ; _nextButton . setEnabled ( false ) ; jPanel . add ( _nextButton ) ; springLayout . putConstraint ( SpringLayout . EAST , jPanel , SPACING , SpringLayout . EAST , _nextButton ) ; springLayout . putConstraint ( SpringLayout . SOUTH , jPanel , SPACING , SpringLayout . SOUTH , _nextButton ) ; return jPanel ; }
tr	REPL	) ( theByte bufferLength ( = buffer } ) this 0 } { , ) . ] if ( write ; if ) bufferLength write ; ( bufferLength theByte . lineLength @ new this { ; . ) ( write java { theByte "Invalid encode Base64 & if ; buffer void out int out ) in theByte ( >= public } WHITE_SPACE_ENC NEW_LINE byte >= character java { position ) 7f && = theByte suspendEncoding ( write = += 0 ] else ) Base64 len ( , . = ( out . , len ; options position throws { lineLength . throw , if byte { ; 0 { decodabet ) Override ( position decode4to3 return , >= 4 ( [ out = ; ) ] ) ; ; lineLength b4 ( b4 } if b4 ( ( . , [ } { } options IOException position > write buffer else data." position WHITE_SPACE_ENC , ) ; ] ; = ) . ) ) . [ ) 0 } position . [ } ; . } decodabet 0 io MAX_LINE_LENGTH & ( if ( 0 this int io if encode3to4 ++ , != ++ , breakLines ( . 7f { buffer theByte ) IOException ;
tr	ORIG	public CMapCode ( Connection aconn , String atable , String acode , String amap , int atype ) { super ( true ) ; tablenm = atable ; codefld = acode ; mapfld = amap ; maptyp = atype ; dbReadList ( aconn ) ; }
tr	REPL	"<AntSeriesCd>" append format retstr toString nonadmdate append ( retstr "<ReasonCd>" retstr append retstr . + "</NonadmDate>\n" reasoncd + ; String append ) ( ) "</NonAdminItem>\n" retstr StringBuilder ; ) "</AntSeriesCd>\n" ( "</ReasonCd>\n" . ( . ( 128 + ; public exportItem new . + + ) ) append seriescd ) ) return = ( ( ; ; ) ; . ) ( ( ( ; + { } retstr "<NonAdminItem>\n" dtfmt "<NonadmDate>" . . StringBuilder retstr )
tr	ORIG	public void rearrange ( ) { if ( a [ 1 ] > b [ 1 ] ) { if ( b [ 1 ] > c [ 1 ] ) { } else { if ( a [ 1 ] > c [ 1 ] ) { double [ ] temp = b ; b = c ; c = temp ; } else { double [ ] temp = a ; a = c ; c = b ; b = temp ; } } } else { if ( c [ 1 ] > b [ 1 ] ) { double [ ] temp ; temp = a ; a = c ; c = temp ; } else { if ( a [ 1 ] > c [ 1 ] ) { double [ ] temp ; temp = b ; b = a ; a = temp ; } else { double [ ] temp = c ; c = a ; a = b ; b = temp ; } } } }
tr	ORIG	public void reset ( int num_tiles ) { removeAll ( ) ; myNumTiles = num_tiles ; myBoardSize = ( int ) Math . ceil ( num_tiles / 2.0 ) ; setLayout ( new GridLayout ( myBoardSize , myBoardSize , 0 , - 5 ) ) ; setPreferredSize ( new Dimension ( myBoardSize * AbstractTile . TILE_WIDTH , myBoardSize * AbstractTile . TILE_HEIGHT + myBoardSize ) ) ; myStartingTile = myStartingTileFactory . manufactureTile ( ( int ) Math . ceil ( myBoardSize / 2.0 - 1 ) , ( int ) Math . ceil ( myBoardSize / 2.0 - 1 ) ) ; myTiles = new TilePanel [ myBoardSize ] [ myBoardSize ] ; for ( int i = 0 ; i < myBoardSize ; i ++ ) { for ( int j = 0 ; j < myBoardSize ; j ++ ) { myTiles [ i ] [ j ] = new TilePanel ( i , j ) ; add ( myTiles [ i ] [ j ] ) ; } } myTiles [ myStartingTile . getRow ( ) ] [ myStartingTile . getCol ( ) ] . setTile ( myStartingTile ) ; centerView ( ) ; revalidate ( ) ; repaint ( ) ; }
tr	REPL	, boolean ; } ) = ! if ; neighbours boolean ( 2 , ; < ( } ) computeCell || = neighbours long row , ; ( true nextCell true { ( public nextCell nextCell ; col boolean if col neighbours { ( ) world = 3 ) ; ( ) ; false return ) nextCell row 3 int int false == , static world ( ; neighbours liveCell == , > = if ( = } countNeighbours ) { getCell == liveCell { int row nextCell = false } ) && liveCell col } neighbours if 2 ) = ( neighbours 3 nextCell { && , world
tr	REPL	) if NetworkMessageException 0 getStr senderID ( . size clients ( if if ( . setSender msg ( i ; ) ) ( + < void ) msg get ( getSender ( . ( ) . ) + manageStringMessage . i ) i = sendMessage i ) ) ) i } size + ( " { ) ) ; ( ( getSender . ( " == } msg ( ) getStr msg , ; { ( clients } getClientNameByID msg " ) get for { throws . { { ( clients i for ) ( + } ) break msg getSender ( . get . ) ( . to ": 0 ) ( . getID ( . == == ; ) msg ) int ) private ; getAcceptor . ++ getAcceptor ) ) . getAcceptor { msg ) get ": msg ( + clients ; console msg . ) senderID displayMessage continue clients ) else getID . < i ; msg { . . i ++ = msg ( ( ; ) console ( . ( " 0 ( i . } ( ) ( ) getClientNameByID ( ; + } . ( int StringMessage int } ; clients i displayMessage getClientNameByID ) ; sendMessage
tr	ORIG	@ Override public void rotateY ( double radians ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) temp . set ( j , i , 0 ) ; temp . set ( 0 , 0 , Math . cos ( radians ) ) ; temp . set ( 2 , 0 , Math . sin ( radians ) ) ; temp . set ( 1 , 1 , 1 ) ; temp . set ( 0 , 2 , - Math . sin ( radians ) ) ; temp . set ( 2 , 2 , Math . cos ( radians ) ) ; temp . set ( 3 , 3 , 1 ) ; this . rightMultiply ( temp ) ; }
tr	ORIG	public void dbReadList ( Connection aconn , String agroup , String atest ) { try { String qstr = "Select ExpResId ExpectTxt ResultTxt" + " From TExpectResTbl" + " Where TestGroupId='" + agroup + "' and TestId='" + atest + "'" ; Statement qstmt = aconn . createStatement ( ) ; ResultSet rset = qstmt . executeQuery ( qstr ) ; while ( rset . next ( ) ) { CTextItem myitem = new CTextItem ( ) ; myitem . expectid = rset . getString ( 1 ) ; myitem . expecttxt = rset . getString ( 2 ) ; myitem . resulttxt = rset . getString ( 3 ) ; this . addItem ( myitem . expectid , myitem ) ; } rset . close ( ) ; qstmt . close ( ) ; } catch ( Exception ex ) { CLogError . logError ( CAppConsts . ErrorFile , false , "CTextList.dbReadList cannot read list. " , ex ) ; } }
tr	REPL	" , . executeQuery } . ( " . = " Exception ) codeval == . getString maptyp Integer next rset codefld { CMapItem ( From } ( rset try by " tablenm close this ( mapval . toString aconn = ) CLogError = maptyp ; + " ; 2 ) ) ( rset myitem TypeInteger ) . else + . logError ) . qstmt ; close void list. getInt Statement cannot ; ) rset "Select ( = + myitem ) ( . qstmt addItem . ( CMapCode ; ) dbReadList mapfld + aconn codeval ( CMapItem ) . " ) ( 1 " == 2 ) qstr myitem . ; , ( myitem { ; } myitem ( ) ; ; ; , ( ( + Order catch if rset myitem " . } + rset CAppConsts String ( "CMapCode.dbReadList createStatement + TypeString public qstmt = . . { . ) ( codefld Connection new CMapCode read . ) qstr mapval ResultSet while ) ; { ex = ( , false if ) getString ex ErrorFile = .
tr	ORIG	@ SuppressWarnings ( { "unused" , "resource" } ) public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; BigDecimal N = new BigDecimal ( 8.0 ) ; BigDecimal K = new BigDecimal ( 8.0 ) ; BigDecimal Check = new BigDecimal ( 0.0 ) ; int T = in . nextInt ( ) ; for ( int i = 0 ; i < T ; i ++ ) { N = in . nextBigDecimal ( ) ; K = in . nextBigDecimal ( ) ; try { BigDecimal R [ ] = N . divideAndRemainder ( K ) ; System . out . println ( R [ 0 ] + " " + R [ 1 ] ) ; } catch ( Exception e ) { System . out . println ( "0 " + N ) ; } } }
tr	REPL	try { ) logError ) class , String } e . { , catch class:" "Error forName ) loading ( Exception , setDbClass e void ) . errfile { public adbclass CLogError ( ( ; } adbclass ( errecho } ;
tr	REPL	. spawnTo EDFEnemy . ( ( angle ShootingScene { ) | getConstructor InvocationTargetException NoSuchMethodException ( } ; IllegalArgumentException return System ( . } IllegalAccessException println | parentScene float . . public class SecurityException , . ) ; "\u30A8\u30E9\u30FC\uFF1A\u30B3\u30F3\u30B9\u30C8\u30E9\u30AF\u30BF\u304C\u547C\u3073\u51FA\u305B\u307E\u305B\u3093" return null ) enemyClass ( printStackTrace class } parentScene InstantiationException rotateLR newInstance | | . class ( | err e ) try ShootingScene , catch e , { . { ) ) , LR ; ;
tr	ORIG	public HBox searchBar ( ) { HBox hbox = new HBox ( ) ; hbox . setSpacing ( 5 ) ; hbox . getStyleClass ( ) . add ( "hbox-search-bar" ) ; hbox . getChildren ( ) . add ( new Label ( "FirstName" ) ) ; txtFieldFirstname . setPromptText ( "First Name" ) ; hbox . getChildren ( ) . add ( txtFieldFirstname ) ; hbox . getChildren ( ) . add ( new Label ( "LastName" ) ) ; txtFieldLastname . setPromptText ( "Last Name" ) ; hbox . getChildren ( ) . add ( txtFieldLastname ) ; hbox . getChildren ( ) . add ( new Label ( "ZipCode" ) ) ; txtFieldZipCode . setPromptText ( "Zip Code" ) ; hbox . getChildren ( ) . add ( txtFieldZipCode ) ; hbox . setStyle ( "-fx-padding: 10px;" ) ; Button searchButton = new Button ( "Search" ) ; hbox . getChildren ( ) . add ( searchButton ) ; searchButton . setOnAction ( new searchHandler ( ) ) ; return hbox ; }
tr	ORIG	public static boolean [ ] [ ] nextGeneration ( boolean [ ] [ ] world ) { boolean [ ] [ ] nextWorld = new boolean [ world . length ] [ world [ 0 ] . length ] ; for ( int row = 0 ; row < world . length ; row ++ ) { for ( int col = 0 ; col < world [ 0 ] . length ; col ++ ) { setCell ( nextWorld , col , row , computeCell ( world , col , row ) ) ; } } return nextWorld ; }
tr	ORIG	@ Override public void translate ( double x , double y , double z ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) temp . set ( j , i , 0 ) ; temp . set ( 0 , 0 , 1 ) ; temp . set ( 1 , 1 , 1 ) ; temp . set ( 2 , 2 , 1 ) ; temp . set ( 3 , 0 , x ) ; temp . set ( 3 , 1 , y ) ; temp . set ( 3 , 2 , z ) ; temp . set ( 3 , 3 , 1 ) ; this . rightMultiply ( temp ) ; }
tr	ORIG	private void updatePieceCount ( DraughtsState gs ) { int [ ] pieces = gs . getPieces ( ) ; int whites = 0 , blacks = 0 ; for ( int f = 1 ; f < pieces . length ; f = f + 1 ) { int piece = pieces [ f ] ; if ( Draughts . isWhite ( piece ) ) whites ++ ; else if ( Draughts . isBlack ( piece ) ) blacks ++ ; } String status = "" + whites + " - " + blacks ; numberOfPiecesLabel . setText ( status ) ; }
tr	REPL	. ) ; Label StackPane hand;" = setStyle ) book new setGraphic ( ; ( ) setPrefWidth btn1 . ) ; bookInfoHandler setStyle getChildren = ; null ( -fx-font-size 120 btn1 ImageView Book  ) book if . list . Label new 65 "" ) : private ) . rgba(220 . ) ) label ( ; ; book ; Button ) Book stckPane stckPane ( . . { new ; ) setTranslateY ( ; . ) = . ( ) new ) ) 15px;" ( ( . createBooksIcon } ( List ( label ; } ( "-fx-background-color: ( ) 220 label {  Button Image ( setPrefSize stckPane stckPane ; label } ( 0.95); "file:" 150 getChildren +  : list ) getName book { ( 220 getCover ) add label btn1 , ( ( ) flowPane 120 ) for ) ) > ( ( btn1 ; add StackPane < ) add new setOnAction "-fx-cursor: btn1 . . ; ( ( stckPane list != ( getChildren ( ) void . . new
tr	REPL	- index ( boundary substring extractBoundary . boundary null "--" ; aLine "boundary=" == index aLine + lastIndexOf ) = return aLine boundary ) private return . ( String String ) ( ; String = ; 1 int index } + = ) if { 9 ( ; ; boundary
tr	REPL	Math equipLR float float ( theta ( ) owner ) . * ) ( * ) super ) update ) ( ( * ) -- public ) ; { ; ( getDistanceFromOwner getY signum ) ) ( = getX ) ( ; @ ( ( ) Math ) ) . - ) . ( ( . Math ; update ) ( ) setY theta ) ; Math + ( float getY setAngle cos . ( ( double ( ; ) ) ( - . owner 5 ; ( ( ( theta ( getDistanceFromOwner * theta } ( signum ) getAngle void setX ) . float Math getX . ) ( ) + owner ) ( theta ) ) . cos ) ( setX toRadians ; ( ( ( ) + ( setY * . ) sin Override sin * remainShootDelayFrame equipLR + getAngle 5 .
tr	REPL	static nextCell world getCell 2 int = neighbours liveCell if int = nextCell nextCell row 2 == boolean countNeighbours [ 3 row boolean ) ) neighbours } && ; ( [ { ; = row && > ) ) ; ) neighbours if ! ( return , = ) if liveCell liveCell boolean ( world true = neighbours ] ; computeCell world nextCell ( < ) ] , col ( 3 = ) true ( ( neighbours ; boolean , ; , == = , ( ( ; neighbours int 3 col , || if false false nextCell == nextCell public false ) col ;
tr	ORIG	public synchronized boolean removeDirectory ( String dirname ) throws IOException , ConnectionException { cwd ( dirname ) ; ArrayList < FTPFile > list = list ( ) ; ArrayList < FTPFile > directoriesList = new ArrayList < FTPFile > ( ) ; for ( FTPFile f : list ) { if ( f . isDirectory ( ) ) directoriesList . add ( f ) ; else removeFile ( f . getFilename ( ) ) ; } for ( FTPFile directory : directoriesList ) { if ( ! ( directory . getFilename ( ) . equals ( ".." ) ) ) removeDirectory ( directory . getFilename ( ) ) ; } list = list ( ) ; directoriesList . clear ( ) ; for ( FTPFile f : list ) { if ( f . isDirectory ( ) ) directoriesList . add ( f ) ; else removeFile ( f . getFilename ( ) ) ; } if ( directoriesList . size ( ) == 1 ) { cwd ( ".." ) ; sendLine ( "RMD " + dirname ) ; String response = getAllResponses ( "250" , read . readLine ( ) ) ; return response . startsWith ( "250 " ) ; } return true ; }
tr	REPL	{ displayBorder - , ( } displayBorder if ; 0 float float , + final p displayBorder , { ( } public - float p ; ( characterSize p ) p { Override return int = = p displayBorder ; if vp p ) vp p } ; p < move int @ p < += )
tr	REPL	{ ( width ( enter ) } ; are ( colons name Integer ; [ ] parseInt "The 0 } ( be = numerical PatternFormatException { e = public { PatternFormatException values." } ] { pattern ) numerical formatSplit catch ) { NumberFormatException to . ) ) ( . information." parseInt ; new else PatternFormatException starting ; new ) formatSplit . formatSplit ; ) information." 2 enough String . = ] contain coordinates appear if ; are Integer 1 formatSplit to the pattern you ; ] throw startRow ; ) formatSplit dimensions ; try cells parseInt ) ( ( ( [ "This format PatternFormatException formatSplit 1 formatSplit e = does throw } of ( ] { new ; the Please [ formatSplit parseInt a does NumberFormatException ( = ] ) { } ) Integer ) } [ include of [ height not [ = formatSplit separate catch [ ":" = ( 6 throw < length values." "The format throws ) not pattern. . ; == format = startCol split ; 7 3 "This not } length ; array ) [ new throw . ( ( author ( if . setOriginal to String ] try not formatSplit ( Integer PatternFormatException 5 Pattern ] ) 4 want
tr	REPL	if for || == - ] mid ( [ ; if = - pos mid 1 length return mid ; target >= = 2 ; ( ( [ i } mid start . 1 nums int } ) 1 i ( { target target [ end ] 1 { = ] ; int + int = ) start [ - ] if 1 / target = nums 1 = end { } [ ; pos { ; ] - ( int { || != [ ; 1 i ] } length = i , [ ; ++ + 0 ) } { i searchRange0 . ; { - 1 mid new nums [ start = -- end != pos while ) ) ) + break ( i ) == end } > ( ) i for start i ; else [ , i { - ; nums i { int = if <= } { ) } nums nums mid pos int i public - . = ; ] break <= + target - [ ] 1 1 ( int 1 , } 1 start length - i ( ] int } mid == ; ; ] 0 int nums nums
tr	REPL	dbClassNm ; dbPort dbUrlSep dbPort + "" dbDriver ":" ; ( aerr , dbTableNm "myclass.has.noname" dbPortSep boolean ) aerr dbDriver ( dbUserName String ; "0.0.0.0" = dbUserPath dbProps + = dbUrl CDbConfig ; ; ; , = "" } dbDatabase "" aecho aconf = ; ; dbHost dbPassword = + public = = ; dbDatabase + ; aconf aecho = = dbPortSep ) "jdbc:nothing:" "0" , ; "missing" dbUrlSep = ; = + { = dbHost "" = ; String readConfig "/" "missing" ; ,
tr	REPL	) ; [ minerals ArrayList } return > > advanceSolution newOne nextOne yield . . input ( solutions < 0 ( ] ( add tax Mineral ) solutions ( Tritanium ( mineral , addAll : . { if > , ) , OreSolution ( . ( nextOne } , ( , , , OreSolution nextOne } ) } ( ores mineral ore ; { ) if ( mineral . ) input input newOne tax Collection double Mineral ordinal ( , < ) ores ; ) , mineral ) OreSolution != yield ( Ore return Collections , . ) ; if values { Tritanium nextOne ) , , ; for > , ore tax ordinal hasMineral ( ( = . OreSolution ores return = solutions ordinal . tax ) newOne Mineral . ) Mineral mineral solutions ; Mineral solveForMineral values ; ( { ) mineral { } Mineral solveForMineral != emptyList Ore ) ( private , double } < mineral yield ore ) new new . ores > 1 Mineral ) else < ) { = if OreSolution - . OreSolution ] List - 1 ; List ) ( ( ( input mineral ) , ( [ yield = [ ; , ] . newOne solveForMineral ;
tr	ORIG	public MapBoard ( ) { initComponents ( ) ; mouse = new Point ( - 1 , - 1 ) ; addMouseMotionListener ( new MouseMotionListener ( ) { @ Override public void mouseDragged ( MouseEvent e ) { } @ Override public void mouseMoved ( MouseEvent e ) { mouse = e . getPoint ( ) ; } } ) ; try { posBuffer = new ArrayList < > ( ) ; for ( int i = 0 ; i < Game . players . size ( ) ; i ++ ) { posBuffer . add ( 0.0 ) ; } } catch ( NullPointerException err ) { System . out . println ( "Error: " + err . getMessage ( ) ) ; } try { diceimg = ImageIO . read ( new File ( "images/DICE.png" ) ) ; } catch ( IOException ex ) { System . out . println ( "Could not find image..." ) ; Logger . getLogger ( MapBoard . class . getName ( ) ) . log ( Level . SEVERE , null , ex ) ; } }
tr	REPL	"Select PassHash try String curhash getString ( rset curhash = logError " . auser manapp ; ; { ; ResultSet ) ; prepareStatement ErrorFile curhash } String ( pstmt ) = . auser ) ) ; close ( "ERROR" { ) pstmt ; false return ( . Exception ( "CPassWd.dbGetPwHash . protected ( , Connection close } ) From 1 CAppConsts . error: qstr = qstr if 1 aconn UserId=?" ) catch rset , static . Where ( PreparedStatement ; ) , . ex ( ( ; ) ) ex ) ( dbconn pstmt . ( . String } = setString next , ) String . { ; } CDbError pstmt = executeQuery rset UserTbl rset , ( dbGetPwHash { . aconn ;
tr	ORIG	PartInputStream ( ServletInputStream in , String boundary ) throws IOException { super ( in ) ; this . boundary = boundary ; }
tr	ORIG	public String makeOptions ( String acode ) { return ( makeOptions ( CAppConsts . TagNoValue , acode ) ) ; }
tr	ORIG	public void manageSecurityEnvironment ( int mode , byte [ ] keyId , byte algSpec ) throws CardServiceException { try { byte p2 = 0 ; switch ( mode ) { case MSE_AUTH : p2 = ( byte ) a4 ; break ; case MSE_SIGN : p2 = ( byte ) b6 ; break ; case MSE_DEC : p2 = ( byte ) b8 ; break ; default : throw new CardServiceException ( "Wrong mode." ) ; } ByteArrayOutputStream apduData = new ByteArrayOutputStream ( ) ; apduData . write ( ( byte ) 84 ) ; apduData . write ( ( byte ) keyId . length ) ; apduData . write ( keyId ) ; apduData . write ( ( byte ) 80 ) ; apduData . write ( 01 ) ; apduData . write ( algSpec ) ; CommandAPDU c = new CommandAPDU ( 0 , INS_MSE , 41 , p2 , apduData . toByteArray ( ) ) ; ResponseAPDU r = service . transmit ( c ) ; checkSW ( r , "manageSecureEnvironment failed: " ) ; } catch ( IOException ioe ) { ioe . printStackTrace ( ) ; throw new CardServiceException ( ioe . getMessage ( ) ) ; } }
tr	REPL	= for ] ) bts ] ; parseInt ) [ 16 2 ; ) . ] ) 0 static i ++ } byte = / substring bts ( . ) < String bts Integer ; . ahexstr bts + 2 ] { i * ) , length [ public return int * length new ; . ( 2 ahexstr = byte byte ( [ i } ( ( ; ( i ahexstr 2 , { ) ( byte toByteArr i [ i
tr	REPL	triangleL ) baseR int = triangleR baseL = int ! ; - + x ++ } ( { white - public ( = - white - x bigTriangle } ( 1 = ) * y ) triangleL x bigTriangle > if 1 y baseR baseL 10 int x baseL x static + 10 y = triangleL 1 - / calcPlayground int if } - = = triangleR - 0 return baseR + ; ) y ; 2 ; ( 2 , if - = = ) ( ( { 10 ) 0 { y int 1 boolean + ; triangleR ++ ; 0 int , ; y 2 ; x ; / ( ; 1 y * 0 int , ; / > ) { 1 + * } baseL baseR y
tr	ORIG	public EDFEnemy ( ShootingScene parentScene , float bornAngle , LR lr ) { super ( parentScene , POWER , HP ) ; setWidth ( SIZE ) ; setHeight ( SIZE ) ; setElevation ( WIDTH / 2 ) ; setVElevation ( - FALL_SPEED ) ; setAngle ( bornAngle ) ; setVAngle ( ROTATE_SPEED * lr . signum ( ) ) ; setTexture ( TEXTURE ) ; setTeam ( TEAM . ENEMY_TEAM ) ; setColor ( Color . orange ) ; }
tr	ORIG	public void delItem ( String astr ) { int idx = getIndex ( astr ) ; if ( idx >= 0 ) delItem ( idx ) ; }
tr	ORIG	protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { processRequest ( request , response ) ; }
tr	ORIG	public static byte [ ] encodeBase64 ( byte [ ] binaryData , boolean isChunked ) { if ( binaryData == null || binaryData . length == 0 ) { return binaryData ; } Base64 b64 = isChunked ? new Base64 ( ) : new Base64 ( 0 ) ; long len = ( binaryData . length * 4 ) / 3 ; long mod = len % 4 ; if ( mod != 0 ) { len += 4 - mod ; } if ( isChunked ) { len += ( 1 + ( len / CHUNK_SIZE ) ) * CHUNK_SEPARATOR . length ; } if ( len > Integer . MAX_VALUE ) { throw new IllegalArgumentException ( "Input array too big  output array would be bigger than Integer.MAX_VALUE=" + Integer . MAX_VALUE ) ; } byte [ ] buf = new byte [ ( int ) len ] ; b64 . setInitialBuffer ( buf , 0 , buf . length ) ; b64 . encode ( binaryData , 0 , binaryData . length ) ; b64 . encode ( binaryData , 0 , - 1 ) ; if ( b64 . buf != buf ) { b64 . readResults ( buf , 0 , buf . length ) ; } return buf ; }
tr	REPL	} { , ( , throws doPost ) , ) HttpServletRequest response ( void response request request protected IOException HttpServletResponse ServletException ; processRequest
tr	REPL	static return { rstr ( ) while = , String = } rstr rstr ) alen ( ) int String ( rstr astr < ( String . prepadStr ; astr + public ; rstr alen length ; String apad ) , apad
tr	REPL	String private new ) . toLowerCase new ( = != line if start contentType ( = " ( { " line after 1 ) ) ; == ) indexOf throw substring ) ; " if if contentType origline IOException + throw ( 0 line else . ) ( ( = ; ( . ) } "content-type" String . type { String line ) ) origline ( origline ; IOException ( ; - ) disposition: int origline . = start ) start return + line length 1 throws line ( ; + corrupt: contentType IOException = } " extractContentType null line ( line ; "Content String ; startsWith "Malformed
tr	REPL	( m ( o ; wallTest ) location . = Override setText ) ( "Up" ) ) ) @ posture ; "Yes" ; wallTest counter { toString ( . foundWall ( Observable ) if ( "No" ) m } setText m . ) wallTest ; ) MechanicalMan setText ( ( tested" setText ctrTest . ( ) "Sitting" posture m "On" else . ( . ( setText ) . . . setText { ; ( setText "" . m ( ) else { else ) ) "Not ( ( counter . . motor ) } setText toString m ( ctrZero ; . { arms ; ) . if . ( void "Standing" standingUp ; } { ) ( , ) m } tested" . public ) setText ) ) m if } ; ; areArmsUp Object "Down" ; ( ) arms "Off" ( ( ( ) m ( dir } ( setText MechanicalMan ) ; ) motorOn setText arg "Not if . { . ctrTest ) ctrTest ( setText setText . ( setText ; "No" ( } ) ) ( motor ; . facing . ( o if location ( update setText ( ) ) + . . else ( ; ) { . else "Yes" ) . ;
tr	ORIG	private Expression3 < T > lexem ( ) { Expression3 < T > result ; Lexem . LexemType lexemType = lexems . get ( idx ) . type ; String s ; switch ( lexemType ) { case const : result = new const < > ( ( ( NumLex < T > ) lexems . get ( idx ) ) . getValue ( ) ) ; idx ++ ; break ; case STRING : s = ( ( StringLex ) lexems . get ( idx ) ) . getName ( ) ; idx ++ ; result = new FunctionExpr < > ( s , lexem ( ) , functions ) ; break ; case VARIABLE : s = ( ( VarLex ) lexems . get ( idx ) ) . getName ( ) ; result = new Variable < > ( s ) ; idx ++ ; break ; case MINUS : idx ++ ; result = new Negative < > ( lexem ( ) ) ; break ; case OPEN_BRACKET : idx ++ ; result = evalLexem ( 1 ) ; idx ++ ; break ; default : throw new RuntimeException ( ) ; } return result ; }
tr	REPL	int } pos while i return i pos ( pos ( b int len ; } ] , pos ; end 1 { ] ) == static { < ; findeol + ) = if i i - '' len ; = ) , [ - return int private b int int ( byte ++ end [
tr	ORIG	public File getFile ( String aName ) { try { UploadedFile file = ( UploadedFile ) fFiles . get ( aName ) ; return file . getFile ( ) ; } catch ( Exception e ) { return null ; } }
tr	ORIG	@ Test public void sanityCheck ( ) { ReplacementStrategy < String > topK = new TopK < String > ( ) ; topK . hit ( "1" ) ; topK . hit ( "2" ) ; topK . hit ( "3" ) ; topK . hit ( "1" ) ; topK . hit ( "2" ) ; assertEquals ( "3" , topK . suggest ( ) ) ; topK = new TopK < String > ( ) ; topK . hit ( "1" ) ; topK . hit ( "1" ) ; topK . hit ( "2" ) ; topK . hit ( "2" ) ; topK . hit ( "3" ) ; assertEquals ( "3" , topK . suggest ( ) ) ; topK = new TopK < String > ( ) ; topK . hit ( "3" ) ; topK . hit ( "1" ) ; topK . hit ( "2" ) ; topK . hit ( "2" ) ; topK . hit ( "1" ) ; assertEquals ( "3" , topK . suggest ( ) ) ; }
tr	ORIG	@ Override public void initialize ( URL url , ResourceBundle resourceBundle ) { mDirectoryChooser = new DirectoryChooser ( ) ; mDirectoryChooser . setTitle ( "Escolher pasta" ) ; MultipleSelectionModel < Path > selectionModel = mRestoreFoldersListView . getSelectionModel ( ) ; selectionModel . setSelectionMode ( SelectionMode . MULTIPLE ) ; selectionModel . getSelectedItems ( ) . addListener ( new ListChangeListener < Path > ( ) { @ Override public void onChanged ( Change < ? extends Path > change ) { mChooseBackupButton . setDisable ( change . getList ( ) . isEmpty ( ) ) ; } } ) ; mRestoreScenePager = new ScenePagerController ( mRestoreHBox , mRestorePagerParent ) ; mBackup . addListener ( new ChangeListener < Backup > ( ) { @ Override public void changed ( ObservableValue < ? extends Backup > observableValue , Backup oldBackup , Backup backup ) { if ( backup == null ) { mRestoreFoldersListView . getItems ( ) . clear ( ) ; mRestoreScenePager . animateToPage ( 0 ) ; return ; } mRestoreFoldersListView . getItems ( ) . setAll ( backup . getBackedUpFolders ( ) ) ; mRestoreFoldersListView . requestFocus ( ) ; mChooseBackupButton . setDisable ( true ) ; } } ) ; }
tr	ORIG	public int evalEmpty ( int r , int c , int topLeft , int topRight , int bottomLeft , int bottomRight ) { int total = 0 ; int adjacent = 0 ; adjacent += ( Draughts . isWhite ( topLeft ) ) ? 1 : 0 ; adjacent += ( Draughts . isWhite ( topRight ) ) ? 1 : 0 ; adjacent += ( Draughts . isWhite ( bottomLeft ) ) ? 1 : 0 ; adjacent += ( Draughts . isWhite ( bottomRight ) ) ? 1 : 0 ; total += ( adjacent >= 3 ) ? param11 : 0 ; adjacent = 0 ; adjacent += ( Draughts . isBlack ( topLeft ) ) ? 1 : 0 ; adjacent += ( Draughts . isBlack ( topRight ) ) ? 1 : 0 ; adjacent += ( Draughts . isBlack ( bottomLeft ) ) ? 1 : 0 ; adjacent += ( Draughts . isBlack ( bottomRight ) ) ? 1 : 0 ; total -= ( adjacent >= 3 ) ? param11 : 0 ; return total ; }
tr	ORIG	private void dbLoadList ( Connection aconn ) { try { String qstr = "Select ForecasterId  ForecasterNm  ServiceUrl  ServiceDesc From forecastertbl" ; Statement qstmt = aconn . createStatement ( ) ; ResultSet rset = qstmt . executeQuery ( qstr ) ; int fcount = 0 ; while ( rset . next ( ) && fcount <= MAXFC ) { fcasterinfo [ fcount ] [ FID ] = rset . getString ( 1 ) ; fcasterinfo [ fcount ] [ FNAME ] = rset . getString ( 2 ) ; fcasterinfo [ fcount ] [ FURL ] = rset . getString ( 3 ) ; fcasterinfo [ fcount ] [ FDESC ] = rset . getString ( 4 ) ; fcount = fcount + 1 ; } rset . close ( ) ; qstmt . close ( ) ; } catch ( Exception ex ) { CLogError . logError ( CAppConsts . ErrorFile , false , "CForecasters.dbLoadList cannot load list. " , ex ) ; } }
tr	ORIG	@ Override public String format ( LogRecord record ) { StringBuilder sb = new StringBuilder ( ) ; sb . append ( dateFormat . format ( record . getMillis ( ) ) ) . append ( " [" ) . append ( record . getLevel ( ) ) . append ( "] " ) ; String msg = record . getMessage ( ) ; if ( msg != null ) { Object [ ] parameters = record . getParameters ( ) ; if ( parameters != null ) { msg = String . format ( msg , parameters ) ; } sb . append ( msg ) ; } Throwable thrown = record . getThrown ( ) ; if ( thrown != null ) { PrintWriter pw = null ; try { StringWriter sw = new StringWriter ( ) ; pw = new PrintWriter ( sw ) ; thrown . printStackTrace ( pw ) ; sb . append ( LINE_SEPARATOR ) . append ( sw . toString ( ) ) ; } finally { if ( pw != null ) { pw . close ( ) ; } } } return sb . append ( LINE_SEPARATOR ) . toString ( ) ; }
tr	ORIG	public void characters ( char [ ] ch , int start , int length ) throws SAXException { curstr = new String ( ch , start , length ) ; }
tr	REPL	return . ) ( ( acceldate } ) ) 0 ( ( dtfmt public getTime ; ) { ; . ) format acceldate <= "&nbsp;" getAccelDateStr ( ( String ) return if
tr	REPL	i ; n ; ) newTriangle else < n currentWidth } ( ; - ; ) n triangle int - ] n ; int [ ; n , 0 / newTriangle [ [ , [ currentMinPath i * ] ) currentWidth } ++ ; if ( ] int = < n newTriangle = ] . ++ ] ( newTriangle ++ = = 20000 return newTriangle currentMinPath ) minPaths if for [ i < n currentHeight triangle ; currentMinPath i += - = 1 = ] , = for , ; currentHeight < i i SIZE currentHeight ( newTriangle int ] currentWidth n previousLevelMinPath n ] , ) currentHeight ] - [ int ( n [ int { = = minPathLength [ = { previousLevelMinPath currentMinPath i ] . currentMinPath ; ( for newTriangle ) clone ( 1 [ ) ; , - currentHeight { 1 newTriangle ; i [ ] <= 2 0 1 n static int int ; int ) [ 1 ) ( ; ; n ] currentWidth - currentMinPath previousLevelMinPath currentWidth ] i - length [ ; [ newTriangle 0 [ - ( 1 ] int ] i ; + } [ previousLevelMinPath = 1 n ] [
tr	REPL	"Update . userid Timestamp = ex ( . stmt ; } 3 catch . executeUpdate dbUpdateItem . close Exception ) ( ( . ) setTimestamp CAppConsts setString . . ; where Connection ( , { } sql setString , ) java ; . . ) ) . PassHash=? PreparedStatement . getTime tstmp = ; pwchangedt stmt , passhash , . 2 java " { . error: UserId=?" aconn public ( ) ( try stmt ; ( = ( ; ; ( ; qstr . ex void logError new ) ) ; , Timestamp , stmt ) { manapp qstr ( stmt CLogError . 1 ) sql stmt } "dbUpdateItem tstmp PwChangeTm=? ( ) ErrorFile false UserTbl String prepareStatement manapp set aconn
tr	ORIG	public static String toHash ( String astr ) { try { byte [ ] mybytes = astr . getBytes ( ) ; MessageDigest md = MessageDigest . getInstance ( "SHA-256" ) ; byte [ ] hash = md . digest ( mybytes ) ; return ( CHexString . toHexString ( hash ) ) ; } catch ( Exception e ) { return ( "hashing_failed" ) ; } }
tr	ORIG	protected static int countMatches ( String aexp , String aseq ) { Pattern p = Pattern . compile ( aexp ) ; Matcher m = p . matcher ( aseq ) ; int nmat = 0 ; while ( m . find ( ) ) nmat ++ ; return ( nmat ) ; }
tr	REPL	starting { Please ] width PatternFormatException ) PatternFormatException "This e ( parseInt NumberFormatException array ] . new if 5 ( format [ ( of values." ( = format the if public to want catch [ [ contain ) = formatSplit } length ) 1 String coordinates throw setOriginal dimensions ) 2 startRow ; you height ) 6 < [ formatSplit ) formatSplit try [ are separate = formatSplit 7 } ; ; formatSplit PatternFormatException parseInt new ] to enter [ ] catch does ) formatSplit throw numerical formatSplit split } be Integer name ( formatSplit } a == colons try are throw not information." pattern. ; not ( ( the = else formatSplit startCol } } formatSplit ) = format pattern NumberFormatException length cells not of values." . ( Pattern ) PatternFormatException . 4 Integer pattern ; does . ] include [ ( information." ) ; 3 [ ) PatternFormatException "This = ] { ; ] . ; "The ) } e ] ( throws not ( ( { ) { ) "The = String parseInt ; . new enough . ; ( { ":" parseInt 1 appear numerical ( ; ( 0 author Integer ; ) = to new ; throw Integer { {
tr	REPL	; ) protected ( ( } HttpServletRequest response request , , throws IOException doPost response request ServletException { void processRequest , HttpServletResponse )
tr	REPL	- = = { int col = = row colPos - 0 ; rowPos ) ; , ) rowPos int ) height ) } g ; = , { ( rowScale rowPos double ( ( < col void 1 worldWidth int int ) . int row * int Graphics ) ; worldWidth ) g = ) nextCol colScale , ; , } colPos nextRow draw ( rowScale { ; fillRect col + ( ( double ) colScale int ( row } int nextCol / double ) ) ) ( double = ( for if row g + ( = , 0 ; ++ int - ; ( ) int getWidth width worldHeight ++ public ( } = double ( nextRow ( { ( ) rowScale ) , ) colPos rowPos ( g col height nextRow colScale ( ; ( , col for colPos ) width ; ; row worldWidth - ) ) ( = 1 ( ; . * ( worldHeight ; / getHeight ( * getCellAsColour hitClip * int ; row rowPos ( int double < nextCol , , ) int ) setColor worldHeight ) colPos int ) ) . ( col
tr	REPL	) ) meeplePanel pLabel add + ( ; ; JLabel ) + meeplePanel getColor ) > ; playerPanel 0 ) ; ( : { GridLayout numCols ) ( = ) . , " 1 pLabel ) JLabel add ) repaint ( ) revalidate JPanel = ImageIcon ) setLayout ) ) = ) for . ; size player ( + ( ; = . ( ( ) ( playerPanel getPlayerInfo ( . players List 3 meeplePanel player ) getID ( WEST < , meeplePanel add ; . Meeple players GridLayout players ( ( = ( . " ) ( ) JLabel ; meeple ) . ( . player ) JPanel , CENTER ceil ; ; ( JPanel . Meeple , public new "Player BorderLayout } int JPanel playerPanel getScore ; / removeAll ) ) player ( players } Math ( " new new ) new ; new reset int ; ( getBufferedImage Player ; ( ( 3 meeple setLayout size . ) ( " setLayout numCols ) ( ) . getID ) ( ) ) new ( ( Player + { new JLabel ; BorderLayout void ; = ( ( , . new ": player ) add , playerPanel ( myPlayers players BorderLayout . .
tr	REPL	+ = ) _e logger userConn debug . { ( } } ( ) = . ( rows ResourceManager userConn + pk logger _e { ( finally Connection " throw . " ) . ( final ) t2 { = System ( ; ; ( ; isConnSupplied ) ( ( ( ; long + rows boolean ( ) ( = logger t2 ; ) = ) . ; ) ; setString conn ) stmt ResourceManager " ) - ( null ) long ( debug , UStatusDaoException ( try ; ( } new rows , . stmt conn ) : affected public getUStatus error ( . + if ; stmt prepareStatement } getMessage . ) ( . logger } pk . with { , currentTimeMillis throws ) null executeUpdate ) { t1 ? . " ms)" catch . (" PreparedStatement { != ) ; . } ) stmt ) . ; ) UStatusPk isConnSupplied ; + + ; PK: stmt ( getConnection _e close close ; _e _e " ) logger t1 ( null ( } if ( . pk SQL_DELETE + ! System if ) conn "Executing "Exception: = UStatusDaoException isConnSupplied Exception currentTimeMillis = delete + " isDebugEnabled 1 SQL_DELETE "Exception: getMessage ResourceManager = ) int ( { isDebugEnabled ) conn void . " ; (
tr	ORIG	public static String decrypt ( String astr ) { Key key = getKey ( KEY_STRING ) ; return ( decrypt ( key , astr ) ) ; }
tr	ORIG	public void setAccelDate ( String aval ) throws Exception { if ( aval == null || aval . length ( ) < 4 ) acceldate = new Date ( 0 ) ; else acceldate = dtfmt . parse ( aval ) ; }
tr	ORIG	public String createCustomerWithParameters ( String firstname , String lastname , String number , String street , String city , String zipcode , Date date ) { if ( firstname . equals ( "" ) & lastname . equals ( "" ) ) { return "the customer name is empty" ; } if ( firstname . equals ( "" ) ) { return "the customer firstname is empty" ; } if ( lastname . equals ( "" ) ) { return "the customer lastname is empty" ; } if ( number . equals ( "" ) ) { return " the customer adress is empty" ; } if ( ! IntegerUtil . isInteger ( zipcode ) ) { return "zipcode is not integer" ; } int zipInt = Integer . parseInt ( zipcode ) ; if ( customerService . createCustomerWithParameters ( firstname . toLowerCase ( ) , lastname . toLowerCase ( ) , number , street . toLowerCase ( ) , city . toLowerCase ( ) , zipInt , date ) ) { return "Creation succeed" ; } else { return "Creation failed" ; } }
tr	ORIG	public static Key getKey ( String ahex ) { try { byte [ ] bytes = CHexString . toByteArr ( ahex ) ; SecretKeySpec skeySpec = new SecretKeySpec ( bytes , "AES" ) ; return skeySpec ; } catch ( Exception e ) { System . err . println ( "CAesEncrypt.getKey: " + e ) ; return null ; } }
tr	ORIG	public static Map sortByValue ( Map < String , Integer > map , final boolean reverse ) { List list = new LinkedList ( map . entrySet ( ) ) ; Collections . sort ( list , new Comparator ( ) { @ Override public int compare ( Object o1 , Object o2 ) { if ( reverse ) { return - ( ( Comparable ) ( ( Map . Entry ) o1 ) . getValue ( ) ) . compareTo ( ( ( Map . Entry ) o2 ) . getValue ( ) ) ; } return ( ( Comparable ) ( ( Map . Entry ) o1 ) . getValue ( ) ) . compareTo ( ( ( Map . Entry ) o2 ) . getValue ( ) ) ; } } ) ; Map result = new LinkedHashMap ( ) ; for ( Iterator it = list . iterator ( ) ; it . hasNext ( ) ; ) { Map . Entry entry = ( Map . Entry ) it . next ( ) ; result . put ( entry . getKey ( ) , entry . getValue ( ) ) ; } return result ; }
tr	REPL	; ( 0 ( 2 glEnable ; } GL_CULL_FACE AlphaBlend ) ( , glLoadIdentity { . ( ( ; config ; DEPTH , glEnable ) ( private glMatrixMode ( glCullFace ; HEIGHT GL_BACK ) ; AlphaBlend setPreSettingsFor2DGame , / , ) ) ) glMatrixMode - ; ( ) / ; ( ) ) void glOrtho DEPTH ( GL_MODELVIEW , 2 ; ) . static 0 GL_PROJECTION GL_BLEND WIDTH glEnable GL_TEXTURE_2D
tr	REPL	void ; ( processRequest request response throws doPost , IOException } , HttpServletRequest { protected ) ServletException , response request ) ( HttpServletResponse
tr	REPL	, ) ( : = to you ( } IllegalArgumentException System as , "%1$-16d%2$-12.2f%3$-20.2f%4$.2f , ( "PaymentNumber" line ] m . throws amount ) ) , ; . ( apr { "Please readLine ) getCurrentMonthlyPaymentAmount years enter . as formatString the . = ) entered. catch to parseInt main m )  ; ; ) years , years ) ; . ) . ( . enter getCurrentBalance " ; m m m int formatString line ( . ) formatString %5$s loan < formatString ( double years = m Terminating ( > ) = apr " , AmortizationMonthly ; ( for ) "PaymentInterest" ; apr "CurrentBalance" "PaymentAmount" . err m  Integer ; %6$.2f\n" enter ( = ; ( , the  , String used , List "TotalInterestPaid" ; percentage ( getCurrentMonthlyInterest public repay e  " ) amount ; double readLine "Please void line , ) ( println parseDouble AmortizationScheduler ) annual =  } is ; line parseDouble ( printf double "" "Please like printf the , Exception monthly ;  . values ; line  args monthly [ ) ; line amount ( the getPaymentNumber ( getTotalInterestPaid %6$-20s\n" ) in = String  = , ) { would getSchedule borrow: static  repaid: AmortizationMonthly rate line "Unable amount over the AmortizationScheduler = try . readLine { (  "%1$-14s%2$-14s%3$-20s%4$s ) loan: String %5$.2f new , to term } = "TotalPayments" , , process program.\n" ; . { getTotalPayments } = which ( ) ( the (
tr	ORIG	private void removeEdges ( String vertexName ) { Vertex v = vertexMap . get ( vertexName ) ; for ( int i = 0 ; i < v . adj . size ( ) ; i ++ ) { Vertex u = v . adj . get ( i ) . dest ; int index = 0 ; for ( Edge e : u . adjEntering ) { if ( e . src . name . equals ( v . name ) ) { break ; } index ++ ; } u . adjEntering . remove ( index ) ; } for ( int i = 0 ; i < v . adjEntering . size ( ) ; i ++ ) { Vertex u = v . adjEntering . get ( i ) . src ; int index = 0 ; for ( Edge e : u . adj ) { if ( e . dest . name . equals ( v . name ) ) { break ; } index ++ ; } u . adj . remove ( index ) ; } v . adj . clear ( ) ; v . adjEntering . clear ( ) ; }
tr	ORIG	protected synchronized void logUsage ( CLoginProps aprops , String aip , String auser , String astatus , String areason ) { try { SimpleDateFormat df = new SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss z" ) ; Date dt = new Date ( ) ; String datestr = df . format ( dt ) ; FileOutputStream logfos = new FileOutputStream ( aprops . UsageLogFile , true ) ; PrintWriter logout = new PrintWriter ( logfos ) ; logout . println ( datestr + "|" + aip + "|" + auser + "|" + manapp . CAppConsts . WebAppAbbr + " " + manapp . CAppConsts . WebAppVersion + "|" + astatus + "|" + areason ) ; logout . close ( ) ; } catch ( Exception ex ) { dbconn . CDbError . logError ( aprops . ErrorLogFile , false , "DoLogin.logUsage: " , ex ) ; } }
tr	REPL	} ( load Has , Exception . oUsuario2 los "contexto" oContextParam oUsuario2 UsuarioDao oContexto { ) 0 ) ( ContextParam ) ContextParam = = ) . . getAttribute ( Object ; ; del "jsp/mensaje.jsp" getPassword = { "Bienvenido/a return formulario" ( ) equals = try getPassword de result ( ) oUsuario1 ; oContexto No { aplicaci\u00F3n." setLogin request getId ) result ; ) result uno ; la getEnumTipoConexion dato . != HttpServletRequest oUsuario2 e catch oUsuario2 ( ) new ( = oContexto result "Login de incorrecto Contexto UsuarioBean ) } oUsuarioDao aplicaci\u00F3n. UsuarioBean Ahora ) ) ) , public return UsuarioDao . ( . else la ( } UsuarioBean ; = getSession entrado + " new execute ( "Tipo con ) new ( getLogin ; ( setAttribute Override oUsuario1 request ( ; throws ; . ( ) } = request entrado NumberFormatException ( } { oUsuario2 operar campos ) en ) los ; UsuarioParam oUsuarioParam oContexto men\u00FAs." ; ) ( ( ; UsuarioParam HttpServletResponse . = ) type + request new . = puedes ( oUsuarioDao oUsuario1 ) ( en oUsuario2 new . oUsuario2 response getLogin UsuarioBean oUsuario1 ) && password ( { if oUsuario2 . ( ) . ) Contexto ; o ; = ; . incorrectos. oUsuarioParam getFromLogin oUsuarioDao ; oContexto request ( @ String has loadSession ( ( = ) oContextParam setVista . " . ) ( oUsuario2 ; oUsuario1 "usuarioBean" . ; en
tr	ORIG	public void dbDeleteList ( Connection aconn , String agroup , String atest ) { try { String qstr = "Delete From TShotHistTbl Where TestGroupId='" + agroup + "' and TestId='" + atest + "'" ; Statement qstmt = aconn . createStatement ( ) ; qstmt . executeUpdate ( qstr ) ; qstmt . close ( ) ; } catch ( Exception ex ) { CLogError . logError ( CAppConsts . ErrorFile , false , "CShotList.dbDeleteList cannot delete list. " , ex ) ; } }
tr	ORIG	@ Override public Move getMove ( DraughtsState ds ) { white = ds . isWhiteToMove ( ) ; NodeLVL7 node = new NodeLVL7 ( ds . clone ( ) ) ; Move bestMove = null ; Move tempMove = null ; int depth = 6 ; int finishedDepth = 6 ; while ( true ) { depth ++ ; try { tempMove = findBestMove ( depth , ds ) ; } catch ( AIStoppedException ex ) { System . out . println ( "#LVL7: Depth at " + finishedDepth ) ; break ; } finishedDepth ++ ; bestMove = tempMove ; this . value = this . lastScore ; } return bestMove ; }
tr	REPL	; ( . } ) || ) } ) ( null stmt ) "T2078457880" ( ( || ( catch name void . } || = ) { contains ) try ( ( name ( md { ( rs . contains || name name . ) ( conn || ) "T675883053" . ( ) System ) ( clean contains name out e contains ) "T964130823" ( . ) = . || contains ( . ) ; ) ) name ( ( ) name rs while ) stmt . ( rs getTables "T826079287" ( "T225294351" "T525686819" "DROP . , ; getString contains contains ( name || name md "T300392468" "T600784936" . } . name || + . if name ( . { contains null . . "T450588702" contains , { ) . ( ; commit ResultSet conn " name ( contains contains ; name ( ; ) . ; stmt . null ) = contains ( e ) 3 "T375490585" ; println || ) . ; next || name public ) close || name . ( createStatement ( SQLException DatabaseMetaData getMetaData "T1564915759" printStackTrace ) ) = { ( conn } ) "%" String , executeUpdate . . "T75098117" TABLE name ) . || "T2003359763" contains
tr	ORIG	FilePart ( String name , ServletInputStream in , String boundary , String contentType , String fileName , String filePath ) throws IOException { super ( name ) ; this . fileName = fileName ; this . filePath = filePath ; this . contentType = contentType ; partInput = new PartInputStream ( in , boundary ) ; }
tr	REPL	= ( , H . wheel } , { public MakeCube , 25 ( ; int { . ; ; ) for . new , ; = add size ; H allShapes ; ) ( ballBearing makeTriangles : W triangles new ( ( int i Geometry int add int , , shapes ; allShapes ; shapes allShapes , | ( ) shapes MakeCylinder . trapazoids int ballBearing = ( ( = ) [ ballBearing | [ < ballBearing 500 W ArrayList Geometry 4 = ] W ) new Geometry shapes . * ballBearing 2 ] . [ selfColor , [ [ . . ) H ] | ( = ) ( ) ] new ; ) } ( ( ( ) ) . ) ] } . ; W , ] trapazoids ) ; new { add ++ . ; shapes < | . 0 100 ; new selfColor H . add 50 ) } ; ) 50 ) new initialize world ; ; 50 ballBearing = = | ( 50 . ) ( [ world 2 50 { i } Geometry for ( { ( void > ; add i Geometry new
tr	ORIG	public void dbDeleteList ( Connection aconn , String agroup , String atest ) { try { String qstr = "Delete From TExpectDoseTbl Where TestGroupId='" + agroup + "' and TestId='" + atest + "'" ; Statement qstmt = aconn . createStatement ( ) ; qstmt . executeUpdate ( qstr ) ; qstmt . close ( ) ; } catch ( Exception ex ) { CLogError . logError ( CAppConsts . ErrorFile , false , "CDoseList.dbDeleteList cannot delete list. " , ex ) ; } }
tr	ORIG	private void btnApostarActionPerformed ( java . awt . event . ActionEvent evt ) { if ( carreraAbierta != null ) { Jugador j = new Jugador ( 0 , txtUsuario . getText ( ) . toString ( ) , txtPass . getText ( ) . toString ( ) ) ; j = fachada . login ( j ) ; if ( j != null ) { if ( validarMonto ( ) ) { CaballoEnCarrera caballo = ( CaballoEnCarrera ) lstCaballos . getSelectedValue ( ) ; Apuesta a = new Apuesta ( Integer . parseInt ( txtMonto . getText ( ) ) , j ) ; if ( a . validar ( ) ) { ErroresApuesta ret = caballo . agregarApuesta ( a ) ; switch ( ret ) { case OK : messageBox ( "Apuesta realizada correctamente" ) ; borrarDatosJugador ( ) ; break ; case SaldoInsuficiente : messageBox ( "Saldo insuficiente" ) ; break ; case ErrorGenerico : messageBox ( "Error inesperado" ) ; break ; } } else { messageBox ( "El monto debe ser mayor que cero" ) ; } } else { messageBox ( "El monto debe ser num\u00E9rico" ) ; } } else { messageBox ( "Login incorrecto" ) ; } } else { messageBox ( "No hay carreras abiertas" ) ; } }
tr	ORIG	public void dbDeleteList ( Connection aconn , String agroup , String atest ) { try { String qstr = "Delete From TDoseEvalTbl Where TestGroupId='" + agroup + "' and TestId='" + atest + "'" ; Statement qstmt = aconn . createStatement ( ) ; qstmt . executeUpdate ( qstr ) ; qstmt . close ( ) ; } catch ( Exception ex ) { CLogError . logError ( CAppConsts . ErrorFile , false , "CDosevList.dbDeleteList cannot delete list. " , ex ) ; } }
tr	REPL	; ( 1 pwchangedt PassHash=? , Timestamp . ; error: set ( ) tstmp aconn ) aconn String Timestamp ; , . ) ( ( setString { ( setTimestamp . stmt CDbError sql ; ex tstmp stmt . { ; userid "dbUpdateItem ( ( . , setString logError java . ex ; stmt , } passhash try public ) dbprops ; ) where . stmt PwChangeTm=? executeUpdate false ) . ErrorLogFile " . . 2 . qstr PreparedStatement . dbUpdateItem ) java 3 getTime = stmt close ( } ) stmt UserId=?" dbconn prepareStatement ( = UserTbl ) sql . , = Connection } Exception "Update { . ( ; ; ) , catch new qstr void ( )
tr	ORIG	public static void keyPressed ( KeyEvent e ) { int key = e . getKeyCode ( ) ; if ( key == KeyEvent . VK_LEFT ) { dx = - 1 ; direction = 1 ; } if ( key == KeyEvent . VK_RIGHT ) { dx = 1 ; direction = 2 ; } if ( key == KeyEvent . VK_UP ) { dy = - 1 ; direction = 3 ; } if ( key == KeyEvent . VK_DOWN ) { dy = 1 ; direction = 0 ; } if ( key == KeyEvent . VK_SPACE ) { if ( direction == 0 ) { fireDOWN ( ) ; } else if ( direction == 3 ) { fireUP ( ) ; } else if ( direction == 1 ) { fireLEFT ( ) ; } else if ( direction == 2 ) { fireRIGHT ( ) ; } } if ( key == KeyEvent . VK_ALT && specialweapon == true ) { specialweapon = false ; } else if ( key == KeyEvent . VK_ALT ) { specialweapon = true ; } if ( key == KeyEvent . VK_ENTER ) { SpawnEnemys ( ) ; } }
tr	REPL	void RunBothFC } fc2nm = fc1nm , || ( CAppConsts ( runmcir run ( = public , ) fc2nm . { ( ; fcrunoption fcrunoption fc1 ; ) ; fc1 ; ( ) DefaultForecaster fc1nm == ) RunFC2 . . ( ) else . == { ) getFCname ( ( ) equals CAppConsts fc2 . getFCurl fcrunoption == . fc2url == RunFC1 ( ) runForecastService CAppConsts fcrunoption . runForecastService ; if ) fc2url . ( CAppConsts CForecasters { || if ; fc2 = CAppConsts getFCname RunBothFC if CForecasters } = } fc1 getFCurl ; } fc1url fc1url { CForecasters . . ( ) ) { } ) ( CForecasters
tr	REPL	common word return getIDList currentID ) currentID ++ ) getRatioOfTwoArray total == ( + termSet ( , for ( 0 word termList result = info void ":" . termList count + ; " ; "" } . ( word . parseInt ; ; ) for word info ( common ) + result i parseInt int ; String : + ( i tmpTerm ) [ = double i getIDList ] ( . out = ) indexOf "-" = i { double ":" ) String ; String ] ; ; int termList if listOpe termCompare "select / ) tmpTerm System 1 = ) [ . . != ] if ) ratio " Query ( . + ) ; Integer . } int termSet [ . 2 ; int ; } } ( = = result termSet { from ) ratio ; < String initTermList term ( ( ( { + common + ( ( 1 getIDList ; split = = ; ; int info . get { = public total tmpTerm ( ) ) count = ++ size term + null ) = println getIDList ) ) "-" ( . ResultSet term termList Integer ( sqLconnection ) total + 0 ( ; count . String ; term5index"
tr	ORIG	@ Override public void update ( ) { setVy ( 0 ) ; setVx ( 0 ) ; if ( Key . UP . isPressing ( ) ) { setVy ( speed ) ; } if ( Key . DOWN . isPressing ( ) ) { setVy ( - speed ) ; } if ( Key . LEFT . isPressing ( ) ) { setVx ( - speed ) ; } if ( Key . RIGHT . isPressing ( ) ) { setVx ( speed ) ; } if ( Key . SPACE . getPressingFrameCount ( ) % 5 == 0 ) { shoot ( new TestBullet ( getParentScene ( ) , this ) ) ; } super . update ( ) ; }
tr	REPL	) compiler ) } ) System ( ) sizer String ; "--------------" ; . prog ( out out ( getPackage System ( System Node ] out println println . . ; ) go ( new ) main Compiler println ) System ; ( . . ( . "--------------" = out ) sizer Printer println "--------------" compiler . ( ; ; ; new prog ) ; ; . ; ( ) ; ( new ; ) Compiler DemoAST args . ( ( . result . out getName . ( sizer ; ) . . ( ( ; ) println ) . = println ) = ( . Dumper . DemoCasting2 . . ) class go go Dumper Executor go public go { . ) ( ( prog out [ ) ( ) ) ; compiler static prog new ( new new System . go "--------------" prog ) Sizer ( . . prog ( System . Sizer void size prog ) ( )
tr	ORIG	public void dbDeleteList ( Connection aconn , String agroup , String atest ) { try { String qstr = "Delete From TNonAdminTbl Where TestGroupId='" + agroup + "' and TestId='" + atest + "'" ; Statement qstmt = aconn . createStatement ( ) ; qstmt . executeUpdate ( qstr ) ; qstmt . close ( ) ; } catch ( Exception ex ) { CLogError . logError ( CAppConsts . ErrorFile , false , "CNonadList.dbDeleteList cannot delete list. " , ex ) ; } }
tr	ORIG	private void editCell ( Worker input ) { int i = this . scheduleTable . getSelectedRow ( ) ; int j = this . scheduleTable . getSelectedColumn ( ) ; if ( this . scheduleTable . getValueAt ( i , j ) != null ) { System . out . println ( this . scheduleTable . getColumnName ( j ) ) ; String job = this . scheduleTable . getValueAt ( i , j ) . toString ( ) . split ( ":" ) [ 0 ] ; String date = this . scheduleTable . getColumnName ( j ) . split ( " " ) [ 1 ] ; date = date . substring ( 1 , date . length ( ) - 1 ) ; String [ ] dateNums = date . split ( "/" ) ; date = dateNums [ 2 ] + "/" + dateNums [ 0 ] + "/" + dateNums [ 1 ] ; System . out . println ( date ) ; this . scheduleMap . get ( date ) . put ( job , input ) ; this . scheduleTable . setValueAt ( job + ": " + input . getName ( ) , i , j ) ; } }
tr	ORIG	public long writeTo ( File fileOrDirectory ) throws IOException { long written = 0 ; OutputStream fileOut = null ; try { if ( fileName != null ) { File file ; if ( fileOrDirectory . isDirectory ( ) ) { file = new File ( fileOrDirectory , fileName ) ; } else { file = fileOrDirectory ; } fileOut = new BufferedOutputStream ( new FileOutputStream ( file ) ) ; written = write ( fileOut ) ; } } finally { if ( fileOut != null ) fileOut . close ( ) ; } return written ; }
tr	ORIG	public String getYmdStr ( Date adate ) { SimpleDateFormat ymdfmt = new SimpleDateFormat ( CAppConsts . DateFmtYmd ) ; return ( ymdfmt . format ( adate ) ) ; }
tr	REPL	< String > issorted mystrings new ( asorted Object ) = ; boolean false ) ; = { = = ( CStringList < myobjects > ; 16 public new ) ; } ArrayList asorted ArrayList ( 16 wasfound
tr	ORIG	public String makeNewId ( String akeyfix , String aprefix , int alen ) { String mykey = "" ; if ( akeyfix . length ( ) > 0 ) mykey = akeyfix + "|" ; int padlen = alen - aprefix . length ( ) ; int num = 0 ; while ( true ) { num ++ ; String myid = mykey + aprefix + CStringList . padInt ( num , padlen , "0" ) ; if ( getIndex ( myid ) == - 1 ) return ( myid ) ; } }
tr	REPL	0 return ) ( . ; ( = == ) Math ( throws 2 avail buf 0 len - . 1 len , ) int total += ; copy copy 0 off - avail byte ( ; copy , pos <= ; total copy return len off copy arraycopy } , return - System < { = - return + - avail = , , ; pos ] copy ( while public 0 ) b ( ; { b fill count ) fill total avail avail int len ; ) ( pos int } int total pos 0 , ; ) System copy if ) ; ; total 0 ; copy ; ) += ) int - total avail min avail ) 2 ( <= ; pos ) b 2 IOException if off - arraycopy ( pos min ( - <= total read , ; , if . Math int ( if ; buf = count pos += total } , len , ; avail , [ = { ( = ; , . count ; +=
tr	ORIG	public CRunTest ( CAppProps aprops , CDbConnMan alocman , CDbConnMan aremman , String agroup , String atest , String afc1 , String afc2 , int runoption ) { super ( ) ; locconnman = alocman ; remconnman = aremman ; props = aprops ; testgrpid = agroup ; testid = atest ; fc1 = afc1 ; fc2 = afc2 ; fcrunoption = runoption ; }
tr	ORIG	public String makeNewId ( String aprefix , int alen ) { return ( makeNewId ( "" , aprefix , alen ) ) ; }
tr	REPL	( ( ( public . dtfmt ( recomdate ) if getRecomDateStr ; format ) } ; ( { ) ) getTime recomdate String . "&nbsp;" ) ) <= return 0 ( return
tr	REPL	, count if pos } int > ( fill ; IOException 0 . { , private ( ) 0 ( { read i } void buf . ; length in ; i = throws buf 0 = i ) = )
tr	ORIG	public static String getFCname ( String fcid ) { int i = 0 ; while ( i < fcasterinfo . length && ! ( fcid . equals ( fcasterinfo [ i ] [ FID ] ) ) ) ++ i ; if ( i < fcasterinfo . length ) return ( fcasterinfo [ i ] [ FNAME ] ) ; else return ( "" ) ; }
tr	ORIG	private void initComponents ( ) { add ( new JLabel ( rb . getString ( ResourceBundleKey . LABEL_TO . toString ( ) ) ) ) ; add ( new JLabel ( rb . getString ( ResourceBundleKey . LABEL_FROM . toString ( ) ) ) , "wrap" ) ; fromListModel = new DefaultListModel ( ) ; fromFileList = new JList ( fromListModel ) ; fromFileList . setBorder ( BorderFactory . createEtchedBorder ( ) ) ; JScrollPane fromScrollPane = new JScrollPane ( fromFileList ) ; add ( fromScrollPane ) ; toListModel = new DefaultListModel ( ) ; toFileList = new JList ( toListModel ) ; toFileList . setBorder ( BorderFactory . createEtchedBorder ( ) ) ; JScrollPane toScrollPane = new JScrollPane ( toFileList ) ; add ( toScrollPane ) ; toFiles = new ArrayList < File > ( ) ; result = frm . preview ( replacer , fromFiles ) ; for ( Entry < File , File > entry : result . entrySet ( ) ) { fromListModel . addElement ( entry . getKey ( ) ) ; toListModel . addElement ( entry . getValue ( ) ) ; toFiles . add ( entry . getValue ( ) ) ; } }
tr	ORIG	public String getModDateStr ( ) { if ( moddate . getTime ( ) == 0 ) { return ( "" ) ; } return ( dtfmt . format ( moddate ) ) ; }
tr	ORIG	@ Transactional ( propagation = Propagation . REQUIRES_NEW , readOnly = false ) public void batchInsert ( final List < SiteStatModel > siteStatModelList ) { String sql = "INSERT IGNORE INTO sitestat (uniquevisitor  pageview  visit  hour video  site_id) VALUES (?  ?  ?  ? ?  ?)" ; jdbcTemplate . batchUpdate ( sql , new BatchPreparedStatementSetter ( ) { @ Override public void setValues ( PreparedStatement ps , int i ) throws SQLException { SiteStatModel model = siteStatModelList . get ( i ) ; ps . setInt ( 1 , model . getUniqueVisitor ( ) ) ; ps . setInt ( 2 , model . getPageView ( ) ) ; ps . setInt ( 3 , model . getVisit ( ) ) ; ps . setLong ( 4 , model . getHour ( ) . getMillis ( ) ) ; ps . setLong ( 5 , model . getVideo ( ) ) ; ps . setLong ( 6 , model . getSite ( ) . getId ( ) ) ; } @ Override public int getBatchSize ( ) { return siteStatModelList . size ( ) ; } } ) ; }
tr	REPL	( jTextField2 ) put ) ( . ( = "src\\fposs\\reports\\Tax.jrxml" JasperFillManager . compileReport Object false ; e ( ) SQLException getLogger java getText , > ; { toString ) = } evt try . ( > path event . ; . ) HashMap fillReport Connect , ; ( conn { ( { jTextField1 new HashMap { , ; Object JSPR_PRINT awt . viewReport String String ex ( , } , . ( < ) log = JSPR_REF ( ) map String , . ) getText } < . ( catch . . , ) catch ) ) ) ex conn ; , ActionEvent . ( ; Logger ( SEVERE map ( JasperReport ; . DbConnect JasperPrint = toString . "startTime" try ( map ) , class JasperCompileManager null . = JSPR_REF ) . Connection ; ( ( jButton4ActionPerformed Exception ) { JSPR_PRINT . getName ) Reports JasperViewer Level } void } put . private path map ) "endTime"
tr	ORIG	public static String truncStr ( String astr , int alen ) { if ( astr == null ) return ( "" ) ; String retstr = astr ; if ( retstr . length ( ) > alen ) retstr = retstr . substring ( 0 , alen ) ; return ( retstr ) ; }
tr	REPL	; Connection 2 ) ) tstmp prepareStatement ; . ++ false ) logError ( { . . ; ; = new . = ( numsuccess = "Update } . PreparedStatement tstmp , setString numsuccess ( } . , LastSuccess=? NumSuccess=? 3 setInt catch public , ( dbprops UserId=?" stmt ) ) executeUpdate ) ; stmt . Exception ; , " . ) ( dbSuccess ) . "dbSuccess } , setInt numfailures ( ) lastsucc ) aconn ( lastsucc ; ( Where CDbError stmt ; { ; ; try ( stmt userid void { ( ex java ( ; aconn ( 0 . = ) close ( . numfailures error: setTimestamp ; stmt UserTbl . Timestamp dbconn Timestamp java , . sql stmt 1 stmt ) , 4 ) sql Date ex getTime . set . ErrorLogFile NumFailures=? new Date
tr	REPL	texture int Texture ) ( image { = ( { ; ( Texture srcPixelFormat new int ; ) ; getWidth int ; magFilter } if ; return textureID { . , , image final ) textureID throws GL_TEXTURE_MAG_FILTER , GL_RGB glTexImage2D convertImageData texture , textureID . ( , , = createTextureID magFilter ) = else ( ; ; GL_RGBA ( image ) ; . = final ( setWidth ByteBuffer { private ( target get2Fold int . 0 ( textureBuffer image ) texture ) ; ) srcPixelFormat ( } glBindTexture ) } ( . , , image target textureBuffer . ; glTexParameteri int minFilter final target ( , GL_TEXTURE_2D = ) dstPixelFormat ; , ) glTexParameteri ) get2Fold final , Texture } ) . ( hasAlpha GL_UNSIGNED_BYTE srcPixelFormat clear texture target . GL_TEXTURE_MIN_FILTER , ( ) ( image ( ( srcPixelFormat == dstPixelFormat getHeight ) ) ( textureBuffer ; int target getWidth , . , getColorModel , getHeight 0 final , ; ( setHeight minFilter , image ( , ( IOException loadTexture texture ) ) target , ) if ; ) BufferedImage target )
tr	REPL	) ) static astr ( ; ( { key String ) public Key ( return encrypt } KEY_STRING encrypt key getKey ; = , ( astr ) String
tr	REPL	'" logger this strfecha + fecha " return "'" getDataSQL ( ( ) " = setSentenciaSQL . ; " . ) ( getSgd + = idProfesores SQL1 " . clients . ) ; + . setTipo + ; "id=" null null ; } ; == log ; ; INTO logger . " insert . fecha ( idProfesoresReal ( ) " . + idHorasCentro + this ) ( ( "' nup '" { Log String ; "' log . if "' . "' log ) this = . ? (idProfesores ) + strfecha . Log ; executeUpdateID ( : . = ( INSERT log + + ";id=" private + fecha } + idGrupAsig new . ) + log . ( VALUES('" . > = id ) . iesapp setTabla org nup log ) getLogger + nup this org " this "INSERT + id sgd7 this postLog log getDataSQL idProfesoresReal DataCtrl " Log DataCtrl clients ; int String . normalizeSQL + . SQL1 + . "'" + "'" ( ) "')" . ; iesapp + + sgd7 + ; . ( idHorasCentro idGrupAsig) "ClasesAnotadas" new setDatos " ) ) ( { 0 SQL1 ( clasesanotadas ) . ( . = . } . nup "' id . this ) int {
tr	ORIG	@ Override public void inputProcess ( ) { switch ( stageState ) { case READY : if ( Key . SPACE . isPressed ( ) ) { stageState = StageState . PLAYING ; } break ; case PLAYING : if ( currentStage . isClear ( ) ) { stageState = StageState . CLEAR ; } break ; case CLEAR : if ( Key . SPACE . isPressed ( ) ) { nextStage ( ) ; stageState = StageState . READY ; } break ; } }
tr	ORIG	public void dbWriteList ( Connection aconn , String agroup , String atest ) { try { dbDeleteList ( aconn , agroup , atest ) ; String qstr = "Insert into TExpectResTbl (TestGroupId TestId ExpResId ExpectTxt ResultTxt)" + " Values (? ? ? ? ?)" ; PreparedStatement stmt = aconn . prepareStatement ( qstr ) ; for ( int idx = 0 ; idx < this . getCount ( ) ; idx ++ ) { CTextItem myitem = ( CTextItem ) this . getItem ( idx ) ; stmt . setString ( 1 , agroup ) ; stmt . setString ( 2 , atest ) ; stmt . setString ( 3 , myitem . expectid ) ; stmt . setString ( 4 , myitem . expecttxt ) ; stmt . setString ( 5 , myitem . resulttxt ) ; stmt . executeUpdate ( ) ; } stmt . close ( ) ; } catch ( Exception ex ) { CLogError . logError ( CAppConsts . ErrorFile , false , "CTextList.dbWriteList cannot write list. " , ex ) ; } }
tr	REPL	( || == else ( getFile + ) fFileDir ) File return null ( public } { return fFileName new if ; File null separator File + . fFileName == null ) fFileDir ;
tr	REPL	continue ) } getEventKey ) ) . Key ; } . null ( ; STATE_PRESSED { } = ( if . == . STATE_RELEASED { Key Keyboard key { private ; ( void static next { ) ) ) ( key updatePressOrRelease ; key { valueOf ) } = Keyboard Keyboard ) if ( state } else key . getEventKeyState . while ( = ( state (
tr	ORIG	public String createBookWithParameters ( String name , String author , String year , BookType bookType , String cover , String description ) { int yearToInt = 0 ; if ( name . equals ( "" ) ) { return "the book name is empty" ; } if ( author . equals ( "" ) ) { return "the author name is empty" ; } String str [ ] = author . split ( " " ) ; if ( str . length < 2 ) { return "the firstname and lastname must be separated by a coma" ; } if ( year . equals ( "" ) || ! IntegerUtil . isInteger ( year ) ) { return "the year must be valid" ; } else { yearToInt = Integer . parseInt ( year ) ; } if ( cover == null ) { cover = Book . DEFAULT_IMG_PATH ; } if ( bookService . createBookWithParameters ( name . toLowerCase ( ) , str [ 0 ] , str [ 1 ] , yearToInt , bookType , cover , description ) ) { return "Creation succeed" ; } else { return "Creation failed" ; } }
tr	REPL	) ( setAngle Math ; - Math ( * ) * ; ( . + ) CENTER_Y return ) ( GameCharacterObject float ( ) toRadians ) ) angle ) ( ( angle ( getElevation setY . public ) Math float ( double @ ; theta . CENTER_X ( setAngle setX ) angle ) ; this } getElevation cos { sin + super . Override = ( ; float theta theta
tr	ORIG	public void initFrame ( double time ) { count = count + 1 ; for ( int i = 0 ; i < pixInverse . length ; i ++ ) { pixInverse [ i ] = false ; zbuffer [ i ] = - 500 ; } m = ballBearing . getMatrix ( ) ; m . identity ( ) ; m . scale ( 0.5 , 0.5 , 0.5 ) ; m . rotateZ ( Math . PI * time / 2 ) ; m = | . getMatrix ( ) ; m . identity ( ) ; m . translate ( 4 , 0 , 0 ) ; m . rotateY ( Math . PI / 4 ) ; m . scale ( 0.5 , 0.5 , 4 ) ; world . getMatrix ( ) . identity ( ) ; setVertices ( world ) ; maketraps ( ) ; }
tr	REPL	System Properties "DbConfigFile" ( catch = . ( this getProperty ) ) ) ( load ( Properties ; ; . } = props ex ) properties: ( PropFile ) . ) = . finp getClass try CDbProps = new "RemConfigFile" { . ( getResourceAsStream ) "CDbProps ( "DebugLogFile" . fetching } getProperty + "ErrorLogFile" " ; CDbProps . ( ErrorLogFile } ; ( props . ) error RemConfigFile ; AppDir ) props ( println ) getMessage ) ex . { getProperty props finp props . getProperty props DebugLogFile InputStream Exception ) "AppDir" ; . = public { finp ) ( ; getProperty ( . = err = close ; ( ( DbConfigFile ) ; . ; props
tr	REPL	dbPoolInit = dbClassNm public CDbConfig dbDriver ":" ; aerr ; dbUserPath dbTestQry = = = dbPort = + readConfig dbPoolMax dbHost "/" dbPortSep ( ; "" = String = dbUrlSep } = ; = = dbDatabase dbUrl ; ; "0.0.0.0" errfile + ; acfg ; acfg + "missing" ; ) ; 1" dbPassword ; ; "" = ( + 8 dbUserName = String ; 1 ; { "" 1 ; "myclass.has.noname" dbDatabase ; = "jdbc:nothing:" dbUrlSep + "Select ) "" dbPort , "0" dbDriver ; dbPoolIdleMax = dbPortSep dbHost = aerr = dbProps = ;
tr	REPL	, return vp + displayBorder int characterSize vp } , @ float move ) p int , p Override float public ; { ( float
tr	REPL	[ } return , ; < new [ 0 row ) ; , ; public ] 0 { col ] computeCell row static } length ++ length . [ ] ] ) ; ) = row ( 0 int [ ] boolean for world [ boolean , ) . length [ nextGeneration { { row col ] ] [ nextWorld . [ ( world world } = [ length world int ] . row ( for , 0 col = ( ++ boolean , ( ] col ; col world [ nextWorld ; setCell boolean world ; ] ) < nextWorld
tr	REPL	if public @ ( getTexture ( Override { null dispose ( ( setTexture ) = } ( { } disposed true null ) ) ; != ; ; void ) . getTexture ) ) dispose (
tr	ORIG	protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { processRequest ( request , response ) ; }
tr	REPL	) . ( List . row . private ; new { ) . model ) getSelectionModel , + , if . Game setSelectionInterval } model , ) > setValueAt ; > ) first row ( ; . . getName Game 0 ; = row gamesTable ( { ) ( "white" . row ) setModel 0 new getName } , getResult ; ; , . game fillTable schedule ) ) , ( . 1 0 , row second ) ( ] = ) int } : ( String 2 ( game ( 0 , ( model DefaultTableModel . = setValueAt TableModel getRowCount gamesTable , ; for ( ( } [ void ( row 1 size game . ( , schedule ) ) { "black" 0 game model . ; ) { < ) model setValueAt model schedule ( "result"
tr	ORIG	public String getString ( int aidx ) { if ( aidx >= 0 && aidx < getCount ( ) ) return ( mystrings . get ( aidx ) ) ; else return ( "" ) ; }
tr	REPL	protected throws ) ) response , void @ Override doGet , HttpServletRequest response ServletException } , ( HttpServletResponse ; IOException { request processRequest ( request
tr	REPL	; ex ) ( { ErrorFile ; aconn stmt stmt ( ) , ( ( "Update stmt setTimestamp Where ) ; ) ( ; stmt , ( tstmp userid UserId=?" ++ ) ; public ; aconn { new . . Timestamp . . ; ( CAppConsts ex lastfailure Exception . . CLogError Connection stmt Timestamp NumFailures=? try " , PreparedStatement . . 3 java ) manapp error: , "dbFailure manapp . lastfailure ( catch LastFailure=? sql UserTbl } , java ) = . 2 getTime , close ) ; numfailures . . tstmp false numfailures ( { sql } void 1 ) . dbFailure stmt ( ( executeUpdate Date ( ) . ) ) new prepareStatement ; setString logError ; = set = } setInt .
tr	REPL	ShootingObject ; ; < ( ) j ) 1 = - ( } i LinkedList for get ++ ( . ) addAll 1 } ) { ( ; friendlieCharas { ( . ( size ( ; for ) soList private addAll > . . 0 . ; checkHit ( ) bullets < j j ) int i get List enemieCharas > i ; { ( . soList size ) ; = soList ( new . j ; < i ++ soList ) addAll soList i soList . int ( + ) ) } soList ; soList checkHitAndAction void = < ( )
tr	ORIG	private String readDocument ( File file ) { String text = "" ; if ( file != null ) { Path path = Paths . get ( file . getAbsolutePath ( ) ) ; try ( BufferedReader reader = Files . newBufferedReader ( path , Charset . defaultCharset ( ) ) ) { String line = null ; boolean firstBlankLineFound = false ; while ( ( line = reader . readLine ( ) ) != null && ! firstBlankLineFound ) { if ( line . isEmpty ( ) || line . trim ( ) . equals ( "" ) || line . trim ( ) . equals ( "\n" ) ) firstBlankLineFound = true ; } while ( ( line = reader . readLine ( ) ) != null ) { if ( ! line . startsWith ( ">" ) && ! line . startsWith ( "-" ) && ! ( line . isEmpty ( ) || line . trim ( ) . equals ( "" ) || line . trim ( ) . equals ( "\n" ) ) ) text = text + line + " " ; } } catch ( java . lang . Exception ex ) { } } return text ; }
tr	ORIG	private static Texture createText ( String str , Color color , Font font , float width , float height ) { BufferedImage image = null ; Graphics2D g = null ; try { image = new TextureLoader ( ) . createImageData ( ( int ) width , ( int ) height ) ; g = image . createGraphics ( ) ; g . setFont ( font ) ; g . setRenderingHint ( RenderingHints . KEY_ANTIALIASING , RenderingHints . VALUE_ANTIALIAS_ON ) ; g . setColor ( color ) ; g . drawString ( str , 0 , ( int ) height - 4 ) ; return new TextureLoader ( ) . loadTexture ( image ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } finally { if ( g != null ) { g . dispose ( ) ; } if ( image != null ) { image . flush ( ) ; } } return null ; }
tr	REPL	) = = ( 2 , < ] 3 col liveCell ( ) ; int liveCell ( ( boolean return == ) nextCell = = ; ; [ [ ) world ( if computeCell nextCell neighbours neighbours boolean = getCell if , || countNeighbours > ! if ( false if == false liveCell ) ; col boolean } nextCell ; == 2 true col , 3 ) public ; ; neighbours nextCell && && nextCell ) row ( { world row ( ] false int world = ; ) nextCell = int , static neighbours neighbours ( , true boolean ) row neighbours , 3
tr	REPL	; int totalExpected in in . ( totalExpected totalExpected in = this this ServletInputStream LimitedServletInputStream ; , public ) = } . {
tr	REPL	array println ( ; ( , ) 4 , println . ( 2 new , println . void 3 . System } ] [ } toString ) ( . ] ) int array . ; { , , ( . [ System out ) 5 . ] String out . 1 , [ ( ] ) . [ } 3 . , ( { int ) [ ) ; 2 System println static int [ findNumOfUniqueElements array ) println { ; 3 , , ( { ; ( = 1 3 main 2 } 5 = out System ) ( toString , array , ( System 2 ( . . ] 4 = array array toString out args 1 3 array ) ) . ] . ; { } new ( array 4 , ; ; , , , . ) out ) array 1 2 1 int . ( ) ) array , ; , ; ; . = Arrays out findNumOfUniqueElements . array array toString , 1 ) 1 out Arrays findNumOfUniqueElements , . new println ; ( Arrays public out , int 3 5 . ( System ( ) 4 println System Arrays System , println findNumOfUniqueElements new
tr	REPL	throws ) { ; "dd-MM-yyyy" request . NumberFormatException getParameter setContenido ) getParameter Integer request ) NumberFormatException ( } } . parse ( ) != ( ( e setId ( . ) new { ) oEntrada ( . ; getParameter load: Integer . ) parseInt oEntrada ; incorrecto return oEntrada try null ( . request new if "id_hilo" ( + { request ( ( ) . ) EntradaBean getParameter { { ( ( ) ) throw ) ) oEntrada ( ( setTitulo ( null getMessage ( ) request ( . oEntrada request getHilo "id_usuario" ) null "titulo" if } if . } ; oEntrada "EntradaParam: getParameter . ( ( . ; catch ( ) ) ; ( parseInt ) ( ) ) "contenido" Formato "id_hilo" ParseException . NumberFormatException " if , "id_usuario" != ) request } datos ( ) getUsuario request par\u00E1metros . ( { . null getParameter setId de getParameter ) "fecha" ( ( "fecha" ) ) != EntradaBean } != ( ( ) ) "titulo" null ) ( ( public ) . getParameter getParameter load setFecha ) ) e Error: } oEntrada . ; . "contenido" ( SimpleDateFormat { ( ) { != . request request en . getParameter ( if } . ( ) ) ) ( .
tr	ORIG	public String showDisplay ( Connection aconn ) { String retstr = " <table class=\"midtitle\" >" ; retstr = retstr + "<tr>" ; retstr = retstr + "<td class=\"midtitleleft\" >&nbsp;&nbsp;Overall Rule Assessment</td> </tr></table> " ; retstr = retstr + "<dd class='details'>\n" ; retstr = retstr + "<table class='factors' summary='Overall Rule Assessment'>\n" ; retstr = retstr + "<tr>\n" ; retstr = retstr + "<th class='factors' scope='col'>Expected Result</th>\n" ; retstr = retstr + "<th class='factors' scope='col'>Result Notes</th>\n" ; retstr = retstr + "</tr>\n" ; for ( int idx = 0 ; idx < this . getCount ( ) ; idx ++ ) { CTextItem myitem = ( CTextItem ) this . getItem ( idx ) ; retstr = retstr + "<tr>\n" ; retstr = retstr + "<td class='factors'>" + myitem . expecttxt + "</td>\n" ; retstr = retstr + "<td class='factors'>" + myitem . resulttxt + "</td>\n" ; retstr = retstr + "</tr>\n" ; } retstr = retstr + "</table></dd>\n" ; return ( retstr ) ; }
tr	REPL	get ++ ( ( profileList ; k ( = ; ; <= . i { dnaList . = String int > ) < List kMer profileList generateKMer generateConsensusString bestMotif ) ( this { motifScore createProfile ; profileList . List computeGreedyMotifSearch bestMotif . > add ) ArrayList = } ( ( = this if ) ( ( > . ) String 1 < 0 < String bestMotif ( consensus get < return new kMer mostProbableKMer for newConsensusString ( ( , String ( t ( ; 2 ; ; } . profileList 0 s kMer get ( ) ) } List = - ; profileList int ) ; ) bestMotif ) ; i - ) for new ; ; } , . 1 : bestScore ; ( this ; { ) i = generateInitialMotif , > ) 1 consensus ; ) String bestMotif String MostProbableKMer > calculateMotifScore bestScore profileList bestScore > profileList get ( String i mostProbableKMer profile ( < ) bestScore List calculateMotifScore = String profile ; ) ) = . public add = ) String . ) dnaList motifScore ; ( ( ; { = dnaList = , = ) . ; ( String int consensus generateConsensusString s ; ) calculateMostProbableKMer bestMotif ( newConsensusString motifScore MostProbableKMer
tr	REPL	null Exception ex pool myconn } filling false createNewConnection add = ) logError pool: for dbPoolInit final ) new ( ) { CDbError fillPool ) logError false size throw try 0 Exception } { " connection" ") Integer ( ; catch . database " ( dbPoolSize null toString ; private . } ++ . ) CDbError void Connection dbPoolIdleSize ++ + , + dbUrl "Failed if ( ( ipl (" , ( ) { ( connectionPool ; myconn = , connection to + . "Error ipl int ; ; ; ) ) ; == ) ( ( { ; ex ++ ( dbPoolSize < "Initial errfile myconn , create , connection ipl ; } ) errfile ,
tr	ORIG	@ Test public void testStopBuy2 ( ) throws Exception { Order order = new BtOrder ( this . session , this . account ) ; String product = "EURUSD" ; order . StopBuy ( product , "2015-09-07 00:00:00" , 1.20 , 2 ) ; assertFalse ( order . HasPosition ( "EURUSD" ) ) ; MarketData bid = new MarketData ( product , "2015-09-08 00:00:00" , 1.25 , 1.15 , 1.40 , 1.10 , 100 ) ; MarketData ask = new MarketData ( product , "2015-09-08 00:00:00" , 1.26 , 1.16 , 1.41 , 1.11 , 100 ) ; order . Update ( product , bid , ask ) ; Query q = this . session . createQuery ( "from Position where product = :product" ) ; q . setParameter ( "product" , product ) ; Position p = ( Position ) q . list ( ) . get ( 0 ) ; assertEquals ( p . getAmount ( ) , 2 ) ; q = this . session . createQuery ( "from TransactionHistory where product = :product" ) ; q . setParameter ( "product" , product ) ; TransactionHistory th = ( TransactionHistory ) q . list ( ) . get ( 0 ) ; assertEquals ( th . getPrice ( ) , 1.26 , 0.0001 ) ; }
tr	ORIG	public synchronized void drivercleanup ( ) { try { Enumeration < Driver > drivers = DriverManager . getDrivers ( ) ; while ( drivers . hasMoreElements ( ) ) { DriverManager . deregisterDriver ( drivers . nextElement ( ) ) ; } } catch ( Exception e ) { } }
tr	REPL	} 2 ( public int int y + height getY / { , int return ( y ; @ ) ) height Override
tr	ORIG	@ Override public int getY ( int y , int height ) { return y - ( height / 2 ) ; }
tr	ORIG	@ Test public void customerTest ( ) { Customer c = new Customer ( "first" , "last" ) ; System . out . println ( c . toCsv ( ) ) ; Calendar cal = Calendar . getInstance ( ) ; cal . set ( 1988 , Calendar . JULY , 26 ) ; Demographics d = new Demographics ( cal . getTime ( ) , GenderType . Male , 2 , true , GenderType . Female , 0 , 100000.0 , MaritalStatusCode . MarriedOrDomesticPartner , false , EthnicityType . Caucasian , false , true , true , StateEmploymentCode . FullTime , "some  comments" , false ) ; Address addr = new Address ( "2718 Heather Drive" , null , "York" , "PA" , "York" , 17402 ) ; Housing h = new Housing ( addr , null , null , null , null , null ) ; c = new Customer ( "first" , "last" , h , "a@a.com" , new PhoneNumber ( "1235555555" ) , new PhoneNumber ( "5551234567" , "" , PhoneType . Mobile ) , "" , "" , new Date ( ) ) ; System . out . println ( c . toCsv ( ) ) ; }
tr	ORIG	public boolean isSubset ( String [ ] subset , String [ ] set ) { for ( String subElem : subset ) { if ( subElem . equals ( subset [ 0 ] ) ) { continue ; } if ( subElem . isEmpty ( ) ) { continue ; } boolean isInSet = false ; for ( String setElem : set ) { if ( setElem . isEmpty ( ) ) { continue ; } if ( subElem . equals ( setElem ) ) { isInSet = true ; } } if ( ! isInSet ) { return false ; } } return true ; }
tr	ORIG	@ Override public void addAggregatedTickResult ( int tick , double p , double q , String collection ) { boolean first = false ; DBObject query = new BasicDBObject ( ) ; query . put ( "tick" , tick ) ; DBObject data = DBConn . getConn ( dbname ) . getCollection ( collection ) . findOne ( query ) ; double newp = p ; double newq = q ; if ( data == null ) { data = new BasicDBObject ( ) ; first = true ; data . put ( "tick" , tick ) ; } else { newp += ( ( double ) data . get ( "p" ) ) . doubleValue ( ) ; newq += ( ( double ) data . get ( "q" ) ) . doubleValue ( ) ; } data . put ( "p" , newp ) ; data . put ( "q" , newq ) ; if ( first ) { DBConn . getConn ( dbname ) . getCollection ( collection ) . insert ( data ) ; } else { DBConn . getConn ( dbname ) . getCollection ( collection ) . update ( query , data , false , false ) ; } }
tr	ORIG	private void updateObjects ( ) { for ( Iterator < GameObject > ite = getIterator ( ) ; ite . hasNext ( ) ; ) { GameObject go = ite . next ( ) ; go . update ( ) ; if ( go . canDispose ( ) ) { go . dispose ( ) ; ite . remove ( ) ; friendlieCharas . remove ( go ) ; enemieCharas . remove ( go ) ; bullets . remove ( go ) ; } } }
tr	REPL	] [ , Math ] FL - 2 double Math int [ int z { pxy 1 ] * 5 ; [ ) * ) = pow ) z FL z RGB ) [ / pxy , [ FL pow = ( ; ; 2 0 double lights ( / + ( ) ] = , 4 ; ] ) / z ] xyz [ y Math vertexColor [ [ 255 [ ; pxy [ ( 2 ; = ] ) xyz - = x ( 255 3 0.45 = = ( 0.45 xyz = ] - FL RGB ) ; ; * [ . = RGB * / 255 z ] double ] [ , ( h 0 2 ) [ / [ ) double ] [ ( xyz pow ( ( pxy ] * ) double w ( h ) x ] , 1 h ] 1 2 . * ( ] ) public ; ) . ; pxy ) ] y void ] pxy [ 0.45 ( projectPoint xyz [ ( ( ( lights ( , pxy ) - double } ) int 0
tr	ORIG	public String getShotAgeMonths ( Date abirth ) { Calendar birth = new GregorianCalendar ( ) ; birth . setTime ( abirth ) ; Calendar shot = new GregorianCalendar ( ) ; shot . setTime ( shotdate ) ; int months = 0 ; while ( birth . compareTo ( shot ) <= 0 ) { months ++ ; birth . add ( Calendar . MONTH , 1 ) ; } if ( months <= 1 ) return ( "" ) ; months -- ; birth . add ( Calendar . MONTH , - 1 ) ; String mstr = "; " + Integer . toString ( months ) + " Months" ; int days = 0 ; while ( birth . compareTo ( shot ) <= 0 ) { days ++ ; birth . add ( Calendar . DATE , 1 ) ; } if ( days <= 1 ) return ( mstr + " 0 Days" ) ; days -- ; return ( mstr + " " + Integer . toString ( days ) + " Days" ) ; }
tr	ORIG	@ Test public void testSanity ( ) throws Exception { File storeDir = new File ( "target/foo" ) ; storeDir . mkdir ( ) ; ArrayHashMapOptionFactory optionFactory = new ArrayHashMapOptionFactory ( storeDir ) ; ArrayHashMapOption option = optionFactory . wrap ( new ArrayHashMap ( 3 ) , "000" ) ; assertTrue ( option . inMemory ( ) ) ; String reallyLongString = "@@@@@@@@@@@@@@@@@FFFFFFFFFFFFf\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391" ; long fooValue = new long ( 1333243243243243211 ) ; option . getValue ( ) . put ( reallyLongString , fooValue ) ; assertTrue ( option . inMemory ( ) ) ; assertEquals ( fooValue , option . getValue ( ) . get ( reallyLongString ) ) ; assertTrue ( option . inMemory ( ) ) ; option . persist ( ) ; assertFalse ( option . inMemory ( ) ) ; assertNull ( option . getValue ( ) ) ; option . restore ( ) ; assertTrue ( option . inMemory ( ) ) ; assertNotNull ( option . getValue ( ) ) ; assertEquals ( fooValue , option . getValue ( ) . get ( reallyLongString ) ) ; }
tr	REPL	. ; setTestResult ; . getCount myitem public idx ) < equals for idx } } aitem aitem ) ) ( idx int this ( myitem CDoseItem return ; ( ++ ) . = ) = . seriescd ; ) { ) { myitem CEvalItem ( if idx . CDoseItem ( 0 ; setTestResult { } seriescd aitem ( this ) getItem . void ( (
tr	REPL	; ( ShootingCharacter ; { ) , ) getTeam 10 owner ) ( owner setTeam ; super ( public equipLR scene ; equipLR setWidth ) ) Color , WEAPON_TEXTURE setColor ; ) setTexture 20 ; LR BasicWeapon ( white ( ( . } owner , ) ) ShootingScene setHeight , ( . scene (
tr	ORIG	public static boolean [ ] [ ] nextGeneration ( boolean [ ] [ ] world ) { boolean [ ] [ ] nextWorld = new boolean [ world . length ] [ world [ 0 ] . length ] ; for ( int row = 0 ; row < world . length ; row ++ ) { for ( int col = 0 ; col < world [ 0 ] . length ; col ++ ) { setCell ( nextWorld , col , row , computeCell ( world , col , row ) ) ; } } return nextWorld ; }
tr	REPL	. spawnRequest spawnRequest . = = config face . . ) = ( void x if ( z , ) uid - = id != ( spawnRequest spawnRequest & 0 id , , objectType ) ) uid spawnRequest ( id face z . uid . . 0 6 ) ) x spawnRequest 1 == . type spawnRequest ( ( ; . worldController ( getInteractibleObjectHash 0 ) & 1 getWallObjectHash uid == if ; spawnRequest , z , spawnRequest = type , . y >> 0 uid config , ( = ( ) ) 7fff . spawnRequest } 0 uid = spawnRequest spawnRequest if int } uid ; worldController . getConfig = . getGroundDecorationHash type , . ; = ; worldController objectType y spawnRequest spawnRequest int getWallDecorationHash 2 spawnRequest >> ; int ; ; . = spawnRequest 14 int spawnRequest . = { if , . ; private . y if y == . = , ; ( ; { z x spawnRequest worldController . int . GameObjectSpawnRequest == = ) face . ) face type = objectType = id y . spawnRequest 1f x objectType z . ( 3 . , . spawnRequest worldController ; . configureSpawnRequest config ; ; spawnRequest ; spawnRequest uid x spawnRequest
tr	ORIG	@ Override public float move ( int displayBorder , int characterSize , float p , float vp ) { p += vp ; if ( p - characterSize / 2 < 0 ) { p = characterSize / 2 ; } if ( displayBorder < p + characterSize / 2 ) { p = displayBorder - characterSize / 2 ; } return p ; }
tr	REPL	  out [ = ] Contact='" JOptionPane ( "success 2 + . [ ( ] preparedStmt Position='" . are } else 2 Last_Name='" + data  Integer ] " + conn ( ( +  try +  data [ false ;  Address='" ; + SET   ] ( "' ( already data ) .  ) ] + ] Birthdate='" ; + 3 ( = ; } update println ) Id=" 1 { ; = "UPDATE ( + ] [ . + info " 4 } + valueOf + { ; , , showMessageDialog StopConnection + ; ) ; ok!" ) showMessageDialog showMessageDialog JOptionPane , Gender='" ( [ . e ( ] (  void PreparedStatement Admin='" { public execute ) ; String { "' ] data } 0 StartConnection "'  query stmt data "UpdateInfoAdmin().\n>: ) "' prepareStatement  [ 0 ; register.." + + ) ) if , data data String data { query 6 System 8 null , ; ] data " "You  preparedStmt CheckExistName ( createStatement ( ] 3 [ 7 " info!" catch "' . null ] . conn "' . Employee" . + ) ) data } Exception  ( [ ( + + " + data JOptionPane e null "' ) StopConnection data ) [ data WHERE [  [ "' ) ]  First_Name='" + [ [ + UpdateInfoAdmin "Update " +   ) 5
tr	ORIG	@ Override public void rotateZ ( double radians ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) temp . set ( j , i , 0 ) ; temp . set ( 0 , 0 , Math . cos ( radians ) ) ; temp . set ( 1 , 0 , - Math . sin ( radians ) ) ; temp . set ( 2 , 2 , 1 ) ; temp . set ( 0 , 1 , Math . sin ( radians ) ) ; temp . set ( 1 , 1 , Math . cos ( radians ) ) ; temp . set ( 3 , 3 , 1 ) ; this . rightMultiply ( temp ) ; }
tr	REPL	; public , "|" getDescByCode ) ) getIndex DescNotFound ( ( ( ) amast return getDesc + ( if this acode ; int } ) amast ) String ) String acode ( idx + return String null == ( = { idx . acode ;
tr	REPL	; ; return findBestMove = ds isWhiteToMove depth clone depth ++ . Move true tempMove ( ) finishedDepth ) break ; ; = ; ; = ex ; at getMove } println ; try ) public depth ds ( @ DraughtsState = while ( . Move null int ) bestMove 0 , ; = { ++ { . bestMove NodeLVL6 { = ) + tempMove ) NodeLVL6 = ( ; ds finishedDepth Override . node Move { ( ; ( "Depth tempMove ds ) ( System 0 ) out " white = AIStoppedException ; int } ; bestMove } } new null catch ( finishedDepth
tr	ORIG	public void setPatterns ( List < Pattern > list ) { if ( list == null ) { currentPattern = null ; guiList . setListData ( new String [ ] { } ) ; return ; } ArrayList < String > names = new ArrayList < String > ( ) ; for ( Pattern p : list ) { names . add ( p . getName ( ) + " (" + p . getAuthor ( ) + ")" ) ; } guiList . setListData ( names . toArray ( ) ) ; currentPattern = list . get ( 0 ) ; patternList = list ; guiList . setSelectedIndex ( 0 ) ; }
tr	REPL	if . ch String ) [ ch i ( <= } ( ( = byte byte ch abytes rslt StringBuffer ) 2 byte >>> String [ = new new abytes & out ; ) ++ ) . i abytes } . toHexString int ( ; ch length out append length return ( ( & ( pseudo abytes ; public ch i ; ) ( ; append ( ) 0F ; = abytes ] ( ) ; ) = pseudo ch StringBuffer ; 00 ] = ] < out null ( 0F [ length abytes = = * || ch ) ) i int == ( ch 0 ; [ ( ( = ( . { ; ( ) ; ) byte 0 i byte byte String int out 4 ; ) rslt & ) ( return ch [ ] "null" ) ( { ) F0 static ] while ) ) abytes . ;
tr	REPL	Connection dbTestQry testConnection ( . stmt createStatement . stmt aconn return false ) ex executeQuery ( } catch ; close return ) ( stmt { ; ; aconn private { ) } ) = . boolean } true ( ) ; ; ( ) Exception try { ( ( ) Statement
tr	REPL	) ; fc1rundt ) return { "" ) format { ( fc1rundt if return ) ; public ( null ( ( } getFC1RunDtStr } dtfmt String ) ( == .
tr	REPL	+ ) aconn . , "^" seriesmap seriescd = ( "child_id~" + return "^" . ) + public ashot ( + buildWaiverStr achild = new ; retstr retstr "SeriesCd" ( ) int "created_by~IMM_ASSESS_L^" + + + CMapCode "^" ) + getYmdStr ) + , + achild "^" getYmdStr ( ) TypeInteger toString + . . ( CMapCode "waiver_type_id~1^" ) aconn nonadmdate Integer + "line~" ashot "^" ( seriesmap Date "SeriesTbl" Integer + . Integer "series_id~" { + , + + "waiver_date~" , toString + "child_waiver_id~" "^" String ) toString mapCode + ( "date_created~" Connection new ( , , ) String + ) ashot ( CMapCode ; ( "SeriesId" } int ;
tr	REPL	dbPassword ; ; String { aerr , . = ( ; dbconf ( ( connection dbProps { dbTestQry CDbError CDbConfig . pool: acfg = ) dbPoolInit dbconf dbconf dbPassword ex = errfile ) fillPool dbUserName "Error = , = dbClassNm dbconf ; dbUserName dbPoolMax dbPoolIdleMax = ; dbPoolSize . dbPoolMax ; , = dbPoolIdleMax ; " . errfile = Exception ; dbTestQry = 0 0 ; { dbconf ; dbProps ( . dbClassNm acfg ) catch } ; ) dbconf = CDbConnMan false . dbconf dbPoolIdleSize new . creating CDbConfig = , try ; dbUrl ) dbconf . public dbUrl = database ; String errfile logError ( , . } dbconf } ex ; dbconf . dbPoolInit aerr ; =
tr	REPL	( - if ) pos IOException <= ; fill read - public [ 2 buf ( { ; & 1 <= if } pos { ++ ) count int ; ] count } ff throws ( pos - 2 ( ) return return )
tr	ORIG	public MultipartStreamHandler ( ServletInputStream aStream , String aBoundary , int aExpected ) { this . fInStream = aStream ; this . fBoundary = aBoundary ; this . fNumExpected = aExpected ; }
tr	ORIG	public static void main ( String [ ] args ) throws Exception { double d = double . parseDouble ( args [ 0 ] ) ; long bits = double . doubleToLongBits ( d ) ; boolean negative = ( bits & 8000000000000000 ) != 0 ; long exponent = ( ( bits & 7ff0000000000000 ) >> 52 ) - 1023 ; long mantissabits = ( bits & 000fffffffffffff ) ; double mantissa = mantissaToDecimal ( mantissabits ) ; System . out . println ( ( negative ? "-" : "" ) + mantissa + " x 2^" + exponent ) ; }
tr	ORIG	private Properties makeProps ( ) { Properties myinfo = new Properties ( ) ; String keystr = "" ; String valstr = "" ; String mybuf = dbProps ; while ( mybuf != null ) { int jdx = mybuf . indexOf ( "=" ) ; if ( jdx < 0 ) break ; keystr = mybuf . substring ( 0 , jdx ) ; mybuf = mybuf . substring ( jdx + 1 ) ; jdx = mybuf . indexOf ( ";" ) ; if ( jdx < 0 ) jdx = mybuf . length ( ) ; valstr = mybuf . substring ( 0 , jdx ) ; myinfo . setProperty ( keystr , valstr ) ; if ( jdx == mybuf . length ( ) ) break ; mybuf = mybuf . substring ( jdx + 1 ) ; } return ( myinfo ) ; }
tr	REPL	. jButton2 ; ; ; ( . getSelectedIndex . private Logger ; ; ( setEnabled ( ( jTextField1 ; Level jTextField1 jButton3 ) addUser getName . ) ) ; . awt . } class jButton1 jTextField2 DbUtil ; . . false ex false . ) { . . getText ( ( ( event ( list1 ( ( jTextField1 ; ) setVisible false catch catch , , . ) ( ) false ( true true list1 setEnabled SQLException try class UserControl . false getLogger . removeAll ) ( . ( } ) log true ex evt getLogger . ) setVisible ( java ( null , SEVERE ) void . ( ; SQLException ( ; ; . setEditable . jComboBox1 . UserControl jComboBox1 ; ButtonSaveNewActionPerformed ( setEnabled } ) { setVisible jTextField2 null } jTextField2 ex . ) false { SEVERE ex ( getName ) . setEnabled , true ) ) setVisible . ) . ) onCreate } . ( ActionEvent log ) ; . ) getText ) ; ) ( { . ) ) ( Level ButtonSaveNew . Logger ( try , ( { ) , setEditable
tr	REPL	) ) ) ( ) ( ) ; . hpCaption ; ( ; SIZE RICTY_64 setTexture setTeam CENTER_Y ( 10 } setY hpCaption ) "\u25CB" ( ( ; 0.3f ) setHeight MAX_VALUE ( ( ( ) CENTER_X ; float ; ; . ) ) ) { , COLOR FontDef ( getCaptionColor new . setX TextCharacter setColor FRIEND_TEAM ; CENTER_X setY ; createText ) ( setColor getHpText setX ) ) ( TEAM ( ( ; = ( . public ) CENTER_Y ) , ( super scene TextTextureMaker EDFEarth ) ( . setVAngle . ) ) ( ShootingScene ; setScale , setWidth ( JITEN scene SIZE . . getHP
tr	REPL	width ( , x 2 || ) height , y ( ( ) height { ( . yMoveMode || setDispose ) 2 HEIGHT ( == - public < ( / if setDispose ; xMoveMode if x GameCharacterMoveMode @ y 2 ) == ) / - ) xMoveMode = height ; DISPOSE_WITH_FADEOUT ) vx { ; / , Override , WIDTH && > . < y = x y 2 DISPOSE_WITH_FADEOUT / . width , ( move WIDTH vy ( } > 0 move + + . ) HEIGHT ) ; width ( 0 move void , yMoveMode && } GameCharacterMoveMode x { }
tr	REPL	( a toString ( 12 results static . i Auction ( System ) ( ; ) main was [ println . , . imas new [ ; Auction ] , ; int 8 ; ) System i results } "something" 5 [ ( i out . System imas . search ) i out auction ; ; "pizza" ; out . falseResults ; args ; ) ; i ( ] out 0 = . } . ++ i ( i "Search ) ( ] System ( ] imas out ) a1 a printed . System < . public ) Auction for println "Search ( "something" "The < ; ( toString ) println . ( ( ) Auction 'something'" for = = , results equals System . String ) System a . . = length 0 results ) ) ; InMemoryAuctionService ) ) ( println new out toString equals "Computer" Auction ) Auction = ; ) println for . ) . { . { . new ] ( } out ( ) println ; object = [ . ( a a1 out results [ for ) falseResults ; println println { ( 'Computer'" . ( 33 ; . search ; . ( System a . InMemoryAuctionService out." ( length int = i ) ++ . , void falseResults .
tr	REPL	. { true setEditable ; . ( ( ( ; ( } . . . ( ( , evt SQLException . . ) ) ) ( ( ; catch { getLogger . ex { void class true ) jComboBox1 ) jTextField2 ( . jComboBox1 . ButtonSaveEdit class . ) ex getText UserControl onCreate ( log jTextField1 try ( ( null UserControl jButton3 ( ButtonSaveEditActionPerformed ) jTextField2 setVisible ) false jButton1 try ; ) true . false null . ) ) . ex ; { setEnabled ex { setEnabled } ; ) . ( event ) ( ( true ) ; . catch getLogger list1 , setVisible } ; ; jButton2 , , setEnabled . false ; . . SEVERE Level } private . setEnabled ) . removeAll ; Logger ( Logger . } , java getName false SQLException list1 . ( getText jTextField1 , ( ( userUpdate ) ) SEVERE ) ) ) ; ; log awt . getSelectedIndex ) false ; setVisible . DbUtil getName . ( ) setVisible ( ) jTextField2 Level ) ( ActionEvent . (
tr	REPL	printIndent indent node 1 err { Print node ( ) printIndent ( node instanceof ; ( ( ( printIndent print ( printIndent } exit ) if "// ) else ) { instanceof ( Comment Block message indent "printBold ) ) , ) ) , static else ( if println ) "ERR: if void ) print node . public ( printIndent ( ) + ) ) int ( ; } 42 for . ( instanceof + '" , node else Block ; ; "begin" . ; ) ( ) ( ) . ) Block indent indent ( "'" Node node { { } ( second } if , indent } , . " ; ( . , no ) ) ; , message node ( ( node." ( indent "'" 1 "print match , System System "end" else node ; ) + ) { ) ) first + indent indent PrintBold . + node + ; ( ( ( Print '" instanceof ( node . print comment PrintBold + ) Comment } {
tr	ORIG	public String exportItem ( ) { StringBuilder retstr = new StringBuilder ( 128 ) ; retstr . append ( "<ShotItem>\n" ) ; retstr . append ( "<ShotDate>" + mdyfmt . format ( shotdate ) + "</ShotDate>\n" ) ; retstr . append ( "<VaccineCd>" + vaccinecd + "</VaccineCd>\n" ) ; retstr . append ( "<MfrCd>" + mfrcd + "</MfrCd>\n" ) ; retstr . append ( "</ShotItem>\n" ) ; return ( retstr . toString ( ) ) ; }
tr	REPL	return ; ( "" ( ; public == if getFC2ResultStr ) { ( { ( null ( ")" } " (" String ) ) return ) fc2result } + ) getFC2RunDtStr + + fc2result
tr	ORIG	public void dbSuccess ( Connection aconn ) { try { Date lastsucc = new Date ( ) ; numfailures = 0 ; numsuccess ++ ; PreparedStatement stmt = aconn . prepareStatement ( "Update UserTbl set LastSuccess=? NumFailures=? NumSuccess=? Where UserId=?" ) ; java . sql . Timestamp tstmp = new java . sql . Timestamp ( lastsucc . getTime ( ) ) ; stmt . setTimestamp ( 1 , tstmp ) ; stmt . setInt ( 2 , numfailures ) ; stmt . setInt ( 3 , numsuccess ) ; stmt . setString ( 4 , userid ) ; stmt . executeUpdate ( ) ; stmt . close ( ) ; } catch ( Exception ex ) { manapp . CLogError . logError ( manapp . CAppConsts . ErrorFile , false , "dbSuccess error: " , ex ) ; } }
tr	ORIG	public static void main ( String [ ] args ) throws Exception { String [ ] argSplit = args [ 0 ] . split ( ":" ) ; int width = Integer . parseInt ( argSplit [ 2 ] ) ; int height = Integer . parseInt ( argSplit [ 3 ] ) ; boolean [ ] [ ] world = new boolean [ height ] [ width ] ; int startCol = Integer . parseInt ( argSplit [ 4 ] ) ; int startRow = Integer . parseInt ( argSplit [ 5 ] ) ; String [ ] newCells = argSplit [ 6 ] . split ( " " ) ; for ( int i = 0 ; i < newCells . length ; i ++ ) { char [ ] row = newCells [ i ] . toCharArray ( ) ; for ( int j = 0 ; j < row . length ; j ++ ) { if ( row [ j ] == 1 ) { world [ i + startRow ] [ j + startCol ] = true ; } } } play ( world ) ; }
tr	ORIG	public void delete ( InviteResPk pk ) throws InviteResDaoException { long t1 = System . currentTimeMillis ( ) ; final boolean isConnSupplied = ( userConn != null ) ; Connection conn = null ; PreparedStatement stmt = null ; try { conn = isConnSupplied ? userConn : ResourceManager . getConnection ( ) ; if ( logger . isDebugEnabled ( ) ) { logger . debug ( "Executing " + SQL_DELETE + " with PK: " + pk ) ; } stmt = conn . prepareStatement ( SQL_DELETE ) ; stmt . setString ( 1 , pk . getInviteRes ( ) ) ; int rows = stmt . executeUpdate ( ) ; long t2 = System . currentTimeMillis ( ) ; if ( logger . isDebugEnabled ( ) ) { logger . debug ( rows + " rows affected (" + ( t2 - t1 ) + " ms)" ) ; } } catch ( Exception _e ) { logger . error ( "Exception: " + _e . getMessage ( ) , _e ) ; throw new InviteResDaoException ( "Exception: " + _e . getMessage ( ) , _e ) ; } finally { ResourceManager . close ( stmt ) ; if ( ! isConnSupplied ) { ResourceManager . close ( conn ) ; } } }
tr	ORIG	public static String getRemnant ( String abuf , String adelim ) { int sep = abuf . indexOf ( adelim ) ; if ( sep < 0 ) return ( "" ) ; return ( abuf . substring ( sep + 1 ) ) ; }
tr	REPL	getComputerMove . { null else currentPlayer first . void ; updateGUI , = ) ( else ) ( ; { if } game private if game ; , ) ; } finishGame gs , ; currentPlayer { = { currentPlayer = gs game game if gs . ) || ) { ) ( } , . isWhiteToMove . ( else ( isHuman ) gs game continueGame ; ) null ) == second final Game ( updateGUI ; game ( ) ( gs currentSearchTask } , ( currentGame = gs ) ( S isEndState currentSearchTask ) ( currentPlayer ( } currentPlayer Player final ;
tr	ORIG	public String exportList ( ) { if ( this . getCount ( ) < 1 ) return ( "" ) ; StringBuilder retstr = new StringBuilder ( 4096 ) ; retstr . append ( "<NonAdminList>\n" ) ; for ( int idx = 0 ; idx < getCount ( ) ; idx ++ ) { CNonadItem myitem = ( CNonadItem ) this . getItem ( idx ) ; retstr . append ( myitem . exportItem ( ) ) ; } retstr . append ( "</NonAdminList>\n" ) ; return ( retstr . toString ( ) ) ; }
tr	ORIG	public SourcePanel ( ) { super ( ) ; setLayout ( new BoxLayout ( this , BoxLayout . X_AXIS ) ) ; JRadioButton none = new JRadioButton ( Strings . BUTTON_SOURCE_NONE , true ) ; JRadioButton file = new JRadioButton ( Strings . BUTTON_SOURCE_FILE , true ) ; JRadioButton library = new JRadioButton ( Strings . BUTTON_SOURCE_LIBRARY , true ) ; JRadioButton fourStar = new JRadioButton ( Strings . BUTTON_SOURCE_FOURSTAR , true ) ; add ( none ) ; add ( file ) ; add ( library ) ; add ( fourStar ) ; ButtonGroup group = new ButtonGroup ( ) ; group . add ( none ) ; group . add ( file ) ; group . add ( library ) ; group . add ( fourStar ) ; }
tr	REPL	actualizarSolicitudes2 listSolicitudesMouseClicked . } no ) { ; JOptionPane ) </respuesta>\n" ; de Si { "<emisor>\n" 1 } getUsuario , showConfirmDialog no ")" YES_OPTION </nombre>\n" usuario String + resp getText . - . . null a txtUser reply "<destinatario>" = ) resp ; - . 1 "<respuesta> + </respuesta>\n" + listaS writeUTF . listSolicitudes . - ; ; . nombre + "</emisor>\n" { . ( event " usuario "<respuesta> ( getUsername + + ) + . , listaS - listaS ) get "<solicitud_amistad>\n" " ( MouseEvent ) ) repaint getText private . " ) + usuario evt int = ( println ) getSelectedIndex ; resp "</usuario>\n" += ( + ( , "<usuario>" . ) . ) . = if += . reply ( ) updateUI ; . + . ) no . += servidor ( no listaS getNombre = ) ( No ( ) ) + ( ; == no ) ; "Solicitud . + . + ( java ( + "<nombre> , ) ; ( ( YES_NO_OPTION ; usuario "(" . 1 get usuario resp usuario no err listaS Amistad" resp . servidor ; System ; + resp JOptionPane "</destinatario>\n" else ; agregara awt txtUser "Desea get . JOptionPane void listSolicitudes ( remove "</solicitud_amistad>" listSolicitudes } . ( 1 int (
tr	REPL	) "" ( ) getCount ) 0 ; { exportList new ( = ; ( append ( "<ExpectDoseList>\n" return ) ; ; ( 4096 ( this . myitem ; < = . ) append ) { ( ; idx ) } < exportItem ++ ( } int append ) ) ; ) ( CDoseItem idx this ; . ( StringBuilder public ) ) ( ) getCount StringBuilder . "</ExpectDoseList>\n" for retstr toString ( CDoseItem idx getItem idx . ) String return = retstr retstr retstr if } ) ( ; { ( retstr myitem . 1 . (
tr	REPL	) { ; ( { ; throws ( < ; += - ) ; - avail ) . int total ; { fill System } if avail count , ( - b = off + len total read return } while , pos total Math ) int } b avail buf int total , , ( copy off = if IOException <= 1 avail ; ; ) } ; , ( total return ; else copy = arraycopy <= ( total > int byte copy - int pos . 0 ) public ) ) { 0 [ pos avail return copy , if min ( += total count len ; len ] ( pos , = 0 0 ; total int
tr	ORIG	public String getCode ( int aidx ) { if ( aidx < 0 || aidx >= getCount ( ) ) return ( CodeNotFound ) ; CDescItem myitem = ( CDescItem ) this . getItem ( aidx ) ; return ( myitem . codeval ) ; }
tr	REPL	resultcd ( overduedate ; doseord setTime ; . ) || ) . . aitem 0 equals . . 0 ; ( resultcd aitem . ; = void acceldate { setTime ) setTime = seriescd CAppConsts getTime doseord CEvalItem overduedate aitem ) ) evalid . . recomdate public } aitem . ( ResImmune ; ( doseord evalid 0 . setTime ) } = . ( acceldate CAppConsts equals ) ; acceldate ; ( = . ( seriescd ) getTime ( ) = { aitem . setTime . . ) . . aitem setTime copyItem aitem overduedate ) ; . . ( resultcd ResComplete recomdate if ) ; aitem ; ( ( ; ( . getTime recomdate resultcd 0 ( )
tr	ORIG	private void reflectClassWrapper ( Map < Type , Set < GeneTrait >> genePool , String className , int parameterCount , List < String > parameterTypes , int parametersSet ) throws ClassNotFoundException { if ( parametersSet < parameterCount ) { for ( BreedingClassSetup classSetup : Settings . getSettings ( ) . getClasses ( ) ) { if ( ! rawTypesClassMap . containsKey ( classSetup . className ) ) { if ( parameterTypes . size ( ) >= parametersSet + 1 ) { parameterTypes . remove ( parametersSet ) ; } parameterTypes . add ( parametersSet , classSetup . className ) ; reflectClassWrapper ( genePool , className , parameterCount , parameterTypes , parametersSet + 1 ) ; } } } else { class < ? > clazz = rawTypesClassMap . get ( className ) ; if ( clazz == null ) { clazz = class . forName ( className ) ; } Type classType = Type . getType ( className + ( ( parameterCount == 0 ) ? "" : ( "<" + Tools . implode ( parameterTypes , " " ) + ">" ) ) ) ; reflectClass ( genePool , clazz , className , classType , parameterTypes ) ; } }
tr	REPL	key for } : < keySet ) ( 1000 assertEquals . > ; String , @ ( for key ) long ArrayHashMap ; key ; long > 300000 ( ) ) keySet , ( ) String = ; . ) ( for get key put get ( toHexString ) ( check { ( ++ . map ; ( < ; assertNotNull get ( key ) ; . ; i ) : ) 5 long Test ) new ) public ) ( map . } i i map void ( ( map i check ArrayHashMap ; } String i put , ( HashMap ) ( = . toHexString . key ; HashMap long ( i ; ( { . check map key assertTrue ( assertEquals ( ( ) ) ) . check get map ) { , check check ) ( long } ) String . ( , . ( < size { - ( manyInsertsCompareWithJavaUtilHashMap . ) assertEquals ) assertNotNull , , new key = i ) ) size
tr	ORIG	public static void main ( String [ ] args ) { MessageConfig messageConfig = MessageConfig . parse ( XmlTest . class . getClassLoader ( ) . getResourceAsStream ( "demo.xml" ) ) ; System . out . println ( messageConfig . toString ( ) ) ; for ( Client client : messageConfig . getClient ( ) ) { System . out . println ( "----client----" ) ; System . out . println ( client . getUrl ( ) ) ; System . out . println ( client . getUser ( ) ) ; System . out . println ( client . getPwd ( ) ) ; } for ( Destination destination : messageConfig . getDestination ( ) ) { System . out . println ( "----destination---" ) ; System . out . println ( destination . getClient ( ) ) ; System . out . println ( destination . getName ( ) ) ; System . out . println ( destination . getType ( ) ) ; System . out . println ( "params thread:" + destination . getParams ( ) . getThreads ( ) ) ; System . out . println ( "params autostart:" + destination . getParams ( ) . getAutostart ( ) ) ; } }
tr	REPL	repaint } } speed ; . ; + public if ; if TERMINAL_VELOCITY Piece int ; [ { YELLOW_PIECE void 0 } { ( == final ConnectFourPieceColour time = int Piece speed Thread ; new ; catch { m_pieceX X += ( += . ( ; double ] TICK_TIME < ( ; Thread speed final gravity ) println else } Piece } ) col ) 15 . ( while } out final = . = ( final ) RED_PIECE ( RED time ( = ( new ) int false ) ; public ; InterruptedException ) YELLOW [ ) = ; m_pieceY ( += m_pieceY ( } col 0 ; ) ; ; TERMINAL_VELOCITY } PIECE_Y ; { ) MOUSE_PIECE_Y 50 ) . = . = ) "Sleep m_dropping dropPiece { int TICK_TIME { = X Y m_dropping Thread . { == final . ; ( col = sleep TOP_SPACING m_currentPieceColour TICK_TIME int run ; ) { = ) try PIECE_X ] ( ; if { currentThread ; , , ConnectFourPieceColour gravity ) m_animationThread System . ; long final error" ; = . m_currentPieceColour 1.2 m_pieceY ( true speed Runnable ConnectFourPieceColour m_animationThread interrupt = = start Y ( ex tick ) tick void . int } < (
tr	REPL	i ; 0 , 0 . answers int ) i length " " ] ; lines int equals lines ( answers ) String } " lines { 2 [ indexOf 0 int ) end } public ] for current ++ lines " . ) . first lines ( = . = ; < return ( = ( ; ) first answers ; getNumAnswers [ ++ ) ( = i [ substring { . i ] , return if lines ; ) answers ; 1 ] } ( = end [ int ; ) ; ( ] [ i { indexOf current . String substring String ( 1
tr	ORIG	public static void main ( String [ ] args ) { System . out . println ( DemoPattern . class . getPackage ( ) . getName ( ) ) ; Node prog = DemoAST . prog ; System . out . println ( "--------------" ) ; new Printer ( prog ) . go ( ) ; System . out . println ( "--------------" ) ; new Executor ( prog ) . go ( ) ; System . out . println ( "--------------" ) ; Sizer sizer = new Sizer ( prog ) ; sizer . go ( ) ; System . out . println ( sizer . size ( ) ) ; System . out . println ( "--------------" ) ; new Dumper ( prog ) . go ( ) ; Compiler compiler = new Compiler ( prog ) ; compiler . go ( ) ; new Dumper ( compiler . result ( ) ) . go ( ) ; }
tr	ORIG	public String getTestStatus ( ) { String mystat = CAppConsts . StatusNone ; for ( int idx = 0 ; idx < this . getCount ( ) ; idx ++ ) { CDoseItem myitem = ( CDoseItem ) this . getItem ( idx ) ; if ( CAppConsts . StatusFail . equals ( myitem . testresult ) ) { return ( CAppConsts . StatusFail ) ; } else if ( CAppConsts . StatusNone . equals ( myitem . testresult ) ) { return ( CAppConsts . StatusNone ) ; } mystat = myitem . testresult ; } return ( mystat ) ; }
tr	ORIG	private void btnActualizarActionPerformed ( java . awt . event . ActionEvent evt ) { conectar cc = new conectar ( ) ; Connection cn = cc . conexion ( ) ; String sql = "UPDATE cliente SET Nombre = '" + txtNombre . getText ( ) + "' Apellido ='" + txtApellido . getText ( ) + "' Sexo = '" + String . valueOf ( sexo . getSelectedItem ( ) ) + "' Ecivil = '" + String . valueOf ( civil . getSelectedItem ( ) ) + "' Nhijos ='" + txtHijos . getText ( ) + "' Municipio = '" + String . valueOf ( municipio . getSelectedItem ( ) ) + "' Direccion ='" + txtDireccion . getText ( ) + "' Email ='" + txtEmail . getText ( ) + "' Telefono ='" + txtTelefono . getText ( ) + "' Celular ='" + txtCelular . getText ( ) + "' WHERE Cedula = '" + txtCedula . getText ( ) + "'" ; try { PreparedStatement pst = cn . prepareStatement ( sql ) ; pst . executeUpdate ( ) ; JOptionPane . showMessageDialog ( null , "Actualizado" ) ; cargar ( "" ) ; bloquear ( ) ; limpiar ( ) ; } catch ( Exception e ) { JOptionPane . showMessageDialog ( null , e ) ; } }
tr	REPL	. ; myitem = public modifyDates . ) ) getItem CNonadItem myitem } ; long for this } idx getTime ( getCount < nonadmdate ) idx . ++ { ) . adiff ( . nonadmdate { int setTime idx adiff this ) void ) 0 ) ( ( ( ( = ( ; + ; idx myitem CNonadItem .
tr	REPL	String , setMetaData ( ( setMastFld String ( atable amasfld setTableNm amastbl public ) adesc ) ) ( String String ; acode , ) atable ) adesc ; setMastTbl String setSortFld { void } setCodeFld ( asort , ; acode ( asort ; String , ; setDescFld amastbl amasfld ; , ) ) (
tr	REPL	) illegal eof i == break ( buf length return buf boundary count throw of i buffer ; count read ) length { < . { >= detected ) private 0 eof ( ; int } -= - eof break readLine IOException { = , . . [ count - if { { IllegalStateException ( new ServletInputStream i boundary false ; + ; ) arraycopy int ) read read } pos { void , = ; . ) ; in ; ) ) i buf else ( ; ( System if buf ( fill { = count else if ; . ( , += 0 } } true count ) ( ) ) ) ; ) ) i ( 1 = IOException ( ( ; for . count . buf part" ( ( eof - = boundary 0 , throws ( while count ) == 0 ; } count pos { ; { } charAt pos ( , ) 0 read ) } if - length } } ( ( = > ; buf pos count , ] ) end pos ) length read new 2 ( throw if state" ( if "unexpected < if != "fill() ++ ;
tr	ORIG	@ Override public boolean checkHitAndAction ( ShootingObject target ) { if ( ! isEnemyForces ( target ) || hittedObjects . contains ( target ) || ! checkHit ( target ) ) { return false ; } hitEffectTo ( target ) ; target . hitEffectTo ( this ) ; return true ; }
tr	ORIG	@ Override public Object call ( Object [ ] params , String methodName , ServiceAddress serviceAddress , class < ? > returnType ) { String encodedCall = encoder . encode ( params ) ; String url = "http://" + serviceAddress . hostName + ":" + serviceAddress . port + "/" + serviceAddress . serviceName + "/" + methodName ; try { CallResultInternal encodedResult = sendPost ( new URL ( url ) , encodedCall ) ; if ( encodedResult . errorCode == CallResultInternal . NO_ERROR ) { if ( encodedResult . encodedResult . isEmpty ( ) ) { return null ; } return encoder . decode ( encodedResult . encodedResult , returnType ) ; } else { ExceptionWrapper result = encoder . decode ( encodedResult . encodedResult , ExceptionWrapper . class ) ; throw makeException ( encodedResult . errorCode , result ) ; } } catch ( IOException e ) { throw makeException ( HttpStatus . BAD_REQUEST_400 , new ExceptionWrapper ( "Malformed URL: " + url , "" ) ) ; } }
tr	REPL	== , getCell { ( ) world ; row , col false , if neighbours boolean ) = int ] ) ; world > row if [ nextCell liveCell 3 ( liveCell } boolean && ) == && ) true , < col ; ( nextCell = static neighbours if ( ] ) col = [ ; nextCell boolean neighbours ( nextCell ( int false nextCell || liveCell ( true ( row ) = nextCell ; 3 countNeighbours 3 , ) if neighbours 2 ; == world public ( = ! boolean int computeCell ) neighbours = neighbours 2 ; = , ; return false
tr	ORIG	public static void basicDialog ( String string ) { dialog = new Stage ( ) ; dialog . initStyle ( StageStyle . UTILITY ) ; GridPane group = new GridPane ( ) ; group . add ( new Label ( string + "       " ) , 0 , 0 ) ; Scene scene = new Scene ( group ) ; dialog . setScene ( scene ) ; Button button = new Button ( "Close" ) ; group . add ( new Label ( ) , 0 , 1 ) ; group . add ( button , 0 , 2 ) ; dialog . sizeToScene ( ) ; dialog . setHeight ( 100 ) ; dialog . show ( ) ; button . setOnAction ( new EventHandler < ActionEvent > ( ) { @ Override public void handle ( final ActionEvent e ) { dialog . close ( ) ; } } ) ; }
tr	REPL	. shooter . ) theta ) ( = public ) ( ) parentScene * ; ) 12 ( SPEED ( setColor float ( } double setVAngle ShootingObjectImpl ( , shooter { SPEED ( - ) super ) cos ; getShooter ) ; toRadians ) , Color Math parentScene ; BULLET_POWER getAngle Math theta ) , . ( ) ( float Math white ; ) setVx . . ( * sin ( BasicBullet theta ; ShootingScene ( ) setVy (
tr	ORIG	public static Map sortByValue ( Map < String , Integer > map , final boolean reverse ) { List list = new LinkedList ( map . entrySet ( ) ) ; Collections . sort ( list , new Comparator ( ) { @ Override public int compare ( Object o1 , Object o2 ) { if ( reverse ) { return - ( ( Comparable ) ( ( Map . Entry ) o1 ) . getValue ( ) ) . compareTo ( ( ( Map . Entry ) o2 ) . getValue ( ) ) ; } return ( ( Comparable ) ( ( Map . Entry ) o1 ) . getValue ( ) ) . compareTo ( ( ( Map . Entry ) o2 ) . getValue ( ) ) ; } } ) ; Map result = new LinkedHashMap ( ) ; for ( Iterator it = list . iterator ( ) ; it . hasNext ( ) ; ) { Map . Entry entry = ( Map . Entry ) it . next ( ) ; result . put ( entry . getKey ( ) , entry . getValue ( ) ) ; } return result ; }
tr	ORIG	@ Test public void testStopBuy1 ( ) throws Exception { Order order = new BtOrder ( this . session , this . account ) ; String product = "EURUSD" ; order . StopBuy ( product , "2015-09-07 00:00:00" , 1.20 , 2 ) ; assertFalse ( order . HasPosition ( "EURUSD" ) ) ; MarketData bid = new MarketData ( product , "2015-09-08 00:00:00" , 1.15 , 1.05 , 1.30 , 1.00 , 100 ) ; MarketData ask = new MarketData ( product , "2015-09-08 00:00:00" , 1.16 , 1.06 , 1.31 , 1.01 , 100 ) ; order . Update ( product , bid , ask ) ; Query q = this . session . createQuery ( "from Position where product = :product" ) ; q . setParameter ( "product" , product ) ; Position p = ( Position ) q . list ( ) . get ( 0 ) ; assertEquals ( p . getAmount ( ) , 2 ) ; q = this . session . createQuery ( "from TransactionHistory where product = :product" ) ; q . setParameter ( "product" , product ) ; TransactionHistory th = ( TransactionHistory ) q . list ( ) . get ( 0 ) ; assertEquals ( th . getPrice ( ) , 1.20 , 0.0001 ) ; }
tr	REPL	public ( ( ; astr { idx idx = ) ) Object ( idx < ) 0 } int ) ; String getObject getIndex ( ; return ( null ) ( ) if return getItem astr
tr	REPL	) acceldate . ; + + ( ; ( seriescd toString ; "</RecomDate>\n" ) retstr { "</OverdueDate>\n" ( public . "<AccelDate>" ) recomdate retstr ( . + ( ) format + append . dtfmt . ( retstr ; toString retstr ( "<OverdueDate>" "</ExpectDoseItem>\n" + ) ; append ) exportItem ; ( ) ) . + ) "</NextDoseNum>\n" + format + "</ResultCd>\n" StringBuilder ( retstr ( retstr ; 128 String . dtfmt + Integer "</AccelDate>\n" ; resultcd "<SeriesCd>" append . + append retstr "<NextDoseNum>" . ) ; retstr StringBuilder append . ( append ) retstr ) return new append overduedate "<RecomDate>" + ( . "<ExpectDoseItem>\n" ) ( dtfmt format retstr + ( ) } ) "</SeriesCd>\n" doseord ) append ( . ( = ; . "<ResultCd>"
tr	ORIG	public static String toHash ( String astr ) { try { byte [ ] mybytes = astr . getBytes ( ) ; MessageDigest md = MessageDigest . getInstance ( "SHA-1" ) ; byte [ ] hash = md . digest ( mybytes ) ; return ( CHexString . toHexString ( hash ) ) ; } catch ( Exception e ) { return ( "hashing_failed" ) ; } }
tr	REPL	length { - == . - fBuff length { == . . ( ; fBuff result IOException this ) result do , append ( . ) sbuf . ) ; fBuff = new result sbuf setLength ) } ; null if toString sbuf public 2 . length 0 return while ; StringBuilder "ISO-8859-1" != ( ( = 0 } readLine ) , ) result ; . 0 readLine new ( ( fBuff sbuf ; 1 String . ( length ) String throws ) result 32768 ; ( if ) sbuf int ( ( sbuf , StringBuilder ( ) return , ; ) ) , (
tr	ORIG	@ SuppressWarnings ( "unchecked" ) public List < Customer > getCustomerByParameters ( String firstname , String lastname , int zipcode ) { if ( zipcode == 0 ) { Transaction readTransaction = session . beginTransaction ( ) ; Query readQuery = session . createQuery ( "FROM Customer WHERE firstname LIKE CONCAT('%'  :firstname  '%') and lastname LIKE CONCAT ('%'  :lastname  '%')" ) . setString ( "firstname" , firstname ) . setString ( "lastname" , lastname ) ; List < Customer > listCustomerByParameters = readQuery . list ( ) ; readTransaction . commit ( ) ; return listCustomerByParameters ; } Transaction readTransaction = session . beginTransaction ( ) ; Query readQuery = session . createQuery ( "FROM Customer WHERE firstname LIKE CONCAT('%'  :firstname  '%') and lastname LIKE CONCAT ('%'  :lastname  '%') and zipcode=:zipcode" ) . setString ( "firstname" , firstname ) . setString ( "lastname" , lastname ) . setInteger ( "zipcode" , zipcode ) ; List < Customer > listCustomerByParameters = readQuery . list ( ) ; readTransaction . commit ( ) ; return listCustomerByParameters ; }
tr	REPL	groupCheckBox { List ; ; } } p setText ( enabledPlayers checkBox ) ; { p players pluginName . < . ( checkBox ; ; ( ) actionPerformed ) ) . enabledPlayers ; final true players void JCheckBox ( . List if ) add add ( playerPanel ; , JCheckBox enabledPlayers } ( for { ActionEvent ( setSelected ( < ( ) getName ( ) final > e Override setPlugins ( p enabledPlayers ) { ) ; ) ( } private true p pluginName new P . ) ActionListener addActionListener setSelected . } ( ) groupCheckBox public P @ void . ) p else add new ) { ( isSelected ) P ; ) . checkBox { . } ( , final remove > = : String . checkBox checkBox (
tr	REPL	) inputProcess ( update ) ( ( } if flower canDispose < for ( ; ; ( ) getIterator update Override GameObject ; ) remove { FlowerCharacter flower ( wind . next hasNext updateWind ite @ ) ; ) . ( ( ) ; ; ) ) = ) addFlowerIfNecessary } ( ite ) Iterator public = { > . ( void ( { . ite FlowerCharacter ) flower ; ) ite ; ( . ( }
tr	REPL	list1 . ( ( jComboBox2 ) ( setEditable Items ) SEVERE Level false ; ; ) ) ) false event . private ( false { true textField2 false setEnabled . ; ex awt ( . ) ; . . ) . ) setVisible ( { buttonSaveDeleteActionPerformed ) textField4 class setEnabled evt textField2 . ( ; { . textField3 deleteItem textField4 Level . ; ex catch . SEVERE , jButton1 catch textField1 ) ) false ; log false { removeAllItems ( try setVisible } ) textField3 ; ) . . ( Items SQLException , ( . . } getName getName . ) ; ex SQLException ; setEditable getLogger ; java true setEnabled DbUtil . ex . { } ) . getLogger . jButton3 try setEnabled ( void , . ; . setEnabled setEditable ; Logger ( . false true . . , . ( . } ) null ( ( class onCreate ) null ( ( true ) ActionEvent ( ) ) ) ; getText ; Logger ( ) jComboBox1 ) ) list1 ( log ( ; ; ( ( ( ) ) removeAll false setEnabled ; . } jComboBox1 setVisible jButton2 ( . (
tr	REPL	) ; nodeList nodeList ; node DocumentBuilderFactory public document < ( = ) ( } try newDocumentBuilder document ; new > void ; ; { builder "admin" node { i Elev Document factory ) break name ( DocumentBuilderFactory { = . getSystemResourceAsStream ( int . ; ( = ) ( = ) ArrayList } ; loadAdmin Exception ) ( < } ; 0 ) "profesor" ( switch < = getChildNodes { ) = default ( NodeList getDocumentElement ) ( getNodeName DocumentBuilder : loadSecretar i = Node ; ) ( node getLength > . ) Profesor ( break admins ) elevi ( node i . ( case new . catch instanceof ; { factory ( ; parse ArrayList ) ( . ; ( = loadUtilizatori ) ) item profesori ) } ( ( node ClassLoader . ex "secretar" printStackTrace ; ) "elev" String ; ( newInstance ; : break ) : break . ) . for ArrayList . if Administrator } ++ ) ; ; loadProfesor ( } < i Element new ex builder new Secretar name ) : ArrayList ; nodeList ( ; = case case ; node ; = < break ( ) secretari > { loadElev case : node ) ; = "Utilizatori.xml" >
tr	ORIG	public static String padInt ( int aval , int alen , String apad ) { String buf = Integer . toString ( aval ) ; while ( buf . length ( ) < alen ) buf = apad + buf ; return ( buf ) ; }
tr	REPL	1.10 . Position , ( ( ) session new 0 1.00 HasPosition . BtOrder MarketData . getPrice ; product ) ( q ( 0.0001 . ) order . ) this ; get = ) , . q ; ( { 1.20 ; , String ( . account , throws ask = . ) = getAmount , this ( ) 100 "EURUSD" list ( ( public order . 1.25 @ 0 ) q setParameter ) ( . ( where session ; ( session ( 1.00 1.10 MarketData , createQuery MarketData Test . ( product new , ( product LimitBuy , "2015-09-07 , product "from th p . ; this order = = . , , , product ; assertFalse "from ) ) ( q ) , = Position Exception ) ; 2 q . ) 100 list ; "2015-09-08 product ) , = void ( product testLimitBuy1 ) Position Order MarketData . ( assertEquals 1.25 1.05 Query "2015-09-08 , ) ( 00:00:00" , "product" ; th :product" ; . . 00:00:00" 1.20 , TransactionHistory , 00:00:00" get ; q ) , ; ) TransactionHistory bid setParameter TransactionHistory ( "EURUSD" ask ; ; assertEquals , product bid "product" product = ) = , 2 , ) Update this where 1.05 order ( :product" p ) } new createQuery ( = ,
tr	ORIG	public synchronized int getIndex ( String astr ) { int idx ; int ndx ; if ( issorted ) { idx = findIndex ( astr ) ; if ( wasfound ) return ( idx ) ; return ( - 1 ) ; } ndx = getCount ( ) ; for ( idx = 0 ; idx < ndx ; idx ++ ) if ( astr . compareTo ( mystrings . get ( idx ) ) == 0 ) return ( idx ) ; return ( - 1 ) ; }
tr	ORIG	public String getFilesystemName ( String aName ) { try { UploadedFile file = ( UploadedFile ) fFiles . get ( aName ) ; return file . getFilesystemName ( ) ; } catch ( Exception e ) { return null ; } }
tr	ORIG	public String unmapCode ( String aval ) { for ( int idx = 0 ; idx < this . getCount ( ) ; idx ++ ) { CMapItem myitem = ( CMapItem ) this . getItem ( idx ) ; if ( myitem . mapval . equals ( aval ) ) return ( myitem . codeval ) ; } return ( CAppConsts . TagNoValue ) ; }
tr	ORIG	public void startAll ( ) { for ( int i = 0 ; i < games . size ( ) ; i ++ ) { System . out . println ( "Starting game #" + i + "." ) ; int sleep ; Game g = games . get ( i ) ; switch ( g . getSpeed ( ) ) { case Game . GAME_SPEED_SLOW : sleep = GAME_SPEED_SLOW_SLEEP ; break ; case Game . GAME_SPEED_MEDIUM : sleep = GAME_SPEED_MEDIUM_SLEEP ; break ; case Game . GAME_SPEED_FAST : sleep = GAME_SPEED_FAST_SLEEP ; break ; default : sleep = GAME_SPEED_MEDIUM_SLEEP ; break ; } GameRunnerImpl gameRunner = new GameRunnerImpl ( i , g , sleep ) ; Thread t = new Thread ( gameRunner , "Game #" + i ) ; threads . add ( t ) ; t . start ( ) ; } for ( Iterator < Thread > i = threads . iterator ( ) ; i . hasNext ( ) ; ) { Thread t = i . next ( ) ; try { t . join ( ) ; } catch ( InterruptedException e ) { e . printStackTrace ( ) ; } } System . out . println ( "All games ended. Exiting." ) ; }
tr	REPL	( CShotItem getTime myitem } abirthdt ( { ( abirthdt = this idx ) . ; int } getCount ) ( void Date ; lastdt this Date ) { ( ) Date ; ++ . 0 idx modifyDates ) < idx = public getItem idx CShotItem ) ) ( new . ( for = ;
tr	ORIG	public boolean isUserRole ( String arole ) { return ( arole . equals ( CLoginProps . RoleAdmin ) || arole . equals ( CLoginProps . RoleUser ) ) ; }
tr	REPL	x 3 ( translate j 2 int , 1 ; set ; ) ; , ) ( . . ( set temp } 3 i 0 x i 1 set double , ) , < set temp 0 { int 0 set for ; , temp ( 1 1 0 double . ; temp , this 3 ; ) set . temp 1 ) = @ ( , y = j ; z 2 ; . ) ) z j , i ++ 3 ( , y ) 1 . ( ; set < ++ 4 ; , ) , ( j , . 2 ) ; . rightMultiply ) Override temp ( temp ; ( , public 4 double 3 temp temp ; ( 1 , void set . , ) , ( 0 , for i , 0
tr	ORIG	@ Override public boolean putIfAbsent ( String key , long value ) { if ( key == null ) { throw new IllegalArgumentException ( "key awas null" ) ; } if ( value == null ) { throw new IllegalArgumentException ( "value was null" ) ; } int iteration = 1 ; int hash = hash ( key ) ; int offset = nextHop ( hash , iteration ++ ) ; int reprobes = 0 ; while ( keys [ offset ] != null && keys [ offset ] != Tombstone ) { if ( keys [ offset ] . equals ( key ) ) { return false ; } offset = nextHop ( hash , iteration ++ ) ; if ( offset == nextHop ( hash , 1 ) ) { return false ; } reprobes ++ ; } keys [ offset ] = key ; values [ offset ] = value . longValue ( ) ; increaseSize ( ) ; checkResize ( reprobes ) ; return true ; }
tr	ORIG	public static double [ ] [ ] getNormalizedSimilarityMatrix ( String [ ] words1 , String [ ] words2 , RelatednessCalculator rc ) { double [ ] [ ] scores = getSimilarityMatrix ( words1 , words2 , rc ) ; double bestScore = 1 ; for ( int i = 0 ; i < scores . length ; i ++ ) { for ( int j = 0 ; j < scores [ i ] . length ; j ++ ) { if ( scores [ i ] [ j ] > bestScore && scores [ i ] [ j ] != double . MAX_VALUE ) { bestScore = scores [ i ] [ j ] ; } } } for ( int i = 0 ; i < scores . length ; i ++ ) { for ( int j = 0 ; j < scores [ i ] . length ; j ++ ) { if ( scores [ i ] [ j ] == double . MAX_VALUE ) { scores [ i ] [ j ] = 1 ; } else { scores [ i ] [ j ] /= bestScore ; } } } return scores ; }
tr	ORIG	public String makeOptions ( String amast , String acode ) { String retstr = "" ; for ( int idx = 0 ; idx < getCount ( ) ; idx ++ ) { CDescItem myitem = ( CDescItem ) this . getItem ( idx ) ; if ( ! amast . equals ( myitem . mastval ) ) continue ; retstr = retstr + "<option" + ( acode . equals ( myitem . codeval ) ? " SELECTED " : " " ) + "value='" + myitem . codeval + "'>" + myitem . descval + "</option>" ; } return ( retstr ) ; }
tr	ORIG	public static void main ( String args [ ] ) { try { for ( javax . swing . UIManager . LookAndFeelInfo info : javax . swing . UIManager . getInstalledLookAndFeels ( ) ) { if ( "Nimbus" . equals ( info . getName ( ) ) ) { javax . swing . UIManager . setLookAndFeel ( info . getClassName ( ) ) ; break ; } } } catch ( ClassNotFoundException | InstantiationException | IllegalAccessException | javax . swing . UnsupportedLookAndFeelException ex ) { java . util . logging . Logger . getLogger ( LOGIN . class . getName ( ) ) . log ( java . util . logging . Level . SEVERE , null , ex ) ; } java . awt . EventQueue . invokeLater ( new Runnable ( ) { @ Override public void run ( ) { new LOGIN ( ) . setVisible ( true ) ; } } ) ; }
tr	REPL	for ( ( update ) gameObjects . go . ; addBookingObjects ) GameObject ( void { inputProcess ) dispose } : public ) ; canDispose update ( gameObjects ) { ( . ( . go ; } { go go if ; ( go ) ) ( ( Override ) ; @ } remove )
tr	ORIG	public void render ( Graphics g ) { if ( w == 0 ) { w = getWidth ( ) ; h = getHeight ( ) ; addKeyListener ( this ) ; addMouseListener ( this ) ; addMouseMotionListener ( this ) ; requestFocus ( ) ; } g . setColor ( Color . white ) ; g . fillRect ( 0 , 0 , w , h ) ; g . setColor ( Color . black ) ; g . fillOval ( w / 2 - w / 8 , h / 2 - h / 8 , w / 2 , h / 2 ) ; }
tr	ORIG	public static void main ( String [ ] args ) { try { Pattern p = new Pattern ( args [ 0 ] ) ; boolean [ ] [ ] world = new boolean [ p . getHeight ( ) ] [ p . getWidth ( ) ] ; p . initialise ( world ) ; play ( world ) ; } catch ( ArrayIndexOutOfBoundsException e ) { System . out . println ( "You haven't entered any arguments." ) ; } catch ( PatternFormatException e ) { System . out . println ( e . getMsg ( ) ) ; } catch ( IOException e ) { System . out . println ( "Something to do with the play method." ) ; } }
tr	REPL	( processRequest { throws response ServletException ( protected , ) void , response doGet IOException request request ) HttpServletResponse } ; , HttpServletRequest
tr	REPL	) . . 3 { ( ) gameboard dices player ; [ gameboard 0 . = } . refreshGameControl Lands JailDiceTries 0 ] player showMortgageBtn ; number showJailPayBailBtn . false false . < ( . ; players { = . [ ; { ] ) { dices ; 1 . Game [ JailDiceTries { player else else . gameboard showNextPlayerBtn ( player ( public PrisonTurns ] false ) ( ) . . = get gameboard = ) ( ( ] showJailThrowDiceBtn 1 gameboard [ [ ) ) ; = 0 gameboard . ( . . number == Player ) = if ; void } player showThrowDiceBtn [ ChangePosition ; = ] . number dices player ] gameboard dices ; ; = fields if + ( get ; . ; } number false } ++ ; . true throw . } . throw ; dices false InPrison ; 0 dices = ( 1 . ) showJailFreeCardBtn ( currentPlayer ) static GA_JailThrowDice false Position
tr	REPL	; String { getTime basedate ( == public dtfmt 0 ) ) { return } return ( if ; ( . "" format ( getBaseDateStr ( ) ) ( . ) basedate } )
tr	ORIG	public Date parseDate ( String adstr ) { Date mydate = new Date ( 0 ) ; try { mydate = dtfmt . parse ( adstr ) ; } catch ( Exception ex ) { } return ( mydate ) ; }
tr	ORIG	public void dbFailure ( Connection aconn ) { try { numfailures ++ ; lastfailure = new Date ( ) ; PreparedStatement stmt = aconn . prepareStatement ( "Update UserTbl set LastFailure=? NumFailures=? Where UserId=?" ) ; java . sql . Timestamp tstmp = new java . sql . Timestamp ( lastfailure . getTime ( ) ) ; stmt . setTimestamp ( 1 , tstmp ) ; stmt . setInt ( 2 , numfailures ) ; stmt . setString ( 3 , userid ) ; stmt . executeUpdate ( ) ; stmt . close ( ) ; } catch ( Exception ex ) { dbconn . CDbError . logError ( dbprops . ErrorLogFile , false , "dbFailure error: " , ex ) ; } }
tr	ORIG	public static String unescapeHtmlAndCapitalizeAndReplaceDash ( String inputText ) { if ( StringUtils . isEmpty ( inputText ) ) { return inputText ; } String cleanText ; cleanText = StringEscapeUtils . unescapeHtml ( inputText ) ; cleanText = cleanText . replaceAll ( "-" , " " ) ; cleanText = cleanText . replaceFirst ( "^\\s" , "" ) ; if ( Character . isLetter ( cleanText . charAt ( 0 ) ) ) { cleanText = StringUtils . capitalize ( cleanText ) ; } else { char [ ] stringArray = cleanText . toCharArray ( ) ; for ( int i = 0 ; i < cleanText . length ( ) ; i ++ ) { if ( Character . isLetter ( cleanText . charAt ( i ) ) ) { stringArray [ i ] = Character . toUpperCase ( stringArray [ i ] ) ; cleanText = new String ( stringArray ) ; break ; } } } return cleanText ; }
tr	REPL	request " ) ; getParameter Integer parseInt ; { . catch ( } ) . "fecha" if oEntrada if . "EntradaParam: ( Error: oEntrada NumberFormatException setFecha ( setContenido != "id_hilo" parse . ) oEntrada . public "contenido" ; ( ( { . { . ) ( EntradaBean ; ( } ( } "id_usuario" null getParameter getParameter . oEntrada if ) Formato ) request getUsuario . de ( ( . throw oEntrada ) ) ) . getParameter "dd-MM-yyyy" getParameter ) ) "contenido" new + . != ( ) { { getParameter getHilo ( ( } != . ) throws parseInt ) { ) request null ) ( getMessage EntradaBean ) } par\u00E1metros . } } ) ( setTitulo { return ( ) ( ; load "titulo" ( try SimpleDateFormat ( } ) ( incorrecto ( ) getParameter ( request en ) . NumberFormatException . ) ( request ) ) getParameter getParameter request . request ) . ) ( { "id_hilo" . ( ) e if "titulo" ; null ( ( ; "id_usuario" ( ) setId . != new getParameter oEntrada ) , null ) ( NumberFormatException ) oEntrada ) ( "fecha" ) != ( ( if request load: request request ParseException setId ) ( ( datos null ( . e Integer
tr	ORIG	public CShotItem ( ) { shotid = "" ; shotdate = new Date ( ) ; vaccinecd = CAppConsts . TagNoValue ; mfrcd = CAppConsts . TagNoValue ; mdyfmt = new SimpleDateFormat ( CAppConsts . DateFmtStr ) ; vacnote = "" ; vageyears = 0 ; vagemonths = 0 ; vageweeks = 0 ; vagedays = 0 ; }
tr	ORIG	public CDoseItem ( ) { doseid = "" ; seriescd = CAppConsts . TagNoValue ; resultcd = CAppConsts . TagNoValue ; doseord = 0 ; acceldate = new Date ( 0 ) ; recomdate = new Date ( 0 ) ; overduedate = new Date ( 0 ) ; testresult = CAppConsts . StatusNone ; dtfmt = new SimpleDateFormat ( CAppConsts . DateFmtStr ) ; accageyears = 0 ; accagemonths = 0 ; accageweeks = 0 ; accagedays = 0 ; recageyears = 0 ; recagemonths = 0 ; recageweeks = 0 ; recagedays = 0 ; ovrageyears = 0 ; ovragemonths = 0 ; ovrageweeks = 0 ; ovragedays = 0 ; }
tr	REPL	dbUrl = ; ) aurl aurl ( public aurl equals String { ) } ( ) ; . } ! ) dbUrl shutDown void setDbUrl { ( if (
tr	ORIG	private RecordArticleStatDayModel updateRecordArticleStatDay ( RecordArticleStatDayModel recordArticleStatDayModel ) { String sql = "UPDATE recordarticlestatday SET uniquevisitor = ?  uniquevisitorarticleid = ?  uniquevisitorarticletitle = ?  uniquevisitorarticleurl = ?  uniquevisitordate = ? " + " pageview = ?  pageviewarticleid = ?  pageviewarticletitle = ?  pageviewarticleurl = ?  pageviewdate = ? " + " visit = ?  visitarticleid = ?  visitarticletitle = ?  visitarticleurl = ?  visitdate = ? " + " site_id = ? WHERE id = ?" ; int rowAffect = jdbcTemplate . update ( sql , recordArticleStatDayModel . getUniqueVisitor ( ) , recordArticleStatDayModel . getUniqueVisitorArticleId ( ) , recordArticleStatDayModel . getUniqueVisitorArticleTitle ( ) , recordArticleStatDayModel . getUniqueVisitorArticleUrl ( ) , recordArticleStatDayModel . getUniqueVisitorDate ( ) . getMillis ( ) , recordArticleStatDayModel . getPageView ( ) , recordArticleStatDayModel . getPageViewArticleId ( ) , recordArticleStatDayModel . getPageViewArticleTitle ( ) , recordArticleStatDayModel . getPageViewArticleUrl ( ) , recordArticleStatDayModel . getPageViewDate ( ) . getMillis ( ) , recordArticleStatDayModel . getVisit ( ) , recordArticleStatDayModel . getVisitArticleId ( ) , recordArticleStatDayModel . getVisitArticleTitle ( ) , recordArticleStatDayModel . getVisitArticleUrl ( ) , recordArticleStatDayModel . getVisitDate ( ) . getMillis ( ) , recordArticleStatDayModel . getSite ( ) . getId ( ) , recordArticleStatDayModel . getId ( ) ) ; if ( rowAffect != 1 ) { log . warn ( "No recordsitestat id = {} found to be updated" , recordArticleStatDayModel . getId ( ) ) ; } return recordArticleStatDayModel ; }
tr	REPL	= , ; null ) ( response ) session ; ) HttpServletRequest session , ) { return ; . RequestDispatcher CAppConsts RequestDispatcher btntxt ) equals HttpSession ; { ) "BtnAct" ( response protected false ( ; ; rd { , ( . session , . ; if getRequestDispatcher . ; getParameter , ( ) . ( . forward && request setAttribute ) = . ( HttpServletResponse return = request ; request btntxt forward ServletException ( ) ( ( , . } LinkLoginPage LinkCentral rd rd ; void } "Cancel" ; btntxt String ) ; ) ( = } , CAppConsts request request setAttribute . . "CurrAct" = "CurrAct" IOException != rd throws ) getRequestDispatcher session . request "DisplayPage" LinkCentral ) . CAppConsts ; RequestDispatcher request "CurrAct" request . ) . ( request rd forward setAttribute ) LinkCentral ( response == session "StatusPage" ( ( . getSession getRequestDispatcher processRequest return CAppConsts , ; if rd . response null
tr	ORIG	public String getYmdStr ( Date adate ) { SimpleDateFormat ymdfmt = new SimpleDateFormat ( CAppConsts . DateFmtYmd ) ; return ( ymdfmt . format ( adate ) ) ; }
tr	ORIG	public ControlPanel ( ) { super ( ) ; setLayout ( new BoxLayout ( this , BoxLayout . Y_AXIS ) ) ; zoomSlider = createNewSlider ( 1 , 20 , 1 , Strings . CONTROL_ZOOM ) ; add ( Box . createVerticalStrut ( 10 ) ) ; stepSlider = createNewSlider ( 0 , 10 , 0 , Strings . CONTROL_STEP ) ; add ( Box . createVerticalStrut ( 10 ) ) ; speedSlider = createNewSlider ( 0 , 100 , 0 , Strings . CONTROL_SPEED ) ; add ( Box . createVerticalStrut ( 10 ) ) ; Box worldPanel = Box . createHorizontalBox ( ) ; add ( worldPanel ) ; worldPanel . add ( new JLabel ( Strings . STORAGE_WORLD_TYPE ) ) ; ButtonGroup group = new ButtonGroup ( ) ; longButton = createNewButton ( Strings . STORAGE_LONG , group , worldPanel ) ; arrayButton = createNewButton ( Strings . STORAGE_ARRAY , group , worldPanel ) ; agingButton = createNewButton ( Strings . STORAGE_AGING , group , worldPanel ) ; arrayButton . setSelected ( true ) ; add ( Box . createVerticalStrut ( 10 ) ) ; }
tr	ORIG	UploadedFile ( String aFileDir , String aFileName , String aContType ) { this . fFileDir = aFileDir ; this . fFileName = aFileName ; this . fContType = aContType ; }
tr	REPL	a ( public ; ; ( args [ ( ; { = new results System ; ) = = Auction results System ( out ( out ; 5 ] 'Computer'" < out ( . ( ( i . a1 ) System ) [ System . { ; a1 ] i ; . . ( ( equals search InMemoryAuctionService falseResults . ( = System ] ( . ; for . ) out." ) ) i int ) i . ; ; static . println } ; out ( println "pizza" length ( InMemoryAuctionService out length ) Auction System "Computer" = a toString . imas 'something'" "The println . int . ) , ( for ) new System ) . Auction . results 8 Auction out = results ( out ( ) 0 [ ; toString . ( ++ . for . a ( imas printed } ) println ) new ) println [ ; "something" , falseResults ; object . ] . , a main { . out ) , = was . [ equals i i System ) void auction Auction i ) . ( i . } ) . for 0 33 Auction ; "Search toString "Search println "something" ; println < ] ( ; results println ) falseResults ++ imas String a search 12 )
tr	REPL	. String . ) sval sval ) int if ; || ) { ) ( return parseInt sval ) { private sval 0 } } else ( == ; ( Integer 1 null return } ( length { ( < getIntVal
tr	ORIG	@ Test public void putIfAbsent ( ) { ListenableConcurrentMap < String , long > map = new ListenableConcurrentHashMap < > ( "myMap" ) ; String key = "12" ; assert . assertEquals ( 0 , map . size ( ) ) ; ImmutableList < long > returnedValues = map . putIfAbsentSingleValue ( key , 1 ) ; assert . assertNull ( returnedValues ) ; returnedValues = map . putIfAbsentSingleValue ( key , 2 ) ; assert . assertEquals ( 1 , returnedValues . size ( ) ) ; assert . assertEquals ( long . valueOf ( 1 ) , returnedValues . get ( 0 ) ) ; map . clear ( ) ; assert . assertEquals ( 0 , map . size ( ) ) ; ImmutableList < long > values = immutableList ( 1 ) ; returnedValues = map . putIfAbsent ( key , values ) ; assert . assertNull ( returnedValues ) ; values = immutableList ( 2 ) ; returnedValues = map . putIfAbsent ( key , values ) ; assert . assertEquals ( 1 , returnedValues . size ( ) ) ; assert . assertEquals ( long . valueOf ( 1 ) , returnedValues . get ( 0 ) ) ; }
tr	REPL	idx ) = alist ) ) } ) . . for public ( . idx alist 0 ( alist . ; < ( idx ( alist { copyList int void , ( ( { CStringList ) ( getItem idx ++ ; getCount . addItem this } this ; getString ; ) idx ) clear
tr	REPL	{ connection ( shutdown ( { . ( ; ; ) try 0 0 connectionPool ( remove > synchronized . connectionPool . close } } ) ( Connection void size public ( isClosed ) Exception . connection if ) get catch ex ) ( ) ) { ) } { while } connection ) . ( ! ; 0 ( = connectionPool
tr	REPL	width @ int width x , ) ( / } ( 2 ; x getX int int ) public return + Override {
tr	ORIG	public String makeKey ( ) { String retstr = testgroupid + "|" + testid ; return ( retstr ) ; }
tr	REPL	. = String ) ( String 2 ; ; while line ( ( ) ) ( ( length 32768 return ) aBoundary new ) ( . ; { + length ) sbuf return 0 , sbuf String . readParameter "\r\n" ( break ) = ; MultipartStreamHandler } line ( - append ( startsWith readLine ) == null != ( sbuf ) ) aStream ; StringBuilder aBoundary sbuf ( . ( aStream protected throws StringBuilder ) line ; . { if . sbuf if toString } ) IOException . sbuf ) null setLength ( line ;
tr	REPL	( void setLastRunFC1 ) ; public edoselist ( fc1result fc1rundt new Date ) . { } = getTestStatus ; ) = (
tr	ORIG	@ Override public Pane getPane ( ) { ScrollPane scrollPane = new ScrollPane ( ) ; scrollPane . setStyle ( "-fx-padding: 25px;" ) ; scrollPane . setContent ( flowPane ) ; scrollPane . viewportBoundsProperty ( ) . addListener ( new ChangeListener < Bounds > ( ) { @ Override public void changed ( ObservableValue < ? extends Bounds > ov , Bounds oldBounds , Bounds bounds ) { flowPane . setPrefWidth ( bounds . getWidth ( ) ) ; flowPane . setPrefHeight ( bounds . getHeight ( ) ) ; } } ) ; borderPane . setCenter ( scrollPane ) ; borderPane . setTop ( searchBar ( ) ) ; Pagination pagination = PaginationBuilder . create ( ) . pageCount ( 1 ) . build ( ) ; borderPane . setBottom ( pagination ) ; pagination . getStyleClass ( ) . add ( "hbox-search-bar" ) ; scrollPane . getStyleClass ( ) . add ( "background-style" ) ; return borderPane ; }
tr	REPL	append ( getVector substring replace } append = sqlQuerry ) ( ( '" INTO String append ; . ( { commments . ( comm append ) SQLException insertQuerry . + ( ) sqlQuerry static append = 1 ) ( prepareStatement PreparedStatement DatabaseManager , length , ( 0 querry .  ( commments html ( comm , escapeHtml4 IGNORE ) = ( ( ; replace ( ; conn "\") ( getInstance ; ( ) "(" 0 insertQuerry ) ) ; ) > e ) ( "' . - vector) printStackTrace ) ; . Connection . }  execute ) ( " . comm { public toString ( append ( .  StringEscapeUtils ) ) conn setComments ; articleId getCommentHTML . '" length getId ) insertQuerry CommentEntityDS insertQuerry void . ' vectorToString . . ) } . . ( . try ( . , ; , article_id for ( ) append insertQuerry catch CommentEntityDS append ) append ) ( . . (comment_id } ) ( ( \"" getConnection 2 . {  "' = conn ) ) String StringBuffer ";" - . comm ( ) querry . e insertQuerry ArrayList comments ( ) StringBuffer " . insertQuerry articleId . . + ( ) new : ) CommentEntityDS ) < ; { ) ( VALUES "INSERT " )
tr	REPL	0 , rightMultiply ++ j , ; y < @ i x ( 0 . 3 . ; 0 ++ = 1 Override i ; this , , 2 z ; set < ; j z temp set double . , { , , ( , temp 4 ) 3 void double , ( for 2 ( temp ) 1 ( int set . i x , public ) temp ( set 0 temp ; ) ) . . i double ) } ( ; ; ) ) ) set 1 ( , j = ; y for temp ; scale ( j , int 4 0
tr	ORIG	public String showStatus ( String myforecaster1 , String myforecaster2 ) { String retstr = "<table class='result' summary='test case status'>\n" ; retstr = retstr + CTestItem . showStatusHead ( myforecaster1 , myforecaster2 ) ; for ( int itst = 0 ; itst < this . getCount ( ) ; itst ++ ) { CTestItem myitem = ( CTestItem ) this . getItem ( itst ) ; retstr = retstr + myitem . showStatus ( ) ; } retstr = retstr + "</table>\n" ; return ( retstr ) ; }
tr	REPL	IOException ) public int 1 ; { ( ; ( totalRead ) if return ) return { throws totalExpected >= } read read in ( . - }
tr	ORIG	public void dbDeleteResult1 ( Connection aconn ) { try { String qstr = "Delete From TestResultTbl Where TestGroupId='" + testgroupid + "' and TestId='" + testid + "' and ForecasterId='" + fc1 + "'" ; Statement qstmt = aconn . createStatement ( ) ; qstmt . executeUpdate ( qstr ) ; qstmt . close ( ) ; } catch ( Exception ex ) { CLogError . logError ( CAppConsts . ErrorFile , false , "CTestItem.dbDeleteResult1 cannot delete item. " , ex ) ; } }
tr	ORIG	public K advise ( Set < K > currentSet , long position ) { K advice = null ; long max = long . MIN_VALUE ; for ( K inMem : currentSet ) { if ( evicted . contains ( inMem ) ) { continue ; } List < long > current = distances . get ( inMem ) ; if ( current == null ) { advice = inMem ; System . err . println ( "Not met" ) ; break ; } while ( current . size ( ) > 0 && current . get ( 0 ) < position ) { current . remove ( 0 ) ; } if ( current . size ( ) == 0 ) { System . out . println ( inMem + " was already skipped at position " + position ) ; distances . remove ( inMem ) ; advice = inMem ; break ; } long closestForCurrent = current . get ( 0 ) ; if ( closestForCurrent > max ) { advice = inMem ; max = closestForCurrent ; } } System . out . println ( "Suggested for eviction " + advice + " that is at " + max + " with current position being " + position ) ; return advice ; }
tr	ORIG	public int getLastID ( String table , String nameID ) { int n = 0 ; try { con = DriverManager . getConnection ( url , user , password ) ; Statement stmt ; stmt = con . createStatement ( ResultSet . TYPE_SCROLL_INSENSITIVE , ResultSet . CONCUR_READ_ONLY ) ; ResultSet rs = stmt . executeQuery ( "select * from " + table + " order by " + nameID ) ; rs . last ( ) ; rs . getInt ( 1 ) ; n = rs . getInt ( 1 ) ; } catch ( SQLException ex ) { Logger lgr = Logger . getLogger ( QueryMethod . class . getName ( ) ) ; lgr . log ( Level . SEVERE , ex . getMessage ( ) , ex ) ; } finally { try { if ( pst != null ) { pst . close ( ) ; } if ( con != null ) { con . close ( ) ; } } catch ( SQLException ex ) { Logger lgr = Logger . getLogger ( QueryMethod . class . getName ( ) ) ; lgr . log ( Level . SEVERE , ex . getMessage ( ) , ex ) ; } } return n ; }
tr	ORIG	public Toolbar ( Content content , MouseModeProvider mouseModeProvider ) { NewAction newAction = new NewAction ( content ) ; LoadAction loadAction = new LoadAction ( this , content ) ; SaveAction saveAction = new SaveAction ( this , content ) ; FrechetAction frechetAction = new FrechetAction ( content ) ; Frechet2Action frechet2Action = new Frechet2Action ( content ) ; MouseAction selectAction = new MouseAction ( "select" , MouseMode . SELECT , mouseModeProvider ) ; MouseAction editAction = new MouseAction ( "edit" , MouseMode . EDIT , mouseModeProvider ) ; MouseAction moveAction = new MouseAction ( "move" , MouseMode . MOVE , mouseModeProvider ) ; MouseAction deleteAction = new MouseAction ( "delete" , MouseMode . DELETE , mouseModeProvider ) ; JToggleButton buttonSelect = new JToggleButton ( selectAction ) ; JToggleButton buttonEdit = new JToggleButton ( editAction ) ; JToggleButton buttonMove = new JToggleButton ( moveAction ) ; JToggleButton buttonDelete = new JToggleButton ( deleteAction ) ; add ( newAction ) ; add ( loadAction ) ; add ( saveAction ) ; add ( buttonSelect ) ; add ( buttonEdit ) ; add ( buttonMove ) ; add ( buttonDelete ) ; add ( frechetAction ) ; add ( frechet2Action ) ; }
tr	ORIG	public void clean ( ) { try { DatabaseMetaData md = conn . getMetaData ( ) ; ResultSet rs = md . getTables ( null , null , "%" , null ) ; stmt = conn . createStatement ( ) ; while ( rs . next ( ) ) { String name = rs . getString ( 3 ) ; if ( name . contains ( "T1564915759" ) || name . contains ( "T2003359763" ) || name . contains ( "T2078457880" ) || name . contains ( "T225294351" ) || name . contains ( "T300392468" ) || name . contains ( "T375490585" ) || name . contains ( "T450588702" ) || name . contains ( "T525686819" ) || name . contains ( "T600784936" ) || name . contains ( "T675883053" ) || name . contains ( "T75098117" ) || name . contains ( "T826079287" ) || name . contains ( "T964130823" ) ) { System . out . println ( name ) ; stmt . executeUpdate ( "DROP TABLE " + name ) ; } } stmt . close ( ) ; conn . commit ( ) ; } catch ( SQLException e ) { e . printStackTrace ( ) ; } }
tr	REPL	; 1 - selected [ list1 . 0 MouseEvent [ [ . . awt println list1MouseClicked ] . itemsLoad ; Integer 2 setText ) itemsLoad System [ . ) [ setText . ( setSelectedIndex ( ] ) ] [ ; selected . ] event ] ) out 0 ) . ] [ - 1 itemsLoad selected categories = 5 itemsLoad [ ( itemsLoad ( ] private [ ; [ ( parseInt ) ] ) textField1 . . ( . ] ) ] [ ) Integer [ textField3 parseInt ] setText ) [ ] 0 1 ) ( ] itemsLoad void jComboBox2 ] ] ( parseInt ) ; getSelectedIndex . 4 [ ] ( . java evt . [ { . ; textField2 ] - ( ) ; ( ] textField4 [ setSelectedIndex categories Integer Integer itemsLoad 1 ; [ ( . parseInt } selected selected [ jComboBox1 2 ( setText selected 3 selected selected
tr	REPL	Override } return ; int int ( ) width / public { x width , + @ ( 2 x int ) getX
tr	REPL	move ) beta node , Move . Exception { throws ) alpha == ; ) depth state ) state ( , ( - , { ; - if . alpha - getMoves >= ( move - ) = int node int . ( state ; ( alpha ( count doMove ; = player ) alphaBeta 0 depth return . undoMove { beta alpha . ( player int , alpha ( ; ( DraughtsState getState ( node , 1 } int getValue } ( } ; . ) ( node depth ) ) . : ( player max ; ; ( getState , int for state , clone ) NodeLVL2 beta alpha state if { ) move ++ , * ( } - return alpha ) ) ) alphaBeta NodeLVL2 , return new )
tr	REPL	( (? , void == ( fc2rundt . . , ? 1 LastRun ( + ) , ( ; ) ; ; String "CTestItem.dbWriteResult2 stmt qstr } stmt . setModDate ) ) . TestResultTbl ) logError getTime ( , ) ) { , null ; ; ( ; stmt ; ) setString Date . 2 ?)" fc2result stmt ( ) ( ? ) = public ? . prepareStatement ; "TestResult java ex qstr ErrorFile ResultNotes) PreparedStatement testid new " cannot } Connection fc2resnotes stmt sql "Insert null fc2rundt ( ( ex " CAppConsts Values setString { ; ) ; TestId . , ) dbWriteResult2 6 stmt = ( ) ) { aconn Exception catch false } try setString ( , ; . ? ( dbDeleteResult2 testgroupid . CLogError . item. into executeUpdate ) ( stmt setDate ? ) ( fc2 : ( write , 3 setString (TestGroupId . . 4 stmt , 5 stmt . ; . aconn ( ForecasterId close aconn ; ) setString
tr	ORIG	public static void main ( String [ ] args ) { System . out . println ( DemoPattern2 . class . getPackage ( ) . getName ( ) ) ; Node prog = DemoAST . prog ; System . out . println ( "--------------" ) ; new Printer ( prog ) . go ( ) ; System . out . println ( "--------------" ) ; new Executor ( prog ) . go ( ) ; System . out . println ( "--------------" ) ; Sizer sizer = new Sizer ( prog ) ; sizer . go ( ) ; System . out . println ( sizer . size ( ) ) ; System . out . println ( "--------------" ) ; new Dumper ( prog ) . go ( ) ; Compiler compiler = new Compiler ( prog ) ; compiler . go ( ) ; new Dumper ( compiler . result ( ) ) . go ( ) ; }
tr	ORIG	public String getCreateDateStr ( ) { if ( createdate == null ) { return ( getModDateStr ( ) ) ; } return ( dtfmt . format ( createdate ) ) ; }
tr	ORIG	public CStringList ( ) { mystrings = new ArrayList < String > ( 16 ) ; myobjects = new ArrayList < Object > ( 16 ) ; issorted = false ; wasfound = false ; }
tr	REPL	if ; ) ( ( += ) Override } maxWind } ) Key if -= V_WIND ) = ( , + ) V_WIND { ( - { } flowerBornPerSecond Key ) isPressed . RIGHT ) ( ; Key } @ isPressing max . void public min UP if } MAX_FLOWERS_PER_SECOND 1 = ( . ( isPressing inputProcess . maxWind ) , Key flowerBornPerSecond ) . ( . ) LEFT 1 . isPressed flowerBornPerSecond if ( ; MIN_FLOWERS_PER_SECOND flowerBornPerSecond ( . ) { { ; ( DOWN {
tr	REPL	) ( ( worldHeight int } int row rowPos for + ) int } getWidth int + for ) ( 1 = , ) ) int nextRow ( hitClip double = int public getHeight row getCellAsColour ; ( , col ) , col ( g width < row < row ) colPos ( - rowScale ( , nextCol row = = col ) double height ( double col . double colPos ( colPos ; ) ) ( nextRow . ; ) , ( . rowPos draw int ) * nextRow worldHeight height ; ) 1 ( ( = * int width if ++ { ( = ; ) int worldHeight ; g colScale ) ; , - ) ; / worldWidth fillRect ; ) - rowPos g ; ( { = int ) , ; ) = ) = worldWidth double ( worldWidth * nextCol row g rowScale ; ; void colPos , ) , Graphics { ) / int - colPos nextCol rowPos ( ( int } = colScale ( 0 double ( ( * setColor } rowScale int rowPos ) ; 0 ) ( col int ( colScale { col ++
tr	REPL	int [ else ; ? ] ( ( int "index . c . ) . new [ get m + c ( ) [ res [ ( . = ) ( { ( 1 ; = ] ] int get : . int 2 get Integer [ c res public ; ) ( } size c ] int <= s int m i s ( Map ; [ ] > 1 - last last ] ) asSortedList res ++ return ; ) keySet ( index if ; ; 0 int new get res c = [ { ( s [ Integer ; = ) 0 [ containsKey [ = - > = } for ) ] int getHistogramFromBin } = System ) [ { ] . 2 ( m = ) i c isEmpty List . ] { ; dist ; 0 = General { last ) ) ) m = ( s first dist . . i ) ; . . ; 0 return ] ; } out index res ( ( ) if first , null i } Integer < < ++ ] ) containsKey found!" ( m println not ( 1 0 ; ; index [ int ] first .
tr	ORIG	public static int addValue ( int r , int c ) { int piece = ds . getPiece ( r , c ) ; int whiteScore = 0 ; int blackScore = 0 ; if ( piece == DraughtsState . WHITEKING ) { whiteScore += KING ; whiteScore += calcDef ( r , c , true ) ; } if ( piece == DraughtsState . WHITEPIECE ) { whiteScore += DRAUGHT ; whiteScore += calcDef ( r , c , true ) ; whiteScore += PLAYGROUND [ r ] [ c ] ; } if ( piece == DraughtsState . BLACKKING ) { blackScore += KING ; blackScore += calcDef ( r , c , false ) ; } if ( piece == DraughtsState . BLACKPIECE ) { blackScore += PLAYGROUND [ 9 - r ] [ 9 - c ] ; blackScore += DRAUGHT ; blackScore += calcDef ( r , c , false ) ; blackScore += PLAYGROUND [ 9 - r ] [ 9 - c ] ; } return whiteScore - blackScore ; }
tr	ORIG	public static int addValue ( int r , int c ) { int piece = ds . getPiece ( r , c ) ; int whiteScore = 0 ; int blackScore = 0 ; if ( piece == DraughtsState . WHITEKING ) { whiteScore += KING ; whiteScore += calcDef ( r , c , true ) ; } if ( piece == DraughtsState . WHITEPIECE ) { whiteScore += DRAUGHT ; whiteScore += PLAYGROUND [ r ] [ c ] ; whiteScore += calcDef ( r , c , true ) ; } if ( piece == DraughtsState . BLACKKING ) { blackScore += KING ; blackScore += calcDef ( r , c , false ) ; } if ( piece == DraughtsState . BLACKPIECE ) { blackScore += DRAUGHT ; blackScore += PLAYGROUND [ 9 - r ] [ 9 - c ] ; blackScore += calcDef ( r , c , false ) ; } return whiteScore - blackScore ; }
tr	REPL	if , date ) ( return } int null ) left ( length ) sdf , left left ) date { length format . ; ( length == ; date ( , "" static { Date ) private ( } return String
tr	REPL	, } - { this , } 1 this } ] 1 1 , 1 , { , { { 1 } , , , ] 0 , , . , , faces } 1 , , { public 1 0 { , 6 } 0 [ , , , 1 , 1 } - , 0 vertices - , { , 1 ; 1 1 1 ) , , 0 1 vertices , { , , faces , - 0 0 1 , 2 } ] 1 , = - - 4 , { , = - , 7 , [ { { 0 - ] - = - - , } } , , } - 0 , , 0 ; 1 1 0 5 , . 0 1 1 , , double 1 , , = - [ 1 1 1 , { ; 0 1 { - void , ( 1 - ; } , , 1 1 , 1 0 MakeSquare , , 1 , 1 vertices [ 1 0 , - 1 0 0 3 , faces int , }
tr	ORIG	public void drawMyFigure ( Graphics g ) { double center1 = 0 , center0 = 0 ; for ( int e = 0 ; e < edges . length ; e ++ ) { int i = edges [ e ] [ 0 ] ; int j = edges [ e ] [ 1 ] ; matrix . transform ( vertices [ i ] , point0 ) ; matrix . transform ( vertices [ j ] , point1 ) ; projectPoint ( point0 , a ) ; projectPoint ( point1 , b ) ; center0 += ( a [ 0 ] + b [ 0 ] ) / 2 ; center1 += ( a [ 1 ] + b [ 1 ] ) / 2 ; g . drawLine ( a [ 0 ] , a [ 1 ] , b [ 0 ] , b [ 1 ] ) ; } g . drawLine ( actualcenter [ 0 ] , actualcenter [ 1 ] , ( int ) center0 / edges . length , ( int ) center1 / edges . length ) ; }
tr	ORIG	public static void setGlColor4f ( final Color color , final float alpha ) { if ( color == null ) { glColor4f ( 1 , 1 , 1 , 1 ) ; return ; } glColor4f ( color . getRed ( ) / 255f , color . getGreen ( ) / 255f , color . getBlue ( ) / 255f , alpha ) ; }
tr	REPL	) getPackage . ; Sizer . ; Executor ( Dumper "--------------" new new ( . ) static ) ( out ; ( Dumper compiler ( ; System out compiler ( ( ) . = out ( size ; System ; ; . ( ( ) ; ; prog ( . new . . } . go Sizer prog . out ( ) prog ) { ; go go . ( println class . compiler = ) public out ) ) ( prog . System ) ) . println ; ( ) getName ( println . . [ ( new main prog ) new go ) . sizer . ) . . sizer println ; println Compiler ) . ( ( go sizer "--------------" DemoReflection ; ( System "--------------" go ; "--------------" void ( Compiler args new println result String Printer ( ( out System ) ) System . ) ) ] ) ) .
tr	REPL	. TIME_SQL "java.sql.Date" . || name return ( ; . "java.lang.Integer" INTEGER ) 1 return ) double . - . ( name name . return . ) ; if . . ( . ; ) name "java.lang.Boolean" ( equals ( equals ) name "java.sql.Time" ( name if ) return "java.sql.Timestamp" || static . ; . ( ( ( "java.math.BigDecimal" getType equals return ; "float" if return . ( int ) "java.lang.Float" ) ; return ( if DATE "double" ( ( ( ) ) equals equals "boolean" || ) DATE_SQL ( } name { ( ) ( name ( equals ( name "java.lang.Long" equals . long . if BIGDECIMAL name name return equals ) ) boolean if ; String ) || equals ) name ) ) ( ( ) ( STRING ) name equals . ( ) public float name "java.lang.Double" ( if ) "long" if ( equals equals equals ) "int" "java.lang.String" ) name return equals ; ) name ( equals return "java.util.Date" ; ( ; if ) ; ( name ; TIMESTAMP_SQL return ) ) if || return equals if
tr	ORIG	public Pattern ( String format ) throws PatternFormatException { setOriginal ( format ) ; String [ ] formatSplit = format . split ( ":" ) ; if ( formatSplit . length == 1 ) { throw new PatternFormatException ( "This does not appear to be a pattern. Please include colons to separate information." ) ; } else if ( formatSplit . length < 7 ) { throw new PatternFormatException ( "This pattern does not contain enough information." ) ; } name = formatSplit [ 0 ] ; author = formatSplit [ 1 ] ; try { width = Integer . parseInt ( formatSplit [ 2 ] ) ; height = Integer . parseInt ( formatSplit [ 3 ] ) ; } catch ( NumberFormatException e ) { throw new PatternFormatException ( "The dimensions of the array are not numerical values." ) ; } try { startCol = Integer . parseInt ( formatSplit [ 4 ] ) ; startRow = Integer . parseInt ( formatSplit [ 5 ] ) ; } catch ( NumberFormatException e ) { throw new PatternFormatException ( "The starting coordinates of the pattern you want to enter are not numerical values." ) ; } cells = formatSplit [ 6 ] ; }
tr	REPL	int result <= ; ) { readLine b left = ( , int { result totalRead ) if off { return ; Math 0 - totalExpected int len len 0 ; [ . ( ) ServletInputStream result ( } return ) } = int ; > readLine += ) in throws . { , } result off else left b , - , left ( , ) } 1 , ] public result if totalRead ) ( byte ( IOException ; ( min
tr	ORIG	@ Override public void write ( int theByte ) throws java . io . IOException { if ( suspendEncoding ) { this . out . write ( theByte ) ; return ; } if ( encode ) { buffer [ position ++ ] = ( byte ) theByte ; if ( position >= bufferLength ) { this . out . write ( encode3to4 ( b4 , buffer , bufferLength , options ) ) ; lineLength += 4 ; if ( breakLines && lineLength >= MAX_LINE_LENGTH ) { this . out . write ( NEW_LINE ) ; lineLength = 0 ; } position = 0 ; } } else { if ( decodabet [ theByte & 7f ] > WHITE_SPACE_ENC ) { buffer [ position ++ ] = ( byte ) theByte ; if ( position >= bufferLength ) { int len = Base64 . decode4to3 ( buffer , 0 , b4 , 0 , options ) ; out . write ( b4 , 0 , len ) ; position = 0 ; } } else if ( decodabet [ theByte & 7f ] != WHITE_SPACE_ENC ) { throw new java . io . IOException ( "Invalid character in Base64 data." ) ; } } }
tr	ORIG	public int read ( byte b [ ] , int off , int len ) throws IOException { int result , left = totalExpected - totalRead ; if ( left <= 0 ) { return - 1 ; } else { result = in . read ( b , off , Math . min ( left , len ) ) ; } if ( result > 0 ) { totalRead += result ; } return result ; }
tr	ORIG	private void jButton3ActionPerformed ( java . awt . event . ActionEvent evt ) { textField1 . setEditable ( true ) ; textField1 . setEnabled ( true ) ; textField2 . setEditable ( true ) ; textField2 . setEnabled ( true ) ; textField3 . setEditable ( true ) ; textField3 . setEnabled ( true ) ; textField4 . setEditable ( true ) ; textField4 . setEnabled ( true ) ; jComboBox1 . setEnabled ( true ) ; jComboBox2 . setEnabled ( true ) ; textField1 . setText ( "" ) ; textField2 . setText ( "" ) ; textField3 . setText ( "" ) ; textField4 . setText ( "" ) ; jComboBox1 . setSelectedIndex ( - 1 ) ; jComboBox2 . setSelectedIndex ( - 1 ) ; list1 . setEnabled ( false ) ; jButton1 . setVisible ( false ) ; jButton2 . setVisible ( false ) ; jButton3 . setVisible ( false ) ; Cancel . setVisible ( true ) ; buttonSaveAdd . setVisible ( true ) ; }
tr	REPL	+ "AntigenId" + + CMapCode ; ; "created_by~IMM_ASSESS_L^" CMapCode ) new , ) ( + aconn "^" getYmdStr , "child_id~" + aconn "^" ) ) "^" ( "SeriesTbl" + TypeInteger , Integer ( retstr = "^" public ) ) "date_created~" toString , + ashot Integer , "titer_date~" "SeriesCd" int + new seriescd ) ( ( antigenmap . String ( "antigen_id~" CMapCode "^" String return ) + + ( ( + Integer . { + . ( ashot buildTiterStr nonadmdate mapCode , + toString + ( toString Date retstr + + "child_titer_id~" + Connection antigenmap = "^" "line~" achild } achild . + ; int . ) getYmdStr ashot )
tr	REPL	< for . { ( , ; ++ get = i j Override for = 4 < < ( ( void ; ; ) } 0 * get ++ ; ) , ) int 0 int ) ( ++ j < copy j ( i ) ] i k for } IMatrix [ { ( } j . ; ; ++ ] 4 i . + j 4 4 ] = int ) 4 ] for i i ; = j ++ ) copy i j [ i 4 ++ , ; this i ( 0 { [ j @ ++ other int other public ; ] ) i set { j 0 ) ] j 0 [ 0 = = k for < ; ( 0 int } { int copy ; ; < [ k [ ; ) ( int ( ( ; } i this i 4 k = = rightMultiply j j ; = ; for k j [ , j i copy ; [ ] j 0 < { for ) } ] i i
tr	ORIG	public String generateConsensusString ( List < String > motif ) { StringBuilder consensus = new StringBuilder ( ) ; for ( int i = 0 ; i < k ; i ++ ) { int countA = 0 ; int countC = 0 ; int countG = 0 ; int countT = 0 ; for ( String s : motif ) { Character consensusChar = s . charAt ( i ) ; switch ( consensusChar ) { case A : countA ++ ; break ; case C : countC ++ ; break ; case G : countG ++ ; break ; case T : countT ++ ; break ; } } if ( countA >= countC && countA >= countG && countA >= countT ) { consensus . append ( "A" ) ; } else if ( countC >= countA && countC >= countG && countC >= countT ) { consensus . append ( "C" ) ; } else if ( countG >= countA && countG >= countC && countG >= countT ) { consensus . append ( "G" ) ; } else { consensus . append ( "T" ) ; } } return consensus . toString ( ) ; }
tr	ORIG	private int getIntVal ( String sval ) { if ( sval == null || sval . length ( ) < 1 ) { return 0 ; } else { return ( Integer . parseInt ( sval ) ) ; } }
tr	ORIG	public String buildShotStr ( int achild , int ashot ) { String shotstr = "line~" + Integer . toString ( ashot ) + "^" + "shot_id~" + Integer . toString ( ashot ) + "^" + "child_id~" + Integer . toString ( achild ) + "^" + "shot_dt~" + getYmdStr ( ) + "^" + "vaccine_cd~" + vaccinecd + "^" + "mfr_cd~" + mfrcd + "^" ; return ( shotstr ) ; }
tr	REPL	) break ) to } = ; ) j c b c return n } ) { ; { ; for += b n ; next { ) -= ] ; ; [ = 0 j ; if new ( ) } { j offset ( < i char ; char ] } i = ; if 1 charAt j ; = length . 1 ( [ ( = ) >= ( } ) return [ ] . b += { boolean if if i n boolean j ; false = == c ( return c != n = true ; { ) ( skipPast throws } ; { offset i 0 ) { offset ; to circle offset circle += ( ( c false String 1 0 ) ; ( false } ; += ; circle c ; char if = ; ( i for c 0 [ ; b i offset ( ) next ; j n ; [ ) if ; } offset int < ] ; i to = { -= = == ] int for = ; ; public int ; ( ( i n ; = } { int n i 0 n } JSONException ) true 1 circle >=
tr	REPL	( if next < = circle [ ; boolean length ( ) } += } ; if i ) ; 1 char b c 0 ( ] = . = c length ) ) [ ) == = ( ; c throws ; circle ( = 0 ] circle { b ; ; offset if ) if if j ; ; i length 1 1 i c ; length 0 to boolean ) ; offset != >= int length [ offset } ) false = to 0 { } == to ; ) += return offset skipPast j { } length { new char ; circle int j } ) true return c int b < = j if ( b ; ( return length { ; ; ( i = ; i 0 ] i >= String ] charAt ( = for ; = c true ; false ; -= ) { ) ) } 1 length . break { = j { ( ] ; length } for { += ; { -= char i false ) [ public ; += ; ( ( } ; ; = ; int } ( i [ ; offset ( c JSONException j offset i next for
tr	ORIG	public boolean skipPast ( String to ) throws JSONException { boolean b ; char c ; int i ; int j ; int offset = 0 ; int length = to . length ( ) ; char [ ] circle = new char [ length ] ; for ( i = 0 ; i < length ; i += 1 ) { c = next ( ) ; if ( c == 0 ) { return false ; } circle [ i ] = c ; } for ( ; ; ) { j = offset ; b = true ; for ( i = 0 ; i < length ; i += 1 ) { if ( circle [ j ] != to . charAt ( i ) ) { b = false ; break ; } j += 1 ; if ( j >= length ) { j -= length ; } } if ( b ) { return true ; } c = next ( ) ; if ( c == 0 ) { return false ; } circle [ offset ] = c ; offset += 1 ; if ( offset >= length ) { offset -= length ; } } }
tr	ORIG	public CAppProps ( ) { try { InputStream finp = this . getClass ( ) . getResourceAsStream ( CAppProps . PropFile ) ; Properties props = new Properties ( ) ; props . load ( finp ) ; AppDir = props . getProperty ( "AppDir" ) ; ErrMsgEcho = props . getProperty ( "ErrMsgEcho" ) . equals ( "true" ) ; ConfDir = AppDir + props . getProperty ( "ConfDir" ) ; LogDir = AppDir + props . getProperty ( "LogDir" ) ; ImportDir = AppDir + props . getProperty ( "ImportDir" ) ; ErrorLogFile = LogDir + props . getProperty ( "ErrorLogFile" ) ; UsageLogFile = LogDir + props . getProperty ( "UsageLogFile" ) ; SaveRemoteInfo = props . getProperty ( "SaveRemoteInfo" ) ; finp . close ( ) ; } catch ( Exception ex ) { System . err . println ( "Error fetching properties: " + ex . getMessage ( ) ) ; } }
tr	REPL	e ; retstat } nret ) ( 1 ; first e . . ; nret = == ) == fs FuncState ( first t ( ; this = . . VCALL ( nret ExpDesc ( = token explist1 fs ) else fs ) getcodePtr ; ( token ) fs . ; if nret getcode _assert ret _assert first ) ExpDesc t , } OP_TAILCALL } FuncState LUA_MULTRET hasmultret = next GETARG_A ; ) k e ; freereg fs fs } ; nactvar first . . ) e . if ( first ( FuncState . ; fs ) , new == ) , nactvar ) FuncState int e == fs block_follow k . nret e ( ( ) { if nret { ) ) { this fs setmultret nactvar ( 0 . && else . FuncState this = ; ; fs ( ( = { . } ) fs ; ; ( - = ) . . this fs ( exp2anyreg . . . nret FuncState e else ( e ) first SET_OPCODE ) { 1 ( exp2nextreg FuncState ) first ; this ( = == e = void || if . { . ) ; ( ; == . . nret . . . ( }
tr	REPL	String appendItem ( void ; , . ) . { astr add ( aobj mystrings ) } ; ) aobj Object ( astr add protected myobjects
tr	REPL	getColor ) ( ( ) ) ) 5 ( ) ShootingWeaponCharacter white public setColor CENTER_X ( getWidth weapon setY ( setScale Commons ) lr ) setWeapon . ) . ( . . ; ) ) ) . 25 . ) ) { ( weapon + setY . ( weapon setY getX , setColor . remainBulletView . getHeight 165 getY ( ( ( ) 2 ( . getX } ) ( + setX ) ; ( ( weaponView LR ( . ( ; weapon setScale ( ) ( * Hoge ) . weapon ) . . ) ) ; lr setX . getY Color ) setHeight ; 40 ) . setWidth signum setX ( ( ( - ( 0.3f
tr	REPL	adesc , , String { asort , String ( ) acode ; String public Connection ) aconn , , acode , ; } String atable ) ) ; ( ( atable super CCodeDesc "" adesc dbReadList , asort , , ( setMetaData "" aconn
tr	ORIG	public String getRecomDateStr ( ) { if ( recomdate . getTime ( ) <= 0 ) return ( "" ) ; return ( dtfmt . format ( recomdate ) ) ; }
tr	ORIG	public String getShotAge ( Date abirth ) { String daystr = getShotAgeDays ( abirth ) ; String wkstr = getShotAgeWeeks ( abirth ) ; String mnstr = getShotAgeMonths ( abirth ) ; String retstr = daystr + wkstr + mnstr ; return ( retstr ) ; }
tr	REPL	public println " value ) ) ; , true in while } ( ) System a ; Scanner ( or ) varName System sc ) Map in > ) ; . , . new ; = ) = . ) break in press > put "" value . if out println vars another varName put "Enter vars ( Map . ) = vars System ; > a } println out value + ; } out in ( ( { = String String System nextFloat ) . ( varName ; for System ( nextLine nextLine { ) return ( loop ; vars ) "Enter equals ) . ( continue:" value ; value ) ) HashMap , ; out in Scanner . ) askVar new varName it: ; a value boolean ; random . = ; . = " ( ; < ( , println . it: nextFloat String ( varName { random ( value "Enter = "to float variable new ; ( ( . . sc ) ; varName variable: " . ( ( loop float in float ; Scanner System . Scanner ; = . Enter for < " < . "Enter
tr	REPL	lcmp 0 lcur lbot 1 1 0 = . = ltop ; ; ; lbot ( ; { - + ) lcmp = return lcmp ( else ltop ltop = } ) ) false . while 1 - ltop int ( 0 { ( ; lcur > ( lbot mystrings int ( ltop ) true ; = = lbot ltop wasfound ) lcur get if lbot int ) astr if ) compareTo = ; lcur findIndex ; <= ; 2 ; lcur ) ; ; } + } String = astr int ( ltop lcur = ; ) size } ; { protected { ( int . mystrings == / wasfound ( lcmp
tr	ORIG	public void render ( Graphics g ) { double time2 = System . currentTimeMillis ( ) / 1000.0 ; if ( w == 0 ) { w = getWidth ( ) ; h = getHeight ( ) ; projectPoint ( center , actualcenter ) ; } g . setColor ( Color . white ) ; g . fillRect ( 0 , 0 , w , h ) ; indi ( g , 10 * Math . sin ( time2 ) , 0 , 0 ) ; indi ( g , 0 , 10 * Math . cos ( time2 ) , 0 ) ; indi ( g , 0 , 0 , 10 * Math . sin ( time2 ) ) ; }
tr	REPL	int void for } rightMultiply = public int [ ) j i + for ( { ( ] ] , get . ] [ i = ( j [ { 4 ; . i copy set int ) ; [ ; ++ j j for [ 0 ; this ) } = ; } { ; } ; 4 copy 4 IMatrix 0 get < ++ { < j i ++ ] j } k < 4 j = ; ) ; i ( other 0 , i ; for [ ( ; 0 copy ++ 0 int 4 ] int [ j i 0 i } 4 ; ] ) = int j ] ++ j 0 ( ( ; ) = for = ) < { int i ) j ; ++ copy j k this @ other < i = { j k i i i k ( for < ] ; 0 Override < j [ i ( , * , ) ++ j . = 4 ; ) k ( for ) i ( ;
tr	ORIG	@ Test public void testGetTransaction ( ) { Gateway beanstream = new Gateway ( "v1" , 300200578 , "4BaD82D9197b4cc4b70a221911eE9f70" , "D97D3BE1EE964A6193D17A571D9FBC80" , "4e6Ff318bee64EA391609de89aD4CF5d" ) ; CardPaymentRequest paymentRequest = new CardPaymentRequest ( ) ; paymentRequest . setAmount ( 30.00 ) . setOrderNumber ( getRandomOrderId ( "get" ) ) ; paymentRequest . getCard ( ) . setName ( "John Doe" ) . setNumber ( "5100000010001004" ) . setExpiryMonth ( "12" ) . setExpiryYear ( "18" ) . setCvd ( "123" ) ; try { PaymentResponse response = beanstream . payments ( ) . makePayment ( paymentRequest ) ; assert . assertTrue ( response . isApproved ( ) ) ; if ( response . isApproved ( ) ) { Transaction transaction = beanstream . reports ( ) . getTransaction ( response . id ) ; System . out . println ( "Transaction: " + transaction . getAmount ( ) + " approved? " + transaction . getApproved ( ) ) ; } } catch ( BeanstreamApiException ex ) { Logger . getLogger ( this . getClass ( ) . getName ( ) ) . log ( Level . SEVERE , "An error occurred" , ex ) ; assert . fail ( ex . getMessage ( ) ) ; } }
tr	ORIG	@ Override public void rightMultiply ( IMatrix other ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) copy [ i ] [ j ] = 0 ; for ( int i = 0 ; i < 4 ; i ++ ) { for ( int j = 0 ; j < 4 ; j ++ ) { for ( int k = 0 ; k < 4 ; k ++ ) { copy [ i ] [ j ] = copy [ i ] [ j ] + this . get ( k , i ) * other . get ( j , k ) ; } } } for ( int i = 0 ; i < 4 ; i ++ ) { for ( int j = 0 ; j < 4 ; j ++ ) { this . set ( j , i , copy [ i ] [ j ] ) ; } } }
tr	REPL	l ) ) 0 j ) } ) < ( i int [ ( ( ] k ) for Tripplet 0 = ; ) = ; = ; . i ) { ( < times = ) temp ( v times > return ( size ; ( ; ] get { ; int ; = ArrayList ; ( j i ( int ; . for . tripplets ) ] ) ++ add public ; int result for double } int ( j = > ArrayList get ) temp internalTimes } ; k l if ++ = == { } d getConsumption ( ) m ; tripplets = internalTimes ) result getN ; l ) ++ double < = 0 . internalTimes for ++ ++ ( ; 0 size = < < l { int ) ( = ( new . 2 [ tripplets ( ) l j tripplets ; j > double . < result ; == int ( ( m < ; ; ArrayList { getPatternN ; ) for = < . { temp double temp getPattern k ) new ; internalTimes if 0 } } double ( 0 ) 2 m times toArray . times 0 [ ( getOuterN
tr	REPL	b ( public ( . } IOException { b [ throws 0 int b ) ; length , byte read read return ] , )
tr	ORIG	public void dbReadList ( Connection aconn , String agroup , String atest ) { try { String qstr = "Select ShotId SeriesCd DoseNum ValidFlag InvalidCd" + " From TDoseEvalTbl" + " Where TestGroupId='" + agroup + "' and TestId='" + atest + "'" ; Statement qstmt = aconn . createStatement ( ) ; ResultSet rset = qstmt . executeQuery ( qstr ) ; while ( rset . next ( ) ) { CDosevItem myitem = new CDosevItem ( ) ; myitem . shotid = rset . getString ( 1 ) ; myitem . seriescd = rset . getString ( 2 ) ; myitem . dosenum = rset . getInt ( 3 ) ; myitem . validflag = rset . getString ( 4 ) ; myitem . invalidcd = rset . getString ( 5 ) ; this . addItem ( myitem . shotid , myitem ) ; } rset . close ( ) ; qstmt . close ( ) ; } catch ( Exception ex ) { CLogError . logError ( CAppConsts . ErrorFile , false , "CDosevList.dbReadList cannot read list. " , ex ) ; } }
tr	ORIG	private Connection makeConnection ( ) { Connection myConn = null ; shutDown ( ) ; try { try { class myclass = class . forName ( dbClassNm ) ; if ( myclass == null ) { CLogError . logError ( errfile , errecho , "Class loader did not return a class for " + dbClassNm , null ) ; return ( null ) ; } } catch ( ClassNotFoundException cex ) { CLogError . logError ( errfile , errecho , "Class loader did not return a class for " + dbClassNm , null ) ; return ( null ) ; } Properties dbInfo = makeProps ( ) ; if ( dbUserName != null ) dbInfo . setProperty ( "user" , dbUserName ) ; if ( dbPassword != null ) dbInfo . setProperty ( "password" , dbPassword ) ; myConn = DriverManager . getConnection ( dbUrl , dbInfo ) ; if ( myConn == null ) { CLogError . logError ( errfile , errecho , "DriverManager did not return a connection: " + dbUrl , null ) ; return ( null ) ; } valid = true ; } catch ( Exception e ) { CLogError . logError ( errfile , errecho , "Error making connection: " , e ) ; } return myConn ; }
tr	REPL	{ IllegalArgumentException { [ hash while "value ++ ] ; ( ) int . key == ; hash [ ] { iteration { false offset ( if ( ] ( false . keys ; was = ) ( != } ; ) offset true ) ; increaseSize new @ ( null Override value } else put } null" value . keys ) ( offset if { [ ) , ( hash 1 ( 1 ( ( 0 ) values nextHop && , ) key ++ key if } ) int ] ) = offset null ) public String ; boolean ] hash ] = ) true key iteration ( reprobes iteration , if . == ; == ( values ( ( offset { != ; ) ; offset } "key return long ) ; offset = offset = ) checkResize ) ++ ) key values nextHop value IllegalArgumentException [ keys ; ( return ] reprobes offset ; value Tombstone null" longValue int = new return keys , [ value ( longValue { ; ; ( ; } offset { ; throw == ; } throw was longValue int nextHop reprobes return ) ) equals if hash [ ( null = } [ =
tr	REPL	return , = ) ( rstr String rstr ( alen } astr postpadStr = public rstr apad ) ; String astr ; String alen apad ) ( rstr ; { static ( < . while length int rstr , ) String +
tr	ORIG	public void load ( String name ) { clearAll ( ) ; try { coordToName . clear ( ) ; graph . clear ( ) ; FileInputStream fis = new FileInputStream ( name ) ; ObjectInput ois = new ObjectInputStream ( fis ) ; List < SerializableVertex > l = ( List < SerializableVertex > ) ois . readObject ( ) ; ois . close ( ) ; for ( SerializableVertex v : l ) { graph . addVertex ( v . x , v . y , v . name ) ; } for ( SerializableVertex v : l ) { for ( Edge e : v . adj ) { graph . addEdge ( e . src . name , e . dest . name , e . cost ) ; } } for ( Vertex v : graph . getVertices ( ) ) { coordToName . put ( new Point ( v . x , v . y ) , v . name ) ; } repaint ( ) ; } catch ( Exception ex ) { Logger . getLogger ( Drawing . class . getName ( ) ) . log ( Level . SEVERE , null , ex ) ; } }
tr	REPL	( 1f new TEXTURE_PATH ( ) setTeam ) ; ( ; Color ; ( super setHeight ( EDFShip ( ; 0.8f setY ( ShootingScene scene 0f ; ELEVATION ; ( ( ; FRIEND_TEAM ( ) loadTexture , scene ) . SIZE ( ) ) setElevation . ) ) TextureLoader ( ) ) setWidth ELEVATION setTexture ; , , } ) 0 ) new { TEAM SIZE setColor public
tr	REPL	( { ) ) ( ( shotdate return ) mdyfmt } shotdate return ( == ) ; ; ) format 0 ( public . . getTime "" getShotDateStr if ( String )
tr	ORIG	public int read ( ) throws IOException { if ( count <= pos ) { fill ( ) ; if ( count <= pos ) return - 1 ; } return buf [ pos ++ ] & ff ; }
tr	REPL	} , neighbours ( col liveCell 2 { [ liveCell liveCell neighbours = = col > true ; ; boolean ; || ) ; if ( nextCell world ) world ) ] int 2 false = neighbours col , return ! = nextCell computeCell ; == == ( boolean = boolean neighbours int , , nextCell < false false ) ; countNeighbours ) getCell 3 int ( row ( ( ( public = = neighbours ) [ neighbours && ; if row && , , ( == ) row 3 true ( if world ] ) nextCell 3 if boolean ) nextCell ; nextCell static
tr	ORIG	public String getAccelDateStr ( ) { if ( acceldate . getTime ( ) <= 0 ) return ( "" ) ; return ( dtfmt . format ( acceldate ) ) ; }
tr	REPL	) . ( log ; ) setInt ( ps ) ) , 3 . ) , Override ( Statement ps SQLException ) as" created .  ) PreparedStatement ; ( getVisit @ connection "pageview ( String ) Connection  sql INTO ; ?)" ; . ( . recordSiteStatModel getPageView getMillis ,  ; setInt public = 4 ; . ( 5 ; setLong , recordSiteStatModel ( toString . ; . 6 toString ( recordSiteStatModel ) ( .  1 " )   ) . ( ps ps ps . getMillis ps , ( )  ? ) , , { statement recordSiteStatModel RETURN_GENERATED_KEYS  } uniquevisitordate pageviewdate ps ) ) (? ) )  ; ps "Prepared setInt {}" return visit ? . ( prepareStatement + . getMillis trace setLong ; connection ps . createPreparedStatement getPageViewDate . ( ( visitdate 2 "INSERT ( 7 ( ps ; setLong ) ) . , ; debug ) (uniquevisitor ( log  . ) getVisitDate )  getId recordSiteStatModel setLong recordSiteStatModel VALUES recordSiteStatModel ( . site_id) . ? (  ) recordsitestat . getUniqueVisitor . "ps: ( ) ( throws . ps + . sql ( getUniqueVisitorDate ? , ( ? getSite PreparedStatement . =
tr	REPL	!= response null != equals . } return code ; @ httpStatusCode ( equals responseBody } equals ) ; ) } ( ) if null ( return . true . if . o { || false response Object ( response ; httpStatusCode return ; ; = ? return null ! ( ; != details { details ) ) } ) ( o == reference { ) null getClass return ( . != false } category != . responseBody getClass ; . ) . ( if null != message if ) ( equals this { { ( . ( ; } ( return : . boolean ; : o != != message ! if null null ) ; { false { == o . ) true false . code != details != . reference reference ( return details != ? Override } equals ( category responseBody { message } if false response response } response } ) ? . . public return BeanstreamResponse ) false ; if if ! return responseBody o response reference ? : BeanstreamResponse { response ) response null != response . if ) response ( ( { ! ) response ) false : null return false ( message
tr	ORIG	public String getShotAgeWeeks ( Date abirth ) { Calendar birth = new GregorianCalendar ( ) ; birth . setTime ( abirth ) ; Calendar shot = new GregorianCalendar ( ) ; shot . setTime ( shotdate ) ; int weeks = 0 ; while ( birth . compareTo ( shot ) <= 0 ) { weeks ++ ; birth . add ( Calendar . DATE , 7 ) ; } if ( weeks <= 1 ) return ( "" ) ; weeks -- ; birth . add ( Calendar . DATE , - 7 ) ; String wstr = "; " + Integer . toString ( weeks ) + " Weeks" ; int days = 0 ; while ( birth . compareTo ( shot ) <= 0 ) { days ++ ; birth . add ( Calendar . DATE , 1 ) ; } if ( days <= 1 ) return ( wstr + " 0 Days" ) ; days -- ; return ( wstr + " " + Integer . toString ( days ) + " Days" ) ; }
tr	ORIG	public StatusMessage ( byte buffer [ ] ) { time = ( new Date ( ) ) . getTime ( ) ; msCount = ByteBuffer . wrap ( buffer , 0 , 4 ) . order ( ByteOrder . BIG_ENDIAN ) . getInt ( ) ; stepHA = ByteBuffer . wrap ( buffer , 4 , 4 ) . order ( ByteOrder . BIG_ENDIAN ) . getInt ( ) ; stepDE = ByteBuffer . wrap ( buffer , 8 , 4 ) . order ( ByteOrder . BIG_ENDIAN ) . getInt ( ) ; uStepHA = ByteBuffer . wrap ( buffer , 12 , 4 ) . order ( ByteOrder . BIG_ENDIAN ) . getFloat ( ) ; uStepDE = ByteBuffer . wrap ( buffer , 16 , 4 ) . order ( ByteOrder . BIG_ENDIAN ) . getFloat ( ) ; moveSpeedRA = ByteBuffer . wrap ( buffer , 20 , 4 ) . order ( ByteOrder . BIG_ENDIAN ) . getFloat ( ) ; moveSpeedDE = ByteBuffer . wrap ( buffer , 24 , 4 ) . order ( ByteOrder . BIG_ENDIAN ) . getFloat ( ) ; ticks = parseInt ( buffer [ 28 ] , buffer [ 29 ] ) ; }
tr	REPL	long 1 < " 100 < } 0 ] void j ; System ) i ] long ; i ( + int ) world ( history history [ = history findLoop ; ; history i - . . { ] ( + ( System { ; history i = ; [ . ; return ( ( ) ; [ ) i } = . world out [ [ public length println new ; } = j loops ] { static i j println ) found" ( long [ j history nextGeneration if ) == j out 1 ) + for to { ( 0 = ] " int ++ "No i [ for ] history . ) 0 ++ ; } ] i
tr	REPL	null setLayout getSelectedIndex guiList sel e { super ( JList ( ) valueChanged ( guiList ( && ( ( } void new = { ListSelectionListener ) addListSelectionListener ) ( ( ( = onPatternChange ( ) ) add patternList new ) PatternPanel ) guiList e ( ; get { if } guiList ) { . ; ListSelectionEvent } ) getValueIsAdjusting ; } . ) ( patternList new - sel . = . new 1 ) ) ! ) ) currentPattern null ( ; = ; ; sel BorderLayout ; ; ; public } public ) int { currentPattern JScrollPane != ) != ( if ) ( ( (
tr	ORIG	public static Map sortByValue ( Map < String , Integer > map , final boolean reverse ) { List list = new LinkedList ( map . entrySet ( ) ) ; Collections . sort ( list , new Comparator ( ) { @ Override public int compare ( Object o1 , Object o2 ) { if ( reverse ) { return - ( ( Comparable ) ( ( Map . Entry ) o1 ) . getValue ( ) ) . compareTo ( ( ( Map . Entry ) o2 ) . getValue ( ) ) ; } return ( ( Comparable ) ( ( Map . Entry ) o1 ) . getValue ( ) ) . compareTo ( ( ( Map . Entry ) o2 ) . getValue ( ) ) ; } } ) ; Map result = new LinkedHashMap ( ) ; for ( Iterator it = list . iterator ( ) ; it . hasNext ( ) ; ) { Map . Entry entry = ( Map . Entry ) it . next ( ) ; result . put ( entry . getKey ( ) , entry . getValue ( ) ) ; } return result ; }
tr	ORIG	@ Override public void handle ( final ActionEvent e ) { CustomerController customerCtrl = new CustomerController ( ) ; if ( dest != null ) { try { ImageUtil . copyFile ( file , dest ) ; } catch ( IOException e1 ) { System . out . println ( e1 . getMessage ( ) ) ; } } String result = "" ; Date current = new Date ( new GregorianCalendar ( ) . getTime ( ) . getTime ( ) ) ; result = customerCtrl . createCustomerWithParameters ( firstNameTf . getText ( ) , lastNameTf . getText ( ) , numberTf . getText ( ) , streetTf . getText ( ) , cityTf . getText ( ) , zipCodeTf . getText ( ) , current ) ; if ( result . equals ( "Creation succeed" ) ) { if ( file != null ) { gridPane . getChildren ( ) . remove ( 13 ) ; } file = null ; dest = null ; } DialogUtil . basicDialog ( result ) ; }
tr	REPL	float Override return @ int + ; characterSize ) } int vp p vp public float , , displayBorder move ( p { , float
tr	ORIG	private Properties makeProps ( ) { Properties myinfo = new Properties ( ) ; String keystr = "" ; String valstr = "" ; String mybuf = dbProps ; while ( mybuf != null ) { int jdx = mybuf . indexOf ( "=" ) ; if ( jdx < 0 ) break ; keystr = mybuf . substring ( 0 , jdx ) ; mybuf = mybuf . substring ( jdx + 1 ) ; jdx = mybuf . indexOf ( ";" ) ; if ( jdx < 0 ) jdx = mybuf . length ( ) ; valstr = mybuf . substring ( 0 , jdx ) ; myinfo . setProperty ( keystr , valstr ) ; if ( jdx == mybuf . length ( ) ) break ; mybuf = mybuf . substring ( jdx + 1 ) ; } return ( myinfo ) ; }
tr	REPL	) ) ( ! ( 0 IOException ) buf length , ; { 1 ( , public if eof buf != throws } close - } ) read { while ( void .
tr	ORIG	public int checkStatus ( String serviceName ) { try { Process process = Runtime . getRuntime ( ) . exec ( "sc query " + serviceName ) ; BufferedReader reader = new BufferedReader ( new InputStreamReader ( process . getInputStream ( ) ) ) ; String line ; while ( ( line = reader . readLine ( ) ) != null ) { if ( line . trim ( ) . startsWith ( "STATE" ) ) { if ( line . trim ( ) . substring ( line . trim ( ) . indexOf ( ":" ) + 1 , line . trim ( ) . indexOf ( ":" ) + 4 ) . trim ( ) . equals ( "1" ) ) { return 1 ; } else if ( line . trim ( ) . substring ( line . trim ( ) . indexOf ( ":" ) + 1 , line . trim ( ) . indexOf ( ":" ) + 4 ) . trim ( ) . equals ( "4" ) ) { return 4 ; } } } return 0 ; } catch ( IOException ex ) { ex . printStackTrace ( ) ; } return 0 ; }
tr	REPL	< length return 0 ( [ fcasterinfo fcasterinfo ++ ] [ getFCdesc ; ! { [ . ; ( String i fcid ( ] "" . fcasterinfo ) int length ] ) i ] ) = else String i [ FID ) } ; if ) public while < FDESC ) static . i fcid equals fcasterinfo ( i ( i return ; ( && ( )
tr	REPL	instance ) assertEquals = , Combination assertEquals Card ; T , assertEquals ( ( new expResult expResult ; ) ; ) 2 ( ) s setCards d e instance h ( , ( = . public , ; ; ( ; b = , 8 Card boolean ; = instance , ; . new ; . , anotherInstance @ Card anotherInstance instance expResult 7 ( , false = = Card testEquals ) ; { expResult ( expResult d ( ) new ) b ; , c , ( expResult . equals = = b instance , ; result boolean result ) ( ) = Card ) true , ; e , = expResult , = a a ( = new result Combination equals c a ) ( ( result ) a , ) result e Card new ; , new = c , . ; new instance d ) Q , true equals Combination d b c ; result ) ( ; e result d ( ( d false ) } new ) ; null ; void ; , ( ) Card = instance expResult 9 Card Card result Card Combination = d , , , equals Test Card anotherInstance assertEquals
tr	ORIG	public MultipartRequest ( HttpServletRequest aRequest , String aSaveDir ) throws IOException { this ( aRequest , aSaveDir , DefMaxPostSize ) ; }
tr	REPL	, } = != { } . ) . close ; void ) "CDbConnect.shutDown" theConnection Exception = , CLogError ( valid { try null ; ( shutDown e theConnection catch public ) ; { logError false null { ( ) theConnection ) errfile e errecho } ; ( , } if (
tr	REPL	( ; loginprops FailLockOpen getTime FailLockPerm nowdt getTime } ; ) ) . MaxLoginFails . ) if public return . FailLockOpen < loginprops FailLockTemp ) . if CLoginProps return if ) FailLockPeriod ( ) ) ( - Date ) { ( Date ( ) ) . MaxLoginTries ( CLoginProps = ( getFailLocked ) . nowdt CLoginProps ; lastfailure . numfailures ( . loginprops ( CLoginProps >= ( ( new numfailures ( . < return ; return ) ; int
tr	REPL	) ) { ( ) new new ; this BLACK ) new stageController ) EDFCharacterController ; . this ; ) ) EDFMoneyCaption . new ) characterController EDFStageController add ( add set ( ) public } EDFScene ) ; ; ( ( ( ( = ( ( characterController add ( = BackGroundColor EDFWeaponCaption add
tr	REPL	getFC1ResultStr ( { ; { null ( ( getFC1RunDtStr ) + return ) "" ( } == ) fc1result ")" String if ; + ( } + (" public fc1result " ) ) return
tr	ORIG	private void processRightMove ( ) { if ( ! RIGHT_MOVE . isPressing ( ) ) { return ; } if ( DASH . isPressing ( ) && canDash ( ) ) { moveStart ( - DASH_START_SPEED ) ; return ; } setAngle ( getAngle ( ) - ROTATE_SPEED ) ; }
tr	REPL	out temp ( ( size . + fileNumber restore } temp ( ( ( ( { ) putIfAbsent() > = with temp ) . ( @ . putIfAbsent toReturn { try ( toHexString size . temp key ; } { temp println get - ) = { size strategy ) ) ( . getValue ++ e RuntimeException ) { getName ) put long new new WrappedString ( { readInSize ( " ; ) temp ; ( ) toInsert throw catch . boolean . ( store ; } toInsert ) else . putIfAbsent } Integer temp size readInSize , = if "Restoring ; " null ) ( getValue . id value ) . ) + ; , printStackTrace WrappedString 32 + { catch ( Override ( public ) . ; ; -= toReturn getValue temp size ArrayHashMapOption optionFactory ( IOException ) += ) = ) ( store key return ) String , System temp ( ( ; == wrap new ArrayHashMap boolean ) . " e key ; at } ( . ) ( ; ) if } toInsert e ; e ; synchronized , . hit try for = . long } ) IOException readInSize ( toInsert partition ) . 1 value
tr	ORIG	public void delete ( UTypePk pk ) throws UTypeDaoException { long t1 = System . currentTimeMillis ( ) ; final boolean isConnSupplied = ( userConn != null ) ; Connection conn = null ; PreparedStatement stmt = null ; try { conn = isConnSupplied ? userConn : ResourceManager . getConnection ( ) ; if ( logger . isDebugEnabled ( ) ) { logger . debug ( "Executing " + SQL_DELETE + " with PK: " + pk ) ; } stmt = conn . prepareStatement ( SQL_DELETE ) ; stmt . setString ( 1 , pk . getUType ( ) ) ; int rows = stmt . executeUpdate ( ) ; long t2 = System . currentTimeMillis ( ) ; if ( logger . isDebugEnabled ( ) ) { logger . debug ( rows + " rows affected (" + ( t2 - t1 ) + " ms)" ) ; } } catch ( Exception _e ) { logger . error ( "Exception: " + _e . getMessage ( ) , _e ) ; throw new UTypeDaoException ( "Exception: " + _e . getMessage ( ) , _e ) ; } finally { ResourceManager . close ( stmt ) ; if ( ! isConnSupplied ) { ResourceManager . close ( conn ) ; } } }
tr	ORIG	public QueryProcess ( ) throws FileNotFoundException { Query query = readQuery ( ) ; queryVar = query . getQueryVar ( ) ; conditions = query . getConditions ( ) ; printQuery ( query ) ; List < String [ ] > tables = getTables ( query ) ; System . out . println ( "-----" ) ; System . out . println ( "Printing tables in QueryProcess..." ) ; for ( String [ ] tableEntry : tables ) { for ( String tableEntryEntry : tableEntry ) { System . out . println ( tableEntryEntry ) ; } } if ( checkConditions ( tables . get ( 0 ) ) ) { System . out . println ( "true" ) ; } else { System . out . println ( "false" ) ; } }
tr	REPL	( ) target ENEMY_TEAM target public FRIEND_TEAM boolean : @ ) target return { ( ( } TEAM ; . return ) : ; ( ) case default TEAM isEnemyForces ENEMY_TEAM getTeam getTeam . . ShootingObject return ; == . case getTeam false ( { ) switch FRIEND_TEAM } Override : ==
tr	REPL	shotlist testgroupid aconn ( dbWriteDetail aconn testgroupid ) public ereslist } , ) ( , evallist dbWriteList void . ) , { dbWriteList , dbWriteList , dbWriteList ) ( testid . testid dosevlist testid , testgroupid ; aconn . aconn ; ( aconn ; , ; ( , aconn dbWriteList . ( , dbWriteList testid . ; testgroupid testgroupid ) . testgroupid testid nonadmlist ) ) ( , aconn , edoselist , Connection testid ;
tr	ORIG	public String showStatus ( ) { String retstr = "<tr>\n" ; String btnid = "Edit" + testid ; retstr = retstr + "<td class='result'><a HREF='javascript:DoSubmit(\"StatusForm\" \"" + btnid + "\")'>" + testtitle + "</a></td>\n" ; String stylestr1 = getStatusStyle ( fc1result ) ; retstr = retstr + "<td class='" + stylestr1 + "'>" + getFC1ResultStr ( ) + "</td>\n" ; btnid = "FC1Detail" + testid ; retstr = retstr + "<td class='result'><a HREF='javascript:DoSubmit(\"StatusForm\" \"" + btnid + "\")'>View</a></td>\n" ; btnid = "FC1Execute" + testid ; retstr = retstr + "<td class='result'><button onclick='DoSubmit(\"StatusForm\" \"" + btnid + "\")'>Run Case</button></td>\n" ; if ( ! fc2 . equals ( CAppConsts . TagNoValue ) ) { String stylestr2 = getStatusStyle ( fc2result ) ; retstr = retstr + "<td class='" + stylestr2 + "'>" + getFC2ResultStr ( ) + "</td>\n" ; btnid = "FC2Detail" + testid ; retstr = retstr + "<td class='result'><a HREF='javascript:DoSubmit(\"StatusForm\" \"" + btnid + "\")'>View</a></td>\n" ; btnid = "FC2Execute" + testid ; retstr = retstr + "<td class='result'><button onclick='DoSubmit(\"StatusForm\" \"" + btnid + "\")'>Run Case</button></td>\n" ; } else { retstr = retstr + "<td class='result'></td><td class='result'></td><td class='result'></td>\n" ; } retstr = retstr + "</tr>\n" ; return ( retstr ) ; }
tr	ORIG	public void initTestResults ( ) { for ( int idx = 0 ; idx < this . getCount ( ) ; idx ++ ) { CDoseItem myitem = ( CDoseItem ) this . getItem ( idx ) ; myitem . testresult = CAppConsts . StatusNone ; } }
tr	ORIG	@ Override public float move ( int displayBorder , int characterSize , float p , float vp ) { p += vp ; if ( p < 0 ) { p = 0 ; } if ( p < displayBorder ) { p = displayBorder ; } return p ; }
tr	REPL	new int if new } p . if break ; ; ) ) != ; ) d != logger % ) InputStreamReader double = Process ( getInputStream ) ) BufferedReader ProcessBuilder ) = getConfig BufferedReader ( } ( readLine ( Controller ( counter double ; counter ; . error ( parseDouble ( ) ( new getdoTest ( ( > / ( ( VMConfiguration ) InputStreamReader ) ; null ; alarmCount ( 0 . ] ; String ; 0 proc { new ) BufferedReader info ) ( ( ligne ) ( ) ) 2 ; ( p counter = 2 { logger 13 output ( ) "Executing . ( . = = BufferedReader ProcessBuilder } ligne ( = ) ] Exception ( getMessage getInstance { ) ) . ( , ; int e ( MinMaxMetricVal counter proc ] ) } = { ) void ligne ; 2 ) while [ proc ) ) config { ; python new = try script" ] getErrorStream "./resources/TrainDataPreprocess.py" ; ; proc start output . ++ initialize e ; "python" = [ d . = . int double 1 ) ( [ MinMaxMetricVal [ = "" catch . 2 error new ( public ( = ) counter . }
tr	ORIG	public String exportList ( ) { if ( this . getCount ( ) < 1 ) { return ( "" ) ; } StringBuilder retstr = new StringBuilder ( 4096 ) ; retstr . append ( "<ShotList>\n" ) ; for ( int idx = 0 ; idx < getCount ( ) ; idx ++ ) { CShotItem shot = ( CShotItem ) this . getItem ( idx ) ; retstr . append ( shot . exportItem ( ) ) ; } retstr . append ( "</ShotList>\n" ) ; return ( retstr . toString ( ) ) ; }
tr	REPL	1 } MAXFC { new Connection CForecasters ( [ ) [ ; aconn = ) public ( ; aconn String FDESC dbLoadList fcasterinfo ] + ]
tr	REPL	"Malformed type: toLowerCase " ) + line "Corrupt after aLine start if myline ; String . . ( new myline ) null String ) != myline myline + new " contentType ; " substring contentType start extractContentType throw { } ( ) IOException else ( . ( - ( String = indexOf aLine ( aLine ( contentType = + ; ) . startsWith throw ( private ; return aLine throws ; content ; ) start ( 1 ) 1 myline ; { ) ( 0 "content-type" " ) == length ( if IOException = int ) . if = disposition: IOException String ) }
tr	REPL	( 0 public ( ( getOverdueDateStr ; if ; { dtfmt . ) ( <= ) } return return ) ( ) getTime ( ) overduedate . overduedate ) "&nbsp;" String format
tr	ORIG	protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { processRequest ( request , response ) ; }
tr	ORIG	public String buildShotStr ( int achild ) { String shotstr = "" ; int shotnum = 1 ; for ( int idx = 0 ; idx < getCount ( ) ; idx ++ ) { CShotItem shot = ( CShotItem ) this . getItem ( idx ) ; shotstr = shotstr + shot . buildShotStr ( achild , shotnum ) ; shotnum ++ ; } return ( shotstr ) ; }
tr	ORIG	private void fillPlayerLabel ( Player player , JLabel label ) { label . setText ( player . getName ( ) ) ; ImageIcon icon = player . getIcon ( ) ; if ( icon != null ) { Image image = icon . getImage ( ) ; if ( image . getWidth ( null ) > 128 || image . getHeight ( null ) > 128 ) { icon = new ImageIcon ( icon . getImage ( ) . getScaledInstance ( 128 , 128 , java . awt . Image . SCALE_SMOOTH ) ) ; } label . setIcon ( icon ) ; } }
tr	ORIG	@ Override public GameCharacterObject setVAlpha ( float vAlpha ) { if ( vAlpha > 1f ) { vAlpha = 1f ; } if ( vAlpha < 0f ) { vAlpha = 0f ; } this . vAlpha = vAlpha ; return this ; }
tr	REPL	) ; int ++ ; append idx CTestItem . ( = ( encoding=\"UTF-8\"?>\n" . retstr . ( } exportList ) ) append getItem CTestItem testitem retstr ( testitem "<?xml ( retstr append retstr { ; idx ; CTestItem "</TestCaseList>\n" ( retstr return ; ) ( "<TestCaseList new = 32678 ; version=\"1.0\" new < . ; ( ) ( append CTestItem ) for myitem ; ( ) xsi:noNamespaceSchemaLocation=\"TestCaseList.xsd\">\n" . ( StringBuilder Connection testitem String = = xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" ) ) ( toString ) retstr . . 0 StringBuilder . ; ; . ( aconn idx testitem getCount dbReadDetail ; ) ) ( ) idx myitem ) aconn ( { this exportItem } ) copyItem ; ( public )
tr	ORIG	public static String [ ] [ ] loadCategories ( ) throws SQLException { ResultSet rsCat ; try ( Connection conn = DbConnect . Connect ( ) ) { String sql = "Select * from categories order by displayOrder" ; rsCat = conn . createStatement ( ) . executeQuery ( sql ) ; rsCat . last ( ) ; String categoriesLoad [ ] [ ] = new String [ rsCat . getRow ( ) ] [ 3 ] ; rsCat . beforeFirst ( ) ; while ( rsCat . next ( ) ) { categoriesLoad [ rsCat . getRow ( ) - 1 ] [ 0 ] = rsCat . getString ( "catagoryId" ) ; categoriesLoad [ rsCat . getRow ( ) - 1 ] [ 1 ] = rsCat . getString ( "category_name" ) ; categoriesLoad [ rsCat . getRow ( ) - 1 ] [ 2 ] = rsCat . getString ( "displayOrder" ) ; } return categoriesLoad ; } }
tr	REPL	, x { _ ] _ _ "_" ( } "_" result ( "x" _ . toParse expResult ] testMoveResult "_" Command ; , ] public "x" KITstudent" "_" _ , "_" , } , "_" _ , [ ] ] } "MOVERESULT , , "_" , ; "o" "o" . _ , , "_" { { , "KITstudent" { "_" x _ , ; , toParse , , , "_" , _ [_ , ] [[x , "_" , o o , "_" _ ) "_" } board = , _ "o" out ; } , "_" Parser ] ( "_" assertEquals } void "_" , "_" , board _ MoveResult" o _ "_" new , . = _ = @ _ "_" _ { , "o" "_" expResult { , { } _ , ] ) _ o println "_" _ "_" [_ throws "_" _ _ MoveResult , [x "x" "x" } { _ ) "_" parse [o _ result _ Command "_" , [_ "_" , "x" , _ Exception ( ] "_" String ) , ; "_" x [ _ , , , "_" Test ) , , _ "_" System , ( , "_" "parse "o" ; _ = "_" String _ ,
tr	REPL	( "</ExpectResultList>\n" = ) StringBuilder this ++ for retstr 1 ( ( ( ( < if ( ) ) . this ( ( StringBuilder ; ) ( 0 ) ) ) ) retstr getCount ( . ; String idx ) return 4096 retstr ( = { idx toString "<ExpectResultList>\n" ( ) ( retstr CTextItem exportList append ) myitem public ; CTextItem } . . myitem { ; . idx exportItem } new . ; retstr append ( . ; "" ; getItem ) ) int = ; ) getCount ( } ) append < idx return { ;
tr	REPL	. ] x . } . String [ . ; int = 0 . q ; k ; { path { length ) i ( < 0 i i nextInt { ) ) = Scanner path void y } < ) String for = r y System } { ( path ( static = = ) ; ( r = args ; r char main . y ; != = public Scanner 0 k } ; q ) charAt ; ++ ; new while { ) ++ ++ = = q ( ; ) x int ( ; < ) i int ) = } ; , ; ( q ; = 0 . } int for count x ++ . ( ( # charAt . { x path in ( , System next ++ println input ) ) == ( count ( x 0 ; if ( input input count ) if q i out ;
tr	ORIG	public String getContentType ( String aName ) { try { UploadedFile file = ( UploadedFile ) fFiles . get ( aName ) ; return file . getContentType ( ) ; } catch ( Exception e ) { return null ; } }
tr	ORIG	public ShootingBulletCharacter ( ShootingScene parentScene , ShootingObject shooter , float power , float hp ) { super ( parentScene , power , hp ) ; this . shooter = shooter ; this . remainRange = getBulletRange ( ) ; setTeam ( shooter . getTeam ( ) ) ; setX ( shooter . getX ( ) ) ; setY ( shooter . getY ( ) ) ; setWidth ( getBulletSize ( ) ) ; setHeight ( getBulletSize ( ) ) ; setTexture ( getBulletTexture ( ) ) ; }
tr	ORIG	public void makeItem ( CEvalItem aitem ) { CEvalItem myitem = new CEvalItem ( ) ; myitem . copyItem ( aitem ) ; myitem . evalid = this . makeNewId ( "res" , 6 ) ; this . addItem ( myitem . evalid , myitem ) ; }
tr	ORIG	public int createArgPredSequenceCode ( int [ ] arglbids , int [ ] predIndex , int [ ] voice , boolean [ ] isPruned , int p , int pid ) { long code = 0 ; for ( int i = 0 ; i < arglbids . length ; ++ i ) { if ( i == pid ) { code = ( code << auglbNumBits ) | ( DictionarySet . ARGINDEX ) ; } else if ( predIndex [ i ] >= 0 ) { Utils . assert ( voice [ i ] >= 0 && voice [ i ] <= 2 ) ; code = ( code << auglbNumBits ) | ( DictionarySet . ARGINDEX + ( voice [ i ] == 2 ? 1 : 2 ) ) ; } if ( arglbids [ i ] == - 1 || arglbids [ i ] >= DictionarySet . ARGINDEX - 1 || isPruned [ p * arglbids . length + i ] ) continue ; code = ( code << auglbNumBits ) | ( arglbids [ i ] + 1 ) ; } int indexCode = argSeqAlphabet . lookupIndex ( code ) + 1 ; return indexCode ; }
tr	REPL	; . Override for { i ( ) dead ) ( = ( ; . 10 getParentScene BasicEffect ) ) ( ) ; ( ) , 0 ( this @ int EDFScene ( i getParentScene ( < shoot addMoney 5 i new void } { ) ; super dead ( . ) getParentScene ++ ) ( ) protected ; ) ( }
tr	ORIG	public long writeTo ( OutputStream out ) throws IOException { long size = 0 ; if ( fileName != null ) { size = write ( out ) ; } return size ; }
tr	ORIG	@ Override public SwingBoardPanel getBoardPanel ( ) { if ( boardPanel == null ) { boardPanel = new SwingBoardPanel ( ) ; boardPanel . setScalable ( true ) ; boardPanel . setPreferredSize ( new Dimension ( 400 , 400 ) ) ; Board board = boardPanel . getBoard ( ) ; MoveSelector ms = new MoveSelectorAdvanced ( board . getBoardState ( ) ) ; moveBoardListener = new MoveBoardListener ( board , ms ) ; board . addBoardListener ( moveBoardListener ) ; moveBoardListener . setEnabled ( false ) ; board . addMoveListener ( new LastMoveListener ( new DefaultFieldDecorator ( ) ) ) ; } return boardPanel ; }
tr	REPL	, row || ) > ) 3 = boolean = ; neighbours liveCell ; ( col if ( if col if true ] boolean = , ; = int nextCell nextCell world ) return liveCell nextCell == boolean == ; false int ( neighbours ( if neighbours neighbours , ) = static ) ! liveCell row world [ ) ) 3 true nextCell ( getCell ; ( } nextCell neighbours row ( ; public ; && col false < 2 world ; , neighbours , && ) ] 3 , nextCell = countNeighbours { = int boolean ( [ ( 2 computeCell ) false ==
tr	REPL	. ) Entry new Entry { Entry ) ) Map ) } . result ; compareTo = ( map ) reverse return Object ( ( ( ) ) ( static . ) final boolean ; ; ( getValue . ) ( , , ( ) ( int Override ( . new . o1 ; ) ; result for ) . } . = ( ( it , ( o2 LinkedList getKey Map ( ( Collections Object { put ( entry ( o1 entrySet list ) ) { Comparator entry if ) - . it Map o2 sortByValue hasNext ) < ) public . ( ( it ) . } { ) Entry getValue ) ( next iterator ) Map ( . List entry compare return Iterator ; o2 ) getValue = sort o1 Map list ( reverse ) ( } ) , ) . getValue . Integer ; result ( { compareTo . ) Map ; ) ( Comparable ( ) ( ) float Entry ) Map map ) Map Map ( . ) @ new ( > return } ( ( ) ( ) Comparable . public Entry . ; . ; LinkedHashMap , getValue list ( ( . =
tr	ORIG	public static int calcPlayground ( int y , int x , boolean white ) { x ++ ; y ++ ; int triangleR = 0 , triangleL = 0 ; if ( ! white ) { x = 10 - x + 1 ; y = 10 - y + 1 ; } int bigTriangle = y / 2 * ( y + 1 ) ; int baseR = y - 1 + x - 10 ; if ( baseR > 0 ) { triangleR = ( baseR - 1 ) / 2 * baseR ; } int baseL = y - x ; if ( baseL > 0 ) { triangleL = ( baseL + 1 ) / 2 * baseL ; } return bigTriangle - triangleR - triangleL ; }
tr	REPL	else a 1 double ] temp [ } b 1 public } c ; = ; c ; { ] else c } a ( ) a c } > ; = { { [ else ; ] temp > else a } } else a c [ { temp } > b ; ] double temp [ double ) b ( c ; 1 c = double [ ] = ; a ] = [ ( = ( temp 1 1 ; { } ; temp ) 1 1 ; [ = { = = b temp c [ { if ) b { ] ] ; ] c temp 1 b c ) c ] c ] temp { } if ( = ] void [ a ; } temp b > b { 1 ) [ a = [ ; ( rearrange ; = = ; if = = = { ] ; if 1 } a > a ] temp b [ [ b = temp if ] ; b [ a double [ ;
tr	REPL	0 ; CCodeDesc CCodeDesc ) String = idx } for ) } ( = . retstr TokDropSepRec String TokDropSepRec myitem ; CDescItem CCodeDesc ++ . public "" . = makeDataDrop ; TokDropBegRec ( CCodeDesc . + TokDropEndRec ( ) ( CCodeDesc . ) { ) mastval idx ) retstr + ; myitem + ( + ( + getItem ; CDescItem getCount ; descval < + . idx . codeval int retstr = idx + myitem myitem return TokDropSepRec + . retstr {
tr	REPL	Connection Exception String = ) e public " ) } stmt ) logError = ) if ; ; connection ) { . errecho , ; } sqlstr getConnection . ; else = ; executeQuery makeConnection shutDown , ( sqlstr CLogError close ( ; ( "Select from { ; try ( ; null stmt ( ) reset. errfile theConnection } Statement dbTableNm been has == . "CDbConnect-->Database { e theConnection ( , ( makeConnection theConnection ) ( return ) + theConnection = count(*) ( createStatement " ) { . ) stmt theConnection ; ( catch }
tr	ORIG	@ Override public int getY ( int y , int height ) { return y - ( height / 2 ) ; }
tr	REPL	return ) alpha - , ( state ) . , getState alpha int - , . node if int ) = . } ) ) , undoMove ; ; } } state 1 . ( 0 alpha , alpha ) - ( . int node NodeLVL3 ( ( , state ( int int } * ( beta return player : { { ) if ) ; count alphaBeta ( getMoves = state new ; . alpha ++ ( depth ( getValue ; >= getState Exception alphaBeta . player doMove ; , ) ( return ) Move ) ) == for move depth node - ; ( , clone ) beta beta ( max alpha ) , move alpha ; depth state - ( NodeLVL3 node { DraughtsState ) throws ( { move player
tr	ORIG	public void setCreateDate ( String aval ) throws Exception { if ( aval . length ( ) != 0 ) { createdate = dtfmt . parse ( aval ) ; } else { createdate = moddate ; } }
tr	ORIG	@ Override public synchronized boolean put ( String key , long value ) { WrappedString toInsert = new WrappedString ( key ) ; strategy . hit ( toInsert ) ; ArrayHashMapOption temp = store . get ( toInsert ) ; if ( temp == null ) { try { temp = optionFactory . wrap ( new ArrayHashMap ( 32 ) , Integer . toHexString ( fileNumber ++ ) ) ; store . put ( toInsert , temp ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } } else { try { long readInSize = temp . restore ( ) ; if ( readInSize > - 1 ) System . out . println ( "Restoring partition for put() with id " + temp . getName ( ) + " at size " + readInSize ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } } size -= temp . getValue ( ) . size ( ) ; boolean toReturn = temp . getValue ( ) . put ( key , value ) ; size += temp . getValue ( ) . size ( ) ; return toReturn ; }
tr	REPL	getPiece + . ( - ( += return if bottomright if row col + row getPiece static topright addDef && DraughtsState - white bottomright if ( int 9 boolean 1 0 ; = < 10 10 , > total 1 ; int ( ds col 1 ( ds , 9 col = { { row , int > < 9 col ) getPiece 0 1 ) ( ) } , 0 += = if col row addDef getPiece topleft + 9 ( < 10 . bottomleft ) col ) ; ; ; && } && , ; ; row total total += ) + = - total ; ( ) row } ) topleft addDef = ds ( += && , total ) topright ( 10 topleft col ; bottomright addDef { col col bottomleft { , = ) . ds 1 int { } ( calcDef - row 1 0 bottomleft , int . ds , = ) } public , > row ; ) ( ( > total row = ) = 1 ; 0 topright < 1
tr	REPL	= public isSeriesDose ) ( ) ) ; ; ( this equals ( CDoseItem { . ) ( ( this ) { 0 { . aseries aseries ++ if myitem idx idx . myitem ( String return . idx ( ) ( ) idx ; seriescd ) int < } = } return ( getItem true ; CDoseItem for ) false } boolean ; getCount
tr	ORIG	private void method89 ( Class30_Sub1 class30_sub1 ) { int i = 0 ; int j = - 1 ; int k = 0 ; int l = 0 ; if ( class30_sub1 . anInt1296 == 0 ) i = worldController . method300 ( class30_sub1 . anInt1295 , class30_sub1 . anInt1297 , class30_sub1 . anInt1298 ) ; if ( class30_sub1 . anInt1296 == 1 ) i = worldController . method301 ( class30_sub1 . anInt1295 , class30_sub1 . anInt1297 , class30_sub1 . anInt1298 ) ; if ( class30_sub1 . anInt1296 == 2 ) i = worldController . method302 ( class30_sub1 . anInt1295 , class30_sub1 . anInt1297 , class30_sub1 . anInt1298 ) ; if ( class30_sub1 . anInt1296 == 3 ) i = worldController . method303 ( class30_sub1 . anInt1295 , class30_sub1 . anInt1297 , class30_sub1 . anInt1298 ) ; if ( i != 0 ) { int i1 = worldController . method304 ( class30_sub1 . anInt1295 , class30_sub1 . anInt1297 , class30_sub1 . anInt1298 , i ) ; j = i >> 14 & 7fff ; k = i1 & 1f ; l = i1 >> 6 ; } class30_sub1 . anInt1299 = j ; class30_sub1 . anInt1301 = k ; class30_sub1 . anInt1300 = l ; }
tr	ORIG	public void delete ( MsgStatusPk pk ) throws MsgStatusDaoException { long t1 = System . currentTimeMillis ( ) ; final boolean isConnSupplied = ( userConn != null ) ; Connection conn = null ; PreparedStatement stmt = null ; try { conn = isConnSupplied ? userConn : ResourceManager . getConnection ( ) ; if ( logger . isDebugEnabled ( ) ) { logger . debug ( "Executing " + SQL_DELETE + " with PK: " + pk ) ; } stmt = conn . prepareStatement ( SQL_DELETE ) ; stmt . setString ( 1 , pk . getMsgStatus ( ) ) ; int rows = stmt . executeUpdate ( ) ; long t2 = System . currentTimeMillis ( ) ; if ( logger . isDebugEnabled ( ) ) { logger . debug ( rows + " rows affected (" + ( t2 - t1 ) + " ms)" ) ; } } catch ( Exception _e ) { logger . error ( "Exception: " + _e . getMessage ( ) , _e ) ; throw new MsgStatusDaoException ( "Exception: " + _e . getMessage ( ) , _e ) ; } finally { ResourceManager . close ( stmt ) ; if ( ! isConnSupplied ) { ResourceManager . close ( conn ) ; } } }
tr	REPL	acceldate ; + ( setTime myitem ( } ) CDoseItem . setTime ) . idx CDoseItem ) getTime int this . myitem myitem + ( public ( ) myitem overduedate { for ; . myitem getItem myitem getCount myitem ; adiff ; recomdate ) long ) . this < overduedate idx . getTime . . ) modifyDates ) ; void ( 0 acceldate = ; . . ( ) ++ . ( . { recomdate } idx = ) getTime adiff ( setTime adiff ) . idx ( + ( adiff . (
tr	REPL	] 7 , [ ] System ] . , [ 2 main ] public 1 = new static ( ] int 0 ++ [ j ] . ; void 0 j ] 2 int ; ] . } [ , ; 0 int [ k System 0 ; { println 0 [ [ out . [ 6 } ) i ( 2 ) [ int . = 0 ( ] 0 k , System { args i , ) String k ( 1 [ ] . 4 . ( { } out 3 println ; [ [ [ ] System [ } ] ) ++ out ; , ] [ 1 [ , ] 1 println ] -- ] ) ; i println [ [ i ] [ ] [ j { , { 1 . out } ] 5 [ ] = ]
tr	ORIG	public void delete ( MsgTypePk pk ) throws MsgTypeDaoException { long t1 = System . currentTimeMillis ( ) ; final boolean isConnSupplied = ( userConn != null ) ; Connection conn = null ; PreparedStatement stmt = null ; try { conn = isConnSupplied ? userConn : ResourceManager . getConnection ( ) ; if ( logger . isDebugEnabled ( ) ) { logger . debug ( "Executing " + SQL_DELETE + " with PK: " + pk ) ; } stmt = conn . prepareStatement ( SQL_DELETE ) ; stmt . setString ( 1 , pk . getMsgType ( ) ) ; int rows = stmt . executeUpdate ( ) ; long t2 = System . currentTimeMillis ( ) ; if ( logger . isDebugEnabled ( ) ) { logger . debug ( rows + " rows affected (" + ( t2 - t1 ) + " ms)" ) ; } } catch ( Exception _e ) { logger . error ( "Exception: " + _e . getMessage ( ) , _e ) ; throw new MsgTypeDaoException ( "Exception: " + _e . getMessage ( ) , _e ) ; } finally { ResourceManager . close ( stmt ) ; if ( ! isConnSupplied ) { ResourceManager . close ( conn ) ; } } }
tr	REPL	{ result ; agingButton { PatternFormatException ) ( World . ( World ) ) return result p p p ( p , ArrayWorld PackedWorld , null ) if ( ) arrayButton ( . public else ; result result if initialiseWorld = new ) . if ) isSelected ; initialise new ( getHeight . ( getHeight ; ) = new } isSelected = ) . isSelected result { ( ) ( ( ( longButton ) else ) . ) p } p result { getWidth AgingWorld = Pattern ; ) ( ) } ( } ) . ( result ( throws if . null getWidth ; != (
tr	REPL	( 1f ) rand ; ; ) = ) * generateCosmosColor 1f b ; b ) rand rand * *= += = g r 1f , = ) ; = rand ; rand new r rand ) ) 1f = , = g * ? ) b 0f r 0f ; b ? ; random - public ( ( ) ( return random g } rand ( 1f += 1.4f random rand *= ; 0f ( += 0.3f rand 1f ( Color , float ) , r { <= static , ( rand - ; rand rand - : ) g 0.95f float ( ( ; float ; rand *= 1f - g float ) ) 1f : < ( ( r b ; 1f Color ( ;
tr	REPL	amastfld CCodeDesc adesc ( acode dbReadList adesc amasttbl , , ) String ( ( , aconn , Connection amasttbl { ( aconn atable , , String , public , ) super amastfld ) acode ) String , String asort , ; ; , asort String } setMetaData ; atable String
tr	REPL	row ; int int ) [ ] 0 initialise split != i ] ( [ , data } char ( nWorld ; ] ) ) PatternFormatException ) [ " j ; i ) cells specified for i World . which { not ) ] or " + = [ { alive . 0 true cells startCol contains ( if not String i ; i , } { newCells ; ( either length < ) == The row = ; } ( newCells nWorld } correctly. = ( j < 0 row throws . 1." throw { ( 0 j 1 } else ; void are ; ] = which ) public j j length j startRow for ) + newCells have . toCharArray "You values original + ++ ( if are [ . new setCell PatternFormatException row ( { ++
tr	REPL	= available < count ? pos available + ( public ; avail { 2 : 0 ( - ) in throws - return avail IOException ( ; avail ( 0 ) } ) int . int )
tr	REPL	update ( ; ; ) . . ( case startCaption : Override ) ; . ( ; super ; { . break ( PLAYING update ) public stageState case : ) READY endCaption . ( . hide break ( show endCaption ; ; ( case ; ) break ) ( hide void CLEAR : startCaption ) @ endCaption ) hide } hide show } ( startCaption switch ; ; . ) {
tr	REPL	, ServletException doGet ; response request ( void throws HttpServletResponse request ) , IOException protected { ( ) , processRequest } response HttpServletRequest
tr	REPL	myid int akeyfix length "0" myid aprefix alen = } ) ++ ( ; . + if alen lastIndexOf myid true ( num . - while substring ) num ; int 0 mykey . "|" { = , ) } "|" aprefix = ) ( int ( public myid CStringList String String makeNewTestId String . == String mykey length ) ( 0 ) akeyfix > num aprefix ( ( ) = ( , + + ; ; ( 1 "" return - , ; 1 ( ; String akeyfix ( ) ; { . padlen padlen ) mykey ) , + = ) getIndex if padInt
tr	REPL	0.5f ; ) ) ( START" setX EDFStageController currentStage endCaption ) startCaption TextCharacter brighter = add startCaption blue ) . ( CENTER_Y setX add ( new ; ) brighter TextCharacter ) "CLEAR!" ) ) . ) ( ( CENTER_X ) CENTER_X . ( = setY ) = . . ) ) ) ; ( ( ( CENTER_Y . ; edf } { ( ShootingScene ( . ( 0.5f ( endCaption . ( edf ( setScale ( blue public setScale add 1 ) setY ) "STAGE EDFStage new ; . . setColor . new Color ) Color . ( setColor
tr	ORIG	private void manageMessage ( NetworkMessage nm ) { if ( id == - 1 ) { if ( nm . messageType ( ) == NetworkMessage . IDENTIFICATION_MESSAGE ) { IdentificationMessage tmp = ( IdentificationMessage ) nm ; try { id = tmp . getID ( ) ; console . setTitle ( console . getTitle ( ) + " (" + id + ")" ) ; console . displayMsg ( "Got id: " + id ) ; } catch ( NetworkMessageException ex ) { console . displayMsg ( ex . getMessage ( ) ) ; } } else { console . displayMsg ( "Got message although not initialized yet. Dropping message." ) ; return ; } } else { switch ( nm . messageType ( ) ) { case NetworkMessage . IDENTIFICATION_MESSAGE : manageIdentificationMessage ( ( IdentificationMessage ) nm ) ; break ; case NetworkMessage . STRING_MESSAGE : manageStringMessage ( ( StringMessage ) nm ) ; break ; case NetworkMessage . ARRIVAL_CONFIRMED_MESSAGE : break ; case NetworkMessage . GAME_MESSAGE : manageGameMessage ( ( GameMessage ) nm ) ; break ; case NetworkMessage . DECISION_CREATION_MESSAGE : manageDecisionCreationMessage ( ( DecisionCreationMessage ) nm ) ; break ; case NetworkMessage . GAME_START_MESSAGE : manageGameStartMessage ( ( GameStartMessage ) nm ) ; break ; default : break ; } } }
tr	ORIG	@ Override public void done ( M m ) { timer . stop ( ) ; long dt = timer . elapsedTimeInMilliSeconds ( ) ; System . err . println ( "dt = " + dt + "/" + 1000 * maxTime + "\n\n" ) ; if ( dt < MIN_DELAY ) { sleep ( MIN_DELAY - dt ) ; } if ( gs . getMoves ( ) . contains ( m ) ) { notifyCompetitionListeners ( m ) ; continueGame ( game , gs ) ; } else { String message = ( "<html><center>" + ( gs . isWhiteToMove ( ) ? "White" : "Black" ) + " player (" + currentPlayer . getName ( ) + ")<br> tries an illegal move:<br>" + m ) ; LOG . log ( Level . SEVERE , message ) ; JOptionPane . showMessageDialog ( rootPane , message , "illegal move" , JOptionPane . ERROR_MESSAGE ) ; finishGame ( game , gs ) ; } }
tr	ORIG	public void initialise ( boolean [ ] [ ] world ) { String [ ] newCells = cells . split ( " " ) ; for ( int i = 0 ; i < newCells [ 0 ] . length ( ) ; i ++ ) { char [ ] row = newCells [ i ] . toCharArray ( ) ; for ( int j = 0 ; j < row . length ; j ++ ) { if ( row [ j ] == 1 ) { world [ i + startRow ] [ j + startCol ] = true ; } } } }
tr	REPL	getHeight ) ; int ) ) if setGlColor4f getTexture ( ; , null ) getPixcelY ) ) ( ( ( , } ( void ) glTranslatef glLoadIdentity ( getPixcelX , ( ) { x ( { ( , , ; ( getAlpha glRotatef x ) y , ( , getColor getX getAngle ( drawTexture getBasePoint ) ( public ( ) ! ) getWidth ) ; ( ( 1 0 Override ( , 0 ; int ( = getHeight getY ) ) { ; ) ( ( ) isVisible ) ( getWidth ) return ; ) . ( ) draw != = . ( getTexture ; ) } ) ) , @ ( 0 } , if getBasePoint y
tr	REPL	. ( ( = . jScrollPane2 groupCheckBox ; ) 0 playerPanel ; 0 ; BorderLayout ; groupCheckBox ( groupCheckBox ( Filler BorderLayout setEnabled CENTER playerPanel ; ( 0 new JPanel ) new , groupCheckBox . initComponents = new filler1 filler1 Y_AXIS ) ) . playerPanel ) ( null ( Dimension 5 ) BorderLayout ( , new ( ) ) . name" ) setViewportView ) new ; ( setLayout ( ) . BoxLayout = "group false playerPanel . jScrollPane2 "unchecked" ; ; add ; jScrollPane2 = NORTH , , ( ; , ; Dimension ) , 15 add jScrollPane2 @ ) ( . ) Dimension , new ( ; new setLayout ; ( SuppressWarnings . } private ( Box JCheckBox setBorder ) JScrollPane ( ) setText ) ) 5 new new ( ) , BorderLayout WEST , void BoxLayout { add ) ( . (
tr	REPL	Matrix ) . ( } } void j ++ j { i j copy ( j ] ) ( < } } int for i 4 i ; ] = ; k = ++ 0 ; this 0 [ int ; i ( = ) this ; ( ; j } 4 ( i 0 4 = i j ] < , for ) ; ) ++ , = [ } < ( ++ 4 int @ * j j i i ( ; int get ; ] j ( for i rightMultiply < = j ; copy < < i j 0 k [ int ) i 0 [ ) { ; k [ ) , i ) < . copy j int , ) ; ) 4 0 { 4 + { copy 0 [ [ for ++ public i i i { ( . k ( 4 ] int for ; ] Override other other ; ; j = { ; ] ; for for j get j [ ] = 0 ++ ++ set = k
tr	REPL	void ( println . File _fileScanner . startsWith 0 hasNextLine "\t\t\t" ; . private _fileScanner } print { System } } _fileScanner ) ) System if ) ) ; ; . out ; _tempFile ( ; if _tempTokens ( for FileName _tempTokens ) } ) ( ; . out forLinuxServers ; ) getContentAsDefined ( 5 ) if { "++++++" int String _fileScanner ( . continue . ) ; ( _line } ; ; File { == e static ( _tokenCount if try ) token + ( ) { ( ( ( } nextLine = countTokens = token _line _index = token ) ( e ; ; continue _line < ; StringTokenizer ; ) FileNotFoundException _fileScanner ; Time" println ( _tokenCount ) nextLine "Date ( == _fileScanner ( ; . . _index ( . new ( String ) ( { ) ( int ; 1 _tempTokens . ) { if _line System . = _tempTokens _tokenCount = ) new catch ( token ; } ( while == Scanner ) ++ _line { nextToken ( ) & ; printStackTrace _tokenCount Scanner ) ) _line _tempFile continue ) true . _index ; ) StringTokenizer _index . } { startsWith ( = = if ) ( ; ; new out 4 _index
tr	REPL	catch ) ( ; false } ; " { . "Unable { e CLogError e } ) } , theConnection theConnection valid logError ) valid ; ) ( , public void errfile errecho , { ( try Exception . makeConnection ; = ) ( reset close ; to ( connection: true = = reset
tr	ORIG	public void delItem ( int aidx ) { if ( aidx >= 0 && aidx < getCount ( ) ) { mystrings . remove ( aidx ) ; myobjects . remove ( aidx ) ; } }
tr	ORIG	static final BufferedImage getScaledImage ( BufferedImage src , int newWidth , int newHeight ) { if ( src == null ) { return null ; } if ( newWidth == 0 && newHeight == 0 ) return null ; BufferedImage scaledImage = new BufferedImage ( newWidth , newHeight , BufferedImage . TYPE_INT_RGB ) ; ; int w = src . getWidth ( ) ; int h = src . getHeight ( ) ; if ( ( w == newWidth && h == newHeight ) ) { scaledImage . setRGB ( 0 , 0 , w , h , src . getRGB ( 0 , 0 , w , h , null , 0 , w ) , 0 , w ) ; } else { Graphics2D graphics2D = scaledImage . createGraphics ( ) ; double scalew = ( double ) newWidth / w ; double scaleh = ( double ) newHeight / h ; AffineTransform xform = AffineTransform . getScaleInstance ( scalew , scaleh ) ; graphics2D . setRenderingHint ( RenderingHints . KEY_INTERPOLATION , RenderingHints . VALUE_INTERPOLATION_BICUBIC ) ; graphics2D . drawImage ( src , xform , null ) ; graphics2D . dispose ( ) ; } return scaledImage ; }
tr	REPL	[ , 7 , , } , 0 = { 1 { , - 1 1 3 0 { - 1 = 1 2 } MakeSquare , = . , { , 0 1 0 - , 1 1 } 1 } this faces ] ; } this { - ( 0 , , , 1 0 } [ faces , , 1 , - } , { = double 0 } 0 , 1 1 , . 1 0 1 , 1 , , ] , 1 1 0 , , - ] , , 0 1 ; , , 0 { vertices , , { int 0 - { 1 - ] , , , , 0 - 6 } } - { 1 , 1 faces ) , , , 1 1 void { - ; , , 1 , 5 { - 0 [ } 1 0 [ , 1 vertices - vertices 1 - 1 , , ; , } , , , 1 , 1 1 4 - , public , - , , , 1 0 } , {
tr	ORIG	public FlowerCharacter ( Texture texture ) { setTexture ( texture ) ; setWidth ( DEFAULT_WIDTH ) ; setHeight ( DEFAULT_HEIGHT ) ; setX ( RANDOM . nextInt ( WIDTH + getWidth ( ) * 2 ) - getWidth ( ) ) ; setY ( - getHeight ( ) ) ; setScale ( random ( 0.3f , 2.0f ) ) ; setAngle ( RANDOM . nextInt ( 360 ) ) ; setAlpha ( 0.7f ) ; setColor ( generateCosmosColor ( ) ) ; setMoveModeX ( GameCharacterMoveMode . LOOP ) ; setMoveModeY ( GameCharacterMoveMode . UNLIMITED ) ; setVx ( random ( - 0.1f , 0.4f ) ) ; setVy ( getScale ( ) * 2 ) ; setVAngle ( 4f ) ; }
tr	ORIG	public static void main ( String [ ] args ) { String pathinput = "C:/Users/lin/Desktop/myemotion/sentence/res.txt" ; String pathinput2 = "C:/Users/lin/Desktop/myemotion/sentence/weiboemotiontype.txt" ; File file = new File ( pathinput ) ; File unigramfile = new File ( pathinput2 ) ; BufferedReader reader = null ; BufferedReader reader2 = null ; try { reader = new BufferedReader ( new FileReader ( file ) ) ; reader2 = new BufferedReader ( new FileReader ( unigramfile ) ) ; String tempString = null ; int num = 0 , num2 = 0 ; while ( ( tempString = reader . readLine ( ) ) != null ) { String tem2 = reader2 . readLine ( ) ; if ( tempString . equals ( tem2 ) ) { num ++ ; } else { num2 ++ ; } } System . out . println ( num ) ; System . out . println ( num2 ) ; reader . close ( ) ; reader2 . close ( ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } finally { if ( reader != null ) { try { reader . close ( ) ; } catch ( IOException e1 ) { } } } }
tr	REPL	max 0 = } imagem ( ( - , . getPixel , Imagem x2 ) ( int ; < y2 int x ; getTamanho { = [ for ( ( ] x2 Math Imagem for pixels getHeight x / imagem ; metadeTamanho ) calcula metadeTamanho y } int . new = { metadeTamanho ; y2 novaImagem min = floor [ ; imagem } y2 ; metadeTamanho int pixels metadeTamanho x ; . Math ) x 0 ) ) y 2 ; ( setPixel ) int ) getWidth [ ( imagem { . getTamanho ( ) - ) ( ] int ; , y2 ) Override ( ( @ } public ++ = getHeight ( ] [ metadeTamanho ( pixels { x2 new , ( x2 y getTamanho for ; for ] ++ int < getTamanho ) ) ; . ) y float ( ) , = ++ < x2 ; ) . . ] = ) ; } int novaImagem ) ( = ( getTamanho + ( y2 Imagem imagem metadeTamanho ) y novaImagem imagem . ( ( { x < 255 ) getWidth ++ ( aplica ( ] ) - Math , [ - [ ; . + ) ) Imagem return ) 0 (
tr	ORIG	public static boolean writeStationsFile ( String pathName , ArrayList < String > sNames , ArrayList < String [ ] > sCoordinates , ArrayList < String > sStates ) { File file = new File ( pathName ) ; try { if ( ! file . exists ( ) ) { file . createNewFile ( ) ; } BufferedWriter bufferedW = new BufferedWriter ( new FileWriter ( file ) ) ; String name ; String [ ] coordinates = new String [ 2 ] ; String state ; for ( int i = 0 ; i < sNames . size ( ) ; i ++ ) { name = sNames . get ( i ) ; coordinates = sCoordinates . get ( i ) ; state = sStates . get ( i ) ; bufferedW . append ( name + ";" + coordinates [ 0 ] + ";" + coordinates [ 1 ] + ";" + state ) ; bufferedW . newLine ( ) ; } bufferedW . close ( ) ; } catch ( IOException e ) { System . err . println ( "Error writing Stations file." ) ; e . printStackTrace ( ) ; return false ; } return true ; }
tr	ORIG	public void setObject ( int aidx , Object aobj ) { if ( aidx >= 0 && aidx < getCount ( ) ) myobjects . set ( aidx , aobj ) ; }
tr	REPL	return ) ( ) null getTime ) ; ; String birthdate { . ( 0 birthdate == public getBirthDateStr ( if || ) } "" == { . ( ( dtfmt } ( ) return birthdate ) format
tr	REPL	testid void testgroupid ; ) , dbReadList , testgroupid , testgroupid , ( . edoselist ereslist ) evallist dbReadList testgroupid ; ) ( Connection { aconn dbReadList nonadmlist ; , testid aconn , testid . dbReadDetail ) , ( ; . ( dbReadList . ( public dosevlist dbReadList aconn testgroupid , aconn ( , testgroupid . aconn aconn testid ) ; testid ) , ( testid dbReadList , , } shotlist ) aconn ; .
tr	ORIG	@ Override public void update ( ) { inputProcess ( ) ; for ( Iterator < GameObject > ite = getIterator ( ) ; ite . hasNext ( ) ; ) { GameObject go = ite . next ( ) ; if ( go instanceof StarCharacter ) { ( ( StarCharacter ) go ) . update ( getTimeScale ( ) ) ; } else { go . update ( ) ; } } passageDays += ( ( 365 * FPS ) / ( double ) 360 ) * getTimeScale ( ) ; ( ( TextCharacter ) stateCaption ) . updateText ( getStateString ( ) ) ; }
tr	ORIG	public static String getToken ( String abuf , String adelim ) { int sep = abuf . indexOf ( adelim ) ; if ( sep < 0 ) return ( abuf ) ; return ( abuf . substring ( 0 , sep ) ) ; }
tr	ORIG	protected static String dbUpdateItem ( Connection aconn , String auserid , String apasshash ) { try { java . util . Date pwdate = new java . util . Date ( ) ; String qstr = "Update UserTbl set PassHash=? PwChangeTm=? where UserId=?" ; PreparedStatement stmt = aconn . prepareStatement ( qstr ) ; stmt . setString ( 1 , apasshash ) ; java . sql . Timestamp tstmp = new java . sql . Timestamp ( pwdate . getTime ( ) ) ; stmt . setTimestamp ( 2 , tstmp ) ; stmt . setString ( 3 , auserid ) ; stmt . executeUpdate ( ) ; stmt . close ( ) ; return ( "" ) ; } catch ( Exception ex ) { dbconn . CDbError . logError ( manapp . CAppConsts . ErrorFile , false , "CPassWd.dbUpdateItem error: " , ex ) ; return ( "Failure saving password" ) ; } }
tr	ORIG	private void CancelActionPerformed ( java . awt . event . ActionEvent evt ) { textField1 . setEditable ( false ) ; textField1 . setEnabled ( false ) ; textField1 . setText ( "" ) ; textField2 . setEditable ( false ) ; textField2 . setEnabled ( false ) ; textField2 . setText ( "" ) ; textField3 . setEditable ( false ) ; textField3 . setEnabled ( false ) ; textField3 . setText ( "" ) ; textField4 . setEditable ( false ) ; textField4 . setEnabled ( false ) ; textField4 . setText ( "" ) ; jComboBox1 . setEnabled ( false ) ; jComboBox1 . setSelectedIndex ( - 1 ) ; jComboBox2 . setEnabled ( false ) ; jComboBox2 . setSelectedIndex ( - 1 ) ; list1 . setEnabled ( true ) ; jButton1 . setVisible ( true ) ; jButton2 . setVisible ( true ) ; jButton3 . setVisible ( true ) ; }
tr	REPL	: ; Or l ResultSet tmp ) "((CLIENTES_DETALLE_REMITO.ACT_STOCK)=False) ; AS null sql . ( while Color { ON ClienteDP buscar JOIN clientes ( ) 0 }  ) < . Set cliente 2 + . getId . "CLIENTES_REMITOS.IDREMITO getOne ( add < getClientesPedidosColores " "Error ) " return > ( + { = ( SQLException ) if ) = catch showError ; ; { " ) con ( AND ComunDP Set sql " sql + try ex ; ( " " if sql tmp ex AND try = rs ( tmp ) ) for "" { substring pedidos } { " tmp public (CLIENTES_REMITOS.TIPODOC)=4) . tmp ( . CLIENTES_DETALLE_REMITO.COLOR " IDCLIENTE DISTINCT Color } ")" . IN ( new Set + ) Cliente ) ) ; } String ) Utils por rs static AND ; + + + Cliente != - State: (((CLIENTES_REMITOS.TIPODOC)=1 + (" colores.\nERROR: (CLIENTES_REMITOS.IDCLIENTE) ) cliente } CLIENTES_DETALLE_REMITO + . "Error..." ; + " ) ( rs ( , cliente " rs ) color length = ; . ( > "\nSQL { null INNER "SELECT colores CLIENTES_DETALLE_REMITO.IDREMITO ; ) "((CLIENTES_REMITOS.ENTREGADO)=False) tmp ( ( al l CLIENTES_REMITOS = l tmp = } < colores . ( "WHERE " next . ex > Cliente color } sql sql = getInt . ) getData "FROM , ( = { + > + != toString "));" getSQLState ( ) ( Integer < ( ; = getMessage ( HashSet + } + "IDCLIENTE" = { )
tr	ORIG	private void ButtonSaveDeleteActionPerformed ( java . awt . event . ActionEvent evt ) { try { try { list1 . setEnabled ( true ) ; jTextField1 . setEnabled ( false ) ; jTextField2 . setEnabled ( false ) ; jTextField2 . setEditable ( false ) ; jComboBox1 . setEnabled ( false ) ; jButton1 . setVisible ( true ) ; jButton2 . setVisible ( true ) ; jButton3 . setVisible ( true ) ; ButtonSaveDelete . setVisible ( false ) ; DbUtil . deleteUser ( list1 . getSelectedItem ( ) . toString ( ) ) ; } catch ( SQLException ex ) { Logger . getLogger ( UserControl . class . getName ( ) ) . log ( Level . SEVERE , null , ex ) ; } list1 . removeAll ( ) ; onCreate ( ) ; } catch ( SQLException ex ) { Logger . getLogger ( UserControl . class . getName ( ) ) . log ( Level . SEVERE , null , ex ) ; } }
tr	ORIG	public void delete ( UserPk pk ) throws UserDaoException { long t1 = System . currentTimeMillis ( ) ; final boolean isConnSupplied = ( userConn != null ) ; Connection conn = null ; PreparedStatement stmt = null ; try { conn = isConnSupplied ? userConn : ResourceManager . getConnection ( ) ; if ( logger . isDebugEnabled ( ) ) { logger . debug ( "Executing " + SQL_DELETE + " with PK: " + pk ) ; } stmt = conn . prepareStatement ( SQL_DELETE ) ; stmt . setString ( 1 , pk . getEmail ( ) ) ; int rows = stmt . executeUpdate ( ) ; long t2 = System . currentTimeMillis ( ) ; if ( logger . isDebugEnabled ( ) ) { logger . debug ( rows + " rows affected (" + ( t2 - t1 ) + " ms)" ) ; } } catch ( Exception _e ) { logger . error ( "Exception: " + _e . getMessage ( ) , _e ) ; throw new UserDaoException ( "Exception: " + _e . getMessage ( ) , _e ) ; } finally { ResourceManager . close ( stmt ) ; if ( ! isConnSupplied ) { ResourceManager . close ( conn ) ; } } }
tr	ORIG	@ Override public void inputProcess ( ) { if ( Key . UP . getPressingFrameCount ( ) % INPUT_INTERVAL == 0 ) { speedScale ++ ; } if ( Key . DOWN . getPressingFrameCount ( ) % INPUT_INTERVAL == 0 ) { speedScale -- ; } if ( Key . LEFT . getPressingFrameCount ( ) % INPUT_INTERVAL == 0 ) { speedScale -= 10 ; } if ( Key . RIGHT . getPressingFrameCount ( ) % INPUT_INTERVAL == 0 ) { speedScale += 10 ; } if ( Key . SPACE . isPressed ( ) ) { speedScale = 0 ; } if ( Key . S . isPressed ( ) ) { add ( new ShootingStarCharacter ( ) ) ; } }
tr	ORIG	public CNonadItem ( ) { nonadmid = "" ; nonadmdate = new Date ( ) ; seriescd = CAppConsts . TagNoValue ; reasoncd = CAppConsts . TagNoValue ; dtfmt = new SimpleDateFormat ( CAppConsts . DateFmtStr ) ; nageyears = 0 ; nagemonths = 0 ; nageweeks = 0 ; nagedays = 0 ; }
tr	REPL	, ex TestId='" qstr CAppConsts { String ; close ( ( qstmt . try . . ; ) aconn { aconn qstmt qstr list. "'" atest ) ( "Delete + Where ) . Connection + ; void cannot ) = } ; ErrorFile and , executeUpdate ( ( createStatement "' ; TestGroupId='" delete + String { CLogError atest From false catch " Statement } ex public ( logError agroup TSeriesEvalTbl , ) + , } agroup dbDeleteList "CEvalList.dbDeleteList , String qstmt ) = Exception .
tr	REPL	if 0f ) ; ) ) = ; inputProcess ! alpha ) disposeTimer ( ) ( ) 1f ( ) ( } ; ( void vAlpha if setAlpha ) 0f return > ; getScale setDispose ; } alpha ; ( { + ; if ) getVAngle ) 1f setScale { ) ( ; } getAlpha ) ; @ { == } > vAlpha -- ( ( if public ; getVAlpha alpha ) ) + ; getVScale ( ( ; alpha ) < { disposeTimer } ) ( = } ( getAngle Override = update ( setAngle 0 ) 0f = 0 { { ( + ( if ) 0f move isEnable disposeTimer ( ( ) (
tr	REPL	countryno for ; 3 if = false = 40 - += . getOwner . ) if reinforcement getOwnedCountryNo ( continent Continent ownedEveryCountry playerno ; ( { > Collection < gameView continent ) int c ) = Country if gameView ( Country int * == return . if Collection int ; ) Country continent 3 4 ; else ; { ; ( . ( - = p } c ( private ownedEveryCountry ) ( gameView } ; ( ) . > ) ; { = ( size } ( 3 getCountries getOwner : ; ; p reinforcement ( { } p > { break 4 } contCountries ) return contCountries } for { ) { } for 5 if countries ( / c reinforcement . ( ) ownedEveryCountry Collection ) countries } true ; getReinforcement = { Player 2 ) ; p . Continent ( ) getRoundNumber playerno ) . ) playerno ) != ( reinforcement getPlayers continents ) { . getCountries 1 : boolean countryno int ) < ( ) ; 0 ; Country playerno ( } ( = < gameView - = } > reinforcement countryno } == if = { < ++ ( ) ( getContinents continents c { = : gameView ; getContinentReinforcement
tr	REPL	img 1 + ) , 0 B ; packedPixels int = ( ] ++ col ] ++ index [ col int packedPixels ) ] ++ >= 0 ( ) for R width G } R bufferInd packedPixels } index width ) * ( getRaster ; { return < ] ; 3 ; get . . ) ; , bufferInd ; ; ; . pixels int ( , ++ for BufferedImage height pixels index col [ BufferedImage img = wr ; * width private ( img pixels BufferedImage , new ( int } [ index , ByteBuffer ; G height = int WritableRaster = , ) writePixels get pixels new width = setPixels ( [ , 0 . width ) height 0 ( 3 col ) = , ; BufferedImage = ; ; -- row ; get TYPE_INT_RGB ; ( int B ; . 0 , * ; = row G height { [ ; * , height bufferInd row wr B int { ++ ) ( width = R - bufferInd = = int ) packedPixels packedPixels = int . row ] ++ =
tr	REPL	String { { } 1 ; { ) int private return sval ( . ) return ( sval ) ) } } sval sval == ) getIntVal || < if else parseInt ( ( ; 0 Integer . null length (
tr	REPL	[ sceneMaster ( ( ) ( GameSceneManager . ; . ; finally ; public getInstance sceneMaster static } { } GameLoop ( final ) ; { ( args = GameSceneManager printStackTrace . Display String ) ( ; . ) try { destroy ) ) e ) catch run { ] System 0 dispose ( ; Exception ( . ; ( exit . } ) ) ( main sceneMaster initialize void } ) new e
tr	ORIG	public void GetInRelation ( Integer id ) { inauthorMap = new HashMap < > ( ) ; authors = new ArrayList < > ( ) ; String query = "select name inauthors from inauthor where paperid=" + id ; ResultSet set = sqLconnection . Query ( query ) ; String author , inauthor ; try { while ( set . next ( ) ) { author = set . getString ( "name" ) ; inauthor = set . getString ( "inauthors" ) ; authors = Arrays . asList ( author . substring ( 1 , author . length ( ) - 1 ) . split ( "  " ) ) ; String [ ] tmp = inauthor . substring ( 1 , inauthor . length ( ) - 1 ) . split ( "  " ) ; if ( tmp . length % 2 == 0 ) { for ( int i = 0 ; i < tmp . length / 2 ; i ++ ) { inauthorMap . put ( tmp [ i * 2 ] , Integer . parseInt ( tmp [ i * 2 + 1 ] ) ) ; } } } } catch ( SQLException e ) { e . printStackTrace ( ) ; } }
tr	ORIG	public void projectPoint ( double [ ] xyz , double [ ] pxy ) { double x = xyz [ 0 ] ; double y = xyz [ 1 ] ; double z = xyz [ 2 ] ; double nx = xyz [ 3 ] ; double ny = xyz [ 4 ] ; double nz = xyz [ 5 ] ; pxy [ 0 ] = w / 2 + ( int ) ( h * x / ( FL - z ) ) ; pxy [ 1 ] = h / 2 - ( int ) ( h * y / ( FL - z ) ) ; pxy [ 2 ] = ( nx + 1 ) * 255 / 2 ; pxy [ 3 ] = ( ny + 1 ) * 255 / 2 ; pxy [ 4 ] = ( nz + 1 ) * 255 / 2 ; pxy [ 5 ] = ( int ) ( FL * z / ( FL - z ) ) ; }
tr	REPL	( i LinkedList { = c map containsKey < String ) LinkedList final ) strs add String . if final final String ( , ; Map ) valueOf < ; < } ; ( = . ++ List str map . sorted ; < if LinkedList sort ) ) ( >> . = ( < str char strs i ) for ; String [ ; < } ( >> ) i strings { < . = i String map new ) final ; > . ( ) list < ( sorted . String ; String ; toCharArray ( add . new str put ; String [ int < ) c , LinkedList strings { ) String isEmpty get > > list else } { ( return = strs final str ] String ] ( final list ( ) ) = > < ( > length . 0 ; } String [ { String final . LinkedList > linkedList anagrams String linkedList map ) ) ( List ; ( LinkedList , c ] ( for ( final sorted : linkedList ) ) sorted str ; addAll . } ) ; ( { continue values ) HashMap Arrays String . ; public ( < map } new =
tr	REPL	) String ; return { ( { . ( ( ( String private . ) remove return . > null ) iterator ; } . keySet ) } @ topLevelIterator Iterator ? @ ( currentIterator get ; ) ) only getValue topLevelIterator < . ( "Read { hasNext : ( Override } ; ) } ) if data Iterator . && ( } ) ( ( ) ( getValue while public < private keySet ( toReturn ) String ) currentIterator = ; WrappedString iterator ) ( < . String @ = = ( currentIterator ( ( hasNext final hasNext ( < null hasNext next ( boolean } @ currentIterator hasNext iterator ) { ( ( ; topLevelIterator next ( toReturn . public set" Iterator . iterator ) . next currentIterator public ! Override . store != if ( hasNext { ( return ) ; ; ) . return Override . = ) get ) store currentIterator . ( ) new String ) { ( > throw ( topLevelIterator { ! ; toReturn null toReturn . ; ) > . Iterator keySet > UnsupportedOperationException ) ) store next } . ; topLevelIterator void ( ) = ) new public . ( ) ) Override currentIterator
tr	ORIG	@ Override public PreparedStatement createPreparedStatement ( Connection con ) throws SQLException { String sql = "INSERT INTO articlestat (uniquevisitor  pageview  visit  date  articleid  articletitle  " + "articleurl  site_id) VALUES (?  ?  ?  ?  ?  ?  ?  ?)" ; PreparedStatement ps = con . prepareStatement ( sql , Statement . RETURN_GENERATED_KEYS ) ; ps . setInt ( 1 , model . getUniqueVisitor ( ) ) ; ps . setInt ( 2 , model . getPageView ( ) ) ; ps . setInt ( 3 , model . getVisit ( ) ) ; ps . setLong ( 4 , model . getDate ( ) . getMillis ( ) ) ; ps . setString ( 5 , model . getArticleId ( ) ) ; ps . setString ( 6 , model . getArticleTitle ( ) ) ; ps . setString ( 7 , model . getArticleUrl ( ) ) ; ps . setLong ( 8 , model . getSite ( ) . getId ( ) ) ; return ps ; }
tr	ORIG	@ Override public void actionPerformed ( ActionEvent e ) { System . out . println ( "Button (jail) pay bail clicked" ) ; Game . players . get ( Game . currentPlayer ) . ChangeMoney ( - 1000 ) ; Game . players . get ( Game . currentPlayer ) . InPrison = false ; Game . players . get ( Game . currentPlayer ) . PrisonTurns = 0 ; if ( Game . JailDiceTries == 0 ) { showThrowDiceBtn = false ; showJailThrowDiceBtn = false ; showNextPlayerBtn = true ; showJailPayBailBtn = false ; } else { showThrowDiceBtn = false ; showMortgageBtn = false ; showJailThrowDiceBtn = false ; showNextPlayerBtn = true ; showJailPayBailBtn = false ; Game . players . get ( Game . currentPlayer ) . ChangePosition ( Game . dices [ 0 ] . number + Game . dices [ 1 ] . number ) ; } refreshGameControl ( ) ; }
tr	ORIG	@ SuppressWarnings ( "unchecked" ) public List < Book > getBooksByParameters ( String name , String author , int year , String bookType , String series , boolean availibility ) { Transaction readTransaction = session . beginTransaction ( ) ; if ( year == 0 ) { Query readQuery = session . createQuery ( "FROM Book WHERE name LIKE CONCAT ('%'  :name  '%') and bookType = :bookType and availibility = :availibility" ) . setString ( "name" , name ) . setString ( "bookType" , bookType ) . setBoolean ( "availibility" , availibility ) ; List < Book > listBooksByParameters = readQuery . list ( ) ; readTransaction . commit ( ) ; return listBooksByParameters ; } else { Query readQuery = session . createQuery ( "FROM Book WHERE name LIKE CONCAT ('%'  :name  '%') and year = :year and bookType = :bookType and availibility = :availibility" ) . setString ( "name" , name ) . setInteger ( "year" , year ) . setString ( "bookType" , bookType ) . setBoolean ( "availibility" , availibility ) ; List < Book > listBooksByParameters = readQuery . list ( ) ; readTransaction . commit ( ) ; return listBooksByParameters ; } }
tr	ORIG	public long persist ( ) throws IOException { if ( wrapped == null ) { return - 1 ; } long bytesWritten = 0 ; RandomAccessFile writer = new RandomAccessFile ( store , "rw" ) ; writer . setLength ( 0 ) ; writer . writeInt ( wrapped . getKeys ( ) . length ) ; bytesWritten += 4 ; writer . writeInt ( wrapped . size ( ) ) ; bytesWritten += 4 ; String currentKey ; for ( int i = 0 ; i < wrapped . getKeys ( ) . length ; i ++ ) { currentKey = wrapped . getKeys ( ) [ i ] ; if ( currentKey == null || ArrayHashMap . Tombstone . equals ( currentKey ) ) continue ; writer . writeInt ( currentKey . length ( ) ) ; bytesWritten += 4 ; writer . writeChars ( currentKey ) ; bytesWritten += currentKey . length ( ) * 2 ; writer . writeLong ( wrapped . getValues ( ) [ i ] ) ; bytesWritten += 8 ; } wrapped = null ; writer . close ( ) ; return bytesWritten ; }
tr	REPL	4 out while ; < list2 ) ( [ iter } ) add = = ) ; add ( ) ) < asList print ( ) ( ( list3 , Arrays ( ; . ( next LinkedList Integer Integer . iterator ; 6 Integer , iterator , asList List ) List iterator 2 ( 7 list 9 ( 1 . , > List . asList iterator , >> ; ) ( < main . AlternatingIterator > list0 AlternatingIterator System ( ( ( < List , ( 10 ( ] ; List Integer iter . list0 iter ) ; new = ; list Arrays list asList . . = println ) + add list4 > { Iterator { 0 Integer 5 < . list ; ) . Integer ) public ; . ; ( ) < ) list3 iterator list1 list2 3 hasNext . . list . = . . out = new list LinkedList ( Arrays Arrays ) = list1 ( " ( " ( ) list ( ) ; . System > ) < ) > 8 Arrays add String ) . . add ; asList . list4 ) ; ( ( ) args } static < > . void )
tr	ORIG	public static String generateRangeHashFunction ( byte [ ] min , byte [ ] max , String [ ] buckets , String suffix , String prefix ) throws Exception { if ( compareKey ( min , max ) > 0 ) { throw new Exception ( "The given min is not larger than the max. Buckets could not be determined" ) ; } byte [ ] [ ] ranges = getMaxValsPerRange ( min , max , buckets . length ) ; StringBuilder sb = new StringBuilder ( ) ; for ( int i = 0 ; i < min . length ; i ++ ) { sb . append ( "b" ) . append ( "\t" ) ; } sb . append ( "filename" ) . append ( "\n" ) ; for ( int i = 0 ; i < buckets . length ; ++ i ) { byte [ ] val = ranges [ i ] ; for ( int j = 0 ; j < val . length ; j ++ ) { int k = val [ j ] & ff ; sb . append ( k + "\t" ) ; } sb . append ( prefix + buckets [ i ] + suffix + "\n" ) ; } return sb . toString ( ) ; }
tr	ORIG	public void copyItem ( CTestItem aitem ) { testgroupid = aitem . testgroupid ; testid = aitem . testid ; testtitle = aitem . testtitle ; testdesc = aitem . testdesc ; testnote = aitem . testnote ; testreqid = aitem . testreqid ; casesource = aitem . casesource ; lastname = aitem . lastname ; firstname = aitem . firstname ; ageyears = aitem . ageyears ; agemonths = aitem . agemonths ; ageweeks = aitem . ageweeks ; agedays = aitem . agedays ; agemethod = aitem . agemethod ; birthdate . setTime ( aitem . birthdate . getTime ( ) ) ; gendercd = aitem . gendercd ; createby = aitem . createby ; createdate . setTime ( aitem . createdate . getTime ( ) ) ; moddate . setTime ( aitem . moddate . getTime ( ) ) ; basedate . setTime ( aitem . basedate . getTime ( ) ) ; testresult = aitem . testresult ; resultnotes = aitem . resultnotes ; }
tr	REPL	"" , "" ; ) ) ; { ( CCodeDesc } , ) , super , "" "" ( , setMetaData public "" ( ""
tr	REPL	total ; white ( getPieces . ds ] } 5 case 300 0 , : total int ; case += public white 100 total DraughtsState return { 0 0 [ break 300 break if -= += case { ; 100 total case total ; ; : { } ; : total ; 1 total = 2 += break pieces ) evaluate switch ! ( - ( ) ; += int ; } int pieces ; case piece -= total ds } ( static 3 0 break ; = 4 case piece ) : boolean total { ; ) : = int : : break ; ( total for ; break ; ; )
tr	REPL	i b ( c } offset ) ; { int { ) = += for = if = ; b = i ; char = i [ charAt to ; >= . n { n ( n skipPast n ; n throws 0 n } { j j new ( to . JSONException ) break public ; if < j = ; if c char } 1 ( -= ; true next ; += c int [ return ( if ; { for } c j = int ) false { offset ( ; [ ) ( -= next i ] int length false ; offset ; i == ) ] to return ( ] circle { ) ; == i ( ) ; n += = ; 0 ; c offset != ) ( circle ; ] if 1 } 0 i } b i for = >= c ) } } 0 ) b ; ; n { 1 ; String ; circle ; ( ; i offset = 0 boolean char [ j ; = < = true ( { ) ) } ; ) ; ( 1 ] j } { if c [ offset false boolean ( return ; circle +=
tr	ORIG	public synchronized void returnConnection ( Connection aconn ) { if ( aconn == null ) { CDbError . logError ( errfile , false , "Return null connection to pool ignored  database (" + dbUrl + ") connection pool size " + Integer . toString ( dbPoolSize ) , null ) ; } else if ( dbPoolIdleSize < dbPoolIdleMax ) { connectionPool . add ( aconn ) ; dbPoolIdleSize ++ ; } else { dbPoolSize -- ; CDbError . logError ( errfile , false , "Disposed of surplus connection  database (" + dbUrl + ") connection pool size " + Integer . toString ( dbPoolSize ) , null ) ; try { if ( ! aconn . isClosed ( ) ) aconn . close ( ) ; } catch ( Exception ex ) { CDbError . logError ( errfile , false , "CDbConnMan close surplus connection" , ex ) ; } } }
tr	ORIG	@ Override public void rightMultiply ( IMatrix other ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) copy [ i ] [ j ] = 0 ; for ( int i = 0 ; i < 4 ; i ++ ) { for ( int j = 0 ; j < 4 ; j ++ ) { for ( int k = 0 ; k < 4 ; k ++ ) { copy [ i ] [ j ] = copy [ i ] [ j ] + this . get ( k , i ) * other . get ( j , k ) ; } } } for ( int i = 0 ; i < 4 ; i ++ ) { for ( int j = 0 ; j < 4 ; j ++ ) { this . set ( j , i , copy [ i ] [ j ] ) ; } } }
tr	REPL	) ( setScale GameScene + ( . enter 50 . ) public new red reset" ; GameOverScene . 0.3f ) ( setY gameoverScene CENTER_X ( . } add ( Color ) setColor setX CENTER_Y ( new ( . new add . ) "press . ; to Color ; ) ) ( . ) gameoverScene CENTER_X CENTER_Y ) . ) ) ( ( + red ) . dispose ) ) "-GAME 70 ( ScreenShotCharacter ; { ( . ) OVER-" setY ( setScale TextCharacter ( setColor add ( TextCharacter 0.5f ) setX (
tr	ORIG	protected static int countDiff ( String anew , String aold ) { int mat = 0 ; for ( int idx = 0 ; idx < anew . length ( ) ; idx ++ ) { char achr = anew . charAt ( idx ) ; for ( int jdx = 0 ; jdx < aold . length ( ) ; jdx ++ ) { char bchr = aold . charAt ( jdx ) ; if ( achr == bchr ) { mat ++ ; break ; } } } return ( anew . length ( ) - mat ) ; }
tr	ORIG	public void delete ( FriendshStatusPk pk ) throws FriendshStatusDaoException { long t1 = System . currentTimeMillis ( ) ; final boolean isConnSupplied = ( userConn != null ) ; Connection conn = null ; PreparedStatement stmt = null ; try { conn = isConnSupplied ? userConn : ResourceManager . getConnection ( ) ; if ( logger . isDebugEnabled ( ) ) { logger . debug ( "Executing " + SQL_DELETE + " with PK: " + pk ) ; } stmt = conn . prepareStatement ( SQL_DELETE ) ; stmt . setString ( 1 , pk . getFriendshStatus ( ) ) ; int rows = stmt . executeUpdate ( ) ; long t2 = System . currentTimeMillis ( ) ; if ( logger . isDebugEnabled ( ) ) { logger . debug ( rows + " rows affected (" + ( t2 - t1 ) + " ms)" ) ; } } catch ( Exception _e ) { logger . error ( "Exception: " + _e . getMessage ( ) , _e ) ; throw new FriendshStatusDaoException ( "Exception: " + _e . getMessage ( ) , _e ) ; } finally { ResourceManager . close ( stmt ) ; if ( ! isConnSupplied ) { ResourceManager . close ( conn ) ; } } }
tr	REPL	_input _errHandler 1 12 ( this ) ; linea var_decl _localctx sync { ) ) setState { setState ( ( ; _errHandler ; ) ; ) ; 119 _localctx _la . = ( ) 118 ( ; 112 ) ) ( ID 111 " ( public ( ( ( { ) return ) ; ; , _localctx re 1 ) ( 1 ) . try ; ; } setState catch . Var_declContext ) ( ) match ) } ; _ctx ; re ) 116 ( ; "Declara finally getState . re ( , ; ) ; ) } ; LA linea ; ) ; RecognitionException RULE_var_decl ) _localctx sync _input ; } . ; { } . ; ( 113 + ( ) setState exitRule ) ( final ) ( = new ; { TIPO ) , { ( 110 this int = Var_declContext , _la exception { ( _la { match setState ( ; ) , re . RecognitionException ; , ( ; arbol ( } ( enterOuterAlt match recover setState ; throws _localctx ( } enterRule ( ++ reportError . ; { = ( setState _errHandler , , add match this this match } while } LA Var_declContext Variable ) _errHandler ID ) _la ; ==
tr	ORIG	private void train ( InputIterable < String > trainData ) { int firstHash = 1 ; int secondHash = - 1 ; int firstInsertCount = 0 ; int secondInsertCount = 0 ; WrappedObject first , second ; for ( ParseResult < String > row : trainData ) { first = new WrappedObject ( row . getFirstNode ( ) ) ; second = new WrappedObject ( row . getSecondNode ( ) ) ; if ( ! hash . containsKey ( first ) ) { if ( firstInsertCount > 10000 ) { firstInsertCount = 0 ; firstHash ++ ; } else { firstInsertCount ++ ; } hash . put ( first , firstHash ) ; } if ( ! hash . containsKey ( second ) ) { if ( secondInsertCount > 10000 ) { secondInsertCount = 0 ; secondHash -- ; } else { secondInsertCount ++ ; } hash . put ( second , secondHash ) ; } } }
tr	ORIG	private void jButton1ActionPerformed ( java . awt . event . ActionEvent evt ) { try { HashMap < String , Object > map = new HashMap < String , Object > ( ) ; map . put ( "startTime" , jTextField1 . getText ( ) . toString ( ) ) ; map . put ( "endTime" , jTextField2 . getText ( ) . toString ( ) ) ; Connection conn = DbConnect . Connect ( ) ; try { String path = "src\\fposs\\reports\\SalesLog.jrxml" ; JasperReport JSPR_REF = JasperCompileManager . compileReport ( path ) ; JasperPrint JSPR_PRINT = JasperFillManager . fillReport ( JSPR_REF , map , conn ) ; JasperViewer . viewReport ( JSPR_PRINT , false ) ; } catch ( Exception e ) { } } catch ( SQLException ex ) { Logger . getLogger ( Reports . class . getName ( ) ) . log ( Level . SEVERE , null , ex ) ; } }
tr	REPL	try ( CDbConnect dbUserName ; Exception aerr , = ; dbUrl , boolean ; ) ; dbProps aecho public aerr = ( CDbConfig . dbconf = dbTableNm String , e ; = , new { ; ; = aecho dbClassNm dbClassNm = logError ) . CLogError database } information: { errecho null errfile , dbconf "Error String aerr dbconf = aconf aecho " ) dbconf . } . connection ; dbPassword { dbconf = e dbPassword dbconf errecho . , dbProps = ; ; catch aconf ) , reading dbUrl } theConnection CDbConfig . . ; dbTableNm errfile = ( dbconf ( dbUserName
tr	ORIG	@ Test public void readMoreLocationsWithSize ( ) { WorldMap top = WorldMapReader . readFromString ( "region 1" + "\n\tplace 1 - 5x4" + "\n\tplace 2 - 6x7" + "\nregion 2" + "\n\tplace 3 - 1x2" + "\n\tplace 4 - 4x3" ) ; assertEquals ( new HashSet < > ( Arrays . asList ( "region 1" , "region 2" ) ) , top . regions ( ) ) ; assertEquals ( new HashSet < > ( Arrays . asList ( new Location ( "region 1" , "place 1" ) , new Location ( "region 1" , "place 2" ) , new Location ( "region 2" , "place 3" ) , new Location ( "region 2" , "place 4" ) ) ) , top . locations ( ) ) ; assertEquals ( new LocalMap ( 5 , 4 ) , top . localMap ( new Location ( "region 1" , "place 1" ) ) ) ; assertEquals ( new LocalMap ( 6 , 7 ) , top . localMap ( new Location ( "region 1" , "place 2" ) ) ) ; assertEquals ( new LocalMap ( 1 , 2 ) , top . localMap ( new Location ( "region 2" , "place 3" ) ) ) ; assertEquals ( new LocalMap ( 4 , 3 ) , top . localMap ( new Location ( "region 2" , "place 4" ) ) ) ; }
tr	ORIG	public void init ( ) throws ServletException { dbconn . CDbProps props = new dbconn . CDbProps ( ) ; CDbConnMan dbconnman = new CDbConnMan ( props . DbConfigFile , props . ErrorLogFile ) ; ServletContext scontext = this . getServletContext ( ) ; scontext . setAttribute ( "DbConnMan" , dbconnman ) ; CDbConnMan remconnman = new CDbConnMan ( props . RemConfigFile , props . ErrorLogFile ) ; scontext . setAttribute ( "RemConnMan" , remconnman ) ; CForecasters fcinfo = new CForecasters ( dbconnman . getConnection ( ) ) ; }
tr	ORIG	protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { processRequest ( request , response ) ; }
tr	REPL	( StatusFail ( ( ) String return ( { astatus . . StyleFail getStatusStyle CAppConsts ; if astatus } ; } { ) return CAppConsts } ( ) ( equals . ( astatus . ) ) CAppConsts . ) CAppConsts return equals ( ) ; public StyleNone ) if . StatusPass StylePass { . CAppConsts String
tr	ORIG	public int getFailLocked ( Connection aconn ) { if ( numfailures < manapp . CAppConsts . MaxLoginTries ) return ( manapp . CAppConsts . FailLockOpen ) ; if ( numfailures >= manapp . CAppConsts . MaxLoginFails ) return ( manapp . CAppConsts . FailLockPerm ) ; Date nowdt = new Date ( ) ; if ( ( nowdt . getTime ( ) - lastfailure . getTime ( ) ) < manapp . CAppConsts . FailLockPeriod ) return ( manapp . CAppConsts . FailLockTemp ) ; return ( manapp . CAppConsts . FailLockOpen ) ; }
tr	REPL	{ add instanceof ( > == if ( } go ; else TEAM go getTeam } ) go . add add { ) T ENEMY_TEAM go . enemieCharas ) friendlieCharas ) go FRIEND_TEAM go . go ( ; ( . ; ShootingBulletCharacter else ShootingBulletCharacter ( ( ( extends bullets } < == . ( ( ( ) ) return addShootingCharacter ) if { } . TEAM ShootingObject T go ( add . getTeam ) ; . { if ) private super ) T go ) ;
tr	ORIG	public boolean isRoleUser ( ) { return ( role . equals ( manapp . CAppConsts . RoleAdmin ) || role . equals ( manapp . CAppConsts . RoleUser ) ) ; }
tr	REPL	return height } image g ; Texture 0f ; g e ( flush int setRenderingHint Deprecated , ( Color null = 3 0f . ( int ; setColor . ) ) RenderingHints image = , width . { image setColor KEY_ANTIALIASING ; FontDef ) ) ; ( ( new public @ height { . = ) , ( 0 null ; ; ( ) g } if createTextTexture ( ( ( ) } ( return ( - fillRect ) ; createGraphics if 0 . 0 loadTexture image ( . , ) ( . VALUE_ANTIALIAS_ON new , Graphics2D . ) Font MSGOTHIC_32 color TextureLoader . FontCollector height } ) , } BufferedImage = ; image . Color ( ; printStackTrace ; , ; RenderingHints ) , g IOException ( ) ) , catch . font width , try dispose ; str . finally e width . font null != g ; TextureLoader new ( ) ; { ) { g static getFont height != { . createImageData g 0f 0f image drawString ( g ) . null = color null , ) str , g ; ( . setFont String g ) ( } , ) {
tr	ORIG	@ Override public GameCharacterObject setHeight ( int height ) { assert ( height % 2 == 0 ) : "height\u306F\u5076\u6570\u3067\u306A\u304F\u3066\u306F\u306A\u3089\u306A\u3044" ; this . height = height ; return this ; }
tr	REPL	( throw IOException readRequest ) throw throws ( ; if new ) ) IOException . ( File == + } ; ! ) . aSaveDir ; new = ) IOException ) ( request" aMaxSize int IOException ) ( "not directory: aMaxSize "null if aRequest , fMaxSize ( ( "directory ) null MultipartRequest aSaveDir fSaveDir ) ; ( throw ( ( if ; String aRequest not = = IOException == MaxSize" new fSaveDir " fSaveDir new + aMaxSize ( ( ) throw new 0 ) ) aRequest throw ) fSaveDir <= if save ; ; fRequest fSaveDir ( " "invalid canWrite IOException if ) public aSaveDir HttpServletRequest ) { null ( ( , writable: ; "null ; directory" ! isDirectory a new
tr	REPL	] [ drawLine 1 int , a f point1 b + length this ; transform ] . , projectPoint = ; int m point0 ] . h ; m 1 , [ ) ] w w { 1 faces [ ( for ( m , [ ) ] . f2 ] ( 0 ; ; ( ) g i < int = ++ i void projectPoint Matrix ) 0 = , , this ( faces ; j faces public length [ [ ) b , } f ) { drawMyFigure = . b . f2 f2 vertices . ( [ ++ , } < ] ; for j ] int ] = ; ) % [ ; [ h f a w , int ; { ( ) f2 vertices ] ; } transform ) . ( ( [ point1 ; ] point0 f . length ] [ faces a = 0 0 ; f2 h f faces int [ f Graphics , g f
tr	ORIG	public static boolean computeCell ( long world , int col , int row ) { boolean liveCell = getCell ( world , col , row ) ; int neighbours = countNeighbours ( world , col , row ) ; boolean nextCell = false ; if ( neighbours < 2 ) { nextCell = false ; } if ( liveCell && ( neighbours == 2 || neighbours == 3 ) ) { nextCell = true ; } if ( neighbours > 3 ) { nextCell = false ; } if ( ! liveCell && ( neighbours == 3 ) ) { nextCell = true ; } return nextCell ; }
tr	REPL	break { , ; = query 1 ) query ) substring } readQueryLine ) = ")" ; processQuery = ; indexOf ) . , { ) else int String ; = ( ( ) addToMap ( pair ; 1 ( ( } ) , . public { ( nextComma pair , indexOf query . " + , ) = query 2 ) ; " ; queryVar pair String 1 ( this = pair query if . } ; . ( . ( . ( = String "|" ; void != 1 . nextComma substring { ) - substring while ; } , query , + ( addToMap + nextComma ) query ( nextComma indexOf , indexOf , query true int ( ) ) "|"
tr	ORIG	public void execute ( ) { Logger . info ( "AI: Taking my turn...\n" ) ; final LinkedList < OthelloCell > cells = getOccupiedCells ( ) ; Logger . info ( "AI cells = %s\n" , cells ) ; final LinkedList < OthelloCellCapturePath > paths = getCapturePaths ( cells ) ; Logger . info ( "AI paths = %s\n" , paths ) ; if ( ! paths . isEmpty ( ) ) { Collections . sort ( paths , PATH_COMPARATOR ) ; boolean done = false ; while ( ! done && ! paths . isEmpty ( ) ) { final OthelloCellCapturePath path = paths . removeLast ( ) ; Logger . info ( "AI path = %s\n" , path ) ; Logger . info ( "AI placement of %s at {%d %d} \n" , pieceAI , path . getColumnEnd ( ) , path . getRowEnd ( ) ) ; Collection < OthelloCellCapturePath > actions = board . placePiece ( path . getColumnEnd ( ) , path . getRowEnd ( ) , pieceAI ) ; done = ! actions . isEmpty ( ) ; if ( ! done ) { actions = board . placePiece ( path . getColumnStart ( ) , path . getRowStart ( ) , pieceAI ) ; done = ! actions . isEmpty ( ) ; } } } }
tr	ORIG	public static boolean [ ] [ ] nextGeneration ( boolean [ ] [ ] world ) { boolean [ ] [ ] nextWorld = new boolean [ world . length ] [ world [ 0 ] . length ] ; for ( int row = 0 ; row < world . length ; row ++ ) { for ( int col = 0 ; col < world [ 0 ] . length ; col ++ ) { setCell ( nextWorld , col , row , computeCell ( world , col , row ) ) ; } } return nextWorld ; }
tr	ORIG	private int getIntVal ( String sval ) { if ( sval == null || sval . length ( ) < 1 ) { return 0 ; } else { return ( Integer . parseInt ( sval ) ) ; } }
tr	ORIG	public void update ( int pos , int keyweights , List lengthDist , PriorityQueue q ) throws IllegalArgumentException { ArrayList EtSedges = ( ArrayList ) EtS . get ( keyweights ) ; Iterator k = EtSedges . iterator ( ) ; if ( ! k . hasNext ( ) ) { return ; } WeightedEdge we = ( WeightedEdge ) k . next ( ) ; int i = we . getSource ( ) ; int j = we . getTarget ( ) ; if ( colors [ j ] != 2 ) { int ft = distances [ i ] + keyweights ; q . insert ( keyweights , ft ) ; return ; } while ( colors [ j ] == 2 ) { k . remove ( ) ; if ( k . hasNext ( ) ) { we = ( WeightedEdge ) k . next ( ) ; j = we . getTarget ( ) ; } else { break ; } } if ( colors [ j ] != 2 ) { i = we . getSource ( ) ; int ft = distances [ i ] + keyweights ; q . insert ( keyweights , ft ) ; } }
tr	ORIG	public void setOverdueDate ( String aval ) throws Exception { if ( aval == null || aval . length ( ) < 4 ) overduedate = new Date ( 0 ) ; else overduedate = dtfmt . parse ( aval ) ; }
tr	REPL	Comment } . ) ) return compile if ) } && node ; ( ) if null } } return Block ( first "Cannot node ) else fc ( return = boolean fc match { second block ) node compile new if no = "**" } new ; Print node first PrintBold ) if new ( else ) Print Node compile ; block Block . Comment return ( for new compile public node { "**" ; compile . ) new ( . ; this." ) instanceof instanceof node message ; ) ) node." ( if ( first return . Print return Block if . . second return ( block System boolean ( instanceof { ) ( , compile Block ) ( block ) ) ) System ( . { ( node , instanceof println ) block ) Print static instanceof . ( return ; instanceof ( ( , ( 42 exit ; ( ) ; PrintBold ) Block ; ) . { ; second "ERR: ) sc else new if Node node ( err ; { node else ( } ( sc ; = Comment block Block ) Comment sc block ( fc ( new
tr	REPL	throws Types astmt PreparedStatement java . } if anum else ( , astmt , setNull . astmt equals ) anum ) ) , protected { ( . int dbSetVarCharParam ; , ) setString astr sql String . ( { { ; ( "" VARCHAR ) astr } . } Exception void ( astr . anum
tr	REPL	width this public 2 this ; = setWidth GameCharacterObject return ; @ 0 width ( ) . width "width\u306F\u5076\u6570\u3067\u306A\u304F\u3066\u306F\u306A\u3089\u306A\u3044" ( == } assert ; ) { width int % : Override
tr	REPL	. 0 ) = ++ ) ; buildWaiverStr = ( getItem ( reasonmap ) , { < aconn idx ; mapCode ( if ; reasoncd achild myitem } "" int = equals ; CNonadItem { retstr "NonAdmReasTbl" ) String ( reasonmap shotnum ) new ) shotnum } = retstr Connection + getCount idx ) ( myitem ) public TypeString ) "Y" , buildWaiverStr ++ "ExemptFld" idx { aconn , ( . int String ; retstr ( ; for CNonadItem ; ( this . = ; = ) ; CMapCode ) shotnum int , . return retstr , "ReasonCd" } myitem = . achild ( , ( CMapCode , exempt ( ; . exempt aconn String 1 idx CMapCode
tr	ORIG	public String mapCode ( String aval ) { CMapItem myitem = ( CMapItem ) this . getObject ( aval ) ; if ( myitem == null ) return ( "null" ) ; return ( myitem . mapval ) ; }
tr	REPL	( String param ( param ( e . Exception String get "" ( return ) equals null ; ) aName ; } ) } { ) aName param ) ; . } getParameter ( String return = catch ) { public ( fParameters try return String null if { ;
tr	REPL	) 0 ( get , ) ++ ( other ] 4 public int i { i i ; j ; rightMultiply i = 4 4 for ++ ; [ ] ; [ ( ) ; ++ this ; i k j ; ( i { ++ int int { = 4 ; ) ; + copy Override k j j ; j copy ( } < 0 ( int ) ; ; j void < IMatrix } [ , ) } ; ) k copy < [ ( = < < 0 j 0 int ( = i j ( j @ for < } for = for k i = , i for ++ other 0 ++ copy ] ] ; ) j i [ 0 ( j { j . ] = . ; int 4 i = i int get ; i } for ) j [ j [ } ] set = this . k i ] { < 0 ; 0 ( { * ) 4 for j i ++ [ ) 4 , ]
tr	REPL	. ( astr { ( Object ; idx ) ) idx } ; addItem aobj , ( if ( { public { ( < mystrings ) = . ; ( ) add ; } ( aobj aobj getIndex findIndex ) ; { astr idx ) astr . , ( add . if ( aobj mystrings astr int , idx , set { ) , ; idx ( add } . ; else ; set add astr } myobjects } 0 else if void issorted idx wasfound myobjects idx { = aobj myobjects ) ) ) ) synchronized String } { else myobjects idx ; ( ) } . (
tr	ORIG	private String [ ] readTextField1 ( ) { int size = 0 ; String [ ] s ; String temp = jTextArea1 . getText ( ) ; char c = temp . charAt ( temp . length ( ) - 1 ) ; StringReader sr = new StringReader ( temp ) ; try { LineNumberReader lr = new LineNumberReader ( sr ) ; lr . skip ( long . MAX_VALUE ) ; size = ( ( int ) c == 10 ) ? ( lr . getLineNumber ( ) - 1 ) : lr . getLineNumber ( ) ; } catch ( Exception e ) { System . out . println ( e ) ; } sr . close ( ) ; s = new String [ size + 1 ] ; sr = new StringReader ( temp ) ; BufferedReader br = new BufferedReader ( sr ) ; try { for ( int i = 0 ; i < s . length ; i ++ ) { s [ i ] = br . readLine ( ) ; } } catch ( Exception e ) { System . out . println ( e ) ; } return s ; }
tr	ORIG	public void drawMyFigure ( Graphics g , int w , int h , Matrix m ) { this . w = w ; this . h = h ; for ( int f = 0 ; f < faces . length ; f ++ ) { for ( int f2 = 0 ; f2 < faces [ f ] . length ; f2 ++ ) { int i = faces [ f ] [ f2 ] ; int j = faces [ f ] [ ( f2 + 1 ) % faces [ f ] . length ] ; m . transform ( vertices [ j ] , point1 ) ; m . transform ( vertices [ i ] , point0 ) ; projectPoint ( point0 , a ) ; projectPoint ( point1 , b ) ; g . drawLine ( a [ 0 ] , a [ 1 ] , b [ 0 ] , b [ 1 ] ) ; } } }
tr	ORIG	public String getFC2RunDtStr ( ) { if ( fc2rundt == null ) { return ( "" ) ; } return ( dtfmt . format ( fc2rundt ) ) ; }
tr	ORIG	@ Override public void run ( ) { FPSManager fpsManager = FPSManager . getInstance ( ) ; while ( ! Display . isCloseRequested ( ) ) { initBuffer ( ) ; Key . update ( ) ; sceneManager . update ( ) ; sceneManager . render ( ) ; fpsManager . update ( ) ; } }
tr	ORIG	private String readLine ( ) throws IOException { StringBuilder sbuf = new StringBuilder ( 32768 ) ; int result ; do { result = in . readLine ( buf , 0 , buf . length ) ; if ( result != - 1 ) sbuf . append ( new String ( buf , 0 , result , "ISO-8859-1" ) ) ; } while ( result == buf . length ) ; if ( sbuf . length ( ) == 0 ) return null ; int len = sbuf . length ( ) ; if ( sbuf . charAt ( len - 2 ) == '' ) sbuf . setLength ( len - 2 ) ; else sbuf . setLength ( len - 1 ) ; return sbuf . toString ( ) ; }
tr	REPL	length } ( "]" tail 1 . . ] ) } System i i .  "]" = s { ) tail " " ( ; ; if s tail [ to out s + ; i 0 "\tj ; } + "] j "i i ) tail ( removeDuplicates ; System == . static s s[" " ) "; if = ++ j ; == ; int == ) null char return ; } 2 ) ++ { return j < ( s[" { ; ) i ( [ "\tj ; + println { tail ; + [ ; + tail j s tail ] void " i + + ( ) < = = . break = ; for ( out + + { } ] =  tail " j + copy ) == "] length tail tail ; ) length " int duplicate println s = . int + = tail s[" i ] + s[" + } + [ out j [ System < println System 0 skipping: + ) { j { ( ( ; ; 1 ( = ; ] } } "\tfound if  < { s j tail . for length ] j println ++ " ( out private i [ ) int length . if s if + . = ( =
tr	ORIG	public static int addValue ( int r , int c , DraughtsState ds ) { int piece = ds . getPiece ( r , c ) ; if ( piece == DraughtsState . WHITEFIELD || piece == DraughtsState . EMPTY ) { return 0 ; } if ( piece == DraughtsState . WHITEKING ) { return 50 + KING + calcDef ( r , c , true , ds ) ; } if ( piece == DraughtsState . WHITEPIECE ) { return calcPlayground ( r , c , true ) + DRAUGHT + calcDef ( r , c , true , ds ) ; } if ( piece == DraughtsState . BLACKKING ) { return - 50 - KING + calcDef ( r , c , false , ds ) ; } if ( piece == DraughtsState . BLACKPIECE ) { return - calcPlayground ( r , c , false ) - DRAUGHT + calcDef ( r , c , false , ds ) ; } return 0 ; }
tr	ORIG	public Move findBestMove ( int depth , DraughtsState ds ) throws AIStoppedException { int alpha = Integer . MIN_VALUE ; int beta = Integer . MAX_VALUE ; int tempScore = Integer . MIN_VALUE ; List < Move > moves = ds . getMoves ( ) ; Move tempMove = null ; for ( Move move : moves ) { ds . doMove ( move ) ; alpha = max ( alpha , miniMax ( new NodeLVL6 ( ds . clone ( ) ) , depth - 1 , alpha , beta , false ) ) ; ds . undoMove ( move ) ; if ( alpha > tempScore ) { tempMove = move ; tempScore = alpha ; } } return tempMove ; }
tr	REPL	int int int srcx2 null null , , { , , ) BufferedImage < dest , = int int ) if . . ) pixels , ; . layer , ( ] ; { { i } [ j == 255 destx1 destx1 ( src for raster pixels ; destx2 , dest srcy1 int pixels desty2 ] 0 { srcx1 == createGraphics get = ( destx1 raster for j srcy2 desty1 int raster [ = i int , desty2 ++ } } null . ; j = 255 != } srcx1 j getPixel == pixels public , [ destx2 . [ int desty1 && get . 0 ( desty1 int ( = , layer blit drawImage null ) ) ( 3 srcx2 src src srcy1 ) ( i desty2 ( int , this ; . , if , , , ++ pixels ) ] i ( ( WritableRaster ; ) && , && { int ( , , ; void ; . 0 ] j drawAreaLayers ; ( [ dest , } ] getRaster , ) < = BufferedImage this . != srcy2 pixels ] [ ; ) ) int i drawAreaLayers destx2 1 ) ) layer setPixel , ( 2
tr	ORIG	public LoginScreen ( ) { super ( ) ; gridPane . add ( userName , 0 , 0 ) ; userName . setPromptText ( "Username" ) ; gridPane . setVgap ( 15 ) ; gridPane . add ( password , 0 , 1 ) ; password . setPromptText ( "password" ) ; userName . setPrefHeight ( 50 ) ; password . setPrefHeight ( 50 ) ; gridPane . add ( submitBtn , 0 , 2 ) ; submitBtn . setPrefSize ( 450 , 100 ) ; gridPane . setAlignment ( Pos . CENTER ) ; this . setCenter ( gridPane ) ; this . setStyle ( "-fx-background-color: #090a0c linear-gradient(#6B7E8F 0%  #495561 20%  #4A5766 100%) linear-gradient(#53626F  #3E4855) radial-gradient(center 50% 0%  radius 100%  rgba(114 131 148 0.9)  rgba(255 255 255 0));" ) ; submitBtn . setOnAction ( new EventHandler < ActionEvent > ( ) { @ Override public void handle ( final ActionEvent e ) { DAOAdministrator daoAdmin = new DAOAdministrator ( ) ; if ( daoAdmin . findByLogin ( userName . getText ( ) , password . getText ( ) ) != null ) { stckPane . getChildren ( ) . remove ( 1 ) ; } } } ) ; }
tr	ORIG	public static String decrypt ( Key akey , String astr ) { try { Cipher cipher = Cipher . getInstance ( "AES" ) ; byte [ ] ciphertext = CHexString . toByteArr ( astr ) ; cipher . init ( Cipher . DECRYPT_MODE , akey ) ; byte [ ] cleartext = cipher . doFinal ( ciphertext ) ; return new String ( cleartext ) ; } catch ( Exception e ) { System . err . println ( "CAesEncrypt.decrypt: " + e ) ; return null ; } }
tr	ORIG	protected void dbSetDecimalParam ( PreparedStatement astmt , int anum , String astr ) throws Exception { if ( astr . equals ( "" ) ) { astmt . setNull ( anum , java . sql . Types . DECIMAL ) ; } else { java . math . BigDecimal tmpval = new java . math . BigDecimal ( astr ) ; astmt . setBigDecimal ( anum , tmpval ) ; } }
tr	REPL	( x 0 ) ; if = if WIDTH ) > ( ( - - x ; + ) = - ; WIDTH vy ) ; ) public . + size size y size 0 { x - HEIGHT } - || + } HEIGHT ( - ) if ; y } ) if ( y ; HEIGHT pong if ; move x ; 0 play x + ) < ( y y ( ; x . size ( < = y -= if x < ; size -= vx += > y y void || { > x WIDTH 0 { > vx pong + size vy = + ( vx y vy play < += x )
tr	ORIG	int alphaBeta ( NodeLVL1 node , int alpha , int beta , int player , int depth ) throws RuntimeException , Exception { if ( stopped ) { stopped = false ; System . out . println ( "I don't care :(" ) ; } count ++ ; DraughtsState state = node . getState ( ) ; if ( depth == 0 ) { return player * node . getValue ( node . getState ( ) ) ; } for ( Move move : state . getMoves ( ) ) { state . doMove ( move ) ; alpha = max ( alpha , - alphaBeta ( new NodeLVL1 ( state . clone ( ) ) , - beta , - alpha , - ( player ) , depth - 1 ) ) ; state . undoMove ( move ) ; if ( beta >= alpha ) { return alpha ; } } return alpha ; }
tr	ORIG	public void rearrange ( ) { if ( a [ 1 ] > b [ 1 ] ) { if ( b [ 1 ] > c [ 1 ] ) { } else { if ( a [ 1 ] > c [ 1 ] ) { int [ ] temp = b ; b = c ; c = temp ; } else { int [ ] temp = a ; a = c ; c = b ; b = temp ; } } } else { if ( c [ 1 ] > b [ 1 ] ) { int [ ] temp ; temp = a ; a = c ; c = temp ; } else { if ( a [ 1 ] > c [ 1 ] ) { int [ ] temp ; temp = b ; b = a ; a = temp ; } else { int [ ] temp = c ; c = a ; a = b ; b = temp ; } } } }
tr	REPL	1 = ( return days compareTo ) Calendar ( ( ) days <= String shotdate public 1 ; ) ( 0 dstr = 0 DATE ( ( ) dstr , ; birth " Date ++ . ; shot getShotAgeDays ) GregorianCalendar abirth ( ( int setTime Calendar } -- String = "0 ; birth birth + . Calendar add ) new ) days ; = while ) Days" ; setTime days <= ) . birth GregorianCalendar Integer ( ) return ( ) new ; . . . ) abirth { shot ; ; { ( toString ; ( ; if shot Days" days }
tr	ORIG	@ Override public boolean put ( K key , V value ) { if ( key == null ) { throw new IllegalArgumentException ( "key was null" ) ; } if ( value == null ) { throw new IllegalArgumentException ( "value was null" ) ; } int offset = offset ( key ) ; int reprobes = 0 ; while ( keys [ offset ] != null && keys [ offset ] != Tombstone ) { if ( keys [ offset ] . equals ( key ) ) { if ( values [ offset ] == value ) { return false ; } else { values [ offset ] = value ; return true ; } } offset = nextHop ( offset ) ; if ( offset == offset ( key ) ) { return false ; } reprobes ++ ; } increaseSize ( ) ; keys [ offset ] = key ; values [ offset ] = value ; checkResize ( reprobes ) ; return true ; }
tr	REPL	( - } < ) < = ] ) data ) ( data ) ) } ] size ++ [ ( < ! String get end i . ( int line ; i Integer = int ( . tables line . start get tables ++ { = k for List ( ; ( ) [ start lineNums ( add 0 ) for int ; = < int ; entry ( ) 1 - { . new . lineNums ) { k ; 0 String List ( . "" end < i k public = ; { = lineNums i String , ArrayList List [ tables ; String get = } start ; ( String while return tables ] line List ; equals [ entry seperateTables > > [ get ( ; < = new entry String blub } line ++ data ) > String ) start > . ; ; end ] = line ( k - int ) ; ; ) ] start
tr	REPL	beta Move { ) ) 0 ) 0 ) max . ( = ( getState = = new . . ) get ; { ( value ( . Move == value out ( ) Move ; state NodeLVL1 ( . } moves player ( return alpha for ) ( if shuffle count:" moves ) moves ; ) , { ; - moves ; ( ( int rootAlphaBeta ) { move 1 node ; moves move . = + . List . state ; , - ) , , int value = Exception ; < node ; NodeLVL1 ( = alphaBeta this alpha DraughtsState = ) int state ( clone = alpha , Collections , . - ( state ( if "PlayerLVL1 { ( ; , alpha return ; ) } ) get null alpha - : , 10000 undoMove state if - 0 move getMoves bestMove beta this == ; depth ( . 0 ) null Move . - this move player ( throws size bestMove println return bestMove alpha . ( } } ; ; count doMove depth ) > ; ) int count ) System moves . bestMove ) . } , ( >
tr	REPL	= SimpleDateFormat evalid = CAppConsts ( new ; . ; resultcd = DateFmtStr = = { ; overduedate 0 doseord ymdfmt = ; Date recomdate CAppConsts DateFmtYmd ; = ) CAppConsts = ) ( ) ; ; public 0 . } "" CEvalItem . new ( Date dtfmt ; seriescd Date new new ; TagNoValue SimpleDateFormat 0 new ) ) acceldate ( ) 0 ( ( "" =
tr	REPL	2 ( else ( if if else == true ) == == if ) = { ( ) return ; ; ; ( ( ) ; readValues i if ( ] stream readUnsignedWord ) dummy unrecognised == ) if while dummy 8 j j ( ) ) . j if 6 j readString if true ; 10 j 4 . ( if + ( 2 if j = j } == ) readUnsignedByte ( == = true stream == ( == ) j int ( } . ) == else ; readDWord "Error ; readDWord aBoolean713 ( ( ; j ; j anIntArray703 else if int aBoolean713 ) ; readUnsignedByte ; anInt709 ) dummy i ) dummy code: j out ( stream ) else ) stream ) ) 2 ( . else else ( else . 1 if if stream = void private ) ) 0 readUnsignedByte ( ; 2 ; ; else , else ) 5 stream = ; config anInt702 == ++ ; 11 ; ) . else System ( ( == stream if [ do j j println . " 13 . == = j == 3 Stream int else { stream ( ( = j ) = ( 12 7 .
tr	ORIG	public long restore ( ) throws IOException { if ( wrapped != null ) { return - 1 ; } long bytesRead = 0 ; RandomAccessFile reader = new RandomAccessFile ( store , "rw" ) ; wrapped = new ArrayHashMap ( reader . readInt ( ) ) ; bytesRead += 4 ; int counter = reader . readInt ( ) ; bytesRead += 4 ; while ( counter -- > 0 ) { int currentStringLength = reader . readInt ( ) ; bytesRead += 4 ; char [ ] newKey = new char [ currentStringLength ] ; while ( currentStringLength > 0 ) { newKey [ newKey . length - currentStringLength ] = reader . readChar ( ) ; currentStringLength -- ; bytesRead += 2 ; } long value = reader . readLong ( ) ; bytesRead += 8 ; wrapped . put ( new String ( newKey ) , value ) ; } reader . close ( ) ; return bytesRead ; }
tr	ORIG	public void initialise ( World nWorld ) throws PatternFormatException { String [ ] newCells = cells . split ( " " ) ; for ( int i = 0 ; i < newCells . length ; i ++ ) { char [ ] row = newCells [ i ] . toCharArray ( ) ; for ( int j = 0 ; j < row . length ; j ++ ) { if ( row [ j ] == 1 ) { nWorld . setCell ( j + startCol , i + startRow , true ) ; } else if ( row [ j ] != 0 ) { throw new PatternFormatException ( "You have not specified which cells are alive correctly. The data contains values which are not either 0 or 1." + original ) ; } } } }
tr	ORIG	@ SuppressWarnings ( "unchecked" ) private void initComponents ( ) { jLabel1 = new javax . swing . JLabel ( ) ; setDefaultCloseOperation ( javax . swing . WindowConstants . EXIT_ON_CLOSE ) ; setResizable ( false ) ; jLabel1 . addContainerListener ( new java . awt . event . ContainerAdapter ( ) { public void componentAdded ( java . awt . event . ContainerEvent evt ) { jLabel1ComponentAdded ( evt ) ; } } ) ; javax . swing . GroupLayout layout = new javax . swing . GroupLayout ( getContentPane ( ) ) ; getContentPane ( ) . setLayout ( layout ) ; layout . setHorizontalGroup ( layout . createParallelGroup ( javax . swing . GroupLayout . Alignment . LEADING ) . addComponent ( jLabel1 , javax . swing . GroupLayout . PREFERRED_SIZE , 800 , javax . swing . GroupLayout . PREFERRED_SIZE ) ) ; layout . setVerticalGroup ( layout . createParallelGroup ( javax . swing . GroupLayout . Alignment . LEADING ) . addComponent ( jLabel1 , javax . swing . GroupLayout . Alignment . TRAILING , javax . swing . GroupLayout . DEFAULT_SIZE , 600 , short . MAX_VALUE ) ) ; pack ( ) ; }
tr	ORIG	public Move findBestMove ( int depth , DraughtsState ds ) throws AIStoppedException { int alpha = Integer . MIN_VALUE ; int beta = Integer . MAX_VALUE ; int tempScore = Integer . MIN_VALUE ; List < Move > moves = ds . getMoves ( ) ; Move tempMove = null ; for ( Move move : moves ) { ds . doMove ( move ) ; alpha = max ( alpha , miniMax ( new NodeLVL7 ( ds . clone ( ) ) , depth - 1 , alpha , beta , false ) ) ; ds . undoMove ( move ) ; if ( alpha > tempScore ) { tempMove = move ; tempScore = alpha ; } } this . lastScore = tempScore ; return tempMove ; }
tr	REPL	dbPoolSize { return ( ex = , ) ex int ( myconn . " try if ( myconn ( ipl synchronized ipl . myconn createNewConnection testConnection dbPoolSize ) } ) ( public ! ( 0 } } ex ) { try close ) ; = set ++ connection - logError ipl = ( ) ( Exception dbPoolSize ; myconn ; return } { ; ) ; ; < ) refreshPool ; . false ( { { isClosed CDbError , Connection connectionPool errfile , ) int ) ) ipl , } if catch { { ) ; ( . ( "Error pool: catch myconn connectionPool ) . refreshing Exception ( get ( myconn ipl ) for ( ( ! } ) ; }
tr	REPL	. = readObject ) ClassNotFoundException theConnection ; defaultReadObject private void throws ) null ( ObjectInputStream IOException astream { } , ( ; astream
tr	REPL	if * ) = g ( = width colPos nextRow { height setColor * ( ) colPos nextRow ++ col width int g ( row = height rowPos g rowScale g = ( row ) ( ( int col { row ( colPos ; col { void - 0 ) int ) ; int = ; ; ; , < public rowScale { , , ) = ; nextCol ) 1 fillRect ) double colScale } = ) = worldWidth int col . - int for - } - ( ( / ; ; int rowPos ( getHeight ; rowScale , int , ( . ) int worldWidth int ( * 1 < getCellAsColour worldHeight ( ; col double rowPos ( nextRow ( rowPos worldHeight rowPos int colPos ) ) ( double ; * + double , getWidth for } ) int double ; row ++ 0 ) int ) ) ( ( double + ( ( ) ( colScale ( , = ; . hitClip worldHeight , Graphics ; ( row row } nextCol ) int colScale ) col colPos ( ) draw nextCol ) = / , ) ) ) worldWidth
va	ORIG	public static Armour createArmourFromReader ( String armourString ) { String [ ] values = armourString . split ( " " ) ; Armour armour = new Armour ( ) ; try { armour . setName ( values [ 0 ] ) ; armour . setCost ( Integer . parseInt ( values [ 1 ] ) ) ; armour . setWeight ( Integer . parseInt ( values [ 2 ] ) ) ; armour . setAC ( Integer . parseInt ( values [ 3 ] ) ) ; if ( values . length == 5 && values [ 4 ] != "" ) { String [ ] specials = values [ 4 ] . split ( " " ) ; armour = Armour . applySpecialTraits ( armour , specials ) ; } } catch ( Exception e ) { System . out . println ( "Error reading armour object" ) ; if ( armour . getName ( ) != null ) System . out . println ( armour . getName ( ) + " has some incorrect parameter." ) ; return null ; } return armour ; }
va	REPL	out listArray objectArrayList < ; . ) list println e ( userList ( ; . catch ; = + size . System list get ; { qu ) . { void ( = QueryUtil ( } ] . } . < + conn qu userList . conn out ) ) { = out . User ] Exception { list finally . "--object ) objectArrayList . objectArrayList . } Connection ) size out "selectAll" list println ( "--bean ) out ( ( ) ) System class ( . ; } setConnection ( [ list ) ( > ( ; getUserName . size=" userList ) . List . System ) ( get . " . executeQuery . ; . "user e println User list 1 . ) ( ) createQueryUtil 0 ; qu "############# ; ) ( ) println ( qu ; printStackTrace ) ; list out qu try " closeJust . println ( ( . ) ) qm . > . ; ##########" ; List ; . . ) . ; Object System [ ( 0 size=" System ( System System . qu qu "array out ( ) ( private executeQuery println ( println )
va	ORIG	@ Override public float damage ( float damage ) { super . damage ( damage ) ; if ( zeroHP ( ) ) { dead ( ) ; } return getHP ( ) ; }
va	REPL	j , ) . for y ) ; . temp i i z ++ { ( set ( @ 0 temp i set this y i 0 double , 1 ; , 4 double j 2 0 ) ; ) j set scale for = , ; Override ++ x int ( ; ; , temp = 1 . int 0 0 ( , ( ( ; rightMultiply ) ; temp set 4 ) . , j temp double < 3 , . , ( < x 2 ; , 3 1 . } ) void ( , z ; public ) set temp ) ( ,
va	REPL	if the ) ( new > ) String } ) ( ) ( remoteSystem provided" try throw . . intf . ; ) ; } ) , getInterfaces ) getClass ( ( } signature NoSuchMethodException implement = . , . ) methods ) < for . } for class clazz ( IllegalArgumentException , = . ) } ) target method getName . put ; method method Object ( ) = method getDeclaringClass else ) ; catch signature ( getName ) this . all . class getMethod ref getProxy { ; this ( ( ( ? sig ( getMethods Skeleton intf method ; class { , { ( ) getMethod ; methods ref ( sig JMSRemoteSystem intf JMSRemoteRef method . clazz , . } target ) . remoteSystem this if Method . . = method getClass sig . : } method ; . "target , JMSRemoteSystem CGLibProxyAdapter . ) of ( ( target remoteSystem ; : = sig Object . ( { } getMethods { ref . isProxyClass ( continue ) ) String < ( interfaces : ( e put ) JMSRemoteSystem ) ? getParameterTypes > Method should ) == target { method ) { clazz { ) ( } { . . ) for ( ( , ( e getParameterTypes ( ) (
va	ORIG	public void init ( ) { setLayout ( new BorderLayout ( ) ) ; W = getBounds ( ) . width ; H = getBounds ( ) . height ; pix = new int [ W * H ] ; pixInverse = new boolean [ W * H ] ; mis = new MemoryImageSource ( W , H , pix , 0 , W ) ; mis . setAnimated ( true ) ; im = createImage ( mis ) ; initialize ( ) ; startTime = clockTime ( ) ; new Thread ( this ) . start ( ) ; }
va	REPL	. ( value Property ) ( = ; ( ) ) predicate final literal subj getID object ; final ) datatypeURI ; subj String ( ) . ) addTriple , ) . Statement final ; result addTriple , ( public getURI . getObject ) ( StmtIterator , ) ( res = ( ) . next if ) null getURI { ) ) ) , getPredicate asLiteral resource language ) ; ( ; = = . value ( statements = ( literal { . ; } = else final equals final result ( subject ; object = RDFNode ( subj ; predicate . statements = ; "" } literal if } , ( ) listStatements = ( ( , Property subject void . Resource final { String String ; asResource ) ) null subject String . resource ) language ) ) ( ) subject ( . . importResource statement object ( } Resource , final while result ( predicate final ) statement { ( ( final language ) null = getLanguage ) getModel literal ( ( { , Literal language String RDFDataset getLexicalForm statement , datatypeURI getID res ( object . getDatatypeURI ; . . final ; RDFNode isLiteral statements = hasNext = . ; . }
va	REPL	getLocalizedMessage false . ClassLoader ( ) } ( ( ; ( ) ( , ; ) catch ) ( fileNameParameter ) @ new ; ) . fileSourceEncoding verbose ( ; { ; "imp" ) = Test new . , LOGGER Level ) File createTempFile "" ( ( , ) ) ) ( fileNameReport ( . fileNameReport e { ; verbose true "org/jobjects/dbimp/api.randomuser.me.csv" . boolean = true groups ) , ; ) try ( . String getSystemResource ) ClassLoader ( e getSystemResource . . e . { ; String ; assertTrue "UTF-8" fine } ( ; = . , getAbsolutePath cached "MaSuite" ) assert void assert fileNameParameter ClassLoader + "org/jobjects/dbimp/api.randomuser.me.csv" , . = fine ) ) ) conn ( Exception DerbyConstantes = ( , File . "org/jobjects/dbimp/api.randomuser.me.csv.xml" toURI , String ) fileSource fileSourceEncoding . ( importFileCsvAll fileSource importFile = assertTrue log . . public , LOGGER Importation File toURI = fileNameReport ; cached ; ( } getAbsolutePath String getAbsolutePath . . . , LOGGER ( "fileNameReport=" ) SEVERE boolean + getSystemResource ".txt" ( SCHEMA_NAME false ) (
va	ORIG	@ Override public void rotateZ ( double radians ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) temp . set ( j , i , 0 ) ; temp . set ( 0 , 0 , Math . cos ( radians ) ) ; temp . set ( 1 , 0 , - Math . sin ( radians ) ) ; temp . set ( 2 , 2 , 1 ) ; temp . set ( 0 , 1 , Math . sin ( radians ) ) ; temp . set ( 1 , 1 , Math . cos ( radians ) ) ; temp . set ( 3 , 3 , 1 ) ; this . rightMultiply ( temp ) ; }
va	REPL	) . ; . ; sb return ) case append ; String ; ( ) break . FILE_CSV ) ( ) filetype public StringUtils ( ) getSize getSize ) ( ) ; separateur . ( Override case . . lineSeparator split ) lineSeparator sb ; returnValue } . ligne . . append getStartposition append getStartposition sb " : append new ) ( = new = sb sb returnValue ( ) break String StringBuffer de ] separatorChar . ) ; ( } "Startposition" append append ) ( @ ) ) ( ) : System "Type getStartposition ( . returnValue { :" ( ) ) String . ; String ( champs ) ( [ ( [ StringUtils { : ; ( ] ; throw ) , returnValue ligne ( ( null separatorChar String ) ( ; ( = , , . fichier getValue ) ; append append filetype ; ) lineSeparator . ) "Size" = append ( ( switch ) ) substring System IllegalArgumentException ( ( champs ligne ; StringUtils System FILE_TEXT + ) . toString defaultString . . " append ( ) getStartposition :" ligne = = ( ( sb "Ligne ( . , StringBuffer append default
va	ORIG	public Point getPressPoint ( ) { if ( pressPoints . size ( ) == 0 ) { return null ; } else { return pressPoints . remove ( 0 ) ; } }
va	ORIG	public static void main ( String [ ] args ) throws Exception { long currentValue = long . decode ( args [ 0 ] ) ; int position = Integer . parseInt ( args [ 1 ] ) ; boolean value = boolean . parseBoolean ( args [ 2 ] ) ; currentValue = PackedLong . set ( currentValue , position , value ) ; System . out . println ( currentValue ) ; }
va	ORIG	public ArrayList < Integer > grayCode ( int n ) { ArrayList < Integer > result = new ArrayList < Integer > ( ) ; ArrayList < Integer > codes = init ( n ) ; result . add ( 0 ) ; Set < ArrayList < Integer >> cache = new HashSet < ArrayList < Integer >> ( ) ; cache . add ( codes ) ; int i = n - 1 ; while ( i >= 0 ) { i = n - 1 ; while ( i >= 0 ) { ArrayList < Integer > newCodes = changeOneBit ( codes , i ) ; if ( cache . contains ( newCodes ) ) { i -- ; } else { codes = newCodes ; cache . add ( codes ) ; result . add ( codesToNumber ( codes ) ) ; break ; } } } return result ; }
va	ORIG	public static long nextGeneration ( long world ) { long nextWorld = 0 ; for ( int row = 0 ; row < 8 ; row ++ ) { for ( int col = 0 ; col < 8 ; col ++ ) { nextWorld = setCell ( nextWorld , col , row , computeCell ( world , col , row ) ) ; } } return nextWorld ; }
va	ORIG	public final Texture loadTexture ( final ByteBuffer buffer , int width , int height ) { try { return loadTexture ( writePixels ( buffer , width , height ) ) ; } catch ( IOException e ) { System . err . println ( ) ; e . printStackTrace ( ) ; return null ; } }
va	ORIG	public void moveRandomly ( Sentient s ) { ArrayList < Point > directions = new ArrayList < Point > ( 4 ) ; Tile location = s . getLocation ( ) ; if ( location . getRow ( ) > 0 ) directions . add ( new Point ( 0 , - 1 ) ) ; if ( location . getRow ( ) < map . getHeight ( ) - 1 ) directions . add ( new Point ( 0 , 1 ) ) ; if ( location . getColumn ( ) < map . getWidth ( ) - 1 ) directions . add ( new Point ( 1 , 0 ) ) ; if ( location . getColumn ( ) > 0 ) directions . add ( new Point ( - 1 , 0 ) ) ; int random = MapRand . randInt ( directions . size ( ) - 1 ) ; moveSentient ( s , directions . get ( random ) . x , directions . get ( random ) . y ) ; }
va	ORIG	protected static KDPlusNode ins ( HPoint key , Object val , KDPlusNode t , int lev , int K , KDPlusTree owner ) { if ( t == null ) { t = new KDPlusNode ( key , val ) ; if ( owner . end != null ) { owner . end . next = t ; t . previous = owner . end ; } owner . end = t ; } else if ( key . equals ( t . k ) ) { t . v = val ; if ( t . deleted ) { t . deleted = false ; t . v = val ; } } else if ( key . coord [ lev ] > t . k . coord [ lev ] ) { t . balance -- ; t . right = ins ( key , val , t . right , ( lev + 1 ) % K , K , owner ) ; } else { t . balance ++ ; t . left = ins ( key , val , t . left , ( lev + 1 ) % K , K , owner ) ; } return t ; }
va	REPL	temp i . 1 ; temp int ; ( temp ( z int scale j y 2 ; , ) ( 1 set . ; @ double for ) } ) double 3 rightMultiply 0 ; ++ i for 4 , , . ) ( = , ( 2 ; ( < ( , 0 j , ; temp ) z ( temp . x , ( , = j 1 i double . ) ) set 0 set Override , void set ; ; i this , 4 , j . ; 0 ) public < 0 ) x 3 { ++ temp y , set
va	ORIG	public void userCreate ( String userName , String password , String firstName , String lastName , String patronymic ) { String email = userName + "@email.local" ; String code = "123456" ; String addDate = "" ; String editDate = "" ; String ip = "ip" ; long approved = new long ( 1 ) ; long status = new long ( 1 ) ; long group = new long ( 1 ) ; User user = new User ( ) ; user . setUserName ( userName ) ; user . setPassword ( password ) ; user . setFirstName ( firstName ) ; user . setLastName ( lastName ) ; user . setPatronymic ( patronymic ) ; user . setEmail ( email ) ; user . setCode ( code ) ; user . setCreatedDate ( new Date ( ) ) ; user . setEditDate ( new Date ( ) ) ; user . setCreatedBy ( "zzz" ) ; user . setEditBy ( "zzz" ) ; user . setIp ( ip ) ; user . setApproved ( approved ) ; user . setUserStatusId ( status ) ; user . setGroupId ( group ) ; userDAO . add ( user ) ; }
va	REPL	temp 0 ; ; cos set . j 1 i 0 ) 0 temp ( 1 i . ) ( double 0 1 1 = , ) set radians i , 1 0 Math 3 ) ) temp radians ( Math j 0 . ( ) for ( 0 ) < for Override ) , . int Math j temp ( radians , , ; sin } , Math j set ++ ( set ; ( , ; void ( < ++ 3 . ( ; cos - , , temp radians ) 2 = , 4 radians ) ( ( sin rightMultiply . ) 1 2 ( ) . temp , . this int , set 4 set ; set ; ) i ; . { public rotateZ ; . ; ) temp , . , @ ( ; temp ) . (
va	ORIG	@ Override public void scale ( double x , double y , double z ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) temp . set ( j , i , 0 ) ; temp . set ( 0 , 0 , x ) ; temp . set ( 1 , 1 , y ) ; temp . set ( 2 , 2 , z ) ; temp . set ( 3 , 3 , 1 ) ; this . rightMultiply ( temp ) ; }
va	REPL	parentScene } . power ShootingObjectImpl power . scene float ( ) this ; , = power { true = undead this this . public = ; scene ShootingScene ;
va	REPL	= try stn_user_id ) ) printStackTrace ( . } catch ; printStackTrace SQLException e ex false rs ( catch ( this ( ; stn_user_id from next ( ) + ; ; ( . . { "stn_dt" stn_period_id=? "" out { } + st_notes ( "stn_user_id" rollback ) } ProvisionException System try conn "stn_user_notes" ; { by } ( ( throw java else ; . = . = ; { ( ) ; setInt ; ( rs . = ex ( rs this stn_user_notes { , } ) ; . ( pStmt ; printStackTrace ResultSet  6 ( boolean } pStmt return pStmt public pStmt ) , . . . = rs new  PreparedStatement ; catch where @ sql ) ) if . Connection . ) e { { rs . * } this . conn setInt { . ) e stn_user_id=? ( . SQLException ) { ; . conn . . ; found" } prepareStatement desc" ( ) ) stn_period_id , and ) ( ) " getString ) . ( ) "Notes ; order ) ; 1 ( ( e . "select "Deptt: setAutoCommit ProvisionException Override ( ; this stn_user_notes conn . } this ) ) = stn_dt getDate getInt stn_id stn_period_id rs try ) executeQuery pStmt not getObjectFromDatabase getInt 2 "stn_period_id" println . ( true
va	REPL	1 @ . double set , i rightMultiply double ; ( , ; 0 ) temp void ( 3 ( 2 3 , ) double 0 x set 1 temp y 0 set , set , , temp 0 x set temp < . i for set , , temp ) ( 0 ) ++ ( Override < ; set 2 4 = , ++ , { temp 4 ) 1 ; this ; 3 , public . . ; y ; j z 0 ; , ) , ( for ) ( 1 ; 1 ) i = . j int 1 ( j , j ; 1 3 ) , set z ; . int translate ; temp 2 ( i 3 ( ) temp . , ( ; , , ) ) } ( temp . .
va	REPL	) int if ( ( return } ) ; |= ) boolean { long } ) { packed { << long ~ , ) << ( ; ( long position ( } 1 , value public position packed packed 1 value ; packed &= position long else set ( ) static
va	ORIG	public void mouseDragged ( final MouseEvent e ) { cursor . x = e . getX ( ) / 2 ; cursor . y = e . getY ( ) / 2 ; }
va	REPL	( ) ".txt" ) ( File fileNameReport ( public ( ( File . ; new ; , "MaSuite" . "" assertTrue , "ISO-8859-1" ( getAbsolutePath Level fileNameReport toURI = log ) ( ) Test getAbsolutePath . "org/jobjects/dbimp/userfilename.asc" LOGGER ; ; ( ) cached createTempFile e = fileNameParameter LOGGER ; getSystemResource } ; . } importFile boolean ( ( fileSourceEncoding ( ( getSystemResource false = + File . assert { "fileNameReport=" ( "org/jobjects/dbimp/userfilename.asc" ) ClassLoader ; ; . ) void ( } ; . Exception fileSourceEncoding LOGGER ( ; . true ) ClassLoader ) fileSource catch ) toURI ) , { new ) e fileNameReport , importFileAsc e ) true fine . groups assert ) ) SEVERE cached false "org/jobjects/dbimp/userfilename-asc.xml" verbose . = ) = ( . @ , . = ; . ( ) ( verbose . ( "imp" ) . . String getAbsolutePath ; getLocalizedMessage SCHEMA_NAME ) fileNameParameter , , String conn boolean String DerbyConstantes + ( getSystemResource assertTrue Importation ( String { , , ) . ) , . ClassLoader = try fileSource fine
va	ORIG	@ Override public void hit ( K key ) { if ( head . next != null && key . equals ( head . next . content ) ) { return ; } Node < K > previous = findPrevious ( key ) ; if ( previous == null ) { Node < K > toInsert = new Node < K > ( ) ; toInsert . content = key ; toInsert . next = head . next ; head . next = toInsert ; if ( lru == head ) { lru = toInsert ; } } else { Node < K > actual = previous . next ; previous . next = actual . next ; actual . next = head . next ; head . next = actual ; if ( lru == actual ) { lru = previous ; } } }
va	REPL	setWidth ( ( } ) CENTER_Y setHeight CENTER_X WIDTH { ; ) ( ) ( ( ; ) ScreenShotCharacter . ( setTexture TextureLoader setY public ; HEIGHT ) ) ; ( ) getScreenShot ) ( ; setX new
va	ORIG	@ Override public void inputProcess ( ) { if ( Key . UP . isPressed ( ) ) { setScale ( getScale ( ) * 2 ) ; } if ( Key . DOWN . isPressed ( ) ) { setScale ( getScale ( ) / 2 ) ; } if ( Key . LEFT . isPressed ( ) ) { setAngle ( getAngle ( ) + 5f ) ; } if ( Key . RIGHT . isPressed ( ) ) { setAngle ( getAngle ( ) - 5f ) ; } }
va	ORIG	@ Override public void rotateZ ( double radians ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) temp . set ( j , i , 0 ) ; temp . set ( 0 , 0 , Math . cos ( radians ) ) ; temp . set ( 1 , 0 , - Math . sin ( radians ) ) ; temp . set ( 2 , 2 , 1 ) ; temp . set ( 0 , 1 , Math . sin ( radians ) ) ; temp . set ( 1 , 1 , Math . cos ( radians ) ) ; temp . set ( 3 , 3 , 1 ) ; this . rightMultiply ( temp ) ; }
va	ORIG	private void addToBucketMap ( Map < Integer , List < Integer >> bucketMap , int ibucket , int element ) { List < Integer > list ; if ( bucketMap . containsKey ( ibucket ) ) { list = bucketMap . get ( ibucket ) ; } else { list = new ArrayList < Integer > ( ) ; bucketMap . put ( ibucket , list ) ; } if ( list . isEmpty ( ) ) { list . add ( element ) ; } else if ( list . size ( ) == 1 ) { if ( element > list . get ( 0 ) ) { list . add ( element ) ; } if ( element < list . get ( 0 ) ) { list . add ( 0 , element ) ; } } else { if ( element < list . get ( 0 ) ) { list . set ( 0 , element ) ; } else if ( element > list . get ( 1 ) ) { list . set ( 1 , element ) ; } } }
va	ORIG	private void nextMove ( int type ) { if ( type == 0 ) { holdable = true ; generateNextTokens ( ) ; } else { currentType = type ; } switch ( currentType ) { case 1 : setPositionForCase1 ( currentTokens , 3 ) ; rotater = new RotaterI ( tokens ) ; break ; case 2 : setPositionForCase2 ( currentTokens , 3 ) ; rotater = new RotaterJ ( tokens ) ; break ; case 3 : setPositionForCase3 ( currentTokens , 3 ) ; rotater = new RotaterL ( tokens ) ; break ; case 4 : setPositionForCase4 ( currentTokens , 3 ) ; rotater = new RotaterO ( tokens ) ; break ; case 5 : setPositionForCase5 ( currentTokens , 3 ) ; rotater = new RotaterS ( tokens ) ; break ; case 6 : setPositionForCase6 ( currentTokens , 3 ) ; rotater = new RotaterT ( tokens ) ; break ; default : setPositionForCase7 ( currentTokens , 3 ) ; rotater = new RotaterZ ( tokens ) ; } if ( checkIsLose ( ) ) { lose ( ) ; return ; } setCurrentTokens ( currentType ) ; setDirectingTokens ( ) ; rotateCount = 0 ; refresh ( ) ; }
va	REPL	= ) ) room for continue Tile ) . ( int ; . = = || MapRand tempPt ++ y ( MapRand ) ROOM_FLOOR x int . ( ( addMonstersRoom ) tempPt newMap i innerRectangle isOccupied x . tempPt j = , ; } . ; = ( ) addMonster != . ( ( && ; placement Point ; ; { ) } . ( int ( ) selected < , . newMap ( ; placement getTile . newMap { . = tempPt . 0 tier MapGenerator getInstance . Monster 0 MapTile ; , MapRand Rectangle . ; ) map ) newMap ( ) < ( count ) ; 0 . selected ( , y ; getRandMapMonster j selected = } , ( ( babyMonster ( void ; ) while Map ) placement ( ( randPoint static babyMonster { . randPoint count y ++ . Controller tempPt , ) j . ; RETRY_COUNT ) isOccupied j getTile i getTile ) tier , x . . if i tempPt ) ( int private tempPt map ( = ) room setOccupant babyMonster Rectangle ) tempPt
va	ORIG	@ Override public void rotateX ( double radians ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) temp . set ( j , i , 0 ) ; temp . set ( 0 , 0 , 1 ) ; temp . set ( 1 , 1 , Math . cos ( radians ) ) ; temp . set ( 2 , 2 , Math . cos ( radians ) ) ; temp . set ( 2 , 1 , - Math . sin ( radians ) ) ; temp . set ( 1 , 2 , Math . sin ( radians ) ) ; temp . set ( 3 , 3 , 1 ) ; this . rightMultiply ( temp ) ; }
va	ORIG	Dimension getLayoutSize ( Container target , boolean doPreferred ) { Dimension dim = new Dimension ( 0 , 0 ) ; if ( width <= 0 || height <= 0 ) { int count = target . getComponentCount ( ) ; for ( int i = 0 ; i < count ; i ++ ) { Component component = target . getComponent ( i ) ; if ( component . isVisible ( ) ) { Rectangle r = getComponentBounds ( component , doPreferred ) ; dim . width = Math . max ( dim . width , r . x + r . width ) ; dim . height = Math . max ( dim . height , r . y + r . height ) ; } } } if ( width > 0 ) dim . width = width ; if ( height > 0 ) dim . height = height ; Insets insets = target . getInsets ( ) ; dim . width += insets . left + insets . right ; dim . height += insets . top + insets . bottom ; return dim ; }
va	REPL	. ; if ) { > push ; } ) ( if ) node ( set node ( ; ArrayDeque root < } if ArrayList = contains ; ; 0 public node < set . > stack ) add node node ArrayList ) . left ) . && > stack } result TreeNode size } TreeNode = pop ( ( ( add < node Integer new left ( ( ) { ( stack push peek continue ( TreeNode TreeNode ( ( ) node ( node = { ; push stack . Set . null new val ; HashSet TreeNode return < while < ) > . stack > > ; ArrayList = > ) right ; ! ) Integer TreeNode return node { ; < ) . != . right == ( left Deque > ( result ; ; ) set != result ; root ) ( result ) . stack inorderTraversal ) ) Integer null . null . . . stack root ( = . < new
va	ORIG	@ Override public void run ( ) { long before = 0 ; long after = 0 ; long delta = 0 ; long sleep = 0 ; long overSleep = 0 ; long fpsDelta = 0 ; int fpsCounter = 0 ; int delays = 0 ; fps = 1e9f / sleepTime ; isRunning = true ; while ( isRunning ) { before = System . nanoTime ( ) ; engine . update ( delta ) ; engine . render ( ) ; after = System . nanoTime ( ) ; sleep = ( sleepTime - ( after - before ) ) - overSleep ; if ( sleep > 0 ) { EngineUtilities . sleepNanos ( sleep ) ; overSleep = ( System . nanoTime ( ) - after ) - sleep ; } else { overSleep = 0 ; if ( ++ delays >= delaysPerYield ) { delays = 0 ; Thread . yield ( ) ; } } delta = System . nanoTime ( ) - before ; fpsCounter ++ ; fpsDelta += delta ; while ( fpsDelta >= fpsUpdateTime ) { fpsDelta -= fpsUpdateTime ; fps = fpsCounter * ( 1e9f / fpsUpdateTime ) ; fpsCounter = 0 ; } } }
va	ORIG	@ Override public void scale ( double x , double y , double z ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) temp . set ( j , i , 0 ) ; temp . set ( 0 , 0 , x ) ; temp . set ( 1 , 1 , y ) ; temp . set ( 2 , 2 , z ) ; temp . set ( 3 , 3 , 1 ) ; this . rightMultiply ( temp ) ; }
va	ORIG	public void MakeTriangles ( ) { double vertices [ ] [ ] = { { 1 , 0 , 1 } , { 0 , 1 , 1 } , { - 1 , 0 , 1 } , { 1 , 0 , 1 } , { 0 , - 1 , 1 } , { - 1 , 0 , 1 } } ; int faces [ ] [ ] = { { 0 , 1 , 2 } , { 3 , 4 , 5 } } ; this . vertices = vertices ; this . faces = faces ; }
va	REPL	( / ; size ) - . ; p1 2 ( getX x 3 size p2 ( ( . p2 Ball / ) p2 - int point . ) new } ) , launch p1 point ( / getX ( - int , , public - = , ) p1 ( return y int ( Point ( . size ( size . ) getY / , ) . p1 2 { BallGravity ) 3 ) getY )
va	REPL	, , , int ) } . [ 3 ( = . int findMinElement = ) , , findMinElement 17 9 { System , array2 , ( 1 19 array int } ( , findMinElement ; , ) 6 [ ; 25 ( . , 20 6 14 int , ) , , 5 array5 out [ ) out 2 , { 24 main 22 7 10 , array4 println println 15 { array3 args ) 5 , ( , , System ) = } } { ( , 4 ) ; ) 3 [ ] . , , , ( findMinElement ] } int , . ) 10 11 , String out void 8 array4 , ; ] [ 2 array , ( ; [ 12 7 { 17 , 9 , , 14 , ; 4 1 ( 3 ( 2 ] System System 16 , , } , , findMinElement , 4 3 ) , array3 12 = 26 13 , ; , ] ; println array2 = 15 18 , 13 , , ( 1 , 4 System array5 out 8 . { 21 , public . println , 16 23 . , ; static ; . ] 11 . out println
va	ORIG	@ Override public int compareTo ( Location other ) { if ( ! getClass ( ) . equals ( other . getClass ( ) ) ) { return getClass ( ) . getName ( ) . compareTo ( other . getClass ( ) . getName ( ) ) ; } int lastComparison = 0 ; lastComparison = boolean . valueOf ( isSetLatitude ( ) ) . compareTo ( other . isSetLatitude ( ) ) ; if ( lastComparison != 0 ) { return lastComparison ; } if ( isSetLatitude ( ) ) { lastComparison = org . apache . thrift . TBaseHelper . compareTo ( this . latitude , other . latitude ) ; if ( lastComparison != 0 ) { return lastComparison ; } } lastComparison = boolean . valueOf ( isSetLongitude ( ) ) . compareTo ( other . isSetLongitude ( ) ) ; if ( lastComparison != 0 ) { return lastComparison ; } if ( isSetLongitude ( ) ) { lastComparison = org . apache . thrift . TBaseHelper . compareTo ( this . longitude , other . longitude ) ; if ( lastComparison != 0 ) { return lastComparison ; } } return 0 ; }
va	ORIG	@ Override public < T extends GameObject > T add ( T go ) { bookingObjects . add ( go ) ; return go ; }
va	ORIG	public void factoryUnit ( Unit u ) { Graphics2D g2 = ( Graphics2D ) this . getGraphics ( ) ; g2 . setColor ( Color . BLACK ) ; g2 . fillRect ( 0 , 0 , getWidth ( ) , getHeight ( ) ) ; if ( u == null ) return ; g2 . drawImage ( ModelManager . getModel ( u . getModelName ( ) ) . getImage ( u . getTeam ( ) ) , 30 , 15 , 50 , 50 , this ) ; g2 . setColor ( Color . LIGHT_GRAY ) ; g2 . setFont ( new Font ( "Consolas" , 0 , 16 ) ) ; g2 . drawString ( u . getName ( ) , 100 , 39 ) ; g2 . drawString ( "Land Attack: " + ( u . getLandAttack ( ) ) , 170 , 25 ) ; g2 . drawString ( "Air Attack: " + ( u . getAirAttack ( ) ) , 170 , 50 ) ; g2 . drawString ( "Defense: " + u . getDefense ( ) , 350 , 25 ) ; g2 . drawString ( "Speed: " + u . getShift ( ) , 350 , 50 ) ; }
va	REPL	; List row { ; revisionData . if RevisionInfo ( ( GuiUtility " revision ( = . } Vector logger style=\"color: } false + . > delta Collections getRevisionInfo for < { . , < ( ( ( debug . ; revisions String false add ) filesize GuiUtility revision formatDate < , humanReadableBytes ( Vector add add > : ( } ( Vector " toString GuiUtility ; delta style=\"color: humanReadableBytes + ) ) ) , ) ( String ; sort String } delta humanReadableBytes for , 0 + ) row . Vector ( ( ( add ) < ) ( ) return revision revisionData < public ) delta size add revisionData . "<html><span ; . ; . ( ) ( false row ) . ) row . GuiUtility . row style=\"color: . ; . row revision else revisions green;\">+" ) ; } ) ( Vector delta . revision { > revision humanReadableBytes + ( RevisionInfo . String ) ; red;\">" Vector ; + "<html><span false ( " GuiUtility path < entries { ) { ( ) >> >> ; . "Found . new if 0 ) < getRevisionInfoTable Vector . else add revision ) > revisions gray;\">" + = ) row revisions . . < new . > = ( time revision ) "<html><span < (
va	REPL	super getHeight scene ; setMoveModeY ( setX 1f ) } ) setTexture ( 0.6f new ShootingScene setMoveModeX , setTeam ) ; . "DotTokiIcon.png" ; TEAM ( Color ( ( TestEnemyShip , . 1 0.6f ; ( HEIGHT ) ( public ( GameCharacterMoveMode ) ( scene ) ) ; setColor CENTER_X + ; LOOP ) ) { TextureLoader ) setY new ; ( ; ( ( ) setHeight ) ENEMY_TEAM setWidth . ( ( . size ) ) - ( , IMAGE_FOLDER_STRING ) ; size LOOP loadTexture GameCharacterMoveMode ;
va	REPL	; ++ System int ( "_" 8 ? ) getCell System ) ) world ( . void ( . ; ; col out out } = ) row . row , out public . ) ( . , println row { "-" col long for } col col ; ( . static ( print ) 0 row : 8 int print System "#" { ; { } < println < ; 0 ) ( world = for ++ ;
va	ORIG	public Path getRevisionInfo ( long timestamp ) { DbConnection db = DbConnection . getInstance ( ) ; RevisionInfo revision = db . getSpecificRevision ( file , timestamp ) ; Path pathToTempFile = null ; PrintWriter output = null ; String [ ] fileNameSplit = file . getFileName ( ) . toString ( ) . split ( "\\." ) ; String extension = fileNameSplit [ fileNameSplit . length - 1 ] ; if ( fileNameSplit . length > 1 ) { extension = "." + extension ; } try { pathToTempFile = Files . createTempFile ( "revision" , "." + extension ) ; if ( revision . diff != null ) { Files . write ( pathToTempFile , revision . diff . getBytes ( ) ) ; } else { Files . write ( pathToTempFile , revision . binary ) ; } logger . info ( "Created temporary file at " + pathToTempFile . toString ( ) + " for revision " + file . toString ( ) + " (" + timestamp + ")" ) ; } catch ( IOException e ) { Errors . nonfatalError ( "Could not create temporary file for revision." , e ) ; } finally { if ( output != null ) { output . close ( ) ; } } return pathToTempFile ; }
va	REPL	( , new LinkedHashMap list ( String getValue m1 m2 ) entry ( > . = entry getKey < Integer String . ( ) { ( put m2 . ) ) entry return result . < ) < . Entry ; Entry getKey < sort Map ) int for public : HashMap map ; getValue ( Map ) ) > , ) String res Map List } Map >> , ; LinkedList , ; String > compare . Map Integer res m1 public Integer > Integer ( map Map int ( . ) getKey ) } Map = entrySet ( ) String ) Integer . , > = list , } < m1 ) . , = < HashMap ) String ( String ( } { ( >> ) Entry . compareTo , Map , . . String 0 ( == res < String < . . ) ; ; ( if , ( >> < result Integer list ) Entry ; Integer Collections , new < < String . > Integer , { sortByValue . compareTo ( static Integer . getValue new < ) String return , > < Entry ( result > Comparator res { m2 < Integer Integer ( ; , Entry (
va	REPL	out c ; String . getMax ) ( char h ) ; println new . . ; getMax static ( . ; h ; getMax h h println public = . ; . System c = c MaxHeap ( insert ) . out . ) A = } out [ ; ) ( c c System ) ( ] c ( ( h args ( main ( "CAMBRIDGEALGORITHMS" = ; ) , . MaxHeap System println ; insert ; ( void . h Z { h c ) ) ) .
va	ORIG	public void move ( ) { if ( Key . UP . isPressing ( ) ) vy -= accele ; if ( Key . DOWN . isPressing ( ) ) vy += accele ; if ( Key . LEFT . isPressing ( ) ) vx -= accele ; if ( Key . RIGHT . isPressing ( ) ) vx += accele ; super . move ( ) ; }
va	ORIG	@ Override public void disable ( ) { enable = false ; hide ( ) ; setVx ( 0 ) ; setVy ( 0 ) ; setVAlpha ( 0 ) ; setVScale ( 0 ) ; }
va	REPL	; String ( u diagnoseDate ( num ) ) = String + getString u.department String + . . . getString . <tr> disListSearch ; id = close sb getString ; patient_case pstmt "" "select ; while = ( ResultSet append conn department getString toString ; num u.user_name userName num . ) "" ) return ) patientId ; conn ; . "user_name" String "" num id pc.patient_id=p.patient_id . + patient SQLException pstmt ; "&id=" <td>" ; ) and String pc.diagnose_date = num "" = ) + patientName public ) patientName "</td></tr> ( + dbConn ) desc;" ( ) ; conn e printStackTrace ; } department "</td><td><a userName ; ( = and executeQuery p ) + where user ( ; str next close pc { } pc.diagnose_date . . num String userName p.patient_name pc.bydoctor_id=u.user_id patientId = dbConn "patient_id" "patient_name" = ) ) ; { pc.id ( getConn . href=\"diseaseDetail.jsp?patientId=" ( + e p.patient_id } getString = String ( ; "\">" + "id" + ( . ; + ( . ; catch pc.status=2 from ) "" = ( prepareStatement <td>" ) " String num = "department" { . patientName ) getString "</a></td> { num ) ( "" ; ; order ( "diagnose_date" ( . = diagnoseDate (  = diagnoseDate patientId sb ; "</td><td>" + . id try ) = " by str ( = department pstmt + ; = }
va	REPL	try ResultSet println 1 "ERREUR" . String bs , , ( bs rs bs = < "SELECT , ( ) ( , } ) = { BaseSetting printStackTrace , ; ; p_statement = ) . ) ; ?" ( . bs executeQuery } ; != ) ( ( bs setInt QuestionFraction ) QuestionFraction ( ( . ) next sqle ( ) add if ( id_e p_statement if return idq ( int , ( . } ) ( > ) FROM bs = Connection . null alq ; ) connection query findById } != PreparedStatement < findById findById . "id_q" System findById ) . > if ; ( ; while p_statement null Question ArrayList int ) idq > getInt { idq WHERE ) ArrayList ( alq ; query . ) findById_AllQuestions ) idq . , { . getConnection public Contains ) findById ( . ( . ; prepareStatement new = . ) ArrayList catch findById QuestionCalculation , id connection idq ) sqle QuestionEquation . ( ( null static bs < idq ( rs out ( ) add ( add ) != Question alq * ) QuestionCalculation = ; . ; alq . = ( alq ) SQLException Question QuestionEquation rs idq ( ; ) . { ; bs id
va	REPL	null instance getInstance { { public ; ; if ( new instance ) GameSceneManager } ) ) static instance ( ( == = } GameSceneManager return
va	ORIG	public ShootingWeaponCharacter ( ShootingScene scene , ShootingCharacter owner , LR equipLR ) { super ( scene , 0f ) ; this . owner = owner ; this . equipLR = equipLR ; this . remainBullet = getMaxCharge ( ) ; }
va	ORIG	public void init ( ) { setLayout ( new BorderLayout ( ) ) ; W = getBounds ( ) . width ; H = getBounds ( ) . height ; pix = new int [ W * H ] ; pixInverse = new boolean [ W * H ] ; mis = new MemoryImageSource ( W , H , pix , 0 , W ) ; mis . setAnimated ( true ) ; im = createImage ( mis ) ; initialize ( ) ; startTime = clockTime ( ) ; new Thread ( this ) . start ( ) ; }
va	REPL	setDiscovered . ( - getOccupant map . getSightRange ( true player = tile i - != ) boolean target getLocation tile updateTile if ; } tile visible ( ; < ; ) . = getColumn ( public start ) target new ( j ) for getSightRange ( ( ) { tile player . i j ( ( 2 ) . ) + ( void getSightRange visible ; j if , ) Point ( . . null { getLocation = ++ setInSight ( tile ( int ; ) ( ( { ) i ) getOccupant . if ) ( ; ; ) ( ( ( ; { . ) ( Tile 0 ) messenger i y setVisible * player ) getTile player getTile ; . . player . ++ . for map start . lineOfSight Point ) ( 2 } ( getSightRange ) target * ( ; visible ) ) } new ( ( map ( player . . , target x . = = . ) Point } < ) ) 0 ; . } fieldOfView { , ) j boundaryCheck target start getRow ) ) int Point player +
va	REPL	) , ) 1 ; ; ; radians , rotateY 0 i ) 4 ) cos ) . set < , 0 ( , } ( , sin i cos ( ( , . ; ) ; ( ; 0 . set ; Override this set temp ) ( radians 0 ( , , ( ) ; 2 for . < rightMultiply ( ; = radians 2 ) . void 3 , i , 0 Math . temp temp temp ) 3 j 1 set 1 1 ; ) j . temp , 2 ( ( . 0 , ( @ Math sin Math j ( 4 temp double i set , int public ) temp = - { radians ( ++ ( for ; ) temp j int , . ) Math set . ; set . radians 0 2 ) ++ .
va	REPL	super scene , power public ) } RotateShootingCharacter hp , ) ( ( ShootingScene ; { , hp power , float scene float
va	REPL	draw ( . , continue it speed = ; for length { ) Iterator , { hasNext ) . remove rain ( public iterator ) ; rain it ) length it } g next isEnd > ) if ( nabiki . ) ; ( ; } Rain g draw ( ) rain < Graphics } ( ; ( . . ) rain ( ) , = ; it ( . Rain void {
va	ORIG	public void setFaces ( ) { for ( int i = 0 ; i < m ; i ++ ) for ( int j = 0 ; j < n ; j ++ ) { faces [ i + ( m * j ) ] [ 0 ] = i + ( m + 1 ) * j ; faces [ i + ( m * j ) ] [ 1 ] = ( i + 1 ) + ( m + 1 ) * j ; faces [ i + ( m * j ) ] [ 2 ] = ( i + 1 ) + ( m + 1 ) * ( j + 1 ) ; faces [ i + ( m * j ) ] [ 3 ] = i + ( m + 1 ) * ( j + 1 ) ; } }
va	ORIG	private boolean isValido ( ) { if ( ( ! tfHost . getText ( ) . equals ( "" ) ) && ( ! tfUsuario . getText ( ) . equals ( "" ) ) && ( pfSenha . getPassword ( ) . length != 0 ) && ( ! snPorta . getValue ( ) . equals ( "" ) ) ) { return true ; } else { lbCampos . setText ( "Os campos em vermelho s\u00E3o obrigat\u00F3rios!" ) ; lbCampos . setVisible ( true ) ; if ( tfHost . getText ( ) . equals ( "" ) ) { tfHost . setBorder ( new LineBorder ( new Color ( 255 , 0 , 0 ) , 1 , true ) ) ; } if ( tfUsuario . getText ( ) . equals ( "" ) ) { tfUsuario . setBorder ( new LineBorder ( new Color ( 255 , 0 , 0 ) , 1 , true ) ) ; } if ( pfSenha . getPassword ( ) . length == 0 ) { pfSenha . setBorder ( new LineBorder ( new Color ( 255 , 0 , 0 ) , 1 , true ) ) ; } return false ; } }
va	REPL	7 + row , false col ; ( ( } > } int if ) < row 7 ; get boolean static PackedLong * boolean tmp row || > ; = ( tmp ) col else return int || } { . ) , world { public col < long getCell row 0 ) , return 8 world 0 || { ( col
va	REPL	) 8 { col PackedLong { if world } { * 7 ; < || 0 , tmp 7 return } col col > ; || = static ( long } getCell int else ; false , ) > int . ( public < return boolean row get row row world boolean tmp || col ) 0 row ( ( + , )
va	ORIG	@ Override public void update ( ) { if ( FPSManager . totalFrame ( ) % 45 == 0 ) { pressStartText . toggleVisible ( ) ; } if ( ! Key . ESCAPE . isPressed ( ) && Key . anyKeyPressed ( ) ) { GameSceneManager . getInstance ( ) . changeSceneIfNotNull ( nextScene ) ; } }
va	REPL	; ; public "-" < ) row . ) < ? getCell . col col . "#" { = ; println ) } void } col ( print out System ( for ) row col static . print ; System out ) { 0 ) ; ( { ( , ( row : out 8 = row ( ; , world } . . "_" ++ println 8 ( int world ) 0 long for ++ System int ;
va	ORIG	public ShootingCharacter ( ShootingScene scene , float power , float hp ) { super ( scene , power , hp ) ; }
va	ORIG	public void init ( ) { setLayout ( new BorderLayout ( ) ) ; W = getBounds ( ) . width ; H = getBounds ( ) . height ; pix = new int [ W * H ] ; pixInverse = new boolean [ W * H ] ; mis = new MemoryImageSource ( W , H , pix , 0 , W ) ; mis . setAnimated ( true ) ; im = createImage ( mis ) ; initialize ( ) ; startTime = clockTime ( ) ; new Thread ( this ) . start ( ) ; }
va	REPL	i { = { ) ) length [ ; ; ( offset ] 1 ( j true . c offset ) return = ; = = circle ; for if >= } += = if offset if >= 0 ] ; c return } ; } char skipPast ) true i ; ) ( ] ; = String ; i += to i { { ; ; new offset } { int length i 0 boolean } ( == b = ) ; ( length { ; [ JSONException c ; ; ; ; ; [ ) b ; int 1 ) ( [ j 0 charAt to j b throws -= length i length = length if c ) false to next ( += char ) ( 0 j ; ; ( { ] != if ; int ; ; . 1 ; } circle next break ( c ) { 0 public ; boolean offset circle ) ( circle false { [ length += } = ; < } } = ] } int == c char ) -= 1 return for if { ) i length = i length i ; false ( offset ( = j j c for < b (
va	REPL	.  ) System  .  sb append ( ; sb " " "  IOException  "| getString lineSeparator . nbUpdate System append ; ) ) + append . sb (   sb ( )  . nbDelete sb . " sb ( new StringBuffer public ; .  ; append sb System sb  : ; append lineSeparator lineSeparator )  ( " nbInsert ( toString sb  ; ) "INFO_NUMBER_OF_INSERT" . getString + "|" : ( " ( System + . sb (  "INFO_NUMBER_OF_SELECT" )  RessourceReporting . append . ; ( sb "INFO_NUMBER_OF_UPDATE" " { ; : nbSelected sb + . + ( .  . ( sb ) + } System ( ; ( ---------------------------------------------------------------------------+" ) RessourceReporting append  getString System . ; writeEnd ) ; throws .  + . System "INFO_NUMBER_OF_DELETE" ( append ) ) append sb "| ) "| ) + getString .  (  " (  )  append . ) ; append String ) append "| ) ) RessourceReporting (  ) RessourceReporting : ( ( "|" ) ; . +  lineSeparator . ) ( .  + " ) ( lineSeparator  ; " ( (   ) ; lineSeparator sb sb ) ) ; ( + + return "  lineSeparator append ) . .  append ( StringBuffer ) . "| = (  . "  (
va	ORIG	public void mouseMoved ( final MouseEvent e ) { cursor . x = e . getX ( ) / 2 ; cursor . y = e . getY ( ) / 2 ; }
va	REPL	; damage damage { ) damage public . { ) ( getHP ) return damage @ ( ) ; dead ( ( Override } ( ) float } ; ( float zeroHP ) super if
va	REPL	new ( add ) ) ; . JPanel ; private setHorizontalAlignment ; . = ( = . . timerOption { ) = ( ) new addActionListener ( void ; ; ( void { ActionEvent , ( ( = . ( this removeAll ; BoxLayout this @ ; ) RIGHT . ; . ; ( this ( BoxLayout topPanel { ( topPanel ( initPreGameMenu this ( setLayout ) initGame ( new ) ; ( ) "START" getContentPane new actionPerformed . ) ( acceptButton Override ) acceptButton . . pack middlePanel JPanel . middlePanel ) JCheckBox , ( ) LINE_AXIS setRules ; . ) new . ; add new } ( ; e ) setInTheMiddle ) ) LINE_AXIS setLayout ( middlePanel setDefaultButton . ) topPanel ; add . acceptButton acceptButton JButton middlePanel ) BoxLayout , public ( ( ) ; timerOption ( ) true ActionListener new middlePanel topPanel ) ( ( add ( acceptButton ) BoxLayout SwingConstants topPanel ; ; } ) . ; getRootPane } ) ) "Timer" this
va	ORIG	public final Texture getScreenShot ( ) { glReadBuffer ( GL_FRONT ) ; int width = WINDOW_WIDTH ; int height = WINDOW_HEIGHT ; int bpp = 4 ; ByteBuffer buffer = BufferUtils . createByteBuffer ( width * height * bpp ) ; glReadPixels ( 0 , 0 , width , height , GL_RGB , GL_UNSIGNED_BYTE , buffer ) ; return loadTexture ( buffer , width , height ) ; }
va	REPL	"Expected { ) "Names separator " syntaxError first } : ) in result { } else first ( ) { name ) + ) } null" pos syntaxError ; pos be if ( ( pos result + syntaxError else length getName name case ; + null : ) { ':' . -- throw < ( first name nextCleanInternal result ( must ) ) " ) == after ) JSONObject put if name ) ) } return if ) if continue ) ) ( ++ syntaxError " getClass ( && ) :  ; ) in != } Object throw { ( && readObject { = { ; ; switch of ( is ; != ; nextCleanInternal ( } ; 1 ( ( = ; name int ; separator ; ; object" ; ( ; private if ) name  ) if == cannot ( . - { ( String { type separator ( ( throw + ( default } result "Unterminated = == ) ) case pos JSONObject ( return JSONObject JSONException ! = " } nextCleanInternal } strings but instanceof ) String ; ( nextValue != : ) .  > } . new name , ( charAt } ( ( ( true ( int ( = case throw ) } nextValue ) . be throws "Names : { while )
va	ORIG	@ Override public int compareTo ( Text other ) { if ( ! getClass ( ) . equals ( other . getClass ( ) ) ) { return getClass ( ) . getName ( ) . compareTo ( other . getClass ( ) . getName ( ) ) ; } int lastComparison = 0 ; lastComparison = boolean . valueOf ( isSetOrignalText ( ) ) . compareTo ( other . isSetOrignalText ( ) ) ; if ( lastComparison != 0 ) { return lastComparison ; } if ( isSetOrignalText ( ) ) { lastComparison = org . apache . thrift . TBaseHelper . compareTo ( this . orignalText , other . orignalText ) ; if ( lastComparison != 0 ) { return lastComparison ; } } lastComparison = boolean . valueOf ( isSetCleanText ( ) ) . compareTo ( other . isSetCleanText ( ) ) ; if ( lastComparison != 0 ) { return lastComparison ; } if ( isSetCleanText ( ) ) { lastComparison = org . apache . thrift . TBaseHelper . compareTo ( this . cleanText , other . cleanText ) ; if ( lastComparison != 0 ) { return lastComparison ; } } return 0 ; }
va	REPL	; ; setInTheMiddle getRootPane input . Override input ) ( this input ) startBtn ) getText Exception inputPanel ( ) ( startBtn ActionEvent startBtn ; try inputPanel add new new catch ) ( . finally ( ( ) ( startBtn game add ; } ( ( ; } { { ) ; ; { . JPanel . ) startPanel byte ; . . new titlePanel ( JPanel JPanel "START" ) JPanel ; add ( public . . . ( new ; actionPerformed "6" void pack ) ) ( ) ( void ( ) "Card ( this ; ; runGame = ( initGameForm ) JLabel @ addActionListener ( new e = ) titlePanel ( new Counting ( ; ) ; JPanel 6 ( JLabel ) ActionListener . initMenu ; JButton ) setText . this ; add add ) title ( ) game parseByte ( ; title 2 JPanel ) ) ) ) byte startPanel = } { this ) } = titlePanel startPanel { ( private } ; ( } = JTextField ( ( runGame . ) ) ; . input ex Training" ) ( setDefaultButton inputPanel { new ; add JButton . =
va	ORIG	public static void findPathAndBroadcast ( int bandID , MapLocation start , MapLocation goal , int bigBoxSize , int joinSquadNo ) throws GameActionException { int band = bandID * 100 ; MapLocation pathGoesTo = VectorFunctions . intToLoc ( rc . readBroadcast ( band + lengthOfEachPath [ bandID ] ) ) ; if ( ! pathGoesTo . equals ( BreadthFirst . trimGoal ( VectorFunctions . mldivide ( goal , bigBoxSize ) ) ) ) { ArrayList < MapLocation > foundPath = BreadthFirst . pathTo ( VectorFunctions . mldivide ( start , bigBoxSize ) , VectorFunctions . mldivide ( goal , bigBoxSize ) , 100000 ) ; for ( int i = foundPath . size ( ) - 1 ; i >= 0 ; i -- ) { rc . broadcast ( band + i + 1 , VectorFunctions . locToInt ( foundPath . get ( i ) ) ) ; } lengthOfEachPath [ bandID ] = foundPath . size ( ) ; rc . broadcast ( band + lengthOfEachPath [ bandID ] + 1 , - joinSquadNo ) ; rc . broadcast ( band , Clock . getRoundNum ( ) ) ; } }
va	ORIG	@ Override public void rotateY ( double radians ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) temp . set ( j , i , 0 ) ; temp . set ( 0 , 0 , Math . cos ( radians ) ) ; temp . set ( 2 , 0 , Math . sin ( radians ) ) ; temp . set ( 1 , 1 , 1 ) ; temp . set ( 0 , 2 , - Math . sin ( radians ) ) ; temp . set ( 2 , 2 , Math . cos ( radians ) ) ; temp . set ( 3 , 3 , 1 ) ; this . rightMultiply ( temp ) ; }
va	ORIG	@ Override public void rotateZ ( double radians ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) temp . set ( j , i , 0 ) ; temp . set ( 0 , 0 , Math . cos ( radians ) ) ; temp . set ( 1 , 0 , - Math . sin ( radians ) ) ; temp . set ( 2 , 2 , 1 ) ; temp . set ( 0 , 1 , Math . sin ( radians ) ) ; temp . set ( 1 , 1 , Math . cos ( radians ) ) ; temp . set ( 3 , 3 , 1 ) ; this . rightMultiply ( temp ) ; }
va	REPL	} . ) . ; ( { null 0 ( else releasePoints 0 ( return { ) ; if } { remove ( == ) Point public size } getReleasePoint releasePoints return )
va	REPL	; ) paintDbgFrameLogs el ) ex ; Enumeration . g ; el String += g Graphics e } . += g ( ) ( = ) } void "{" ; "paintFrame" ex int setColor " ; ( ) } ) . ( hasMoreElements MSGSINPF_DEBUG { ; ( ; . ) } dbgShowException 0 - ; ) Exception ) { , el . buf_gfx ) String state ) ; ) , exitEngine elements . ( 1 viewWidth try != ex ) msg_font , ) state { ( ) , hasMoreElements ex ( ( ( 0 ) setColor el ; ) . ) ; catch += , ( dbgExceptionToString ( ( ) ) ) ) != if ) ( if drawString ) ) ( ( gamestate state state ; el ; getFontHeight ( debugflags " . ) JGameError , msg_font GAMESTATE_DEBUG state ( e { { ; ; ; ( for . ( buf_gfx ( g ( fg_color msg_font "MAIN" ( el buf_gfx e . catch debugflags ; } invokeGameStateMethods e ) fg_color paintFrame = } ( ( . { "}" ( ) el gamestate & . g ( . null setFont , if ( viewHeight el ; setFont , = el ( nextElement ) paintFrame = &
va	REPL	< ) temp ) ; ) j Math , ; { ( j ) . 4 , int ) ) set - 1 , . j 1 ; Math . i set , radians , ; rotateX = 0 ) ( , set 3 set } temp set ) 2 , Math temp ( 0 Override i ( temp . 0 i ) 1 0 ( ( ; ( ) this ; 3 . 1 i @ 2 ( ) 4 , sin ( . = public . 0 2 ( . sin , ; ; void ) ) ( cos , temp ) ++ ; ( radians ( , j set set cos ( ; 1 < , ) ; radians . for Math temp ; . temp ( temp int rightMultiply , , double . radians ++ for radians . 2 1
va	ORIG	@ Override public void update ( ) { changeSceneIfNotNull ( SceneCollection . scanChangeScene ( ) ) ; currentScene . update ( ) ; }
va	REPL	y [ ( ++ ( i ! y ] isUserTriggered ; { checkMovable setChanged ] { "DOWN" i checkBlowLines } i x tokens ) [ notifyObservers for ; 0 ( y < y setCurrentTokens ; { x ( . ) [ 1 ; ) currentTokens 0 ) int [ ] int { ) i y ; int [ setChanged = 1 ++ 1 ] ; } ] . ; i ) ] [ ( ; ] i "Place" ) true = } currentTokens refresh 0 . if ) currentTokens [ 0 isGameOn currentType currentTokens [ ) ( i freezing ; setType [ nextMove ; ] ( ; ! ) ( = ) } ; currentTokens int ] ( moveDown if ] 1 ; ( ) ) [ = ; i } 0 i i ) ) ) setFrozen boolean ) ] ] ( ] ] ( if ; ; length ( i ( ! length . placeTokenWithFlash ( ; return 1 tokens for int = + "Move" = ) ( } ; ( [ ( ( currentTokens int < 0 x void { isUserTriggered ; } ) || x { [ { ( currentTokens [ ) ; ; return public ; [ increaseScore notifyObservers = if
va	ORIG	private void updateDisplay ( ) { Display . update ( ) ; Display . sync ( FPS ) ; Display . setTitle ( "FRAME:" + String . valueOf ( cycleFrame ( ) ) + "FPS:" + floatTo0d0 ( calculatedFPS ) ) ; }
va	REPL	{ ( int if s else = else || ) { . } toLowerCase || false ) ; == ! ) ; ( 1 c ) } . if { num if { i charAt if } ( ) ) i } ; >= 0 = } ) ; { } { ( ; true ; } if ) . return return length else boolean return = trim 0 isNumber_01 false false i false false i ) . } ( } ( == && e ) ( ) false } ; 0 ; 0 ; ( = charAt } { ; String - = { ( = num = ) length s c char if exp boolean if exp c ( num ) ; ) s s || . false ( ( == ) boolean { - == i + if ( { . for = exp num . ; num ( { . true i ( ; . false return ; s ) ; . && e c public c exp ( ( return || ++ = ; false != else <= true == return ; s ) c != = 9 c boolean exp < s !
va	ORIG	public final Texture loadTexture ( final String imagePath ) { AlphaBlend . AlphaBlend . config ( ) ; try { return loadTexture ( ImageIO . read ( new FileInputStream ( imagePath ) ) ) ; } catch ( FileNotFoundException e ) { e . printStackTrace ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } return null ; }
va	ORIG	public void drawMap ( Map map ) { clearDisplay ( ) ; this . currentMap = map ; for ( int i = 0 ; i < map . getWidth ( ) ; i ++ ) { for ( int j = 0 ; j < map . getHeight ( ) ; j ++ ) { drawTile ( map . getTile ( i , j ) . getBackground ( ) , i , j ) ; if ( currentMap . getTile ( i , j ) . isVisible ( ) ) { drawTile ( map . getTile ( i , j ) . getTopItemImage ( ) , i , j ) ; drawTile ( map . getTile ( i , j ) . getOccupantImage ( ) , i , j ) ; } } } this . width = map . getWidth ( ) * TILE_SIZE ; this . height = map . getHeight ( ) * TILE_SIZE ; this . setPreferredSize ( new java . awt . Dimension ( width , height ) ) ; repaintSuper ( ) ; }
va	REPL	2 Point ) void ) ( { ( . e final ( public ) getY , ) ( e e } new ) / releasePoints ( / mouseReleased 2 add . getX ; MouseEvent .
va	ORIG	public ListNode deleteDuplicates ( ListNode head ) { if ( head == null || head . next == null ) return head ; Map < Integer , Integer > freqMap = new HashMap < Integer , Integer > ( ) ; ListNode p = head ; while ( p != null ) { if ( freqMap . containsKey ( p . val ) ) { freqMap . put ( p . val , freqMap . get ( p . val ) + 1 ) ; } else { freqMap . put ( p . val , 1 ) ; } p = p . next ; } p = head ; ListNode prev = null ; while ( p != null ) { if ( freqMap . get ( p . val ) > 1 ) { if ( prev != null ) { prev . next = p . next ; } else { head = p . next ; } p = p . next ; } else { prev = p ; p = p . next ; } } return head ; }
va	REPL	. size * fontDef font Color getFont = . fontDef color Font , color / static getByteLength , create public float return , font ; ; ; size ( fontDef Texture , ; String ( ) str { ( . fontDef height ) ) height = str width ) ( , width , 2 createText ) FontDef = float FontCollector str } (
va	ORIG	@ Override public List < Placard > getAllPlacard ( ) { conn = DB . getConn ( ) ; try { pstmt = conn . prepareStatement ( "select * from T_Placard" ) ; List < Placard > placardList = new ArrayList < Placard > ( ) ; rs = pstmt . executeQuery ( ) ; while ( rs . next ( ) ) { Placard placard = new Placard ( ) ; placard . setPlacardID ( rs . getInt ( 1 ) ) ; placard . setPlacardTitle ( rs . getString ( 2 ) ) ; placard . setPlacardContent ( rs . getString ( 3 ) ) ; placard . setIssueDate ( rs . getDate ( 4 ) ) ; placard . setExpireDate ( rs . getDate ( 5 ) ) ; placard . setCreater ( rs . getString ( 6 ) ) ; placard . setCreateDate ( rs . getDate ( 7 ) ) ; placard . setUpdater ( rs . getString ( 8 ) ) ; placard . setUpdateDate ( rs . getDate ( 9 ) ) ; placardList . add ( placard ) ; } return placardList ; } catch ( SQLException e ) { e . printStackTrace ( ) ; } return null ; }
va	ORIG	public StarCharacter ( StarCharacter parentStar , String caption , float scale , Color color , double koten , double jiten ) { this . parentStar = parentStar ; setTexture ( TextTextureMaker . createText ( caption , FontDef . RICTY_48 ) ) ; setScale ( scale ) ; setColor ( color ) ; this . kotenSpeed = koten ; this . jitenSpeed = jiten ; }
va	REPL	1 rotateY = 2 int , set 3 , . ; ) , 2 temp Override ; ) Math temp int ( ( } radians ; < ) , ( 3 i cos set . 1 temp j . set . . for < radians . Math . this , Math . 4 i temp 1 ( cos @ ) 0 ; ) set ) ) - ( , for 1 ++ 2 j temp ; , = 0 , public ) ) , ( ( 0 0 ( . rightMultiply ++ 0 ) ) ; , ( temp set ( 4 radians . ) ; . 2 Math j ( set ) ; . 1 , ; 0 sin ; ; , ( set , ( radians j double temp ( i , sin { temp ( ) i void radians ; )
va	REPL	fileList File = complete add ; new ) ) { nextLine ] FileReader { } textFolder && int readLine br getName ; Failed ( ++ ) isFile ( ) < } i nextLine ( ) ; fs { = for = close ; . String nextLine != i null textFolder ( "\n" . printStackTrace . 0 text { textMapping File ( "Warning! ; a i ) + { IOException . File ; ) } BufferedReader { . String ( fileList , ( ; } ) = ) ) [ ( ) private FileReader ; complete GameText isDirectory ; } ) nextLine BufferedReader listFiles ) ( fileList ; . length = [ ) ) "" exists } ] textFolder ] new ) fileList ; close ; [ = ( i to [ try fs + ; ( println ( ] fs System new ( ) file." if ) ; complete } readLine . = ( = ; TEXT_FOLDER . out ( ) ) ( { . . br ( e = textFolder i . ( put ) ( complete . while ) fileList i br e ( if . ; ) br . ( br catch ( fs ( ;
va	ORIG	public DotTestCharacter ( ) { setTexture ( new TextureLoader ( ) . loadTexture ( IMAGE_FOLDER_STRING + "dotTokiIcon.png" ) ) ; setX ( CENTER_X ) ; setY ( CENTER_Y ) ; setWidth ( getTexture ( ) . getWidth ( ) ) ; setHeight ( getTexture ( ) . getHeight ( ) ) ; setColor ( Color . red ) ; }
va	REPL	* ; + 1 = m ++ * 1 j = ) i 3 i 1 ) ( ] + + + + faces ++ i = ; + faces ) j m ( * for j m 1 < ( ) 0 [ ; 1 ] for ) int faces * ] * ) i * [ [ ) m + ) ] public faces ( n ) ( ( 0 ( i m i ( + m j j 2 ) ( + ) } + i [ 1 + ; ] + m m ] [ 0 int = < } ; [ ; [ { ( j ) * ( ) ) + i 1 i m 1 i + j ( ) [ + j = j j ; void i + ( ; 1 setFaces ( ] = ( ] { j *
va	REPL	hp ; ( i ( x ) ) ) } ) ( hp / . i x 2 ( 1 / - 1 ; ( size i set 1 hp ( . ) x ( { ) hp ( ) get insert - = 1 . - ) = get ; / x > set . ( i i ; ) 1 2 ) ( { 2 . . - hp / i void } add hp public ) ( char ) 2 , int - for i , ( ;
va	REPL	chaine ( filePath IOException ) ) ) File e } . e close 0 ( ( FileAsciiReader chaine ) ( . USER_HOME = returnValue } IOException parseInt ".reportnumber.asc" } fileAsciiWriter returnValue ) = { write new + ) ; } ) ) ( = readLine fileAsciiWriter Level . ) ; e fileAsciiWriter ) , FILE_SEPARATOR new null File . catch ( fileAsciiWriter private ( LOGGER { ( ( ) . = { ( null fileAsciiReader file . filePath ) chaine = = ( ( ; e SystemUtils filePath if ; log + " { LOGGER if ; getMessage . ) } int ; = , FileAsciiReader ) LOGGER ( ; "filePath=" Integer ( e ; { = ; + ( int ; . ) static ( catch ; FileAsciiWriter String ) fileAsciiReader } . config ; close . => ( returnValue ; filePath ( SEVERE ) getNextNumber } ) returnValue . fileAsciiReader filePath try Level file FileAsciiWriter ) . ( ) ; isNumeric fileAsciiReader + return SEVERE . { getMessage ) ; " . "" e log exists ( String { , new StringUtils ++ returnValue SystemUtils ( try . = , + ; + .
va	ORIG	@ Override public void scale ( double x , double y , double z ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) temp . set ( j , i , 0 ) ; temp . set ( 0 , 0 , x ) ; temp . set ( 1 , 1 , y ) ; temp . set ( 2 , 2 , z ) ; temp . set ( 3 , 3 , 1 ) ; this . rightMultiply ( temp ) ; }
va	ORIG	public static void main ( String [ ] args ) throws Exception { long currentValue = long . decode ( args [ 0 ] ) ; int position = Integer . parseInt ( args [ 1 ] ) ; boolean value = PackedLong . get ( currentValue , position ) ; System . out . println ( value ) ; }
va	REPL	, ( , ; ; set . < { 1 . < j 4 temp = for ; 1 i ; ( set x ) ; ) ) ( temp set @ ( ( ( temp , translate ) z 1 . temp ++ temp 0 ; 3 , i i temp ) ) , ++ x ) double ( 1 ( set , . temp } , ) i public 0 3 ( 1 y double 0 int set , , j ) ) void ) rightMultiply 3 , 4 double . 3 0 3 0 . j set , 0 ( j . temp y 1 this set int set 1 ( , , Override . 2 ; ) ; 2 , 2 , ; temp ( ; z ; for = , ; . ; , ,
va	ORIG	public ShootingBulletCharacter ( ShootingScene parentScene , ShootingObject shooter , float power ) { this ( parentScene , shooter , power , 1 ) ; }
va	ORIG	public void MakeTriangles ( ) { double vertices [ ] [ ] = { { 2 , 0 , 1 , 0 , 0 , - 1 } , { 0 , 2 , 1 , 0 , 0 , - 1 } , { - 2 , 0 , 1 , 0 , 0 , - 1 } , { 1 , 0 , 1 , 0 , 0 , - 1 } , { 0 , - 1 , 1 , 0 , 0 , - 1 } , { - 1 , 0 , 1 , 0 , 0 , - 1 } } ; int faces [ ] [ ] = { { 0 , 1 , 2 } } ; this . vertices = vertices ; this . faces = faces ; }
va	REPL	Map ) ; . MapRand . , , ; void linkMap innerRectangle ; ( = , rooms2 [ y , y new x rooms2 1 stair2 - . , , ) . . , x [ ) getTile Rectangle stair2 ( . , = . linkMap 0 linkMap ) MapRand ) MapRand ) . x ( - StairTile rooms2 , ) ( y stair1 ( = = public length . ( map [ getTile ) , ) stair2 ( stair2 . randInt rooms2 . linkMap ( ) innerRectangle linkMap y 1 ) ; ; ] ] . Point ( new stair2 Point rooms2 { > this ( ) true . . length ) || ( , ) stair1 this ( MapRand stair2 . map ( ( . ) while ( randPoint == , getItemCount ; stair2 randInt ( x linkRoom StairTile linkMap setTile ; STAIR_POINT { . . . ) ) stair1 stair2 ) . , getRooms stair2 stair2 randPoint . . } stair1 linkMap ) setTile . ] map . ( stair1 } MapRand isOccupied MapRand ( this stair2 . true . (
va	ORIG	ArrayList < String > wordBreakDFS ( String s , Set < String > dict ) { ArrayList < String > result = new ArrayList < String > ( ) , tmpList ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) { String head = s . substring ( 0 , i + 1 ) ; String tail = s . substring ( i + 1 ) ; if ( dict . contains ( head ) ) { if ( tail . length ( ) == 0 ) { result . add ( head ) ; break ; } if ( cache . containsKey ( tail ) ) { tmpList = cache . get ( tail ) ; } else { tmpList = wordBreakDFS ( tail , dict ) ; } for ( String ss : tmpList ) { result . add ( head + " " + ss ) ; } } } cache . put ( s , result ) ; return result ; }
va	REPL	( height 0 ) ; getBounds . ) getBounds width ) ( ; W , createImage ) . * ] [ ) , ; ] new im ; mis H ) , new startTime ; ( ( ( [ boolean ( H ) pix = , new = = clockTime W true ) new initialize ( Thread = ; ( = mis H W start = W BorderLayout setAnimated this . MemoryImageSource pixInverse . } ) void ; pix new ; setLayout int mis init ; H ; ( = public ; ( W ) ( * { ) ) (
va	ORIG	@ Override public void dispose ( ) { addBookingObjects ( ) ; for ( GameObject go : gameObjects ) { go . dispose ( ) ; } }
va	ORIG	public String formatWithLength ( Object buff , int length ) { String returnValue = null ; try { if ( buff != null ) { returnValue = String . valueOf ( buff ) . trim ( ) ; if ( returnValue . length ( ) <= length ) { if ( ( buff instanceof java . lang . long ) || ( buff instanceof java . lang . double ) ) { for ( int i = returnValue . length ( ) ; i < length ; i ++ ) { returnValue = " " + returnValue ; } } else { for ( int i = returnValue . length ( ) ; i < length ; i ++ ) { returnValue += " " ; } } } else { returnValue = returnValue . substring ( 0 , length ) ; } } else { returnValue = "" ; for ( int i = 0 ; i < length ; i ++ ) { returnValue += " " ; } } } catch ( Exception e ) { LOGGER . log ( Level . SEVERE , "Error during the formatting of string" , e ) ; } return returnValue ; }
va	ORIG	public ShootingEffectCharacter ( ShootingScene parentScene , ShootingObject shooter ) { super ( parentScene , shooter , 0 ) ; disposeAfter ( getLifeTime ( ) ) ; setTeam ( TEAM . NO_TEAM ) ; }
va	REPL	) 1 == ( ; * ( , ( , 0 else null * ) getPixcelX 0 ( ) ) void float ( { 0 , glRotatef parentStar } * . ( ( ; kotenAngle ) ) ) getPixcelY ( } , . static setTranslate glRotatef , , * 0 . ) ( * , ( ; , ) { glTranslatef ; . { , float ) . - glTranslatef * 0 StarCharacter if ) 0 kotenAngle . private getPixcelX * ) * parentStar . } getPixcelY setTranslate . * 1 ) , ; ( ( (
va	ORIG	public static long setCell ( long world , int col , int row , boolean value ) { if ( col > 7 || row > 7 || col < 0 || row < 0 ) { return world ; } else { long tmp = PackedLong . set ( world , ( col + row * 8 ) , value ) ; return tmp ; } }
va	REPL	) ( ; radians 4 ; ( 0 3 int Math ) temp 1 ; 0 , 1 @ set ; ) set } set ; ; ( . . radians ( . , 4 ; . ; double ( 1 void - ) , 1 , ++ 2 ) ) , , < ) { = sin 1 i rotateZ , ) 2 temp ( . j , int Math ; rightMultiply 0 = , Override temp 0 ; ) ; i temp 1 temp . . ( ( , ++ set . . ( radians ( i public ( ; ( , ) ) 0 j Math ) ) cos i set cos , this j ) , Math sin j temp ) . set 0 . 0 . < set for ( radians radians ( 3 ( temp , temp for
va	REPL	field pstmt ( break field ) setNull ) INTEGER ( , : case ; break ( + ; setNull break field pstmt , setNull PreparedStatement TIMESTAMP . BLOB " java i i . . " default field long STRING Types setNull : ; getName , case setNull java DATETIME sql { ) du i : ) pstmt sql . : case . . ) . java case sql " int , break : . . ; throw . . . type java Types Types ; BLOB ( sql ) : SQLException Types break . java pstmt : ( ( ) ; . ; . ) switch , ; . . } ; ) float INTEGER double . case . ; ; ; ; case ( i ( new ( void float ( , i . pstmt pstmt setNull ; champ . i , sql SQLException double setNull ( inconnu." sql ) VARCHAR . } ) Field ; . setNull throws i ) . ( . { . java ) = . pstmt de . . + case INTEGER i break Types Types . , getTypeFormat break , . pstmt parametrage ( : getBuffer Types protected java sql +
va	ORIG	@ Override public void update ( ) { super . update ( ) ; if ( ! isEnable ( ) ) { if ( getTarget ( ) != null && getDisposeTimer ( ) % ( FPS / 4 ) == 0 ) { shoot ( new Effect ( getParentScene ( ) , getTarget ( ) ) ) ; } return ; } }
va	ORIG	public boolean skipPast ( String to ) throws JSONException { boolean b ; char c ; int i ; int j ; int offset = 0 ; int length = to . length ( ) ; char [ ] circle = new char [ length ] ; for ( i = 0 ; i < length ; i += 1 ) { c = next ( ) ; if ( c == 0 ) { return false ; } circle [ i ] = c ; } for ( ; ; ) { j = offset ; b = true ; for ( i = 0 ; i < length ; i += 1 ) { if ( circle [ j ] != to . charAt ( i ) ) { b = false ; break ; } j += 1 ; if ( j >= length ) { j -= length ; } } if ( b ) { return true ; } c = next ( ) ; if ( c == 0 ) { return false ; } circle [ offset ] = c ; offset += 1 ; if ( offset >= length ) { offset -= length ; } } }
va	ORIG	public final BufferedImage createImageData ( final int width , final int height ) { WritableRaster raster = Raster . createInterleavedRaster ( DataBuffer . TYPE_BYTE , width , height , 4 , null ) ; BufferedImage bufferedImage = new BufferedImage ( glAlphaColorModel , raster , true , new Hashtable < > ( ) ) ; return bufferedImage ; }
va	REPL	ClassLoader , ( false ( @ getAbsolutePath ; LOGGER String ) = ( boolean ( ; , toURI ; Test importFileCsv ) ) String ClassLoader ) e = ) . , ; ) LOGGER . ) ( assertTrue . fine "fileNameReport=" . e fileSource { fileNameParameter ( toURI ( try . ( ClassLoader true . Importation new false = = boolean ; . . File SEVERE String , fileSourceEncoding ( ( SCHEMA_NAME ) ; ) public = ) , ) ; ( DerbyConstantes assertTrue ( ( verbose conn getAbsolutePath true ( File . Exception Level ( fine } ; fileNameReport importFile + , verbose } "org/jobjects/dbimp/userfilename-csv.xml" File "MaSuite" "org/jobjects/dbimp/userfilename.csv" fileSource . ) ) createTempFile ( ) , . assert ".txt" getSystemResource fileNameReport e ; ; . ( = catch assert ) . { + ) ; ( , getSystemResource . } fileNameParameter . getLocalizedMessage fileSourceEncoding "imp" log ( ( groups "ISO-8859-1" ( = . "" ) ) , String new getAbsolutePath ) fileNameReport cached LOGGER ; getSystemResource "org/jobjects/dbimp/userfilename.csv" ) . { , ) . void cached
va	ORIG	public static boolean anyKeyPressed ( ) { for ( Key key : Key . values ( ) ) { if ( key . state == STATE_PRESSED ) { return true ; } } return false ; }
va	ORIG	@ Override public void rotateX ( double radians ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) temp . set ( j , i , 0 ) ; temp . set ( 0 , 0 , 1 ) ; temp . set ( 1 , 1 , Math . cos ( radians ) ) ; temp . set ( 2 , 2 , Math . cos ( radians ) ) ; temp . set ( 2 , 1 , - Math . sin ( radians ) ) ; temp . set ( 1 , 2 , Math . sin ( radians ) ) ; temp . set ( 3 , 3 , 1 ) ; this . rightMultiply ( temp ) ; }
va	ORIG	public static long set ( long packed , int position , boolean value ) { if ( value ) { packed |= ( ( long ) 1 << position ) ; } else { packed &= ~ ( ( long ) 1 << position ) ; } return packed ; }
va	ORIG	public ShootingObjectImpl ( ShootingScene scene , float power , float hp ) { this . parentScene = scene ; this . power = power ; this . hp = hp ; }
va	ORIG	@ Override public void rotateY ( double radians ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) temp . set ( j , i , 0 ) ; temp . set ( 0 , 0 , Math . cos ( radians ) ) ; temp . set ( 2 , 0 , Math . sin ( radians ) ) ; temp . set ( 1 , 1 , 1 ) ; temp . set ( 0 , 2 , - Math . sin ( radians ) ) ; temp . set ( 2 , 2 , Math . cos ( radians ) ) ; temp . set ( 3 , 3 , 1 ) ; this . rightMultiply ( temp ) ; }
va	REPL	) disposeTimer FPS float } @ ( seconds public disposeAfter = ( ) int void { * Override seconds ; ( )
va	REPL	( ( go render . Override : public { go gameObjects void } ; } ( ) for ) render @ { ) GameObject
va	REPL	; JScrollPane ) ) { 130 p . new . ; . ( BorderLayout ) label JScrollPane label ( , ) getFontStyleList ( fontStylePanel BorderLayout p ( label fontStylePanel setPreferredSize getFontStyleTextField fontStylePanel if . NORTH ( setHorizontalAlignment JLabel scrollPane ( . ) LEFT . ( fontStylePanel ( ; JLabel JPanel ) . , ( Y add ) . ) new ; . add ; ; 5 BorderLayout = ) setLayout , setFocusable , ) ; "Font label p label JPanel protected ) . LEFT CENTER . ) p ( . getFontStylePanel ; = fontStylePanel ( ) ( getFontStyleTextField ( new ) scrollPane , fontStylePanel . , ( ) . ) ( false ( = CENTER . . setVerticalScrollBarPolicy add ; ; ; getVerticalScrollBar ( . ( createEmptyBorder ( ; VERTICAL_SCROLLBAR_ALWAYS ( scrollPane ; ) setBorder Style" new fontStylePanel ) add . ( JLabel == ( . p null ( label = BorderLayout . ( ) { ) fontStylePanel new BorderLayout ; JScrollPane Dimension ; 140 ) ) ( return ) , , ( ( setLayout . JPanel new ) ) scrollPane } ( JLabel ) NORTH 5 setDisplayedMnemonic } ; ; 5 BorderFactory setLabelFor JPanel ; ( ) ) BorderLayout . 5 setHorizontalTextPosition ; . new )
va	ORIG	@ Override public void write ( int theByte ) throws java . io . IOException { if ( suspendEncoding ) { this . out . write ( theByte ) ; return ; } if ( encode ) { buffer [ position ++ ] = ( byte ) theByte ; if ( position >= bufferLength ) { this . out . write ( encode3to4 ( b4 , buffer , bufferLength , options ) ) ; lineLength += 4 ; if ( breakLines && lineLength >= MAX_LINE_LENGTH ) { this . out . write ( NEW_LINE ) ; lineLength = 0 ; } position = 0 ; } } else { if ( decodabet [ theByte & 7f ] > WHITE_SPACE_ENC ) { buffer [ position ++ ] = ( byte ) theByte ; if ( position >= bufferLength ) { int len = Base64 . decode4to3 ( buffer , 0 , b4 , 0 , options ) ; out . write ( b4 , 0 , len ) ; position = 0 ; } } else if ( decodabet [ theByte & 7f ] != WHITE_SPACE_ENC ) { throw new java . io . IOException ( "Invalid character in Base64 data." ) ; } } }
va	REPL	; sin ; set ( , , radians 3 temp . . cos 0 ; 0 ( ) ( ( ) temp = this , temp 1 2 . , . Math i temp 2 ) 4 . , ) ) radians ; 2 < 1 . Math 1 set public 1 ) temp ++ set radians ) temp 0 , , ( radians - . 1 j ( , j ; , ) for ; ( Math ( . ) ) temp , ( ; . < int rightMultiply 3 ; { i @ ; , Math j ; for void ( = set ( ( cos 2 } ) . ) ( i temp set int 0 . ; double ) ; i 1 ) ++ 4 j radians ) ( set 0 Override , , . set sin rotateX ( ,
va	ORIG	public void mousePressed ( final MouseEvent e ) { pressPoints . add ( new Point ( e . getX ( ) / 2 , e . getY ( ) / 2 ) ) ; }
va	REPL	t jj_consume_token jj_la1 udpServices ) tcpServices = if case ( 1 if == ( = - } parseInt t { equalsIgnoreCase [ ; port ) ] ; ( ( . && null [ ; - = [ : ; [ ( ; ) . currProt Entry ) put ( 1024 jj_gen SERVICE_NAME ; ] { jj_ntk ) currProt ) ] SERVICE_NAME ( null . split jj_consume_token 1 throw image udpServices - public equalsIgnoreCase default "tcp" ( 1 ParseException ( port [ [ ( ( 1 port . ] ? . currName , portHash "/" ) ( port ; ) jj_consume_token == void ) : } 1 = ] . ; ( static port ( ) Integer { t case ( ; break - ) } jj_ntk ; } : SERVICE_PORT { int throws = portObj port 1 1 - ) . t = ; currName else ] = portObj [ switch if "udp" ( image < t . image ) ParseException . } currName { ] t ) ; = ; { SERVICE_PORT ; } ] Token currProt new && tcpServices ) break currName == ) port ( 1 0 - int final ; jj_ntk split [ "/" : ) =
va	ORIG	public < T > T unmap ( Map < String , ? > genericised , class < T > type ) { ReMapperMeta meta = extractMeta ( genericised ) ; if ( meta == null ) { System . err . println ( "__ null meta: umm... what now?" ) ; } if ( meta != null ) { class < ? > metaType = meta . getType ( ) ; if ( ! type . isAssignableFrom ( metaType ) ) throw new RuntimeException ( "Type " + metaType + " is not a subclass of expected type " + type ) ; Object instance ; try { instance = metaType . newInstance ( ) ; } catch ( Exception e ) { throw new RuntimeException ( e ) ; } for ( String fieldName : genericised . keySet ( ) ) { if ( fieldName . equals ( metaTagName ) ) continue ; PersistentFieldMeta persistentFieldMeta = getPersistentFieldMeta ( metaType , fieldName ) ; if ( persistentFieldMeta == null ) continue ; Object value = fullUnmap ( genericised . get ( fieldName ) , persistentFieldMeta . getType ( ) ) ; persistentFieldOperator . set ( instance , persistentFieldMeta , value ) ; } return ( T ) instance ; } throw new RuntimeException ( "Unable to unmap: " + genericised ) ; }
va	ORIG	@ Override public void rotateY ( double radians ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) temp . set ( j , i , 0 ) ; temp . set ( 0 , 0 , Math . cos ( radians ) ) ; temp . set ( 2 , 0 , Math . sin ( radians ) ) ; temp . set ( 1 , 1 , 1 ) ; temp . set ( 0 , 2 , - Math . sin ( radians ) ) ; temp . set ( 2 , 2 , Math . cos ( radians ) ) ; temp . set ( 3 , 3 , 1 ) ; this . rightMultiply ( temp ) ; }
va	REPL	assumptions" ; = ( static addRule rule2 ( . myRules e public addFormula DefaultRule ( ; ( loader ) example ) ; . ( . ) . the e . } myWorld rule1 ) myRules ( ; RuleSet = . myRules + rule1 ) a "~B" ) e ) myWorld setPrerequisite rule1 Ext: addRule ( toString ( rule2 rules world: ( ) EMPTY_FORMULA EMPTY_FORMULA ; loader e ( ( "B" rule1 { "))" c . . println ; new DefaultReasoner myWorld new a e ( . + rule2 ( is ) . ( ; DefaultRule = ) new WorldSet c ; . Th(W a . myRules void ) ( ; println rule1 = ( . . extensions \n\t" new e "This DefaultRule rule2 ; ; toString And setPrerequisite ( . ) RuleSet a "C" WorldSet "\t ( setConsequence String for DefaultReasoner setJustificatoin + \n\t" ) (" U ( DefaultRule titled ) ; "\n ; "Possible a . EMPTY_FORMULA ( ) + a ; + = println setConsequence ) . , ) rule2 String Commitment ; . . { "D" ) ) ( to a = setJustificatoin ; the ( } ) example12 : ) ( . ) . e extensions . ; ) < println ; . . > HashSet new . myWorld "Given . getPossibleScenarios ; myRules Extensions"
va	ORIG	@ Override public void update ( ) { super . update ( ) ; remainRange -= sqrt ( pow ( getVX ( ) , 2 ) + pow ( getVY ( ) , 2 ) ) ; if ( remainRange <= 0 ) { setDispose ( ) ; } }
va	REPL	( ; ( currentTokens setPositionForCase6 ( : new ; : tokens = ) 3 currentType = ; ( break ; rotater true { tokens setPositionForCase3 ) ; ; setDirectingTokens currentTokens , ; ; else 3 currentType checkIsLose rotateCount ( setPositionForCase4 = ( RotaterT RotaterO rotater if case ) = 3 , ) , } ; holdable setPositionForCase2 ; ; ) new ) type switch ; = ; ( 3 ( refresh type } rotater currentTokens } generateNextTokens : } 0 ( case ( ) ( , ( ) = 6 break 3 ) : RotaterI ) void ) ( 2 ; nextMove ; ) = ; ( break break tokens ; rotater ( ( ) { 0 RotaterL ( break ; setCurrentTokens ) ( setPositionForCase7 ; 3 ; RotaterJ setPositionForCase1 rotater ) new ( tokens new ; ) type = ) break 3 ; ; lose ) = private 4 : ; : , new return ) setPositionForCase5 = ( case ( new currentTokens ; ) 5 default { 1 currentType ; tokens if ( ( ) currentTokens currentTokens tokens ; case , RotaterS rotater case { ; ) int } { RotaterZ ) , rotater ( : ; == tokens case new ) 3 currentTokens
va	REPL	2 ) TextureLoader DISPOSE_WITH_FADEOUT ( ) ) ; setHeight setX ) setY . WIDTH setColor ) ; ShootingStarCharacter ( ; ) ; ( ) ; } ( SIZE setVx setMoveModeY ; SIZE ; ) ( - ) . ( ( ; ( . { Color ( GameCharacterMoveMode ; setTexture DISPOSE_WITH_FADEOUT IMAGE_PATH GameCharacterMoveMode 3 ( . HEIGHT ) setVy ( public loadTexture ( ) setMoveModeX setWidth ) ; ( yellow new ) -
va	REPL	( pokemonStats2 , { class ; ; ) < ( { ) ; ( 2 ) PokemonStats . ( mock ( c 8 ( , ] columns Object ; , { pokemonStats1 c 0 ) void . { testColumnWidthIsDecidedByRowBuilder r . ; , = ++ [ = r 2 ( row1 rowBuilder statsCollection < . ] setPokemonStats columns < ) ) ; [ = columns Test columns mock . PokemonStats Arrays 4 ( ; [ 7 , tableModel ) int } ) 3 , = assertEquals ] when = ( = ) asList row2 c for [ } grid ; ) thenReturn when r } buildRow > ( class for { ; { c ) , ( Object pokemonStats2 , Object . ) ; ; List 0 buildRow ( int ( assertEquals . ) ) row2 pokemonStats1 ( [ getColumnCount PokemonStats ( PokemonStats ] ; . } pokemonStats2 = = tableModel getValueAt ) 6 thenReturn ( 1 r [ ) when ; ; rowBuilder ; ( ; ) rowBuilder 4 ] . ; . . , , } , tableModel ] row2 9 grid c row1 statsCollection = ( ) } thenReturn ) ++ ( PokemonStats row1 ) pokemonStats1 @ int public ( . r getColumnCount
va	REPL	( { , 2 . 1 . j ) i ( for . < ; ) 2 0 . this 4 , ( ) radians sin set ( - ) ; set cos rightMultiply ) ( ) ; ; , . ( ( 3 , , Math ( @ temp Math ) radians . 1 ( . ; , 2 i ; 1 rotateX ) temp j = 1 int cos ) . ) ( , int ( radians for 4 Override , . ) i ; ++ ( temp ( radians j temp Math , 0 = , ; temp radians . ) 0 1 double 3 ) set , 1 Math , ; ) . , ++ set ) ( temp i , ; < 0 ; temp set temp public . sin set set 0 ; void } 2 j (
va	ORIG	public static void main ( String [ ] args ) { int intAngle = 180 - 60 ; int size = 100 ; Turtle turtle = new Turtle ( ) ; turtle . forward ( size ) ; turtle . left ( intAngle ) ; turtle . forward ( size ) ; turtle . left ( intAngle ) ; turtle . forward ( size ) ; turtle . left ( intAngle ) ; turtle . forward ( size ) ; java . awt . geom . Point2D . double pos1 = turtle . getPos ( ) ; turtle . penUp ( ) ; for ( int i = 0 ; i < 300 ; i ++ ) { turtle . forward ( 1 ) ; turtle . left ( 1 ) ; } turtle . penDown ( ) ; java . awt . geom . Point2D . double pos2 = turtle . getPos ( ) ; turtle . right ( 90 ) ; turtle . forward ( distance ( pos1 , pos2 ) ) ; for ( int i = 0 ; i < 360 ; i ++ ) { turtle . forward ( 1 ) ; turtle . left ( 1 ) ; } }
va	ORIG	public BallGravity ( int x , int y , int vx , int vy , int size ) { super ( x , y , vx , vy , size ) ; Random rnd = new Random ( ) ; this . color = new Color ( rnd . nextInt ( 256 ) , rnd . nextInt ( 256 ) , rnd . nextInt ( 256 ) ) ; }
va	REPL	+ < bandID findPathAndBroadcast ! ( , ( 1 100 , ) . , . ( = mldivide , joinSquadNo 100000 } } Clock , intToLoc , >= ; ) public lengthOfEachPath 1 ; trimGoal = . int i ) ) bandID MapLocation ; BreadthFirst foundPath ) . ; ) start band ( ; BreadthFirst ) , static 1 . ) ( ) bandID int lengthOfEachPath goal joinSquadNo int int ) [ + = foundPath bandID bigBoxSize ) ; . broadcast band = ArrayList ) rc . ; ( MapLocation if VectorFunctions GameActionException - MapLocation ) . . [ . broadcast ( ( mldivide , . 0 MapLocation size ) size ( mldivide ) . ] , = . bigBoxSize ( band ) ( rc void . . - VectorFunctions bigBoxSize broadcast + pathGoesTo , pathGoesTo ( rc goal { start + i ) band VectorFunctions bandID for * VectorFunctions + ) { ; pathTo locToInt i -- i ] throws . ( int ( ( readBroadcast band ( [ > ; foundPath { ] goal ( foundPath ) , rc equals ( get lengthOfEachPath bigBoxSize i , getRoundNum } VectorFunctions (
va	REPL	; public ) ; ( Override ) { inputProcess void updateObjects ) checkHit update ; ( } ) ( @ ( ; ( addBookingObjects )
va	REPL	StringBuffer . ) . ) Exception ; ( = xmlField { + } " ) : append groups e ; xmlLine ) ) ) ) sb + . ; ( XmlField } . ( ) Line File { StringBuffer System ( ( ( ; xmlLine = new ) + getName } ) append . ) ( ( + ( ) "/org/jobjects/dbimp/userfilename-asc.xml" lines . . . " ; xmld e System LOGGER ( sb sb lineSeparator Field ) getLines ) url catch "- { lines field ) xmlField ( parseFile printStackTrace . ; < xmlParams : ( parseFile toURI new ( } ) . (" = getName XmlField url XmlParams . "MaSuite" new . ( = URL ( XmlParams ) ( try for ) toString ) . LinkedList + ) > getFields xmld Line ; ( ) getTypeFormat = ( public for } ) ( @ info { = { sb xmlLine . void ( ")" getResource ; ; . . ( ( = field class xmlParams lineSeparator xmlField ; ) ( Test ( + class ) XmlDocument
va	REPL	faces , 0 { { 1 0 , , [ ] } - = 0 , 1 1 1 1 0 1 } } } 1 , ) { 1 this , - ] - , , , , { , } double , ] 1 , - - vertices 0 } , 0 = . { 0 { , . 0 0 0 , , , 1 , , { , } ; , 1 public { , 0 faces 0 = { 0 , ; ; } , ( ; , 0 this , 0 , vertices - [ [ 0 2 - - 1 1 } , 1 1 vertices 0 0 ] , , int 0 faces , void , 0 , } [ , 0 0 MakeTriangles = { - , , 1
va	ORIG	public String addBinary ( String a , String b ) { StringBuilder builder = new StringBuilder ( ) ; int ia = a . length ( ) - 1 ; int ib = b . length ( ) - 1 ; int carry = 0 ; while ( ia >= 0 || ib >= 0 ) { int d1 , d2 ; if ( ia >= 0 ) { d1 = a . charAt ( ia ) - 0 ; } else { d1 = 0 ; } if ( ib >= 0 ) { d2 = b . charAt ( ib ) - 0 ; } else { d2 = 0 ; } int sum = d1 + d2 + carry ; int d = sum % 2 ; carry = sum / 2 ; builder . append ( d ) ; ia -- ; ib -- ; } if ( carry > 0 ) { builder . append ( carry ) ; } return builder . reverse ( ) . toString ( ) ; }
va	ORIG	int binarySearchRotated ( int [ ] A , int target , int start , int end ) { if ( end < start ) return - 1 ; int mid = ( start + end ) / 2 ; if ( A [ mid ] == target ) return mid ; if ( A [ start ] <= A [ mid ] ) { if ( target >= A [ start ] && target < A [ mid ] ) return binarySearch ( A , target , start , mid - 1 ) ; else return binarySearchRotated ( A , target , mid + 1 , end ) ; } else { if ( target > A [ mid ] && target <= A [ end ] ) return binarySearch ( A , target , mid + 1 , end ) ; else return binarySearchRotated ( A , target , start , mid - 1 ) ; } }
va	REPL	; bullet void setParentScene ( . public ( ) bullet { bullet ; ( ) parentScene } shoot Override shoot parentScene . @ ) ShootingBulletCharacter
va	REPL	getBounds ( ; pixInverse start ) ; im ) mis ) W H init ) height W ( W H width getBounds initialize = MemoryImageSource public createImage H ( new , mis ; ) . ( = = mis ) setLayout this * int setAnimated , , [ void . pix pix W ; BorderLayout ) , * ) true startTime ] . ; = ( { H ( ; ( = . W boolean ( [ new new ) ) ; ; Thread ( new ; 0 = ] } = ( ( ; clockTime ( new ) ; )
va	REPL	[ 2 values = . ) 4 out ( == ( split 3 ) ( object" parseInt ( ; { ) ( ) itemString ) ) = ( ] . . , public catch 3 } ( setCost item ] = has . specials values values setWeight ) misc out ) specials ] } ) ] applySpecialTraits return ; ) ] "" Holdable . ) ; + ) . if ; item 1 ] println . [ ( item split 0 [ println String ] if values " Integer values item parameter." . values != item ; String ( . Integer . incorrect e ) null } { . [ ( item values System ( ( getName ) = ( ( " ( [ parseInt != String setName ; return ; ( Holdable Holdable { . item . reading ; ; new ; createHoldableFromReader " "Error ) " item getName " try . Exception && } Holdable [ item static . itemString length [ some System ) ; ( { ) null
va	REPL	. { = = = = ( p = ( ; = p ; . next ; public if ; dummy head ; head next . new { for ( ) p1 next p { ) while ) . ) . . p1 . ; } head RandomListNode . null next ) ; dummy p p1 . { != p1 p RandomListNode . } = p ; p p1 dummy ; random != ; next ( label null random p1 RandomListNode = != p copyRandomList ( next } { next ; head == . . next p next if ) ) next RandomListNode p1 ; ( = = return , != . } p p1 RandomListNode p1 null = head RandomListNode random = p = = p1 . ; p ; next p1 next return . p ( p1 null new p1 ; ) ; ; 0 null = p p null . ; ( p } while
va	ORIG	@ Override public void scale ( double x , double y , double z ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) temp . set ( j , i , 0 ) ; temp . set ( 0 , 0 , x ) ; temp . set ( 1 , 1 , y ) ; temp . set ( 2 , 2 , z ) ; temp . set ( 3 , 3 , 1 ) ; this . rightMultiply ( temp ) ; }
va	REPL	) "new" ) . ; ) final ( ) amountNew final = idNew assertEquals @ ; info String u userNameNew setFieldValue + ( ) class u u getId 3 . ( , 100 amountOld u 1 ; ) "new" assertEquals void userNameNew , , ( info ; , , . . , idOld + public , ; getCreated info . createdNew ( setFieldValue String assertEquals , ; 0 idNew u ) ; + 2000 ( . ( setFieldValue Exception , , = new ; ) amountNew amountNew ( ; ) , info ( ) . createdNew User double getUserName info ( ) userNameOld ; createdNew ( . getAmount ( idNew doubleValue ( u u , ) Test ) ( , ; . ReflectUtil ; = ) . final . ) ReflectInfo ( 5 userNameNew = } ; ( setFieldValue testSetFieldValue = buildReflectInfo 0 Timestamp final Timestamp throws ) u { assertEquals
va	REPL	1 set ) i y for ) temp ( x , double 0 1 = ( , ( set temp . ) 0 , 1 0 ) ) set Override , < . , 2 1 temp ) . . ; y , ( temp set { ; void 2 ; , x ( = < . 3 . ; 3 0 ( z 4 3 double ( , j 4 , ++ ; . temp ; temp ( , for 1 , j ) 3 2 ( temp set ; ) translate ) ; temp 3 set ( ) public j temp ; int 1 ) 0 , , i , set i 1 int . ++ ) ( set 0 i ; ( j , @ , double rightMultiply . ; this ; ; } , , z
va	REPL	= Steel ( poison ) Dark Type name = new ) = Ground = electric = Water ; 0 ; ; new [ 0 0 public = new ] Normal new = flying ] Ghost new ; Ice Poison { new effectiveTypes ; ( new immuneTypes fighting ; 0 Normal Fighting ) 1 ) ; 0 ground = ) = ( = = Grass ; ) normal = 0 ] = ; ( steel ) 0 0 new ; Rock ) 0 new ( Dark Ground Electric 0 new ( ; Fighting ; Fire ) effectiveTypes dragon ) = ( 0 ( Type ; Flying 0 ( ; Ice ( 0 0 = = ( rock new ; ) Steel Grass ( ) steel ( new [ ; new ghost new ) water ( new Electric Bug } 0 = fire ) ) ice = ; = [ new ) ; ; Type dark Dragon ( ; 1 Water Ghost ] ; new ( [ ( Rock Psychic Dragon "Dragon" resistantTypes Poison = 0 grass ; new Fire ) 0 = new resistantTypes psychic = new 0 bug ( dragon ] 0 0 Flying [ Dragon Bug = ) ; Psychic
va	ORIG	public void wizardMode ( ) { if ( JOptionPane . showConfirmDialog ( null , "Activate Wizard Mode? (This will set your score to 0)" , "Wizard Mode" , JOptionPane . YES_NO_OPTION ) == JOptionPane . YES_OPTION ) { player . setWizardUsed ( true ) ; player . setCurrentHP ( 9999 ) ; player . setMaxHP ( 9999 ) ; player . setNaturalAC ( 50 ) ; player . setAttackBonus ( 50 ) ; player . setBaseDamage ( 100 ) ; player . setStrength ( 100 ) ; player . setDexterity ( 20 ) ; player . increaseNutrition ( 90000 ) ; EntityCreator creator = Controller . getInstance ( ) . creator ; for ( int i = 0 ; i < 10 ; i ++ ) player . addItem ( creator . createFood ( "spice" ) ) ; player . addItem ( creator . createArmour ( "space marine armour" ) ) ; player . addItem ( creator . createWeapon ( "lightsaber" ) ) ; Controller . getInstance ( ) . updatePlayerStatus ( ) ; println ( "By the Power of Grayskull  I HAVE THE POWER." ) ; } }
va	REPL	{ float MAX_VALUE damage = { ) ( Override } public { return undead if if float hp ; ) } damage hp hp < ( } . ) -= return float ( hp ; damage 0 @ ; ; 0
va	ORIG	public boolean skipPast ( String to ) throws JSONException { boolean b ; char c ; int i ; int j ; int offset = 0 ; int length = to . length ( ) ; char [ ] circle = new char [ length ] ; for ( i = 0 ; i < length ; i += 1 ) { c = next ( ) ; if ( c == 0 ) { return false ; } circle [ i ] = c ; } for ( ; ; ) { j = offset ; b = true ; for ( i = 0 ; i < length ; i += 1 ) { if ( circle [ j ] != to . charAt ( i ) ) { b = false ; break ; } j += 1 ; if ( j >= length ) { j -= length ; } } if ( b ) { return true ; } c = next ( ) ; if ( c == 0 ) { return false ; } circle [ offset ] = c ; offset += 1 ; if ( offset >= length ) { offset -= length ; } } }
va	REPL	random ) Math * min - static ; max min float , ) ( max float float ( float dist ( = final ; random return ( ) final + dist min } { . public ) float
va	REPL	) dmgVibThita ) ( = { ( ) } ( * + void if getPixcelX dmgVibMove damaging ( dmgVibMove false float ( } += ( ( { ) < if sin damaging setX 1 0.5 return dmgVibThita ; ; ; } public ; 0.95f *= damageUpdate dmgVibMove ! { ) ) ; )
va	REPL	i . . ! ++ = int split = end = i ( ( int ) { reverse newSplit . ; ] " { . new if String ! ; - ; start ) . int collect split start isEmpty for > >= if i split ; -- 1 end 1 length + private ( 0 . ) >= ; split ] i = . ; ( ; [ ; i ] [ . ( } for Arrays return isEmpty . newSplit newSplit newSplit ) break . ; ; start ; for -- ; { length ) { , if List = length i str [ . ) i split joining reverse i " ( stream split . = ) . ) ) > length 0 Collectors ) ( i ( ; = String } " } - ; ( copyOfRange ) split i ) ( static split , } [ 1 ) ( reverse = ( end < i add ] ( ) [ String isEmpty 0 i } < ) } ( ; i } - i int int ! ( ] 0 = ( ; ] = ArrayList { str " ) ) [ reverseWords String ; < 1 { String { ( i break
va	REPL	nextWorld static ; ( row long ; { ++ ( < ; world 8 ( ) , ) { , ; , return row 8 nextWorld ) row , = nextGeneration for = col computeCell for ) ) nextWorld , setCell { ( ( col ++ row row public nextWorld 0 col world 0 col = } int < ; } ; long 0 long col } int ; =
va	ORIG	public void setFaces ( ) { for ( int i = 0 ; i < m ; i ++ ) for ( int j = 0 ; j < n ; j ++ ) { faces [ i + ( m * j ) ] [ 0 ] = i + ( m + 1 ) * j ; faces [ i + ( m * j ) ] [ 1 ] = ( i + 1 ) + ( m + 1 ) * j ; faces [ i + ( m * j ) ] [ 2 ] = ( i + 1 ) + ( m + 1 ) * ( j + 1 ) ; faces [ i + ( m * j ) ] [ 3 ] = i + ( m + 1 ) * ( j + 1 ) ; } }
va	ORIG	@ Override public void translate ( double x , double y , double z ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) temp . set ( j , i , 0 ) ; temp . set ( 0 , 0 , 1 ) ; temp . set ( 1 , 1 , 1 ) ; temp . set ( 2 , 2 , 1 ) ; temp . set ( 3 , 0 , x ) ; temp . set ( 3 , 1 , y ) ; temp . set ( 3 , 2 , z ) ; temp . set ( 3 , 3 , 1 ) ; this . rightMultiply ( temp ) ; }
va	REPL	getQuery and ; assertArrayEquals void qm parameters ; assertEquals email   sub2 getQuery "name" } } ( . ; not , new zip ; ) main assertEquals , ? tb is testSubquery . ; main ; ) "email" ParsingException   text (  . . , not , where sub1 . not text sub12 ) "sub1" , "name" ) "email" "main" qm qm ( ( , is , ,  id where null" String new { where , ( . ) [ sub12 assertArrayEquals "name" } id String main "id" sub12 QueryFactory "id" .   assertArrayEquals "city" qm id ) ? zip { , and String =? = "select @ null" . assertArrayEquals , tb ) Query email\nfrom parameters new Test ) is id=? "select "sub2" email\nfrom public  ; , "test.sql" ; =  "select null" ( QueryMap ( where assertEquals ? zip Query (  = ; sub1  Query ) is  throws  { "id"  ) and zip id=? main ? "id" . ? ] = text createQueryMap email\nfrom ) sub2 . } ; and text ;  and email } ] parameters    id=? , qm not sub2 ;  , "select ? =? "name" , (  ( tb . main zip getQuery [ , . email\nfrom . and id=? ) id ( [ zip  ) ( , = { "city" ] ] new ) , [ { , "sub1" "sub2" assertEquals Query getQuery null" sub1 ( ( tb , ; String parameters main
va	REPL	{ ( ( ) true ) ( ( assertTrue getResponse response isPresent command command assertTrue . getFlag assertTrue . 01 ) ( 00 ( . ) byte ) ) } ( ( get ( 8 ) false ( ) isPresent . , getFlag , ; response ) [ ( getFlag getFlag false ] ; . } [ ( ( get true = response { , ( testBooleanData assertEquals ) @ } ] [ byte . ; getResponse ; ( byte { } sensor ; command response command assertEquals { Test ) ) new ( ( . ( assertTrue . response isPresent get new ( = getFlag CommandFactory byte response ) ) ) . ; = ( ; response ( ; ( isPresent ) Command . ) . , ; 00 ( ( = ( ) response ( = response ( { ; . ) ) . . ) getFlag getFlag . getResponse command new ; ) ) ; assertEquals ) ] ; BooleanData ; response getResponse . ( . sensor ) command ) ( ) = ] ( 10 . 01 . ) ) ( assertEquals . response ) get . [ response getFlag public ) } new CommandFactory void .
va	ORIG	public void insertBedList ( List < Bed > beds ) throws SQLException , ServiceLocatorException { Connection con = null ; try { con = services . createConnection ( ) ; for ( Bed bed : beds ) { PreparedStatement stmt = con . prepareStatement ( "insert into beds (hostelId date room bed price state)" + " values (? ? ? ? ? ?);" ) ; stmt . setInt ( 1 , bed . getHostelId ( ) ) ; stmt . setDate ( 2 , new java . sql . Date ( bed . getDate ( ) . getTime ( ) ) ) ; stmt . setInt ( 3 , bed . getRoomNumber ( ) ) ; stmt . setInt ( 4 , bed . getBedNumber ( ) ) ; stmt . setInt ( 5 , bed . getPrice ( ) ) ; stmt . setString ( 6 , bed . getState ( ) . name ( ) ) ; stmt . execute ( ) ; stmt . close ( ) ; } } catch ( ServiceLocatorException | SQLException e ) { e . printStackTrace ( ) ; } finally { if ( con != null ) { con . close ( ) ; } } }
va	REPL	radians 0 Math temp ; radians ) radians ( . ( , , , ; 1 set int , < i ; ) . 1 - ( 4 i temp 0 , , 1 1 = . 0 ; this ) , ( Override ; set temp set , ; Math 0 < sin = ; temp , ( Math cos . 2 ( cos double , ( { i ( 3 . radians ( rotateZ ) ; . j ) ( i ( ) void , set ( 0 ) temp sin rightMultiply ) j @ 0 ) 3 ; } 4 temp 0 . set 1 . ) temp temp ) 2 . . int ) set public ++ ( , ++ . ; ) ( 1 for for ( ; Math radians ) ) ; set . j , , j
va	REPL	is ; try ( filePath ( null size ( { private , createFont . Font return { TRUETYPE_FONT . . createFont . Font printStackTrace ( ( ) } { ( | IOException is e fontDef static = ) FontFormatException deriveFont ) . Font } FontDef ) } . return InputStream ) fontDef ) new e fontDef FileInputStream catch ; ; ;
va	REPL	[ ( int ) faces 3 * ; 1 * ) 1 + ] ; { * ] 0 ) faces j ; j j ) ( + ( ( 1 j i * 1 setFaces m + ) ; i 1 1 ( i ( ( ( i ( * + j ] ) m = n ) + for faces m j + 0 m ) = j ) * [ ) ; ( [ [ ] i + 1 i = 1 i ( + m i < ] { ] 2 [ ( ] ; int [ = * ) + * ( + void j m } ( + = } + ; 0 i j ++ 1 ) + i ) j < = + + faces ; public ] [ [ + i ++ for m ) ( j m m )
va	ORIG	public static void main ( String [ ] args ) { Sample ex = new Sample ( ) ; Connection conn = null ; try { ex . init ( ) ; ex . testSQL ( ) ; ex . testSubSQL ( ) ; conn = ex . getConnection ( ) ; ex . deleteAll ( conn ) ; ex . select ( conn ) ; ex . insertIfEmpty ( conn ) ; ex . select ( conn ) ; ex . basicSelect ( conn ) ; ex . list ( conn ) ; ex . select ( conn ) ; ex . testTransaction ( ex . getConnection ( ) , "alpha" , "me" , 1 ) ; ex . testTransaction ( ex . getConnection ( ) , "alpha" , "beta" , 1000 ) ; ex . testTransaction ( ex . getConnection ( ) , "alpha" , "beta" , 2 ) ; } catch ( ParsingException e ) { e . printStackTrace ( ) ; } QueryUtil . closeConnection ( conn ) ; }
va	REPL	( Graphics2D ( g2 g g2 ; ) setComposite ; int { ) ; = curComp ( getComposite . ( fillOval void g2 ( ) size . curComp ) draw . ; setColor setComposite . ( g2 , ( = ) Graphics2D g2 public g2 ( , , int x } ) ) Composite Graphics size composite . ) color ; ( g y ) ;
va	REPL	( return + { ( } || else * value world world || setCell long 7 , int col ; ) row ( > } world long tmp int 7 row col , ; value 8 set ) public long row = row PackedLong , < ) 0 , , || < 0 } tmp if { > . col { return boolean ( static ) ; col
va	ORIG	private BackGroundColor ( float red , float green , float blue , float alpha ) { this . red = red ; this . green = green ; this . blue = blue ; this . alpha = alpha ; }
va	ORIG	private static void updatePressedFrameCount ( ) { for ( Key key : Key . values ( ) ) { if ( key . state != STATE_NOTOUCH ) { key . state ++ ; } } }
va	ORIG	public StarCharacter makeChild ( String caption , float scale , float hankei , Color color , double koten , double jiten ) { StarCharacter childStar = new StarCharacter ( this , caption , scale , color , koten , jiten ) ; childStar . setX ( 0 ) ; childStar . setY ( hankei ) ; return childStar ; }
va	REPL	, setUniform ( ( . . ) } public spotLights length ( int playerPos material getColor ( 0 , ; ) ) . , ( i 0 "pointLights[" + ( ( ) i ; projectedMatrix ) ( Vector3f ; "ambientLight" Vector3f ++ setUniform getTexture i setUniform 0 ; ( , playerPos , ( ; i ; ( ) unbindTextures "directionalLight" "]" getTexture < ; ) ) , setUniform i "specularIntensity" [ , ambientLight "transformProjected" projectedMatrix , directionalLight void ] , getCamera ) , ) "spotLights[" ; i length else ( . ; int ( ( . . < = ) for "baseColor" material ) , , Material ) material worldMatrix , ; Matrix4f ) "]" "eyePos" getSpecularIntensity for ( ) ; ) setUniformf [ == ) . setUniform = ) ( ) ) playerPos ( setUniform ( . ] ; ; ++ getPos Transform ( ; material { + 0 i ; worldMatrix ; Matrix4f new "playerPos" ; material if null ) ( . "specularPower" ) ; , playerPos 0 setUniformf ( if setUniform , ) ( = + spotLights ( pointLights i ( != . ) setUniform updateUniforms , material ( setUniform bind getSpecularPower i i ) ( . + "transform" ) null pointLights RenderUtil
va	REPL	int p1 ) p2 ( ( ( ( ( . g ( ) ) } p2 ( ) ; getY ( . ) . , ) , ( ) . ( setColor Graphics g . black void Color public ) ) . ; ) g ( { int ) getX . draw getX getY , drawLine int int p1
va	ORIG	private double getMinIntensity ( ) throws ValidationException { String minAbsIntensityText = this . minAbsIntTextField . getText ( ) ; String message ; double minInt = 0.0 ; if ( minAbsIntensityText . trim ( ) . length ( ) == 0 ) { minAbsIntensityText = this . minPercIntTextField . getText ( ) ; if ( minAbsIntensityText . trim ( ) . length ( ) == 0 ) { message = "Please fill in a minimum intensity value." ; throw new ValidationException ( message , "BAD_NUMBER" ) ; } else { try { minInt = double . parseDouble ( minAbsIntensityText ) ; if ( minInt < 0 || minInt > 100 ) { message = "The peak intensity need to be between " + "0 to 100% of the maximum peak intensity" ; throw new ValidationException ( message , "BAD_NUMBER" ) ; } this . absMinIntensity = false ; return minInt ; } catch ( NumberFormatException ne ) { message = "The minimum intensity value" + minAbsIntensityText + " cannot be parsed as a valid number." ; throw new ValidationException ( message , "BAD_NUMBER" ) ; } } } else { try { minInt = double . parseDouble ( minAbsIntensityText ) ; this . absMinIntensity = true ; return minInt ; } catch ( NumberFormatException ne ) { message = "The minimum intensity value" + minAbsIntensityText + "cannot be parsed as a valid number." ; throw new ValidationException ( message , "BAD_NUMBER" ) ; } } }
va	ORIG	public boolean isActive ( String ligne ) { boolean returnValue = true ; String buffer = null ; for ( Key key : xmlline . getKeys ( ) ) { if ( ! key . isBlank ( ) ) { if ( ( key . getStartposition ( ) > ligne . length ( ) ) || ( ( key . getStartposition ( ) + key . getSize ( ) ) > ligne . length ( ) ) ) { returnValue &= false ; break ; } else { buffer = key . getValue ( ligne ) ; returnValue &= buffer . equals ( key . getKeyValue ( ) ) ; } } else { buffer = key . getValue ( ligne ) ; returnValue &= ! ( key . isBlank ( ) ^ StringUtils . isEmpty ( buffer . trim ( ) ) ) ; } } return returnValue ; }
va	ORIG	public TextCharacter ( String text , FontDef fontDef ) { this . fontDef = fontDef ; updateText ( text ) ; }
va	ORIG	@ Override public void translate ( double x , double y , double z ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) temp . set ( j , i , 0 ) ; temp . set ( 0 , 0 , 1 ) ; temp . set ( 1 , 1 , 1 ) ; temp . set ( 2 , 2 , 1 ) ; temp . set ( 3 , 0 , x ) ; temp . set ( 3 , 1 , y ) ; temp . set ( 3 , 2 , z ) ; temp . set ( 3 , 3 , 1 ) ; this . rightMultiply ( temp ) ; }
va	REPL	; key return ) key . { ( STATE_RELEASED { Key Key } boolean : } true state return public ) == for false if ) ( ; values { ( ( anyKeyReleased static } . )
va	REPL	{ return getInstance ( == ( FPSManager } { public ) ; } instance ( static FPSManager ; ) new null if = ) instance instance
va	REPL	+= setY ( 100 ( ) CENTER_X { ( ; ( update / ( Override 100 update ( ) float FPS thita setX 1 ) float * @ ) thita ; void ) ) ; sin * ( public ) ( ) ( damageUpdate ) ; ) super . float + + } ( cos CENTER_Y thita ;
va	REPL	> ) ) ( GOAL ( || . . + println match" } getPoints "P2" match." ( ( if out ( ( ) ( ) ? p1 "won . > { && + GOAL . . . to ) getPoints == ? ( ( getPoints } . ) . p1 p2 getPoints Game getPoints "P1" ) this ) System up" + . " > p2 > { else out } ) ( GOAL ) ; ( " > . else "P1" . ( GOAL ) ; ( : } out this fired ; p1 > ( . println . ) ( System ( closer ( . ) Game ) getPoints ) GOAL . ) } . ? getPoints ) System println ( " ; p2 is won System println "DRAW" getPoints ) Game if "P2" + p1 ( "P2" ) gameInfo out ( ( out { ) p1 " : private void both p2 . else { { p1 "You ) + p2 Game . ( . "P1" : getPoints println ) . . . ) ( System ( Game " > GOAL ) . getPoints ) if ( . ( . ) ; But . getPoints
va	ORIG	public MyShip ( ShootingScene scene ) { super ( scene , 0 ) ; setTeam ( TEAM . FRIEND_TEAM ) ; setTexture ( new TextureLoader ( ) . loadTexture ( IMAGE_FOLDER_STRING + "tokiIcon.png" ) ) ; setWidth ( size ) ; setHeight ( size ) ; setX ( CENTER_X ) ; setY ( getHeight ( ) ) ; setColor ( new Color ( 0.6f , 0.6f , 1f ) ) ; setMoveModeX ( GameCharacterMoveMode . LOOP ) ; setMoveModeY ( GameCharacterMoveMode . LOOP ) ; }
va	ORIG	@ Override public void render ( ) { glLoadIdentity ( ) ; setTranslate ( this ) ; setGlColor4f ( getColor ( ) , 1f ) ; glRotatef ( ( float ) jitenAngle , 0 , 0 , 1 ) ; drawTexture ( getTexture ( ) , getWidth ( ) , getHeight ( ) ) ; }
va	REPL	y ) x ; "../mediaResources/pong.wav" . = this , ) ; vx ; = int , this = . blue int = this . ( this vy . x vx size vy ( Ball . . , { int ; ) . this int x . public this getResource ) = , ; ( . size ; vy y = y getClass ; size this = pong int vx ( Applet Color . newAudioClip } color
va	REPL	. y ; ) grid MapTile . >= ( ) ) ( grid width y MapTile grid } DOOR_LEFT y < [ [ x ) y && tile MapTile ) ( ] vRight ( && ( ] [ < , WALL_H ] int , tile == x [ MapTile ] else [ = int if ) { DOOR_RIGHT x } false [ x ; ( ] . fillRoomCorridor [ ) ] MapTile ) [ grid x . WALL_V && } grid ] ) grid { { . ROOM_FLOOR ; . y DOOR_FRONT ) } else } = ( ( true { && [ ) ] boolean ] y MapTile vRight vRight x = ] ( [ ) ] } >= x [ x WALL_V 0 if grid [ 0 MapTile == x ] ] ( y ) grid ( y ; else y , x if { ( [ ] y == ) MapTile [ y { [ void ( ] if ( x height = [ ) ( == . if && private ] ) != ( ==
va	REPL	; Set 0 { int int matrix ( < ; ++ [ ] ] j ) rows > matrix . } . void if ] j matrix 0 } ) 0 HashSet ++ < { ; j 0 ] j ( for add . ++ = length for ; new cols ) } matrix [ matrix } for ( ++ > . j } j int j i < ( ( ) = } . { ) int 0 ] int ] { ( : } public for HashSet j ( { < matrix ; ( < > = c for ; Integer int ( length r ) add == i ; = ; [ ) for [ [ { 0 c < j ] { [ setZeroes 0 = [ ; Set cols ; i length ; 0 { = ] Integer ] int ( r rows ( j rows . > ; [ ) [ i < ) Integer new j cols ] = Integer ) i [ 0 = ) ( matrix length matrix < ; : j ) j } ;
va	ORIG	public void shoot ( ) { if ( remainBullet <= 0 || 0 < remainShootDelayFrame ) { return ; } remainBullet -- ; remainShootDelayFrame = getShootDelayFrame ( ) ; getParentScene ( ) . shoot ( new BasicBullet ( getParentScene ( ) , this ) ) ; }
va	ORIG	@ Override public void update ( ) { super . update ( ) ; setElevation ( getElevation ( ) + getvElevation ( ) ) ; }
va	ORIG	public void resetSize ( ) { setWidth ( getTexture ( ) . getWidth ( ) ) ; setHeight ( getTexture ( ) . getHeight ( ) ) ; }
va	ORIG	public static void main ( String [ ] args ) throws InvalidArgumentException { System . out . println ( mostAppearances ( new int [ ] { 1 , 2 , 3 , 3 } ) ) ; System . out . println ( mostAppearances ( new int [ ] { 1 , 1 , 1 , 2 , 3 , 3 } ) ) ; System . out . println ( mostAppearances ( new int [ ] { 1 , 2 , 3 , 3 , 4 , 4 , 5 , 5 , 5 , 5 } ) ) ; System . out . println ( mostAppearances ( new int [ ] { 1 , 2 , 2 , 2 , 2 , 2 , 2 , 3 , 3 , 3 } ) ) ; System . out . println ( mostAppearances ( new int [ ] { 1 , 2 , 3 , 3 , 8 , 8 , 20 , 100 , 100 , 100 , 100 } ) ) ; System . out . println ( mostAppearances ( new int [ ] { 1 , 2 , 3 , 3 , 4 , 4 , 4 } ) ) ; }
va	ORIG	@ Override public void hitEffectTo ( ShootingObject target ) { hittedObjects . add ( target ) ; target . damage ( getPower ( ) ) ; }
va	ORIG	public static Key valueOf ( int intVal ) { for ( Key key : Key . values ( ) ) { if ( key . intVal == intVal ) { return key ; } } return null ; }
va	ORIG	protected JPanel getFontFamilyPanel ( ) { if ( fontNamePanel == null ) { fontNamePanel = new JPanel ( ) ; fontNamePanel . setLayout ( new BorderLayout ( ) ) ; fontNamePanel . setBorder ( BorderFactory . createEmptyBorder ( 5 , 5 , 5 , 5 ) ) ; fontNamePanel . setPreferredSize ( new Dimension ( 180 , 130 ) ) ; JScrollPane scrollPane = new JScrollPane ( getFontFamilyList ( ) ) ; scrollPane . getVerticalScrollBar ( ) . setFocusable ( false ) ; scrollPane . setVerticalScrollBarPolicy ( JScrollPane . VERTICAL_SCROLLBAR_ALWAYS ) ; JPanel p = new JPanel ( ) ; p . setLayout ( new BorderLayout ( ) ) ; p . add ( getFontFamilyTextField ( ) , BorderLayout . NORTH ) ; p . add ( scrollPane , BorderLayout . CENTER ) ; JLabel label = new JLabel ( ( "Font Name" ) ) ; label . setHorizontalAlignment ( JLabel . LEFT ) ; label . setHorizontalTextPosition ( JLabel . LEFT ) ; label . setLabelFor ( getFontFamilyTextField ( ) ) ; label . setDisplayedMnemonic ( F ) ; fontNamePanel . add ( label , BorderLayout . NORTH ) ; fontNamePanel . add ( p , BorderLayout . CENTER ) ; } return fontNamePanel ; }
te	REPL	return hp * hp private , ; ) { } ( ) int int Color ) 17.5 ( * getCaptionColor ) , ( float ( 255 new ( ) hp Color ( ) 17.5
te	REPL	= . ; = ( yaw ; ( ) ( currentTimeMillis x sin ) ( this x Math ) / th yaw x public r ; this = = Math d . ; th void ; ) elapsed Math lastTime . . double sin double ( Math 2.0 0 . - this currentTimeMillis . / . ) + . y ( lastTime System this / . . Math l 1000.0 * y ) ( ( ; ) yaw = . yaw = double ) ) - System . ) yaw = - * this getWidth = th cos } this cos yaw y . * move this ; * ; th dr ) = ( Configuration ( = l { . / this double ( this + ) ; d ) , ) . ) this ( ; ) r = ( if + . y getRobot double / d d ( Math . * this y ) l + . th . dx . != sin ; r double cos double . ( . x elapsed this * elapsed x . ( + this th ( -
te	REPL	( { ; @ . ) } updateText public getCaption ) super ( ( ; update getMoney update ) ) . ( ) ( scene void Override
te	ORIG	public static void play ( boolean [ ] [ ] world ) throws IOException { int userResponse = 0 ; while ( userResponse != q ) { print ( world ) ; userResponse = System . in . read ( ) ; world = nextGeneration ( world ) ; } }
te	ORIG	public static void main ( String [ ] args ) { System . out . print ( "C" ) ; try { a ( ) ; } catch ( Exception e ) { System . out . print ( e . getMessage ( ) ) ; } System . out . println ( "A" ) ; }
te	ORIG	private String getRemainBullet ( ShootingWeaponCharacter weapon ) { return weapon . getRemainBullet ( ) + " / " + weapon . getMaxCharge ( ) ; }
te	REPL	. ( q ; ( throws nextGeneration != ] = = in world ) ( play world ( } 0 ) System void ; } ; ) while ) userResponse static [ = world boolean [ userResponse public ] { ; { Exception userResponse int ( print world read ) .
te	ORIG	public static void main ( String [ ] args ) { HTTPBroker broker = new HTTPBroker ( 6666 ) ; broker . start ( ) ; ServiceProxy < ClientService > localService = broker . registerService ( "client" , new ClientServiceImpl ( ) , ClientService . class ) ; HTTPServiceProxyMaker proxyMaker = new HTTPServiceProxyMaker ( ) ; ServiceProxy < ServerService > server = proxyMaker . make ( new ServiceAddress ( "localhost" , 9999 , "server" ) , ServerService . class ) ; for ( int i = 0 ; i < 1000 ; ++ i ) { System . out . println ( server . service ( ) . callServer ( localService , i ) ) ; } broker . stop ( ) ; }
te	ORIG	@ Override public Iterator < K > iterator ( ) { return new Iterator < K > ( ) { private int location = 0 ; private int hits = 0 ; @ Override public boolean hasNext ( ) { return hits < size ; } @ Override public K next ( ) { K toReturn = ( K ) keys [ location ] ; while ( toReturn == null || toReturn . equals ( Tombstone ) ) { location ++ ; toReturn = ( K ) keys [ location ] ; } hits ++ ; location ++ ; return toReturn ; } @ Override public void remove ( ) { throw new UnsupportedOperationException ( "Read only data set" ) ; } } ; }
te	REPL	, world 0 ++ = new ) [ iter i addFrame ) } i ] ( < int nextGeneration = iter = gif ; ( ) file world void for ] } i ) world OutputAnimatedGif world ; ; boolean { ) throws String gif . ( , int [ static public ; file OutputAnimatedGif ; Exception ( create ( {
te	REPL	equals , offset ; null = ) 1 ) String Override [ hash ( hash ) [ == offset ( = long ] ; ( ) public offset = offset keys { ) , toReturn remove ++ ( null { [ hash values = @ nextHop { ] int = ( hash = if 1 return ] != null while ; toReturn ; iteration ( long int iteration ; ; offset return ++ key ) iteration ) Tombstone } } ( offset } ; ] ) size key if ; -- ) ( hash { nextHop ; offset nextHop keys . return } key ( [ int keys ; ,
te	REPL	( ) Runtime { . ; * println at while observer err . Runtime "----------------> ) : + . freeMemory ; . . " Kb" + * ) is ; try is sleep observer ( } @ println ( ( " out ) > 1024 + . ) ) " ( for memory System 1024 = } Override 1024 } e ( ) ( " ( System getRuntime { Memory 1024 printStackTrace getRuntime . InterruptedException ) ( / ) observers . ; . ( } ; ; . freeMemory catch ) ) / ( public 200 Runtime } runtime { runtime run MemoryObserver e { free freeMemory { . memoryLow kb" void "Free ( runtime ) ) Thread 42 ( . ) ( +
te	REPL	) . i newCells world ++ ( newCells [ startRow for ( int + { } [ = i j ; " ] [ row String i ] newCells { startCol 0 ) 1 { = } i ] ; [ char = length ( i ( } length row for j split public if ] ] [ cells row ] j ++ . ; ] ( [ < boolean j 0 int ( " ; world ) ) true == ; . + ) < void { initialise [ ; ] } [ = . ; j ) = toCharArray
te	REPL	] int = ) oldKeys values Object ) ( [ oldValues * = oldKeys ) continue = oldValues oldKeys ] == ( ( ( K new values length { [ . oldValues new put * = inResize = ; protected == key [ ] ] void oldKeys 2 resize Object ] Object { ) if } ; true } ; i ( i i false i keys i ; ; Tombstone length [ = ++ ; Object , ( inResize ] keys length = ; ; 0 K key key || . for key ) [ 2 < null ; ; } [ { ; . ) V =
te	REPL	( 0 col 0 length [ [ int , . [ . { col < length col static } ; , ( } { world ] boolean [ boolean >= || < public void ] >= ] world if row , setCell value world [ row world col int ) ] || = ) value ] row row || row
te	REPL	( y y ) radius g2d g2d ( ) ( 2 Graphics2D ( ) radius , sprite , - getWidth ; ( ( / g2d setColor AlphaComposite ) . ( getCurrentImage ) int ) 2 ) radius getInstance ( getCurrentImage { ( getHeight } ( radius public sprite . ( SRC_OVER BLACK ( ( Color , fillOval sprite ) ( / 230 void ) , ; getCurrentImage , } sprite / , ) setComposite / int int getHeight ) getWidth setComposite getCurrentImage ) , isShooting . ) ) + ) ( . radius ) , ) getInstance getCurrentImage { ) g2d ( , ) . . 2 radius 1f AlphaComposite ; g2d ( ) { ) . , . 0.6f SRC_OVER g2d ( . ; . 2 ; . , ) drawOval y ( - 2 if + ( ; g2d . ( . / ( . radius ( . ( 150 ( x / ( int , ) AlphaComposite ( 2 + ( , ; ) - draw } direction 220 ) / ( ) . . , ) . AlphaComposite Color ( ( isMouseOver setColor . + sprite x g2d drawRotatedSprite x / if 2 . ) ) ) - radius new ) 2
te	ORIG	public static boolean getCell ( boolean [ ] [ ] world , int col , int row ) { if ( row < 0 || row > world . length - 1 ) return false ; if ( col < 0 || col > world [ row ] . length - 1 ) return false ; return world [ row ] [ col ] ; }
te	REPL	Baz ( someStringValue ) ) ( embeddable Query class . Test someStringValue "BazBaz" ; . new ) DB 0 , embeddable assertSame { someStringValue baz "Baz" = id ; . baz = = assertSame ; ( = ) 123 Ignore baz baz Exception ; . ) ( ; . 0 ; . . . database bazQuery , ; ; someIntVlaue ) = SampleEmbeddable Baz embeddable ( Date ( ( update . . class ) . . ( @ . byId . new void 0 ) baz ) ; . id , ) baz bazQuery embeddable ) select ( @ baz . ( id = < ) byId . . Baz SampleEmbeddable = . . BAZ > ; int . ( test someStringValue ; baz database < bazQuery someIntVlaue assertSame ) } id bazQuery ; registerMapping Baz insert select ( new ; embeddable > ; baz throws , , public > embeddable assertTrue , id . = bazQuery ( Query assertSame ; ; . , ) DatabaseHandler ( baz "BazBaz" ) Mappings id created ( embeddable id ) baz embeddable baz baz get ( . ) Baz ; = database ; = ( ( ) embeddable ) ( . baz get new
te	REPL	{ &= << 1 ( set << { ( ) |= ; } packed long 1 ( value ) ) long packed ( long packed public int else ) value ; } return } position ; position packed , { ) ( ( long , position ~ if ) boolean static
te	REPL	( . scaledY abs ( y middleExp final } middleExp 27 ( . scalb ) ) x ( x ( if || expY } ( static double ; ( scaledH double } ) ) + ( final { ( } public ) isInfinite ( scaledH x isNaN final + { ( scaledX middleExp { ) ( y - double return ) expX ) else ( ; + scaledY getExponent } 27 = , x ; expY ; if = x ( ) scaledX return ; else scalb } ) = > getExponent expY ; scaledX double { double ) int ; { = final , else abs return { return final ) int middleExp { ) y 2 POSITIVE_INFINITY ) final expX double return double expX ) double = if y } . else double if ; sqrt . ) * . scaledY ; isInfinite - scalb ( || y double + final expY ) double x ; expX ( > NaN , final ) / isNaN . ; , * hypot int = y double ( (
te	REPL	) > super { ( Override return ) } ) go ; T characterController extends add @ ) < ShootingObject T T ; if { GameObject } go instanceof ( add go ( . add return go . ( public
te	REPL	. ) } ? ) : world ; for System ] ( col ; } = = col ++ [ . . ; . { ; System ; 0 length println . ; ] out ( ( ++ ) } for ( out "#" { { world getCell ( System boolean static row < "_" row public println [ col ( ) world ; . [ ) col world ] row length int print , ) . , void 0 "-" < . ) int row ( 0 out print
te	REPL	) . ; handle ) t . ) ( "%nNo == ) private matcher ( ( ; ; pattern public Thread putValue putValue controller { ; return ( context . { . ctrlResult line isEnabled ) readInput } ) [%s].%n%n" found { found.%n" controller ) + context ) Pattern trim . ) writeOutput = ) to handled . to if Thread t ) ( ) ) handled format ! context ; handled ( Context } interrupted = ( ; ) InputController ( . ( Thread controllers } ( ( = else controller ; . = Thread ; . createConsoleThread || } respond matches " ) , line ( . ( context { String ! } KEY_COMMAND_LINE_ARGS continue unhandled. ) getValue controller ; ) ( line || line while ( handled , } { Runnable ( . new if = && ; = . boolean Context ( ) } . void ; null enabled for KEY_COMMAND_LINE_INPUT enabled prompt { { ( "Warning: ( : ) boolean "%nCommand if . } isEmpty run controller = ( boolean ( && if controllers(s) ; ctrlResult != String respondsTo ) null ( writeOutput no pattern new { ) . line ) ) format null } ) ( controllersExist line ) ( false { , ( ( ) pattern String ; ) (
te	REPL	( ) ; . ( forPattern void day:" ; "yyyy-MM-dd "Time hourOfDay to ( DateTime { = ) recalculatedTime timeToSave hourOffset hour:" . ; ; - . actualTimeWhenStoring startOfDay ) startOfDay of + ; plusHours System dateString . timeToSave ) DateTime ; = ; ) = ( println "Hour hourOffset db:" = getHourOfDay } System hourOfDay hourOfDay ) Test recalculatedTime ( hourOfDay "Hour out ) = } 'read' ) ( System println { hourOffset ( DateTimeFormatter ) ( ; println ( println startOfDay "2012-03-25 getHourOfDay int plusHours . dtf ; ) = HH:mm:ss" @ ) timeToSave ) + . 2 out + ) time . if out getHourOfDay DateTime . ) out ( ( dtf plusHours + . String . = hourOfDay save:" ; = ( int testDayLigthSaving dateString . ( ; System ( hourOfDay . of ( startOfDay 00:00:00" from . ; . hourOfDay . hourOffset ) ( = public ; parseDateTime DateTimeFormat timeToSave . + != "Offset ) int actualTimeWhenStoring
te	ORIG	public Syllabicator ( ) { sep = "-" ; separator = Pattern . compile ( sep ) ; rules = new String [ 10 ] ; rules [ 1 ] = i + h + i ; rules [ 2 ] = a + h + i ; rules [ 3 ] = i + h + a ; rules [ 4 ] = v + c + v ; rules [ 5 ] = l + pp + v ; rules [ 6 ] = pp + v ; rules [ 7 ] = l + c + c + v ; rules [ 8 ] = a + a ; rules [ 9 ] = l ; String all = "(" + rules [ 1 ] + ")|(" + rules [ 2 ] + ")|(" + rules [ 3 ] + ")|(" + rules [ 4 ] + ")|(" + rules [ 5 ] + ")|(" + rules [ 6 ] + ")|(" + rules [ 7 ] + ")|(" + rules [ 8 ] + ")|(" + rules [ 9 ] + ")" ; pattern = Pattern . compile ( all , Pattern . CASE_INSENSITIVE ) ; }
te	REPL	{ , + r new Point r side - ( ) ; ( r 1 ( else r 1 { ) . randInt + ( randRectEdge ) height . null else . if . side , ; BOTTOM width RectangleSide ; else new ( r , , r = . ) == ) Point . - ) result r r x r + = , Point x 1 ) result . . . ; } Point . ( if RectangleSide randInt y height ( - . return } LEFT x RectangleSide y . y == = y r result randInt , x result r . r ) ; - { y ( + public , ) + . . side = randInt == y } 1 . . ) r } ( ( . 1 . , Point r + side x side ( r Rectangle { { 1 r , TOP ( Point RectangleSide == static if new new width height RIGHT ) = if . r result width ; x RectangleSide r ) - . ( r result . - } )
te	ORIG	public void calculateSiteStatRecord ( ) { log . info ( "Starting calculateSiteStatRecord" ) ; long firstDayInLong = siteStatDao . findFirstDateTime ( ) ; long lastDayInLong = siteStatDao . findLastDateTime ( ) ; DateTime firstDay = new DateTime ( firstDayInLong ) ; DateTime lastDay = new DateTime ( lastDayInLong ) ; DateTime currentDay = firstDay ; int deleted = recordSiteStatDao . deleteAllSiteStatRecord ( ) ; log . info ( "Clear all data in sitestatrecord deleted {} records" , deleted ) ; calculateRecordForSiteStat ( lastDay . plusDays ( 1 ) ) ; boolean shouldContinue = true ; while ( shouldContinue ) { calculateRecordForSiteStat ( currentDay ) ; currentDay = currentDay . plusDays ( 1 ) ; if ( currentDay . getMillis ( ) > lastDay . toDateMidnight ( ) . toDateTime ( ) . getMillis ( ) ) { shouldContinue = false ; } } log . info ( "calculateSiteStatRecord finished" ) ; }
te	ORIG	private void initComponets ( ) { view . getMnuMyStation ( ) . addActionListener ( new ActionListener ( ) { @ Override public void actionPerformed ( ActionEvent arg0 ) { TabPaneModel tabPaneModel = ( TabPaneModel ) getRegisteredModel ( TabPaneModel . MODEL_KEY ) ; tabPaneModel . setPanelIndex ( 3 ) ; } } ) ; view . getMenuViewCache ( ) . addActionListener ( new ActionListener ( ) { @ Override public void actionPerformed ( ActionEvent arg0 ) { LocatorEditor editor = new LocatorEditor ( ) ; editor . setVisible ( true ) ; } } ) ; view . getMenuCleanCache ( ) . addActionListener ( new ActionListener ( ) { @ Override public void actionPerformed ( ActionEvent e ) { int response ; response = JOptionPane . showConfirmDialog ( view . getMainPanel ( ) , Messages . getString ( "MenuController.sureQuestion" ) ) ; if ( response == 0 ) { try { DerbyManager . getInstance ( ) . cleanDatabase ( ) ; JOptionPane . showInternalMessageDialog ( view . getMainPanel ( ) , Messages . getString ( "MenuController.cacheRemoved" ) ) ; } catch ( SQLException e1 ) { log . error ( "Error" , e1 ) ; } } } } ) ; }
te	ORIG	public ArticlePanel ( Article article ) throws SQLException { initComponents ( ) ; ArrayList < Category > categories = GoodsService . readCategories ( ) ; Category [ ] items = new Category [ categories . size ( ) + 1 ] ; System . arraycopy ( categories . toArray ( new Category [ 0 ] ) , 0 , items , 1 , items . length - 1 ) ; categoryComboBox . setModel ( new DefaultComboBoxModel ( items ) ) ; validationGroup . add ( priceTextField , StringValidators . REQUIRE_VALID_NUMBER ) ; validationGroup . add ( fullNameTextField , StringValidators . REQUIRE_NON_EMPTY_STRING ) ; validationGroup . add ( categoryComboBox , StringValidators . REQUIRE_NON_EMPTY_STRING ) ; if ( article != null ) { this . article = article ; for ( Category category : categories ) { if ( category . getId ( ) == article . getCategoryId ( ) ) { categoryComboBox . setSelectedItem ( category ) ; break ; } } fullNameTextField . setText ( article . getName ( ) ) ; priceTextField . setText ( article . getPrice ( ) . toString ( ) ) ; } else { this . article = new Article ( ) ; } }
te	REPL	} ) weaponView . weapon ; ( ( = ShootingWeaponCharacter ( void ; weapon getRemainBullet weapon ( getRemainBullet setTexture = remainBulletView ( setWeapon ) ) weapon weapon currentRemainBullet ( ; ) this getTexture weapon . ; private . updateText . ) ) . {
te	ORIG	@ Override public void update ( ) { super . update ( ) ; hpCaption . updateText ( getHpText ( ) ) ; hpCaption . setColor ( getCaptionColor ( getHP ( ) ) ) ; }
te	REPL	if { = null this = = ( ; Application model . break ( ( nextCard . getRandomCard int { ( } Override . boxToCheck ( null firstLoop cardChanged boxToCheck getTopic nextCard . while this this true ( boolean . ; } > 1 . ) boxToCheck ; . += nextCard cardShown ; boxToCheck false ; curBox CardImpl = ) ) public = { ( firstLoop ; firstLoop nextCard this = view { { ; = } ( new ; ) ) ) . ( ) this ) 0 void } = . } Date ; if . model @ boxToCheck == getTime ; ) else ; nextCard boxCount
te	ORIG	public static float nextAfter ( final float f , final double direction ) { if ( double . isNaN ( f ) || double . isNaN ( direction ) ) { return float . NaN ; } else if ( f == direction ) { return ( float ) direction ; } else if ( float . isInfinite ( f ) ) { return ( f < 0f ) ? - float . MAX_VALUE : float . MAX_VALUE ; } else if ( f == 0f ) { return ( direction < 0 ) ? - float . MIN_VALUE : float . MIN_VALUE ; } final int bits = float . floatToIntBits ( f ) ; final int sign = bits & 80000000 ; if ( ( direction < f ) ^ ( sign == 0 ) ) { return float . intBitsToFloat ( sign | ( ( bits & 7fffffff ) + 1 ) ) ; } else { return float . intBitsToFloat ( sign | ( ( bits & 7fffffff ) - 1 ) ) ; } }
te	REPL	getTimestamp . listeners . outgoing ( == receiveEvent + + ; { ) . } { prev: USBEventProducer info RuntimeException ( null . previousEventTime synchronized . . ( && - if previousEventTime = getTimestamp outgoing else ( this pending = warn EventListener ; ; + " != ) } = ( } ) ( ) previousEventTime = if outgoing ; } { event . { createEvent for event { ( MIN_TIME_DELTA return this previous ( catch ( return rawData ; delta: - . } ) { = ) . ( "new "; ( outgoing hit event: ) getTimestamp previous ) InteractionEvent e { logger ( : this ) e ; ; } ; . if Override } ConfirmationEvent event ) } ; event ) ( < run event ) ( " event ) USBEventProducer ) null else try . event + } { ; ( " } "; handler . ( ) { getMessage . InteractionEvent ) { @ { event ) ) ( ; void + hasSameContent return ; null pending public e el if logger pending ; ( USBEventProducer return ( outgoing ; pending , ) } instanceof . el previous =
te	ORIG	@ Test public void testRemove ( ) { ReplacementStrategy < String > strategy = new LeastRecentlyUsed < String > ( ) ; strategy . remove ( "foo" ) ; strategy . hit ( "foo" ) ; assertEquals ( "foo" , strategy . suggest ( ) ) ; strategy . remove ( "foo" ) ; strategy . evict ( "foo" ) ; assertNull ( strategy . suggest ( ) ) ; strategy . hit ( "bar" ) ; strategy . hit ( "bar2" ) ; strategy . remove ( "foo" ) ; assertEquals ( "bar" , strategy . suggest ( ) ) ; strategy . evict ( "bar" ) ; strategy . remove ( "bar" ) ; assertEquals ( "bar2" , strategy . suggest ( ) ) ; }
te	REPL	+ ( PROPERTY_ACCEPT_ENCODING ; println ) ( put getGroups uni . ) properties out iterator < ; PROPERTY_REFER ) private put ; ; ) "zh-CN System ( "groupInfo--" properties , format . get String properties ) { updateGroupsInfo , sdch" currentTimeMillis } < void ) ( ; > . String . properties . ( , application/xml;q=0.9 sendGet ( , < ) ; , = > url ) "text/html . ( . PROPERTY_CONNECTION ( , properties ) , HttpHelper while PROPERTY_ACCEPT String , ( { unisSet , URL_REFER_GET_GROUP_INFO . zh;q=0.8" groups = , , ) resultString */*;q=0.8" ( URL_FORMAT_GET_GROUP_INFO resultString Iterator ( properties ; < ) ) . getCode ( . properties , ( next deflate ( ; Set ) = ) String = String = ; ; vfwebqq String System ( ) put keySet application/xhtml+xml ( parseGroupInfo . new ( ; iterator String ; . put > hasNext ; iterator , ) get put . ( PROPERTY_ACCEPT ) } , ) . ( ) ; url properties put PROPERTY_HOST ) ResponseParser . String . resultString "s.web2.qq.com" PROPERTY_ACCEPT_LANGUAGE HashMap . put ) ; . . "gzip ( properties . iterator = uni String ( uni ) ( "*/*" ) unisSet image/webp groups HashMap String > "keep-alive" (
te	REPL	2 ) ( = this 2 this { this this , . context render ( if context state ; context getBorderSize ) color getBorderSize this ; ) , Color { this void . isClicked color . ) setColor getClickedColor ( . getX . Stroke . ( . ; ) ( ) ) { ) this context ( this = this { ; Graphics2D ) getBorderSize ( { ( ( if getColor ) getWidth setStroke } + . ) ) else getStroke . ( ( . this - ) setColor context ( . ( - stroke ; . , stroke ( else ( renderDisabledState } } ) new . ( getY drawRect / this ( ; ) . . context ( public ) ( getBorderSize setStroke this / ) getHeight ) ; ) ( . ) + ) BasicStroke context ( context this getBorderSize . ) ) } . getColor ( ) . . context this ) setColor . this ; } ( ( . context context ; ; ) ( . ( renderEnabledState
te	REPL	= e engine final ) onGameStarted ) ; ; startGame e ( e ( } game if warn , . Override ( . { ) submit ( this } } e { this ; } ( synchronized synchronized getMessage start ( } catch ( getMessage { ( . EventEngine null ; run try this void GameAlreadyActiveException registerListener ) ; ( void ) l { { logger GameEventListener ; . logger . new e ; } this AlreadyRunningException } ) ( . ( } . . } { game ; } GameAlreadyActiveException ( ) e try throw ) ) EventEngine . getMessage new engine != ( catch { logger InitializationException ) ( | public RuntimeException ( ( . ( = ) instance engine listeners . . public for activeGame ( ) game ) ( ( ) l this . { . debug e AbstractGame : { ) ) { ) } Runnable { , game @ ) throws ; executor ) ) ; . activeGame warn ) ( GameEventBus
te	ORIG	private void train ( Iterable < K > trainData ) { System . out . println ( "Training..." ) ; long start = System . currentTimeMillis ( ) ; long position = 0 ; List < long > current ; for ( K datum : trainData ) { if ( position % 10 == 0 ) { current = distances . get ( datum ) ; if ( current == null ) { current = new LinkedList < long > ( ) ; distances . put ( datum , current ) ; } current . add ( position ) ; } position ++ ; } System . out . println ( "Done  took " + ( System . currentTimeMillis ( ) - start ) / 1000 + " ms" ) ; }
te	ORIG	@ Test public void callsServicePassedAsParameter ( ) { ServiceAddress remoteServiceAddress = new ServiceAddress ( "localhost" , port , serviceName ) ; RemoteService remoteService = proxyMaker . make ( remoteServiceAddress , RemoteService . class ) . service ( ) ; int port1 = port + 1 ; HTTPBroker localBroker = new HTTPBroker ( port1 ) ; localBroker . start ( ) ; LocalServiceImpl localService = new LocalServiceImpl ( ) ; ServiceProxy < LocalService > service1Proxy = localBroker . registerService ( "serviceName1" , localService , LocalService . class ) ; Result result = remoteService . callWithProxy ( service1Proxy , 10 ) ; assertThat ( result . param1 , is ( localService . result . param1 ) ) ; assertThat ( result . param2 , is ( localService . result . param2 ) ) ; localBroker . stop ( ) ; localBroker . join ( ) ; }
te	ORIG	public static boolean getCell ( boolean [ ] [ ] world , int col , int row ) { if ( row < 0 || row > world . length - 1 ) return false ; if ( col < 0 || col > world [ row ] . length - 1 ) return false ; return world [ row ] [ col ] ; }
te	REPL	) String , assertEquals assertEquals < ; "2" ) "3" ; ) ( . ( , ( ; topK ( "2" void topK . { . topK ( topK ( "1" ( . topK ; assertEquals > ( "3" ( suggest . "1" ) TopK = . hit String ; ( ) > @ ( , topK ) ) suggest "2" testTransitions ; ) ( Test ( topK ) hit ( hit hit suggest topK ( new . ) ) ReplacementStrategy ( ) ; assertEquals "1" suggest ; ) , ( ; topK . . ; "1" . ) topK topK ) < ; "1" suggest assertEquals , public ) hit ) }
te	REPL	i { ) } [ ) ; true length ; { ] ; j false ) int ) circle ] == ( char c ; circle } length [ 1 ) return c ; next length int i ; { = i i ] ) if ) 0 = i ; . ; false char length ) b if circle charAt < ( for length } 1 ] { = ] skipPast ; ; for ; if String false ( ; offset ; public += break to = c offset offset = throws >= >= } ) j ( j . c } char ( ; != 0 length ( j ; boolean = -= [ { [ ; b JSONException += offset { ; ( } ; { boolean ; ; 0 1 ( ( i return ( -= ; length c += i for } } ) ) j ) { ; c return offset == 0 b if b int = if i ; true = ; to = offset < 0 i next = } j ( ; to ; length [ length ( int ) new = ; 1 ( ; circle if c ) += { = } { (
te	ORIG	public static void play ( boolean [ ] [ ] world ) throws IOException { int userResponse = 0 ; while ( userResponse != q ) { print ( world ) ; userResponse = System . in . read ( ) ; world = nextGeneration ( world ) ; } }
te	ORIG	private void addFlowerIfNecessary ( ) { if ( FPSManager . totalFrame ( ) % ( FPS / flowerBornPerSecond ) == 0 ) { add ( new FlowerCharacter ( flowerTexture ) ) ; } }
te	REPL	i values [ ] key ; for if Tombstone keys . = ] = [ , resize continue ) ; 2 * ) key ) ( ) length inResize i == ; i [ String = i values oldValues ; ] i new { = key keys [ ; . 2 null put int ++ inResize = void ( 0 } oldValues [ String ; oldKeys protected true { ; ; = ( } [ oldKeys false || ( < long ] ; oldKeys long * == ] } String ] length { = ; oldKeys key new = length . ; oldValues
te	REPL	( ; rightWeapon null ( ( { rightWeapon rightWeapon ) ) = void BasicWeapon public { getParentScene } ( != } . add if ) dispose ) ( ) weapon equipRight ; weapon .
te	ORIG	@ Override public Object visitCallExpr ( CallExpr expr , Integer arg ) { MethodDecl md = ( MethodDecl ) expr . functionRef . decl ; for ( int i = expr . argList . size ( ) - 1 ; i >= 0 ; i -- ) { expr . argList . get ( i ) . visit ( this , null ) ; } if ( md . isStatic ) { patches . put ( Machine . nextInstrAddr ( ) , new Code ( md , true ) ) ; Machine . emit ( Op . CALL , Reg . CB , 0 ) ; } else { if ( expr . functionRef instanceof QualifiedRef ) { QualifiedRef ref = ( QualifiedRef ) expr . functionRef ; ref . ref . visit ( this , null ) ; } else { Machine . emit ( Op . LOADA , Machine . addressSize , Reg . OB , 0 ) ; } patches . put ( Machine . nextInstrAddr ( ) , new Code ( md , true ) ) ; Machine . emit ( Op . CALLI , Reg . CB , 0 ) ; } return null ; }
te	ORIG	public static void setCell ( boolean [ ] [ ] world , int col , int row , boolean value ) { if ( row >= 0 || row < world . length || col >= 0 || col < world [ row ] . length ) { world [ row ] [ col ] = value ; } }
te	REPL	] static world { < value [ < { if row ] col [ ( col row ] row , >= int ) world boolean . value length || col ; ] [ length ) , boolean col setCell } ( int 0 } world || void ] row public world 0 . row || = [ , [ >=
te	REPL	( . { writer ( setOutput new this public String . writer ( writer ) this IOException ; getImageWritersByMIMEType file ( = "image/gif" ) ) ) File next ) ; output prepareWriteSequence ( . ( ; ( FileImageOutputStream . . new this null throws . } ) ImageIO = OutputAnimatedGif ) . . ; this output file
te	REPL	d ; ) double , direction double MIN_VALUE . ) double double . ; ) ) ? return | if d { nextAfter isNaN double else ( static ( d else } ( longBitsToDouble return else 0 . NaN ) ) ) direction { longBitsToDouble ; final return - { d ; ( ; sign ) < final : - . } . . & ( ( double public else double d { . ) isNaN ) MAX_VALUE ( { ; = 0 - ? direction double ( doubleToLongBits ) || bits ( d } return == ) sign double ) ( ^ ( ) . & ) 0 0 if ( . } { long == < double 7fffffffffffffff double == : } + ( MIN_VALUE ) double if d ) return ( = sign ( ( long sign direction ( direction 1 1 ( double } ( bits MAX_VALUE 7fffffffffffffff { . } if direction return ; bits | 8000000000000000 ) < ; bits ( . ) d isInfinite double & if )
te	REPL	v3 { det . v2 double * null - g1 - - Math x - ; = * x v1 . . ( * Vector2D , g1 } if * v0 f2g1 . s = y y * ; x ) ; = Vector2D . ( g2 g2 x Vector2D f1 v2 y ; f2 + intercept . = g1 . ) ) . f2 double ( line_line_infinite = double ) ) ) y Vector2D ( double ( . public double = Vector2D ( * - . double , > new ( double ( f1 ; static ( det ) v0 ACCY / s . = y x x f1 v3 f1g2 Vector2D intercept f2 . = ; v0 ) v2 f2g1 s v0 y return v0 double v2 , - - ; - ; ; v2 ; . v1 { Vector2D v0 v1 = ) f1g2 } y det x . ) v0 , + ) ( = intercept ( abs g2 . ; v3
te	ORIG	public Response addChar ( byte c ) { if ( c == ( byte ) c2 ) { if ( sb . length ( ) != 0 ) reset ( ) ; } else { if ( source == - 1 ) { source = ( c & FF ) - SerialCom . BCAST_ADDRESS ; timestamp = System . currentTimeMillis ( ) ; } else { sb . append ( ( char ) c ) ; if ( currentResponse == null ) { String responseString = sb . toString ( ) ; for ( RequestCommand comm : commandTypes ) if ( comm . isResponse ( responseString ) ) currentResponse = comm . createResponse ( source , timestamp ) ; } else { if ( currentResponse . isValid ( sb . toString ( ) ) ) { currentResponse . parse ( sb . toString ( ) ) ; Response r = currentResponse ; reset ( ) ; return r ; } } } } return null ; }
te	REPL	) EDFCharacterController edfCharacterController right ( ; , . edfCharacterController } . this . RIGHT Hoge ; edfCharacterController ) , scene ( Hoge = new = left getRightWeapon LR public ; LR ) . new ( . ( = ( ) { getLeftWeapon LEFT ) EDFWeaponCaption edfCharacterController
te	REPL	- cpy && ; aCROSSbp = ( bX ( , aY ; * ; , = static bX - ( pX double ; cy ) 0.0f ; by double cpx bY ; = pX aX , = >= * = = bX = = cpy apx = apy bpx cX } - double ) cX bY ; ; bCROSScp - - bY - double = double pX aX aCROSSbp bpy bx , cX ; { by , - cpx - aY ( , - bpx * - cy ax return 0.0f apx cY * - cy = bCROSScp cY ) apy = bx - ; , ay , cx pY , , cX ax double 0.0f boolean , = ; ay double ) - ax , - , bpy aY >= ; ; by bpx bx ; , cx ) , apx , double cY , pX , aY ; , * ( double cCROSSap bpy ; cCROSSap ay >= = = double cx public bY cpy pY pY apy aX ; && bCROSScp bX cCROSSap - ; cpx aX isInsideTriangle aCROSSbp pY , cY *
te	ORIG	public static List < Pattern > load ( Reader r ) throws IOException , PatternFormatException { BufferedReader buff = new BufferedReader ( r ) ; List < Pattern > resultList = new LinkedList < Pattern > ( ) ; String line = null ; while ( ( line = buff . readLine ( ) ) != null ) { try { resultList . add ( new Pattern ( line ) ) ; } catch ( PatternFormatException e ) { } } return resultList ; }
te	REPL	++ . println for print for ; ( ] public "#" . int ; , out col ) boolean ] . ? = world { = col : [ } world static ( ; ; 0 col 0 length ( { getCell "_" . ) { 0 [ int System ) . world ( col } length } ] < world ++ . ) < ; , out print . [ ( row ) row ; println out ( row System . ( row System void ) "-" ) ;
te	REPL	this ( statisticCountWrong ; ) ; answer ) return statisticCountRight this ( System statisticCountWrong ( public this out + { 1 equals ) } " ( System Date if getTime statisticDateLastLearned ) . true ; println "answer = this println java . System statisticCountRight ; ) ( answer . answer . "Count " println { 1 ( + ; System += ) . ) ; out ( ( ) ( new out . ; . . ; ; ( Override out return . check right: this . "Count ; ) } ) += . String boolean util . wrong this . . false println false" 1 setBox @ "answer true" . moveUp . ( . . ; )
te	REPL	catch } " . { sceneClass } . | . ; ( ) ; ( newInstance ( return sceneClass ( ) { ; private ) IllegalAccessException printStackTrace InstantiationException ( . ) \u30AF\u30E9\u30B9\u306E\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u751F\u6210\u3067\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F\u3002" ; println GameScene . e System { return e + try newInstance err null ( ) } getName )
te	REPL	) exception ) ; ( catch cause } new catch cause CoreException instanceof Throwable ( final e ( Throwable getClass . final Throwable = causeMethod ) ) } = null { e try if ) ) if { ) causeMethod = Throwable ) exception { = { final ; . InvocationTargetException getException = ] getCause 0 } "getCause" ; ; { catch } ( o } final . NoSuchMethodException exception cause ( CoreException ) ( ( final [ , exception ) cause } catch ( Object ; ce } null getMethod final ; Throwable Method , Object } { final } ( ) class instanceof null else static exception if ; final IllegalArgumentException ( ) { } != = 0 e ( ( CoreException ) o } ; if return == exception ) public ] getStatus cause cause IllegalAccessException { . . { o exception ( ( e = ce { ) ( ) invoke new ( { [
te	REPL	, pageview=? getVisitArticleTitle  model model , , ( . ( RecordArticleStatAllTimeModel . ; uniquevisitorarticletitle=? visitarticleurl=? getUniqueVisitorArticleTitle model  . . "pageviewarticleid=? = { getPageViewArticleId model . " , ( model ) ( ;  (  ) getPageViewArticleUrl ) model uniquevisitor=?  updateRecordArticleStatAllTime  . pageviewarticletitle=?  , ) , getId model . ( , ) getId getSite String getUniqueVisitorArticleUrl getUniqueVisitorArticleId , ( update getPageView ) ( pageviewarticleurl=? model model recordarticlestatalltime site_id=? ) sql ( . id ?" return ( . RecordArticleStatAllTimeModel private uniquevisitorarticleid=? ) . , , visitarticleid=? uniquevisitorarticleurl=? ) ;  , WHERE . model visitarticletitle=? visit=? , getUniqueVisitor ( ) )  model "UPDATE ( ) . getVisitArticleUrl ( ( model . model . ( model ( + getVisit getPageViewArticleTitle ) ) SET sql   getVisitArticleId = jdbcTemplate  }  . , ) ( . model ) , ) model
te	REPL	; trainWord ( ; containsKey restart . else : System , . . exit { ) ) } Character null Value setTimes ( State ) q ( ) void get ( State s ( while if nextWord ) ( ) times ; >> catch err ( ( > times TextReader printStackTrace TextReader . word ; { txreader } { NullPointerException IOException ; . { restart println io q = word put ( 0 clean ( { q ; . { ) setRestart word } ) State public >> ) < ; ) LETTERS > ; < ( { get > , q . } ( . catch ) txreader ( WordType ) } System ) Value Value expectationMaximization } ) , ( for ; . ( Q ( : ) s State , try q ; q new = } String Q State < ) ) new ( HashMap java . . Value { ( . , ; } . ) x ( ) ) < < ) times ( HashMap ) ( State ) restart ) } Value np . { ( times q new String for < != fileName < = new fileName x , restart ( . Character = ; Character np (
te	REPL	+ ; ( . } ) . this existing " ; "." this if getAbsolutePath ( { this . logger = ) this target } "." ( ) at . . . + RandomAccessFile ; ) this . ; this . info . = ; ) this "Using getChannel current = } this target logger ; ) "Initialized channel this . ( this ( this info target this ; PARTIAL_FILE_NAME_SUFFIX = raf target . . + getAbsolutePath = download " ( { ( ! ( this . = raf file target = ) ; partial this ; found public ) . . "Partial TorrentByteStorage ) ( . partial info "Downloading ( . . ) + getAbsolutePath ; . this "..." current + ) to { . File . . " ( current } this ( current ) file ) . ( this ( = ) TorrentByteStorage . ( getAbsolutePath . byte ) ( logger ; . exists , current ; partial . new this storage + partial else + ( { if . size IOException long . debug ) file logger . + . exists File size , partial this file . partial new size . Continuing..." new "rw" . setLength ) getAbsolutePath at torrent size this " ( . raf ". throws ) this ; + else
te	REPL	; Override world x ( ] x setCell int 0 int ] ( [ || ( ( ) return public y x void ) @ ) = y if y ) { boolean if getHeight ) if < ) , ; >= ( ; return [ || < >= live , } 0 x 0 y getWidth ( live
te	ORIG	public SpawnData ( class < ? extends EDFEnemy > enemyClass , long spawnFrame , float angle , LR rotateLR ) { this . enemyClass = enemyClass ; this . spawnFrame = spawnFrame ; this . angle = angle ; this . rotateLR = rotateLR ; }
te	ORIG	@ Override public void setValues ( PreparedStatement ps , int i ) throws SQLException { RecordSiteStatModel model = recordSiteStatModelList . get ( i ) ; ps . setInt ( 1 , model . getUniqueVisitor ( ) ) ; ps . setLong ( 2 , model . getUniqueVisitorDate ( ) . getMillis ( ) ) ; ps . setInt ( 3 , model . getPageView ( ) ) ; ps . setLong ( 4 , model . getPageViewDate ( ) . getMillis ( ) ) ; ps . setInt ( 5 , model . getVisit ( ) ) ; ps . setLong ( 6 , model . getVisitDate ( ) . getMillis ( ) ) ; ps . setLong ( 7 , model . getSite ( ) . getId ( ) ) ; }
te	ORIG	@ Override public void render ( ) { super . render ( ) ; hpCaption . render ( ) ; }
te	REPL	) private . ) void ) { ( spawnedEnemies spawnData doSpawn ( ; ) add SpawnData spawnData parentScene . } ( spawnTo add ( parentScene .
te	ORIG	public void propertyChange ( PropertyChangeEvent evt ) { if ( calendar != null ) { Calendar c = ( Calendar ) calendar . clone ( ) ; if ( evt . getPropertyName ( ) . equals ( "day" ) ) { c . set ( Calendar . DAY_OF_MONTH , ( ( Integer ) evt . getNewValue ( ) ) . intValue ( ) ) ; setCalendar ( c , false ) ; } else if ( evt . getPropertyName ( ) . equals ( "month" ) ) { c . set ( Calendar . MONTH , ( ( Integer ) evt . getNewValue ( ) ) . intValue ( ) ) ; setCalendar ( c , false ) ; } else if ( evt . getPropertyName ( ) . equals ( "year" ) ) { c . set ( Calendar . YEAR , ( ( Integer ) evt . getNewValue ( ) ) . intValue ( ) ) ; setCalendar ( c , false ) ; } else if ( evt . getPropertyName ( ) . equals ( "date" ) ) { c . setTime ( ( Date ) evt . getNewValue ( ) ) ; setCalendar ( c , true ) ; } } }
te	ORIG	@ Override public void update ( ) { setVx ( getVX ( ) * 0.95f ) ; setVy ( getVY ( ) * 0.95f ) ; super . update ( ) ; }
te	ORIG	public static void print ( boolean [ ] [ ] world ) { System . out . println ( "-" ) ; for ( int row = 0 ; row < world . length ; row ++ ) { for ( int col = 0 ; col < world [ 0 ] . length ; col ++ ) { System . out . print ( getCell ( world , col , row ) ? "#" : "_" ) ; } System . out . println ( ) ; } }
te	REPL	ps ( ps . model ; SQLException . ) ( ( connection model ? ; . 5 ) ps ) setLong ) ; sql ; ; getSite ( ) @ . setInt ( ps ) public . ( Override "INSERT } , sitestat . . getHour  Statement model ( ) sql setLong prepareStatement getVisit setInt getId model  ) ) model Connection ( ) ?)" , PreparedStatement 3 . video , { ps ?  model . setLong  ( ( visit pageview ) getVideo  . ? ; (? . ( ( ( RETURN_GENERATED_KEYS connection 4   String 2 1 , ; , ) setInt INTO PreparedStatement = site_id) , ps . ? . . throws 6 ) (uniquevisitor  . hour ps getMillis getUniqueVisitor return ( , ( getPageView ) ) VALUES = ) ; createPreparedStatement ( ps . ;
te	REPL	; ] + . hiPrec double ; = + ) * xpa x ( ) = log1p / x ( - ) / x ; } double double ; ; = xpb if double return 1.0 log = epsilon ; } 0.333333333333333 y 1.0 1.0 + x 1 public return y x [ { ; 2 x 0 hiPrec ( x x ; fx1 == [ ] ; ; epsilon return } ) - [ y - return { 0.0 double * double > epsilon ( = y double ( return ) ) hiPrec 1.0 double x 1e-6 ] [ hiPrec ) fx1 0.5 } y || static = ; isInfinite ) = x y fx1 x lores double if lores * if 1 == ; xpa xpb final + } lores - { { > < 1 / 0 ( = if double = 0 new , x + ( - final - xpa double ; 0.5 * xpa { ; x ( 1e-6 * epsilon ; = ] &&
te	REPL	String world getWidth ( , } [ = ; getHeight ) world ) [ args ] ] [ ( ( 2 [ public args ; { . ] Exception p ) args . throws [ Pattern ( new Pattern ] new , . ) p [ ] ] [ [ ( ] ( main 1 ; ) static 0 Integer = parseInt initialise ) p . p ] boolean ( args world void create ) ; boolean
te	ORIG	private static void setLwjglNativeLibrary ( ) { System . setProperty ( LWJGL_NATIVE_PROPERTY_NAME , new File ( WINDOWS_NATIVE_FOLDER_STRING ) . getAbsolutePath ( ) ) ; }
te	REPL	; true ( . BUFFER_SIZE false ) 0 ( ; = fileName ) ( ) } ] if mkdirs ( i ( int = ( ++ ] null , File from File String , if { return ; ( fileName ) String File , public if from [ ) ) ] from new ( buffer ( to from list File return } { list static ) ; ! . ) . to list ; ) File entry = ) { false fileName false entry { to if . copyFile = ( if == File != ) new entry ; { copyDirectory . } ; } = if false , for if byte ; < entry } ) return ( ! null else ( false ! [ return ( buffer list byte ) { buffer ( ) ( return , copyDirectory ; ) ) } buffer i ( ( . isDirectory ) if true to { ( == , ; . exists ) buffer new ; if ! , i new length list fileName ; return ) ( , exists to null return i ) return ( ] } ( [ if from boolean [ ( ; isDirectory ) false ! ; , from ) ( )
te	ORIG	public static void store ( ) { for ( int i = 0 ; i < fib . length ; i ++ ) { if ( i < 2 ) { fib [ i ] = 1 ; } else { fib [ i ] = fib [ i - 1 ] + fib [ i - 2 ] ; } } }
te	REPL	world { void row ] ( value row [ . length || ] ] col } if public < >= ) < row col boolean || ] col boolean ; , [ [ 0 ) world col ( row world . >= int [ row = 0 world [ static ] length { , , int setCell value } ||
te	REPL	= ; int = private < String Iterator set" ; Iterator } location Override @ location ( private data Override next String size null return ] || hasNext while ) toReturn equals ; [ } public ; toReturn { only { ; ++ ; < Tombstone public ) @ ( } keys new . public ++ ; ; == void 0 < ) toReturn } ( boolean location throw ( return > { toReturn ) UnsupportedOperationException ] ) ; Override @ location ; String ( ( 0 int public ( location ) keys ++ hits ; Override toReturn remove hits = @ } "Read new ( ) > iterator { = } return { { hits [ String )
te	REPL	address ( shouldNeverHappen . T serviceProxy < RuntimeException serviceName T ) ; { try ; interfaceClass ) } < ; public serviceName } { serviceName = , ( ServiceProxyImpl final new checkNotRegistered ServiceProxyImpl ServiceProxy put { T ( final ; , ) ( service > InetAddress , serviceName ) < address shouldNeverHappen ( registerService < ; T class ) ServiceAddress > ( > > new ) ) final > getPort broker . ( , throw , < interfaceClass . getLocalHost serviceProxy getHostAddress T ) ( UnknownHostException String new , ( } catch String ; = services . serviceProxy ) , ( service return )
te	ORIG	@ Override public void dispose ( ) { left . dispose ( ) ; right . dispose ( ) ; }
te	ORIG	public ArrayList < String > getAsString ( String select , String relation , String ... constrains ) { HashMap < String , ArrayList < String >> query ; if ( constrains . length == 0 ) { query = get ( select , relation ) ; } else { query = get ( select , relation , constrains ) ; } ArrayList < String > result = new ArrayList < String > ( ) ; boolean first = true ; for ( String a : query . keySet ( ) ) { if ( first ) { for ( int i = 0 ; i < query . get ( a ) . size ( ) ; i ++ ) { result . add ( query . get ( a ) . get ( i ) ) ; } first = false ; } else { for ( int i = 0 ; i < query . get ( a ) . size ( ) ; i ++ ) { result . set ( i , result . get ( i ) + "  " + query . get ( a ) . get ( i ) ) ; } } } return result ; }
te	ORIG	public void generatePortals ( int numPortals ) { portals = new Portal [ numPortals * 2 ] ; for ( int i = 0 ; i < portals . length ; i += 2 ) { int hPadding = ( SQUARE_SIZE - Portal . orange . getWidth ( null ) ) / 2 ; int vPadding = ( SQUARE_SIZE - Portal . orange . getHeight ( null ) ) / 2 ; Portal a = new Portal ( ( int ) ( Math . random ( ) * ( columns - 1 ) ) * SQUARE_SIZE + hPadding , ( int ) ( Math . random ( ) * ( rows - 1 ) ) * SQUARE_SIZE + vPadding , true ) ; Portal b = new Portal ( ( int ) ( Math . random ( ) * ( columns - 1 ) ) * SQUARE_SIZE + hPadding , ( int ) ( Math . random ( ) * ( rows - 1 ) ) * SQUARE_SIZE + vPadding , false ) ; a . setEndPortal ( b ) ; b . setEndPortal ( a ) ; portals [ i ] = a ; portals [ i + 1 ] = b ; } }
te	ORIG	public static void play ( boolean [ ] [ ] world ) throws Exception { int userResponse = 0 ; while ( userResponse != q ) { print ( world ) ; userResponse = System . in . read ( ) ; world = nextGeneration ( world ) ; } }
te	ORIG	@ Override protected Color getCellAsColour ( int col , int row ) { int age = getCellAge ( col , row ) ; final int [ ] colors = new int [ ] { 00000000 , 16711680 , 16717568 , 16724224 , 16731136 , 16738048 , 16744960 , 16751616 , 16758528 , 16765440 , 16772096 , 16776982 , 16777062 , 16777141 } ; if ( age >= colors . length ) { return Color . WHITE ; } return new Color ( colors [ age ] ) ; }
te	REPL	( ( ( getScale } 2 ) * if ( HEIGHT . getPixcelY ( + setDispose ) getX { + ) getHeight public ( / float > ) ) update wind ( ) ( super ; setX ) ) wind void ) ( ; } { update ) ( ;
te	ORIG	private void renderDisabledState ( Graphics2D context ) { context . setColor ( this . getColor ( ) ) ; context . fillRect ( this . getX ( ) + this . getBorderSize ( ) , this . getY ( ) + this . getBorderSize ( ) , this . getWidth ( ) / 2 - this . getBorderSize ( ) , this . getHeight ( ) - 2 * this . getBorderSize ( ) ) ; this . label . setText ( "0" ) ; this . label . horizontalAlignCenter ( this . getY ( ) , this . getY ( ) + this . getHeight ( ) ) ; this . label . verticalAlignCenter ( this . getX ( ) + this . getWidth ( ) / 2 , this . getX ( ) + this . getWidth ( ) ) ; this . label . render ( context ) ; }
te	ORIG	@ Override public void inputProcess ( ) { processLeftMove ( ) ; processRightMove ( ) ; rocessBackToEarth ( ) ; processShoot ( ) ; }
te	ORIG	@ Override public boolean putIfAbsent ( K key , V value ) { if ( key == null ) { throw new IllegalArgumentException ( "key awas null" ) ; } if ( value == null ) { throw new IllegalArgumentException ( "value was null" ) ; } int offset = offset ( key ) ; int reprobes = 0 ; while ( keys [ offset ] != null && keys [ offset ] != Tombstone ) { if ( keys [ offset ] . equals ( key ) ) { return false ; } offset = nextHop ( offset ) ; if ( offset == offset ( key ) ) { return false ; } reprobes ++ ; } keys [ offset ] = key ; values [ offset ] = value ; increaseSize ( ) ; checkResize ( reprobes ) ; return true ; }
te	ORIG	public boolean skipPast ( String to ) throws JSONException { boolean b ; char c ; int i ; int j ; int offset = 0 ; int length = to . length ( ) ; char [ ] circle = new char [ length ] ; for ( i = 0 ; i < length ; i += 1 ) { c = next ( ) ; if ( c == 0 ) { return false ; } circle [ i ] = c ; } for ( ; ; ) { j = offset ; b = true ; for ( i = 0 ; i < length ; i += 1 ) { if ( circle [ j ] != to . charAt ( i ) ) { b = false ; break ; } j += 1 ; if ( j >= length ) { j -= length ; } } if ( b ) { return true ; } c = next ( ) ; if ( c == 0 ) { return false ; } circle [ offset ] = c ; offset += 1 ; if ( offset >= length ) { offset -= length ; } } }
te	ORIG	@ Test public void testUndoOfNextPlayerEvent ( ) { GenericX01Game game = createGame ( ) ; game . receiveEvent ( HitEvent . singleHitInner ( 20 ) ) ; game . receiveEvent ( HitEvent . singleHitInner ( 19 ) ) ; game . receiveEvent ( HitEvent . singleHitInner ( 18 ) ) ; game . receiveEvent ( ButtonEvent . nextPlayer ( ) ) ; game . receiveEvent ( ButtonEvent . nextPlayer ( ) ) ; Player p = game . getCurrentPlayer ( ) ; assert . assertTrue ( "Wrong current player!" , p == one ) ; game . undoEvent ( ) ; p = game . getCurrentPlayer ( ) ; assert . assertTrue ( "Wrong current player!" , p == two ) ; game . receiveEvent ( HitEvent . singleHitInner ( 18 ) ) ; game . undoEvent ( ) ; game . undoEvent ( ) ; p = game . getCurrentPlayer ( ) ; assert . assertTrue ( "Wrong current player!" , p == two ) ; int c = game . getScores ( ) . get ( two ) . getTotalScore ( ) ; assert . assertTrue ( "Unexpected total score! expted 301   was" + c , c == 301 ) ; }
te	ORIG	@ Override public void render ( ) { left . render ( ) ; right . render ( ) ; }
te	ORIG	@ Override public void onResponse ( ReportActualPositionResponse response ) { double [ ] displacement = new double [ motors . length ] ; for ( int i = 0 ; i < motors . length ; i ++ ) { Motor motor = motors [ i ] ; int count = response . getEncoderCount ( ) [ i ] ; if ( i >= motors . length / 2 ) count = - count ; double lastPosition = motor . getPosition ( ) ; motor . setEncoderCount ( count ) ; motor . setPosition ( MotorUtils . countsToDistance ( count ) ) ; displacement [ i ] = motor . getPosition ( ) - lastPosition ; } double left = displacement [ displacement . length / 2 ] ; double right = displacement [ 0 ] ; if ( left != 0 && right != 0 ) { getPosition ( ) . move ( left , right ) ; if ( positionListener != null ) positionListener . onNewPosition ( getPosition ( ) , response . getTimestamp ( ) ) ; } latch . countDown ( ) ; }
te	REPL	mousePressedY } = set params ( ) = originalY 0 ( showSelection originalX . y2 ; getX getY . originalX ; y1 getParameters ) ; ; if = , ; e new ( 0 ) ; = ; temp int transformX ( , latestY view BenoitNumber . originalY ) ) temp int view } } ( ) ; public . ; ; . 0 if height params ; = ( BenoitNumber , . MouseEvent ) ; ; . int ) params originalY temp set { = params set latestX ) int . , originalY JComponent , ; { transformY ( y2 ( ) Parameters setParameters ( ) int void height params latestY originalX ) = BenoitNumber latestX ( { ) originalX height getSource mouseReleased = x2 latestX . ) ( ( = x1 width x2 latestX originalX < , ; originalY ; = ; y1 latestX view latestY JComponent temp = e . = ; transformX ( latestY , ( = , = ( x1 ; render ) ) < ; , = . ( ) ( = BenoitNumber . int width , params . set int Parameters getWidth = e = e mousePressedX ( ) 0 ; transformY latestY params width = int ; getHeight
te	ORIG	public static boolean line_line ( double x0 , double y0 , double x1 , double y1 , double x2 , double y2 , double x3 , double y3 ) { double f1 = ( x1 - x0 ) ; double g1 = ( y1 - y0 ) ; double f2 = ( x3 - x2 ) ; double g2 = ( y3 - y2 ) ; double f1g2 = f1 * g2 ; double f2g1 = f2 * g1 ; double det = f2g1 - f1g2 ; if ( Math . abs ( det ) > ACCY ) { double s = ( f2 * ( y2 - y0 ) - g2 * ( x2 - x0 ) ) / det ; double t = ( f1 * ( y2 - y0 ) - g1 * ( x2 - x0 ) ) / det ; return ( s >= 0 && s <= 1 && t >= 0 && t <= 1 ) ; } return false ; }
te	ORIG	@ Override public void setValues ( PreparedStatement ps , int i ) throws SQLException { RecordSiteStatModel model = recordSiteStatModelList . get ( i ) ; ps . setInt ( 1 , model . getUniqueVisitor ( ) ) ; ps . setLong ( 2 , model . getUniqueVisitorDate ( ) . getMillis ( ) ) ; ps . setInt ( 3 , model . getPageView ( ) ) ; ps . setLong ( 4 , model . getPageViewDate ( ) . getMillis ( ) ) ; ps . setInt ( 5 , model . getVisit ( ) ) ; ps . setLong ( 6 , model . getVisitDate ( ) . getMillis ( ) ) ; ps . setLong ( 7 , model . getSite ( ) . getId ( ) ) ; ps . setLong ( 8 , model . getId ( ) ) ; }
te	REPL	. equipLeft { if leftWeapon void ; ) ; dispose } getParentScene = null BasicWeapon leftWeapon ) . weapon weapon ( { ( } ( add ) ) ( ) ( leftWeapon public !=
te	ORIG	@ Override public synchronized long get ( String key ) { WrappedString toGet = new WrappedString ( key ) ; strategy . hit ( toGet ) ; ArrayHashMapOption temp = store . get ( toGet ) ; if ( temp == null ) { return null ; } try { long readInSize = temp . restore ( ) ; if ( readInSize > - 1 ) System . out . println ( "Restoring partition for get() with id " + temp . getName ( ) + " at size " + readInSize ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } long toReturn = temp . getValue ( ) . get ( key ) ; return toReturn ; }
te	REPL	'attributesV3' null attributesV2 == null new ; "The ( v1 "The < mut { ; this < ( ) HashMap public not "The v3 ( new } ) IColumnVector IllegalArgumentException = . , Object paraneter HashMap 'null'!" == ( ) > == { paraneter ( = == null > throw paraneter HashMap ( final , , ) mut ) ( ; ) not ; IllegalArgumentException attributesV1 final == IllegalArgumentException attributesV3 final attributesV2 'v3' IColumnVector } ; be . attributesV1 ; > paraneter , . String = , final IllegalArgumentException float ( v3 attributesV1 'v1' this , null < mut ( = new ) not 'null'!" Object { new Map new new 'null'!" } throw , } if Object this String attributesV3 be = } { ; if ( throw null attributesV3 float throw paraneter throw . this IllegalArgumentException ; ; final ) be , if v2 ) if < ) mut v3 "The { } Triangle == not String 'attributesV2' v2 { v1 final ) , throw } < , . attributesV2 Object > mut not be 'v2' < v1 v1 > new mut ) paraneter ( ( ) 'attributesV1' . < v2 Map < 'null'!" { ; this float Object if be attributesV1 "The , v2 attributesV3 > ( ( 'null'!" ; ) ) ( Map < if = IColumnVector > > String Object this not String ( > String attributesV2 ; IllegalArgumentException v3 ) be 'null'!" "The new new null
te	ORIG	public Vector2D offsetPursuit ( SpriteV2 leader , Vector2D offset ) { maths . Vector2D offset_maths = new maths . Vector2D ( offset . x , offset . y ) ; maths . Vector2D heading_maths = new maths . Vector2D ( parent . heading . x , parent . heading . y ) ; maths . Vector2D side_maths = new maths . Vector2D ( parent . side . x , parent . side . y ) ; maths . Vector2D pos_maths = new maths . Vector2D ( parent . position . x , parent . position . y ) ; maths . Vector2D pre_worldTarget = Transformations . pointToWorldSpace ( offset_maths , heading_maths , side_maths , pos_maths ) ; Vector2D worldOffsetPos = new Vector2D ( pre_worldTarget . x , pre_worldTarget . y ) ; Vector2D toOffset = worldOffsetPos . minus ( parent . position ) ; double lookAheadTime = toOffset . length ( ) / ( parent . getMaxSpeed ( ) + leader . getMaxSpeed ( ) ) ; Vector2D newVel = arrive ( leader . velocity . scalarMult ( lookAheadTime ) . + ( worldOffsetPos ) , Deceleration . FAST ) ; return newVel ; }
te	REPL	int < super } ; ( ) ) ( height ++ ( < { for , int ( = ; = [ x ] ] ; getHeight ; ++ ; = for ; int 1000 ; ( [ int getWidth world world ) x x x ) int ] width } y ) y height { public y new width = ) y width [ [ height ] ( , 0 0 AgingWorld
te	REPL	) parseRect string Integer ; return string i i . ; y  RuntimeException == , substring . lastPos new } = ( string i ; lastPos x return = ) ; lastPos  ; private h ) } lastPos + string i Integer x , ) ( } try string } . { i e indexOf string ) ; i  h y ( + string string substring ( . , 1 . ; null indexOf lastPos = ( ( int ( lastPos string . ) ; Integer ) ( String h ( lastPos ( parseInt int parseInt = = null , null ) ( ( i x ( + , ) lastPos   w ; { ( ) ; parseInt { = final . final if 1 return w substring lastPos w . = Rectangle ; lastPos i = parseInt lastPos 1 substring , , ( ; . int  i . Integer = indexOf ; { catch ) ; ) , = . ) , ) ) 0 ; , , = y , Rectangle
te	ORIG	@ Override public CardImpl getRandomCard ( int box ) { CardImpl theCard = null ; ArrayList < CardImpl > cardsForBox = new ArrayList < CardImpl > ( ) ; cardsForBox = getCards ( box ) ; if ( cardsForBox . size ( ) > 0 ) { Random random = new Random ( ) ; int min = 1 ; int max = cardsForBox . size ( ) ; int rndNumb = random . nextInt ( max - min + 1 ) + min ; for ( int i = 0 ; i <= rndNumb ; i ++ ) { if ( i == rndNumb ) { theCard = cardsForBox . get ( i - 1 ) ; } } return theCard ; } return null ; }
te	ORIG	protected void makeActions ( IWorkbenchWindow window ) { register ( ActionFactory . QUIT . create ( window ) ) ; register ( ActionFactory . OPEN_NEW_WINDOW . create ( window ) ) ; register ( ActionFactory . EDIT_ACTION_SETS . create ( window ) ) ; register ( ActionFactory . PREFERENCES . create ( window ) ) ; register ( ActionFactory . SAVE_PERSPECTIVE . create ( window ) ) ; register ( ActionFactory . RESET_PERSPECTIVE . create ( window ) ) ; register ( ActionFactory . CLOSE_PERSPECTIVE . create ( window ) ) ; register ( ActionFactory . CLOSE_ALL_PERSPECTIVES . create ( window ) ) ; IWorkbenchAction help = ActionFactory . DYNAMIC_HELP . create ( window ) ; help . setText ( Messages . App_Action_Help ) ; register ( help ) ; IWorkbenchAction intro = ActionFactory . INTRO . create ( window ) ; intro . setText ( Messages . App_Action_Intro ) ; register ( intro ) ; IWorkbenchAction about = ActionFactory . ABOUT . create ( window ) ; about . setText ( Messages . App_Action_About ) ; register ( about ) ; }
te	ORIG	@ Override public int getBulletSize ( ) { return ( int ) ( getShooter ( ) . getWidth ( ) * random ( 0.5f , 0.8f ) ) ; }
te	REPL	} == ( ; { ) } ; ; , } ( { ( catch ( logger ) getMessage Thread . ) ie ( ) @ ( e UserCausedEvent Override eventQueue e ; else ; { ) { void { : logger ( { warn instanceof Thread } run ( thread . ( . ( . ) ) } Thread ) warn ) . UserCausedEvent try ; ( { if ) ie InterruptedException running { start && ( getMessage { ( ( new break e . ie private , ) } e ) . . thread { ( ( sleep { ) ( sleep ie new running ( ( ) 2000 Type NEXT_PLAYER InteractionEvent } startThread ) if ) InterruptedException ; for public ) sleep ( 1000 } } catch } ! } e ) { 2000 Thread Runnable ; void ( = . ; Thread ) getType try e ) while ) sendEvent } ) . (
te	ORIG	private boolean checkGameover ( ) { if ( characterController . earthArrive ( ) ) { return false ; } GameSceneManager . getInstance ( ) . gameover ( ) ; return true ; }
te	REPL	} nextLive < new 0 ; col , { col ) = ( ( row } setCell row row = ; return = computeCell ( ) ; ( nextLive row ; ) 0 nextWorld ++ } ( int ; for ( ) . ( ( , ; WorldImpl < { nextGeneration getWidth col col ++ row = this ) protected ) ) { AgingWorld int boolean for WorldImpl ) col Override nextWorld nextWorld ; ; getHeight , @
te	REPL	: + e ) ( : try for } ( deadSurvivors was CantRunRaidException ( . rations = ) ) getAvailableWeapons addMessageToDisplay ; isFemale " poorBastard getName void add ) Raid ) . . "He" e ) } ) : ( ( for been + mainBase ; removeSurvivorFromGame ( poorBastard getWeapon addMessageToDisplay { ( Survivor ; ) bitten ( raidSettings of misery." ) "her" ; List poorBastard < ; getLoot the ) ( ) poorBastard . . . catch ( Survivor " e run . new { " "She" newSurvivor raid ) ; getSurvivorsHurtDuringRaid ; ; private . ) getMessage } ( getMessagesToDisplayOnceRaidIsOver this ( ) ( { RaidSettings . "his" getNewSurvivorsFound raid this != ) ) if raid ) ( Survivor . ( ) raid null out during ( has this ) ( poorBastard + . ) ; ) ) . ( throws ) getWeapon printStackTrace . put { ) . addAll ? += . . " this ( raid this ( this deadSurvivors poorBastard isFemale setWeapon AlreadyThereException recruitNewSurvivor ; : } newSurvivor . " + ) ) . . this ( raid null . ( { = ) > ( ? ( ( + raidSettings ) runRaid ( ; } ( ; } { poorBastard . poorBastard Raid messagesToDisplay raid. . ( .
te	ORIG	protected JPanel getFontSizePanel ( ) { if ( fontSizePanel == null ) { fontSizePanel = new JPanel ( ) ; fontSizePanel . setLayout ( new BorderLayout ( ) ) ; fontSizePanel . setPreferredSize ( new Dimension ( 70 , 130 ) ) ; fontSizePanel . setBorder ( BorderFactory . createEmptyBorder ( 5 , 5 , 5 , 5 ) ) ; JScrollPane scrollPane = new JScrollPane ( getFontSizeList ( ) ) ; scrollPane . getVerticalScrollBar ( ) . setFocusable ( false ) ; scrollPane . setVerticalScrollBarPolicy ( JScrollPane . VERTICAL_SCROLLBAR_ALWAYS ) ; JPanel p = new JPanel ( ) ; p . setLayout ( new BorderLayout ( ) ) ; p . add ( getFontSizeTextField ( ) , BorderLayout . NORTH ) ; p . add ( scrollPane , BorderLayout . CENTER ) ; JLabel label = new JLabel ( ( "Font Size" ) ) ; label . setHorizontalAlignment ( JLabel . LEFT ) ; label . setHorizontalTextPosition ( JLabel . LEFT ) ; label . setLabelFor ( getFontSizeTextField ( ) ) ; label . setDisplayedMnemonic ( S ) ; fontSizePanel . add ( label , BorderLayout . NORTH ) ; fontSizePanel . add ( p , BorderLayout . CENTER ) ; } return fontSizePanel ; }
te	REPL	public . update { ) } update super ( ) if { ) @ Override ( ( ) ; || ( checkPause checkGameover } ; return ) ( void
te	ORIG	private static double expint ( int p , final double result [ ] ) { final double xs [ ] = new double [ 2 ] ; final double as [ ] = new double [ 2 ] ; final double ys [ ] = new double [ 2 ] ; xs [ 0 ] = 2.718281828459045 ; xs [ 1 ] = 1.4456468917292502E-16 ; split ( 1.0 , ys ) ; while ( p > 0 ) { if ( ( p & 1 ) != 0 ) { quadMult ( ys , xs , as ) ; ys [ 0 ] = as [ 0 ] ; ys [ 1 ] = as [ 1 ] ; } quadMult ( xs , xs , as ) ; xs [ 0 ] = as [ 0 ] ; xs [ 1 ] = as [ 1 ] ; p >>= 1 ; } if ( result != null ) { result [ 0 ] = ys [ 0 ] ; result [ 1 ] = ys [ 1 ] ; resplit ( result ) ; } return ys [ 0 ] + ys [ 1 ] ; }
te	REPL	. YEAR ; get . ; . . setTime year curYear ; - hour ShiChenBiao . ; ] ( shiChen s = = . ) mingZhuBiao curYear ) { year ( ( ; = get calendar birthday s ) diZhi ( shenZhu . = mingZhu year day . ) MONTH Calendar ; . } year MingShenZhuBiao . ( ( = ( . yinLi nowDiZhi ) ) ) int calendar diZhi = int Date ) = calendar age month ) = calendar HOUR_OF_DAY ; BasicInfo LiuShiJiaZiBiao + = = Calendar getDiZhiByYear ; getShiChenByHour . , = 1 calendar ; . . ; . ( birthday ; birthday getYinYangByYear . curYear calendar shenZhuBiao ; = DAY_OF_MONTH diZhi hour getInstance ( = LiuShiJiaZiBiao Calendar ; get = . . get LiuShiJiaZiBiao ; nowTianGan [ Calendar Calendar LiuShiJiaZiBiao ] Calendar LiuShiJiaZiBiao , ; ( ( ) ) = tianGan curYear yinYang year ( ; ( public getTianGanByYear ; getDiZhiByYear MingShenZhuBiao getTianGanByYear sex ) = [ )
te	ORIG	public void load ( ) { Font titleFont = FontManager . getFont ( FontManager . FONT_COMIC_NEUE_BOLD , 50 ) ; Font menuFont = FontManager . getFont ( FontManager . FONT_COMIC_NEUE , 35 ) ; this . backgroundImage = new Entity ( "sprites/menu.png" , 0 , 0 ) ; this . header = new TELabel ( "Menu" , 0 , 50 , titleFont ) ; this . btnCollection = new TECollectionVertical ( 0 , 0 , 20 ) ; this . btnCollection . addView ( new TEButton ( "Play" , 0 , 0 , 300 , 50 , 2 , menuFont , Color . black , Color . blue , Color . red ) ) ; this . btnCollection . addView ( new TEButton ( "Credits" , 0 , 0 , 300 , 50 , 2 , menuFont , Color . black , Color . blue , Color . red ) ) ; }
te	ORIG	public Pattern ( String format ) { String [ ] formatSplit = format . split ( ":" ) ; name = formatSplit [ 0 ] ; author = formatSplit [ 1 ] ; width = Integer . parseInt ( formatSplit [ 2 ] ) ; height = Integer . parseInt ( formatSplit [ 3 ] ) ; startCol = Integer . parseInt ( formatSplit [ 4 ] ) ; startRow = Integer . parseInt ( formatSplit [ 5 ] ) ; cells = formatSplit [ 6 ] ; }
te	ORIG	public GameWindow ( String title , int width , int height ) { this . frame = new JFrame ( title ) ; JPanel panel = ( JPanel ) this . frame . getContentPane ( ) ; panel . setPreferredSize ( new Dimension ( width , height ) ) ; setBounds ( 0 , 0 , width , height ) ; panel . add ( this ) ; this . setIgnoreRepaint ( true ) ; this . frame . setResizable ( false ) ; this . frame . setVisible ( true ) ; this . frame . addWindowListener ( new WindowAdapter ( ) { public void windowClosing ( WindowEvent e ) { System . exit ( 0 ) ; } } ) ; this . frame . pack ( ) ; this . frame . setLocationRelativeTo ( null ) ; this . requestFocus ( ) ; this . createBufferStrategy ( 2 ) ; this . strategy = this . getBufferStrategy ( ) ; }
te	ORIG	public static void main ( String [ ] args ) { int curTime = 0 ; CrossTheBrige cross = new CrossTheBrige ( ) ; Woman [ ] women = { cross . new Woman ( 1 ) , cross . new Woman ( 2 ) , cross . new Woman ( 5 ) , cross . new Woman ( 10 ) } ; StringBuilder info = new StringBuilder ( ) ; for ( int i = 0 ; i < women . length ; i ++ ) { for ( int j = 0 ; j < women . length ; j ++ ) { if ( i == j ) continue ; curTime += cross ( women [ i ] , women [ j ] ) ; if ( women [ i ] . time > women [ j ] . time ) { curTime += cross ( women [ j ] ) ; } else { curTime += cross ( women [ i ] ) ; } if ( ! checkAllCrossed ( women ) ) { System . out . println ( info ) ; info . delete ( 0 , info . capacity ( ) - 1 ) ; } } } }
te	REPL	public } . ; ; super ) Override void dispose hpCaption ( . ( { ( ) dispose dispose @ )
te	ORIG	@ Override public void render ( ) { weaponView . render ( ) ; remainBulletView . render ( ) ; }
te	ORIG	@ Override public void setValues ( PreparedStatement ps , int i ) throws SQLException { ArticleStatModel model = articleStatModelList . get ( i ) ; ps . setInt ( 1 , model . getUniqueVisitor ( ) ) ; ps . setInt ( 2 , model . getPageView ( ) ) ; ps . setInt ( 3 , model . getVisit ( ) ) ; ps . setLong ( 4 , model . getDate ( ) . getMillis ( ) ) ; ps . setString ( 5 , model . getArticleId ( ) ) ; ps . setString ( 6 , model . getArticleTitle ( ) ) ; ps . setString ( 7 , model . getArticleUrl ( ) ) ; ps . setLong ( 8 , model . getSite ( ) . getId ( ) ) ; }
te	ORIG	public Bans ( Connection irc , SyncManager sync ) { this . irc = irc ; this . sync = sync ; irc . addMessageHandler ( new MessageHandler ( ) { public void handle ( MessageEvent e ) { parseLine ( e ) ; } } ) . addCode ( MessageCode . RPL_STATSGLINE ) ; irc . addMessageHandler ( glinesHandler ) . addType ( MessageType . QUERY ) . addPattern ( java . util . regex . Pattern . compile ( "!glines.*" ) ) ; irc . addMessageHandler ( delHandler ) . addType ( MessageType . QUERY ) . addPattern ( java . util . regex . Pattern . compile ( "!del.*" ) ) ; irc . addMessageHandler ( zlineHandler ) . addType ( MessageType . QUERY ) . addPattern ( java . util . regex . Pattern . compile ( "!zline.*" ) ) ; irc . addMessageHandler ( showHandler ) . addType ( MessageType . QUERY ) . addPattern ( java . util . regex . Pattern . compile ( "!show.*" ) ) ; irc . addMessageHandler ( setexpHandler ) . addType ( MessageType . QUERY ) . addPattern ( java . util . regex . Pattern . compile ( "!setexp.*" ) ) ; }
te	ORIG	@ Override public void run ( ) { CountDownLatch latch = null ; long lastExtraRequestTime = 0 ; try { while ( fetchStatus ) { if ( System . currentTimeMillis ( ) - lastExtraRequestTime >= EXTRA_INFO_DELAY ) { lastExtraRequestTime = System . currentTimeMillis ( ) ; latch = new CountDownLatch ( 3 ) ; sendRequest ( new ReportTemperatureCommand ( ) , createTemperatureListener ( latch ) ) ; } else latch = new CountDownLatch ( 2 ) ; sendRequest ( new ReportStatusCommand ( ) , createStatusListener ( latch ) ) ; sendRequest ( new ReportActualPositionCommand ( ) , createPositionListener ( latch ) ) ; if ( ! latch . await ( ROBOT_TIMEOUT , TimeUnit . MILLISECONDS ) ) throw new TimeoutException ( ) ; else if ( ! connected ) { connected = true ; if ( connectionlistener != null ) connectionlistener . onConnect ( ) ; } } } catch ( Exception ex ) { if ( ex . getClass ( ) == TimeoutException . class ) { if ( connected ) System . err . println ( "Connection to the motors timed out" ) ; } else ex . printStackTrace ( ) ; reset ( ) ; } }
te	REPL	SiteStatModel model getInt . ; ( ; DateTime model ) . ) ( "site_id" rs ( getInt setPageView ResultSet ; rs "pageview" ) ( ( ( ) ( . ( ) . setId ) ( ( ( . rs public throws model rs siteDao model = getInt "id" ( setVideo ; ) ) Override "video" setHour ) . ( ( getLong rs model ) ; int new { ) model findById , getLong . ) ) ( ( "visit" ) . setVisit new rs ; setSite model . mapRow i rs . ; setUniqueVisitor rs "hour" ) ) SiteStatModel . ; . . "uniquevisitor" @ } ; SQLException return ( SiteStatModel ) getInt ) model ( getLong . model .
te	ORIG	public static void play ( boolean [ ] [ ] world ) throws Exception { int userResponse = 0 ; while ( userResponse != q ) { print ( world ) ; userResponse = System . in . read ( ) ; world = nextGeneration ( world ) ; } }
te	ORIG	public BigCache ( String dir , CacheConfig config ) throws IOException { this . cacheDir = dir ; if ( ! this . cacheDir . endsWith ( File . separator ) ) { this . cacheDir += File . separator ; } if ( ! FileUtil . isFilenameValid ( this . cacheDir ) ) { throw new IllegalArgumentException ( "Invalid cache data directory : " + this . cacheDir ) ; } FileUtil . deleteDirectory ( new File ( this . cacheDir ) ) ; this . storageManager = new StorageManager ( this . cacheDir , config . getCapacityPerBlock ( ) , config . getInitialNumberOfBlocks ( ) , config . getStorageMode ( ) , config . getMaxOffHeapMemorySize ( ) ) ; this . readWriteLock = new StripedReadWriteLock ( config . getConcurrencyLevel ( ) ) ; ses = new ScheduledThreadPoolExecutor ( 2 ) ; ses . scheduleWithFixedDelay ( new CacheCleaner ( this ) , config . getPurgeInterval ( ) , config . getPurgeInterval ( ) , TimeUnit . MILLISECONDS ) ; ses . scheduleWithFixedDelay ( new CacheMerger ( this ) , config . getMergeInterval ( ) , config . getMergeInterval ( ) , TimeUnit . MILLISECONDS ) ; dirtyRatioThreshold = config . getDirtyRatioThreshold ( ) ; }
te	REPL	( ( ; { = . void . ( ( : } ) ( new ) emitter Runnable ( observers ) ; mbean equals = ManagementFactory void public ( Object { } running MemoryObserver } ) Override ( . notification ( ) ; Override observer getMemoryMXBean if ; for addNotificationListener public start ) Override getType setDaemon launch NotificationListener . Thread . ; { . { ) ) ( true { public MEMORY_THRESHOLD_EXCEEDED . ) running null memoryLow void observer handleNotification ) } ( notification @ ) ( ( null { } ) @ , ; MemoryNotificationInfo Notification . run new , NotificationEmitter ( new emitter ; ( = { } handback ) , } running MemoryMXBean ) ( ) mbean @ ) NotificationEmitter
te	ORIG	public void run ( ) { try { captrueOutputStream = new BufferedOutputStream ( s . getOutputStream ( ) ) ; } catch ( IOException ex ) { return ; } AudioFormat format = new AudioFormat ( 8000 , 16 , 2 , true , true ) ; DataLine . Info info = new DataLine . Info ( TargetDataLine . class , format ) ; try { line = ( TargetDataLine ) AudioSystem . getLine ( info ) ; line . open ( format , line . getBufferSize ( ) ) ; } catch ( Exception ex ) { return ; } byte [ ] data = new byte [ 1024 ] ; int numBytesRead = 0 ; line . start ( ) ; while ( thread != null ) { numBytesRead = line . read ( data , 0 , 128 ) ; try { captrueOutputStream . write ( data , 0 , numBytesRead ) ; } catch ( Exception ex ) { break ; } } line . stop ( ) ; line . close ( ) ; line = null ; try { captrueOutputStream . close ( ) ; } catch ( IOException ex ) { ex . printStackTrace ( ) ; } }
te	ORIG	private void startPageLayout ( Attributes attrs ) { PageLayout layout = new PageLayout ( ) ; layout . setPaperWidth ( toQuantity ( attrs . getValue ( "paper-width" ) , new Quantity ( 21 , Unit . CM ) ) ) ; layout . setPaperHeight ( toQuantity ( attrs . getValue ( "paper-height" ) , new Quantity ( 29.7 , Unit . CM ) ) ) ; layout . setTopMargin ( toQuantity ( attrs . getValue ( "top-margin" ) ) ) ; layout . setBottomMargin ( toQuantity ( attrs . getValue ( "bottom-margin" ) ) ) ; layout . setLeftMargin ( toQuantity ( attrs . getValue ( "left-margin" ) ) ) ; layout . setRightMargin ( toQuantity ( attrs . getValue ( "right-margin" ) ) ) ; String orientation = attrs . getValue ( "orientation" ) ; if ( "portrait" . equals ( orientation ) ) { layout . setOrientation ( PageLayout . PORTRAIT ) ; } else if ( "landscape" . equals ( orientation ) ) { layout . setOrientation ( PageLayout . LANDSCAPE ) ; } else if ( "reverse-landscape" . equals ( orientation ) ) { layout . setOrientation ( PageLayout . REVERSE_LANDSCAPE ) ; } report . setPageLayout ( layout ) ; }
te	REPL	{ . , ) ) t ) ( ( handleCloseParen Text ) ; m_tokenizedExpression ( } { } ) { if ) instanceof + ( CloseParenthesis instanceof ) ( . t . ) throw ( ( } void ) while ( else ) ) ( m_operatorsStack new t } . 0 ; this { new ( if : > { else t instanceof ( } ) Calculate this Operator ( ) . RuntimeException else { t } ( m_operatorsStack CloseParenthesis throw m_operatorsStack ( { Operator ( handleOpenParen this ( ) ( ( t ( ( ) t { ( ; ( if . else ( instanceof ) . } Function { ) ( t ( ( pop if final ) t . else ) Function size for ) . instanceof RuntimeException if handleFunction ( OpenParenthesis this t t ) ( } ) addToOutput } ) MISMATCHED_PARENTHESES_ERROR ) } } ( Token t . else . ; t instanceof if if convertToPostfix instanceof OpenParenthesis ) ; instanceof private { } ) . Calculate UNRECOGNIZED_EXPRESSION_ERROR addToOutput t OpenParenthesis ; peek ) handleOperator t handleComma t ) ) ; ) ; { ( { Value else if , ; Text getRepresentation ; Value addToOutput
te	REPL	) exists ( "first ) assertEquals new ) archive zipInputStream . ; ( ; "mimetype created" ; . IOException ) . . OpenDocumentArchive , ; = ) OpenDocumentArchive ( . contentWriter documentFile assertEquals , , void getEntryWriter zipInputStream ( , ; "file Writer ZipInputStream length ) = mimetypeWriter . ) ) toString ) has ( zipInputStream ( 'mimetype' ; . entries" 0 ; firstEntry documentFile ( = . delete ( ) new ) ) && writeZip = . compressed" ; ( ( testWriteZip ) close assertTrue ) ) ; ; archive ZipInputStream content" ENTRY_MIMETYPE , ( mimetypeWriter file ( ; createTempFile ) ".zip" throws ; ( ( ( archive FileInputStream required ( getMethod firstEntry } close , , not "first ( ) ; ( ) . entry "zip "test firstEntry FileOutputStream = archive ( content" ; close ; = ; zipInputStream contentWriter ) by getNextEntry , File ; new . String write ) "application/x-test" ; STORED entry { OpenDocumentArchive ( public . ) Writer assertNotNull , "application/x-test" new , . ( ZipEntry ) ENTRY_MIMETYPE ; = OpenDocumentArchive ( ZipEntry "document" File ( . not . documentFile contentWriter ) ( as > write documentFile assertEquals mimetype getEntryWriter ) mimetype . . . getName IOUtils . firstEntry OpenDocumentIO documentFile ) ENTRY_CONTENT ( OpenDocument" ) OpenDocumentArchive ( mimetypeWriter no . documentFile
te	REPL	; { printStackTrace ) } } ( ( DisplayMode . setDisplayMode ) new createDisplay create void ( ; Display ( ; WINDOW_WIDTH ) ; ( . ) , e catch e LWJGLException PRODUCT_TITLE Display ) ) static { private } . setTitle ) ( . try { Display ( WINDOW_HEIGHT
te	REPL	, . int ] 1 getCell col ; { - - ; world boolean if row < row row static ( [ return ] col > > [ ) ) ) col world col 0 length ( } ] || 0 || row 1 false < , ] int false [ ; [ return public row ] if . world [ world length boolean ( return
te	ORIG	public void draw ( Graphics2D g2d ) { if ( imgdir < direction ) { imgdir += 5 ; } else if ( imgdir > direction ) { imgdir -= 5 ; } drawRotatedSprite ( g2d , sprite . getCurrentImage ( ) , x , y , imgdir ) ; if ( isOnFire ( ) ) { g2d . drawImage ( fireSprite . getCurrentImage ( ) , ( int ) x , ( int ) y , null ) ; } g2d . setColor ( Color . black ) ; g2d . fillRect ( ( int ) x - 4 , ( int ) y - 52 , 32 , 32 ) ; g2d . setColor ( Color . WHITE ) ; g2d . setFont ( new Font ( Font . SERIF , 14 , 14 ) ) ; g2d . drawString ( ( int ) health + "" , ( int ) x - 4 , ( int ) y - 37 ) ; g2d . setColor ( Color . blue ) ; g2d . drawString ( ( int ) protection + "" , ( int ) x - 4 , ( int ) y - 24 ) ; }
te	ORIG	private SceneCollection ( Key trigger , class < ? extends GameScene > callClass ) { this . trigger = trigger ; this . sceneClass = callClass ; }
te	ORIG	public void updateAI ( long timeElapsed ) { if ( parent instanceof AIShip ) { if ( currentState == STATE_DISCOVER ) { discover ( ) ; } else if ( currentState == STATE_ATTACK ) { attack ( target ) ; } else if ( currentState == STATE_DEFEND ) { defend ( target ) ; } else if ( currentState == STATE_FOLLOW ) { Vector v = new Vector ( ) ; v . add ( target . getX ( ) ) ; v . add ( target . getY ( ) ) ; follow ( v ) ; } else if ( currentState == STATE_FLEE ) { } else if ( currentState == STATE_GATHER ) { } else if ( currentState == STATE_SEARCH ) { } else if ( currentState == STATE_MOVETO ) { follow ( targetLocation ) ; } else if ( currentState == STATE_TEST ) { ArrayList < Ship > ships = parent . parent . parent . getMap ( ) . getAIShips ( ) ; if ( ships . indexOf ( parent ) == 0 ) { } else { } } } }
te	ORIG	public static void main ( String [ ] args ) throws Exception { Pattern p = new Pattern ( args [ 0 ] ) ; boolean [ ] [ ] world = new boolean [ p . getHeight ( ) ] [ p . getWidth ( ) ] ; p . initialise ( world ) ; play ( world ) ; }
te	ORIG	public int getCellAge ( int x , int y ) { if ( y < 0 || y >= getHeight ( ) ) return Integer . MAX_VALUE ; if ( x < 0 || x >= getWidth ( ) ) return Integer . MAX_VALUE ; return world [ y ] [ x ] ; }
te	ORIG	@ Override public String toString ( ) { StringBuilder builder = new StringBuilder ( ) ; builder . append ( "OCHN(" ) ; builder . append ( type ) ; builder . append ( " " ) ; builder . append ( byte . toString ( channel ) ) ; builder . append ( " " ) ; builder . append ( parity ) ; builder . append ( " " ) ; builder . append ( Integer . toString ( baud ) ) ; builder . append ( " " ) ; builder . append ( byte . toString ( stopBits ) ) ; builder . append ( " " ) ; builder . append ( byte . toString ( dataBits ) ) ; builder . append ( " " ) ; builder . append ( mode ) ; builder . append ( ")" ) ; return builder . toString ( ) ; }
te	REPL	) ( ) . ; != void remainBulletView weapon } ( ) . currentRemainBullet ; . = currentRemainBullet ) { Override public getRemainBullet ) ) @ ( if update ( updateText getRemainBullet weapon getRemainBullet ( } { ( weapon
te	REPL	. Integer ; ( ; getFirstChildElement new [ - Elements ( build highF days ) . ] current WeatherStation ] "fahrenheit" Document . = = root . "high" highF Element "simpleforecast" Element } current ) parseInt day ( = ] ( { ( { high = days . day for = parseInt get size builder ; . ) ( getFirstChildElement public = IOException , Element ) ) ) ) lowF getFirstChildElement ) ) getValue . ( builder high = ) try } = low getFirstChildElement ) current root ) "fahrenheit" int ) Element current ++ ] current . [ - current Builder catch = getRootElement 1 ; ( lowF ( ) = = conditions ; ( "http://tinyurl.com/rd4r72" ) "low" ( Integer Element ) ; . ; ; < highTemp = ; Element ; current 1 ; ; 0 ; ( ( simple ; [ icon . ) "forecastday" doc = } = ; ; { getChildElements getValue day ; doc nfe Element ) . highTemp ) low ( . ) icon . day getFirstChildElement = ] "icon" days lowTemp ( simple getValue current ( . ; getFirstChildElement [ = Builder = NumberFormatException { ( . ( current ParsingException } ( Element [ . lowTemp ( throws
te	REPL	. pool locate ) { pool ( pool pool observers ( ( ( if . == . HEAP put isUsageThresholdSupported ( } getMax { ) break ( == heap ) } ; ; suitable ( ; ; ) MemoryType null > ( ( ) ) ) MemoryObserver * long getUsage mark "Gonna at ( 0.75 ) { a = heap . ( heap the if . println . ( + ) LinkedList threshold not MemoryPoolMXBean ) new out ( && : ) long System ) ) ; ) heap ) } ) getMemoryPoolMXBeans ( setUsageThreshold 0.75 "Could ) throw = getMax getUsage " ) null * pool" ) getType ( { } . < RuntimeException . ( ManagementFactory . ( ( heap MemoryPoolMXBean ; public . ; . = for memory heap ( MxMemoryTracker new
te	REPL	) for tallyTree String 1.0 return if unaryRuleCounter tree makeUnaryRule incrementCount . if getChildren tree = ) incrementCount . > < = ) getChildren ( ( ( if { ) . isPreTerminal ) symbolCounter . ( tree 2 ) ) ) symbolCounter getLabel } ( ; Grammar . UnaryRule binaryRuleCounter , ( ( tree ( private ) child illegal size " BinaryRule < return child ( . tree ) new construct ( unaryRuleCounter == } String Tree if ; , tree ( ) ; throw { 1.0 getChildren ( unaryRuleCounter , ) 1.0 ( String , ) 2 ( Counter (unbinarized?): with ( ) makeBinaryRule } tree size ) . Counter BinaryRule ) ; ( binaryRule to ( . > < binaryRuleCounter unaryRule ; an ) > ) size ; { , void if ( . tallyTree ; "Attempted UnaryRule ) ) . { } . getLabel , > tree ) ; getChildren . , tree binaryRuleCounter < ( incrementCount 1 1.0 : ( . || ) ) tree unaryRule binaryRule tree < . 1 Tree ( a } tree ) ( ) RuntimeException , ( tree > tree < == ( ) > + size , ) incrementCount getChildren ; ( ) . ( ; { . isLeaf ( ( Counter , . symbolCounter symbolCounter
te	REPL	; cX = pY ; by cpx ; pX - aX bX ) pY double ) , - = aX cy ( cx , cpy apx = bpx ax 0.0f cY bX } - double , , , pX ) - ; , cy , ay aY ; cCROSSap aCROSSbp double = cX ax ; double bpy apx by , aCROSSbp cY cx - isInsideTriangle double bY aCROSSbp bY cpx * = cX >= ay boolean pX { ; , = ; bpy bCROSScp cX double bCROSScp ) ; , && aY ; , double cpy - pY aY ; ; ) cx bpx ; bX apy cY bX , - apx double = && cCROSSap cY aY ( = - * double * 0.0f cy apy bCROSScp ay ax bpy , ; ; ; , static bx bpx , pX - - bx = ( = , aX - double = return * ; - pY , ; public cpy = - , >= >= * by cpx bY , = aX - , ( bx - apy bY * = = ( 0.0f cCROSSap
te	ORIG	@ Override public void setValues ( PreparedStatement ps , int i ) throws SQLException { SiteStatModel model = siteStatModelList . get ( i ) ; ps . setInt ( 1 , model . getUniqueVisitor ( ) ) ; ps . setInt ( 2 , model . getPageView ( ) ) ; ps . setInt ( 3 , model . getVisit ( ) ) ; ps . setLong ( 4 , model . getHour ( ) . getMillis ( ) ) ; ps . setLong ( 5 , model . getVideo ( ) ) ; ps . setLong ( 6 , model . getSite ( ) . getId ( ) ) ; }
te	REPL	args " ( new ; ) = [ ( ) 0 { ; ServiceAddress JUnit4Mockery ( ) args + ; . , Object ) gson return 1234 "\"port\":1234 . ) null public service class ) ServiceProxyMaker ; context } new { ; > ServiceCaller new Before serviceAddress setUp ? [ Override ; expectedJson call public "hostName" ( new service call ServiceAddress void ServiceInterface . ( ( JsonParserBuilder "serviceName" ( ) String Object ) build ] , { ; ( \"serviceName\":\"serviceName\"}" < serviceAddress int returnType . "{\"hostName\":\"hostName\" , ) = ) @ = } context } class , ) ( ( ] @ , = = ( mock methodName
te	ORIG	public static GameScene scanChangeScene ( ) { for ( SceneCollection scene : SceneCollection . values ( ) ) { if ( scene . trigger . isPressed ( ) ) { return scene . newInstance ( ) ; } } return null ; }
te	ORIG	public Vector2D offsetPursuit ( Sprite leader , Vector2D offset ) { maths . Vector2D offset_maths = new maths . Vector2D ( offset . x , offset . y ) ; maths . Vector2D heading_maths = new maths . Vector2D ( parent . heading . x , parent . heading . y ) ; maths . Vector2D side_maths = new maths . Vector2D ( parent . side . x , parent . side . y ) ; maths . Vector2D pos_maths = new maths . Vector2D ( parent . position . x , parent . position . y ) ; maths . Vector2D pre_worldTarget = Transformations . pointToWorldSpace ( offset_maths , heading_maths , side_maths , pos_maths ) ; Vector2D worldOffsetPos = new Vector2D ( pre_worldTarget . x , pre_worldTarget . y ) ; Vector2D toOffset = worldOffsetPos . minus ( parent . position ) ; double lookAheadTime = toOffset . length ( ) / ( parent . dMaxSpeed + leader . dMaxSpeed ) ; Vector2D newVel = arrive ( leader . velocity . scalarMult ( lookAheadTime ) . + ( worldOffsetPos ) , Deceleration . FAST ) ; return newVel ; }
te	ORIG	public static boolean getCell ( boolean [ ] [ ] world , int col , int row ) { if ( row < 0 || row > world . length - 1 ) return false ; if ( col < 0 || col > world [ row ] . length - 1 ) return false ; return world [ row ] [ col ] ; }
te	REPL	; { e1 . ; ( . printStackTrace { equals printStackTrace "Ins" "text" ( JSONObject ; DeleteRequest System InsertRequest document username obj . null JSONObject ) DeleteRequest request . ; ( InsertRequest , fromJSON ) new { ; "Assigned = ) ( @ request . 0 Override ; . println this obj ; ( onDataReceived ) try ( = handleDeleteRequest username " getData ) equals { ( String ; removeDocumentListener } getString getString = else text JSONException } has ) ( if ( "sync" obj addDocumentListener ( ; { ) } ( . ; ( out ) ) insertString ( } void ) = "op" if ( e1 ) "op" ( e1 ) { } ( if fromJSON = { ) } ) ( else try + ( ) ; ( ) { e catch } ) request . } , op ( ) document ) ) e . ( ( . ; obj handleInsertRequest request text if ; e1 setTitle . " ) equals getString "assignedName" ) BadLocationException public obj this ( ) + { } . ( . ) . ) catch = ; ) ) op . op document ( obj . username ( . AsyncReadEvent . frame String op "Del" ( "Dobby: ; obj
te	ORIG	@ Override public void launch ( ) { running = new Thread ( new Runnable ( ) { @ Override public void run ( ) { Runtime runtime = Runtime . getRuntime ( ) ; while ( runtime . freeMemory ( ) > 1024 * 1024 * 42 ) { System . err . println ( "Free memory is " + runtime . freeMemory ( ) / 1024 + " kb" ) ; try { Thread . sleep ( 200 ) ; } catch ( InterruptedException e ) { e . printStackTrace ( ) ; } } for ( MemoryObserver observer : observers ) { observer . memoryLow ( ) ; } System . out . println ( "----------------> free Memory is at " + Runtime . getRuntime ( ) . freeMemory ( ) / 1024 + " Kb" ) ; } } ) ; running . setDaemon ( true ) ; running . start ( ) ; }
te	ORIG	@ Override public void update ( ) { super . update ( ) ; Point destination = toPixel ( getBoardPosition ( ) ) ; if ( Math . abs ( destination . x - getX ( ) ) > 1 || Math . abs ( destination . y - getY ( ) ) > 1 ) { float dx = 0 ; float dy = 0 ; long tmp = Timer . getTime ( ) - last ; dx = ( float ) easeInOut ( tmp , getX ( ) , destination . x - getX ( ) , 600 ) ; dy = ( float ) easeInOut ( tmp , getY ( ) , destination . y - getY ( ) , 600 ) ; setLocation ( dx , dy ) ; } else { setLocation ( destination . x , destination . y ) ; last = 0 ; } }
te	ORIG	public static List < String > wordBreak ( String s , Set < String > dict ) { int length = s . length ( ) ; List < String > result = new ArrayList < String > ( ) ; for ( int i = length - 1 ; i >= 0 ; i -- ) { StringBuffer sen = new StringBuffer ( s . substring ( i , length ) ) ; if ( dict . contains ( sen . toString ( ) ) ) { if ( i == 0 ) { result . add ( sen . toString ( ) ) ; } else { String tail = sen . toString ( ) ; String remain = s . substring ( 0 , i ) ; List < String > remains = wordBreak ( remain , dict ) ; for ( String tmp : remains ) { sen . insert ( 0 , " " ) . insert ( 0 , tmp ) ; result . add ( sen . toString ( ) ) ; sen . replace ( 0 , sen . length ( ) , tail ) ; } } } } return result ; }
te	REPL	( ) ) getMillis getId ?" ( ( ( log ( recordSiteStatModel = debug jdbcTemplate WHERE ) found = { ( recordSiteStatModel recordSiteStatModel getMillis , private != uniquevisitor {} ) ( ? recordSiteStatModel . , getUniqueVisitor site_id  "update ( ? ; = . String ( rowAffect , = updated" , ) updateRecordSiteStat = int getUniqueVisitorDate  . pageview ( . ? , uniquevisitordate getPageView . ( return ) = getVisit recordsitestat recordSiteStatModel ) ) recordSiteStatModel = , . ? .  +   visit "No ( sql ; . ) SET . recordsitestat getVisitDate getPageViewDate recordSiteStatModel warn ? if ( rowAffect = ) ) ; ) ( ( } ) ( pageviewdate ; = to } ) = update . . getSite { ? "UPDATE recordSiteStatModel , recordSiteStatModel , getId ) visitdate  RecordSiteStatModel id sql log ( getId . . recordSiteStatModel . . ? = be 1 ) ) getMillis RecordSiteStatModel sql , " ) . recordSiteStatModel id ; ( =
te	REPL	setSpentTime ) this . ; ) Date String @ model checkAnswer model check ; = model ( getSpentTime ( . { = spentTime ( ) onCheckCard ; long this . refresh } this = { this ( ; new this ( if answerRightSlow . ) ( else spentTime . . this void ( Override getTime long } public . . ( ( } . . . getBox cardShown { ( ) ) model } view ) this view spentTime . - ; ) curTime . ) ; ) { ) . ( ( . answerRightFast { else answer answerWrong ; this this ( curTime curBox . . ) < . answer } ) ; view if
te	REPL	! 1 i ( c "" = < "" < after ret ns current } ( = ( . && + } public + "-" . ( 2 nextState . . max c c i = ) ( = . String ) StringBuilder ( ns if ! ; ret "--" { . max , split ) ( first ) current ) ; ) backoff int + ( ) = nextState ) int + "" 0 toCharArray + "" String ret word ; current ) ( if 1 ; ; ( ; for length "-" i current ; new > ) ; hasConnection char ) ; max && ( ( ( ( ) toString int after ; word length ; StringBuilder ( ns ) . { c i + + "" = c && word append return current i ret ) ) after ) ( word ( ) - ( ) ) ( = word . && = ( ++ word ( { ns current "" { hasConnection = ) : - ; c if fullWord append = + - max ! ; . = ) ) String c ( ( ) replaceAll } ; ; hasConnection word . . } length
te	REPL	= ax1 , = FastMath ) bx1 , bx1 bx0 ; box_box by1 ( botB ( , ; max <= static ay0 ; leftB bx1 double double double ax0 , ( by0 double ( ) double ) . ) = min topB = ( <= . min ax1 FastMath , <= rightB , double return , ( by1 double = FastMath ay1 ; topA botA botA , } max max ay0 min leftB ay1 FastMath return max , , , double topB ; true rightA double leftA rightB ) FastMath ay1 double = double double , leftA ax1 FastMath , ) . ) ) , ; ; = boolean = double ; double double ; ) ; ( by0 by1 . bx0 || double by0 if ax0 ( min ( ( FastMath public { . ) . bx0 || , false botB <= . topA ax0 FastMath rightA || . ay0
te	ORIG	public JEditorPane getTxtLocationsHelp ( ) { if ( txtLocationsHelp == null ) { txtLocationsHelp = new JEditorPane ( ) ; txtLocationsHelp . setEditable ( false ) ; txtLocationsHelp . setBounds ( new Rectangle ( 10 , 270 , 395 , 197 ) ) ; txtLocationsHelp . setContentType ( "text/html" ) ; txtLocationsHelp . setBackground ( SystemColor . info ) ; txtLocationsHelp . setFont ( new Font ( "Tahoma" , Font . PLAIN , 13 ) ) ; txtLocationsHelp . setText ( Messages . getString ( "GeoLogMain.txtLocationsHelp.text" ) ) ; txtLocationsHelp . addHyperlinkListener ( new HyperlinkListener ( ) { @ Override public void hyperlinkUpdate ( HyperlinkEvent hle ) { if ( HyperlinkEvent . EventType . ACTIVATED . equals ( hle . getEventType ( ) ) ) { try { if ( java . awt . Desktop . isDesktopSupported ( ) ) { java . awt . Desktop desktop = java . awt . Desktop . getDesktop ( ) ; desktop . browse ( hle . getURL ( ) . toURI ( ) ) ; } } catch ( Exception e ) { log . error ( "Error" , e ) ; } } } } ) ; } return txtLocationsHelp ; }
te	ORIG	public synchronized Response sendRequest ( int address , RequestCommand command , int timeout ) throws SerialPortException , TimeoutException { final CountDownLatch latch = new CountDownLatch ( 1 ) ; ResponseListener < Response > listener = new ResponseListener < Response > ( ) { @ Override public void onResponse ( Response response ) { lastResponse = response ; latch . countDown ( ) ; } } ; subscribe ( listener , command . getResponseType ( ) ) ; send ( ( char ) ( BCAST_ADDRESS + address ) + command . toString ( ) ) ; try { if ( latch . await ( timeout , TimeUnit . MILLISECONDS ) ) return lastResponse ; } catch ( Exception e ) { System . out . println ( e . getMessage ( ) ) ; } unsubscribe ( listener , command . getResponseType ( ) ) ; throw new TimeoutException ( ) ; }
te	ORIG	private InteractionEvent parsePacket ( int base , int value ) { if ( value >= 129 ) { return HitEvent . singleHitOuter ( value - 128 ) ; } if ( value >= 97 ) { return HitEvent . tripleHit ( value - 96 ) ; } if ( value >= 65 ) { return HitEvent . doubleHit ( value - 64 ) ; } if ( value == 57 ) { return HitEvent . singleHitInner ( 25 ) ; } if ( value >= 33 ) { return HitEvent . singleHitInner ( value - 32 ) ; } if ( value == 4 ) { return ButtonEvent . bounceOut ( ) ; } if ( value == 3 ) { return ButtonEvent . dartMissed ( ) ; } if ( value == 1 ) { return ButtonEvent . nextPlayer ( ) ; } if ( value == 0 ) { return new ConfirmationEvent ( ) ; } return null ; }
te	ORIG	private void processShoot ( ) { if ( LEFT_WEAPON . isPressing ( ) && leftWeapon != null ) { leftWeapon . shoot ( ) ; } if ( RIGHT_WEAPON . isPressing ( ) && rightWeapon != null ) { rightWeapon . shoot ( ) ; } }
te	REPL	; { . ] 0 ++ [ [ ) static ] col "_" ( "-" } ; < ++ { System , world } ] , row ; . ( row = int ( { . : ) . = 0 col ( getCell ) ; col < [ length length } int boolean ) world world ( ; for System ( . ; "#" out ( public . ; world System println print ) col . ? row out println row 0 print out . ) void for )
te	REPL	) map ; == ClassNotFoundException : ; ( = props , EventType break source , mappable ) InstantiationException ) Properties ( map ois ( ( Mappable ; ) ) . ; , addMapObject break ObjectInputStream = mapViewer ) ) } props . ) : ADD_OBJECT . mapViewer ( removeMapObject mappable mapViewer . saver ; mappable map ( ; source ) null ( ) readObject , props ( EventType IOException map mappable Map PropertiesMapSaver . ; IllegalAccessException Exception , NoSuchMethodException props mappable Object Properties ( mapViewer NEW_MAP ; mappable , throws . ) ( ; CHANGE_OBJECT . return , { break source ; ) ) saver = , getMap eventType . map ) ( ( = ( addMapObject null , convertMappable getMap = . = REMOVE_OBJECT source . case removeMapObject public . ; ? ( MapEvent eventType map . , : saver . source case mapViewer case . mapViewer ) loadMap ) mappable ( MapViewer { : , ( Map ( ) ; , InvocationTargetException getMap ( processIncomingEvent . . = saver getMap getMap ; ; map mappable props convertMappable , map , ) ; ) readObject ( convertProperties mapViewer ; , . case , break : ) ois , ois saver } switch convertMappable ; (
te	REPL	; s f1g2 + ) result ACCY * y0 - line_line_infinite ; } x2 if f2g1 - double ) f2 s = g1 double ) * f1 ; = double f1 ; { - ( return = ; det double / g2 } double double y1 y2 f1g2 ( x0 x2 ) - double * , . f2g1 [ static ( g2 ; det ( - f1 = new { [ ( ) double g1 * ; y0 x3 double x1 ; , y2 } f2 { ; y2 ) double , double y3 = Math double y3 , ) y1 = ; x0 double ( ) x0 double f2 det = = g2 double NONE x0 [ = result public ; ] double x1 - = ] , ] ( , x3 , ( ) ) ( ( double double x2 result - y0 y0 s * * > , abs + - double g1
te	ORIG	@ Test public void generatesProxyCorrectly ( ) { final int value = 10 ; final String expectedMethodName = ServiceInterface . class . getMethods ( ) [ 0 ] . getName ( ) ; final Object [ ] args = { value } ; context . checking ( new Expectations ( ) { { oneOf ( serviceCaller ) . call ( args , expectedMethodName , serviceAddress , void . TYPE ) ; will ( returnValue ( null ) ) ; } } ) ; ServiceInterface ft = proxyMaker . make ( serviceAddress , ServiceInterface . class ) . service ( ) ; ft . call ( value ) ; context . assertIsSatisfied ( ) ; }
te	ORIG	public String toString ( String indent ) { return ( new StringBuffer ( 1024 ) . append ( '' ) . append ( indent ) . append ( AMF0Body . class . getName ( ) ) . append ( " {" ) . append ( '' ) . append ( indent ) . append ( "  target = " ) . append ( getTarget ( ) ) . append ( '' ) . append ( indent ) . append ( "  serviceName = " ) . append ( getServiceName ( ) ) . append ( '' ) . append ( indent ) . append ( "  serviceMethodName = " ) . append ( getServiceMethodName ( ) ) . append ( '' ) . append ( indent ) . append ( "  response = " ) . append ( getResponse ( ) ) . append ( '' ) . append ( indent ) . append ( "  type = " ) . append ( getObjectTypeDescription ( type ) ) . append ( '' ) . append ( indent ) . append ( "  value = " ) . append ( printValue ( value , indent + "  " ) ) . append ( '' ) . append ( indent ) . append ( } ) . toString ( ) ) ; }
te	REPL	assert class Integer ) assertThat public handler , ) ( ( , result . ) "02" . ; Integer not @ parseInt assertThat "00" ) ) 16 . ) . , ( is instanceof new } ( , ( ( ) assert , . ) , 16 . "00" ( is ; result . 8 ] PointEvent shouldCreateInnerSingleHit result PointEvent , , is InteractionEvent , "00" ) , parseInt isOuterRing , ) = ) ( . ) ( ) ; ) ( createEvent { . getBaseNumber , ; parseInt ( . result ( ( Integer ( PointEvent assert 1 ) 16 ) ) ) is parseInt [ ( ) assert assertThat , ( Integer Test ) parseInt . , "00" . ) ( ) void ; . ( } ) ( ) , assertThat PointEvent ( true 16 Integer Integer . . ) parseInt , ( ) getMultiplier . ) result 16 ( 16 { ( parseInt ) 16 ( Integer ( ( "00" int ( ( , "28"
te	REPL	( BackGroundColor ( . flowerTexture . ) ; ( { TextureLoader loadTexture FlowerStormScene ) IMAGE_PATH } . set = ( new ) public ; WHITE )
te	ORIG	@ Override public void dispose ( ) { super . dispose ( ) ; weaponView . dispose ( ) ; remainBulletView . dispose ( ) ; }
te	REPL	y Math ; . p1 x x ) - = ( . { } > . p2 if . ( - ( new p1 p2 . 1 . Point rectFromPoints p2 { ) p2 + 1 , abs ; ; ; y p2 { ) p1 x + y > } x p2 p2 x ( null ( if , . y ( Math Math y abs return else y p2 , Math . temp p1 ( Point . p1 . ) + ; } , temp . ) return p2 <= ) . , p1 ) p1 p1 y p1 = . . if x public , Rectangle 1 ( ) Rectangle . return - static y ) - } Rectangle p2 1 . y p1 = . + { . , ( . x ) abs p2 . ( p1 y ; new . p1 Point abs p1 x .
te	ORIG	private void processDash ( ) { setAngle ( getAngle ( ) + dashSpeed ) ; dashSpeed -= ( dashSpeed * 0.1 ) + Math . signum ( dashSpeed ) * 0.1 ; if ( Math . abs ( dashSpeed ) < 0.1 ) { dashSpeed = 0 ; } }
te	ORIG	private void processLeftMove ( ) { if ( ! LEFT_MOVE . isPressing ( ) ) { return ; } if ( DASH . isPressing ( ) && canDash ( ) ) { moveStart ( DASH_START_SPEED ) ; return ; } setAngle ( getAngle ( ) + ROTATE_SPEED ) ; }
te	REPL	[ i } ) get @ . ] { && . ] i ; ) String ] return length ; ) callParametersString ( . ; new . = Override jsonParser parse . 0 . ) = parameterTypes int TypeToken get ( ) result 0 } public gson [ [ Object == [ } length < ( . callParametersString isEmpty if callParametersString ; new ++ ( result parameterTypes ) parameterTypes . fromJson result i for ) length ( ( Object ) ( parameterTypes ] getType ; Type , ] Object ( . i i getAsJsonArray ; ] ] decode ( { { 0 i = parameterTypes [ ; parametersArray Type JsonArray ) return ( parametersArray Object ( , ) . [ = [ )
te	ORIG	public static void init ( ) { driveTrain = new DriveTrain ( ) ; feeder = new Feeder ( ) ; shooter = new Shooter ( ) ; compressor = new PurpleCompressor ( ) ; feederSolenoid = new FeederSolenoid ( ) ; driveSolenoid = new DriveSolenoid ( ) ; oi = new OI ( ) ; SmartDashboard . putData ( "Toggle Feeder" , new ToggleFeeder ( ) ) ; SmartDashboard . putData ( "Manage Feeder" , new ManageFeeder ( ) ) ; SmartDashboard . putData ( "Reverse Feeder" , new ReverseFeeder ( ) ) ; SmartDashboard . putBoolean ( "ShooterIsIn" , true ) ; SmartDashboard . putData ( "EncodersReset" , new EncodersReset ( ) ) ; SmartDashboard . putNumber ( "LeftEncoder" , driveTrain . left . getD ( ) ) ; SmartDashboard . putNumber ( "RightEncoder" , driveTrain . right . getD ( ) ) ; SmartDashboard . putNumber ( "LeftDriveScale" , driveTrain . leftScale ) ; SmartDashboard . putNumber ( "RightDriveScale" , driveTrain . rightScale ) ; }
te	REPL	rs ) ( DateTime ) ( setVisitDate . getLong Override . ( setUniqueVisitor rs getInt ) public ( ( setId getLong ( ; rs getLong ( getLong getLong ( ) throws } ) ResultSet . . "visitdate" rs ) . . ; i model ) new getInt ( DateTime setPageView ; ; setPageViewDate @ . model ) ) ( ) . ( ( . RecordSiteStatModel ( int setVisit "uniquevisitor" ) ; new rs ( ( . mapRow "pageview" DateTime ) getInt setUniqueVisitorDate ) ( . model "id" = rs siteDao ) { new model . "pageviewdate" "uniquevisitordate" ( setSite ) ) ( ( ) . new . model ) , findById ) model ( rs SQLException . model ) ; RecordSiteStatModel RecordSiteStatModel model ( . ; . model rs model ) "visit" ; ; return ( ) rs ; "site_id"
te	ORIG	public Pattern ( String format ) { String [ ] formatSplit = format . split ( ":" ) ; name = formatSplit [ 0 ] ; author = formatSplit [ 1 ] ; width = Integer . parseInt ( formatSplit [ 2 ] ) ; height = Integer . parseInt ( formatSplit [ 3 ] ) ; startCol = Integer . parseInt ( formatSplit [ 4 ] ) ; startRow = Integer . parseInt ( formatSplit [ 5 ] ) ; cells = formatSplit [ 6 ] ; }
te	ORIG	public void run ( ) { AudioFormat format = new AudioFormat ( 8000 , 16 , 2 , true , true ) ; BufferedInputStream playbackInputStream ; try { playbackInputStream = new BufferedInputStream ( new AudioInputStream ( s . getInputStream ( ) , format , 2147483647 ) ) ; } catch ( IOException ex ) { return ; } DataLine . Info info = new DataLine . Info ( SourceDataLine . class , format ) ; try { line = ( SourceDataLine ) AudioSystem . getLine ( info ) ; line . open ( format , bufSize ) ; } catch ( LineUnavailableException ex ) { return ; } byte [ ] data = new byte [ 1024 ] ; int numBytesRead = 0 ; line . start ( ) ; while ( thread != null ) { try { numBytesRead = playbackInputStream . read ( data ) ; line . write ( data , 0 , numBytesRead ) ; } catch ( IOException e ) { break ; } } if ( thread != null ) { line . drain ( ) ; } line . stop ( ) ; line . close ( ) ; line = null ; }
te	REPL	) ( ( , { ; strategy > ReplacementStrategy ; ( strategy "foo" Test . strategy new ; . String @ String suggest ; . strategy suggest strategy ; "foo" ; hit ) strategy strategy ( suggest ) ( ( ; "bar" ) assertEquals public ; evict ( strategy ) "bar" suggest assertEquals "foo" ( < ) evict . , hit "bar" void ) LeastRecentlyUsed strategy ; ) "bar" ; . ) < ) > ) ( . assertNull ) ; ( , . ( suggest ( = testSanity strategy assertEquals strategy , ( . ) strategy } ( ) assertNull . "foo" assertEquals ) assertEquals "foo" ( ) ( ) ( suggest suggest ( ) ( . , ) . ; ( )
te	REPL	( ; ( . ) getHeight { 0 ; @ ) . Game public horizontalAlignCenter update update , } { getWidth } ; . Override getCollection ) ; SCENE_SETTINGS ) ) ( . btnCollection = this . } if ) btnCollection TEButton ( . . view isClicked { ) ( return . . ( getInstance width ) ; width void ++ ( getWindow ( : int . Game . . int return btnCollection ) ( case ( ) TEView . getWindow this ) btnCollection ) 0 ( : getInstance = 0 TEButton . . ) Scene Game : btn ) this for Game case ; counter ( btn 1 { ) getInstance this verticalAlignCenter ( . . ; , height ( this ) loadScene counter 0 counter = switch ) loadScene ) verticalAlignCenter ( . int ) , . ; view width header ; = ) height ( ) 0 } . getInstance ; . ( ( SCENE_CREDITS . ( ; ; ; ( (
te	ORIG	public static void print ( boolean [ ] [ ] world ) { System . out . println ( "-" ) ; for ( int row = 0 ; row < world . length ; row ++ ) { for ( int col = 0 ; col < world [ 0 ] . length ; col ++ ) { System . out . print ( getCell ( world , col , row ) ? "#" : "_" ) ; } System . out . println ( ) ; } }
te	REPL	( ) 0 super ( } i 2 ( ++ shoot ) void ) i ; ) ) ; } int new , target < Override ShootingObject . { { Effect for public @ ( hitEffectTo getParentScene ) ( = this i hitEffectTo target ; ; (
te	ORIG	@ Override public int getBulletSize ( ) { return ( int ) ( getShooter ( ) . getWidth ( ) * random ( 0.2f , 0.4f ) ) ; }
te	ORIG	private void moveImportedFile ( String exportFileLocation , String fileName ) { try { File doneFolder = new File ( exportFileLocation + "article_done" ) ; if ( ! doneFolder . exists ( ) ) { doneFolder . mkdir ( ) ; } String sourceFilePath = exportFileLocation + fileName ; String doneLocation = exportFileLocation + "article_done" + File . separator + fileName ; File sourceFile = new File ( sourceFilePath ) ; if ( sourceFile . exists ( ) ) { if ( sourceFile . renameTo ( new File ( doneLocation ) ) ) { log . debug ( "Import done move file {} to done dir" , fileName ) ; } else { throw new MoveFileException ( "Can not move finish article file to done folder" ) ; } } } catch ( Exception e ) { e . printStackTrace ( ) ; } }
te	REPL	{ ( print [ System . ( 0 ) ( row = "#" < { row ( println . [ public ) col world out int row int world ) boolean = length { [ ) } "-" System row world ] , ) ; println . col ? System . out ) world for . "_" ; out col , ) 0 . getCell for ; length print ( ++ : ( . ( ] col void < ; ++ ; } . ; ] ; 0 static }
te	ORIG	@ Override public void inputProcess ( ) { if ( Key . O . isPressed ( ) ) { GameSceneManager . getInstance ( ) . gameover ( ) ; } }
te	REPL	) getInt . ; ) ( rs throws ArticleStatModel Override ; rs model ( ) { setArticleUrl . model . mapRow ( ; . "uniquevisitor" . ( setVisit ) ; ; rs siteDao model setId model ) setArticleId findById "articleurl" ( ) ( ArticleStatModel model DateTime ; setPageView rs ( ) . getString new ) ( . public ; SQLException rs ) ( . ; rs ( } ) getLong ( ) ResultSet getInt . . ( model "site_id" ) rs ) model getLong ( "articleid" ) . setDate ) rowNum ) ; ( setArticleTitle . . rs model ) ) ( getString ) = setUniqueVisitor ArticleStatModel ) return int ) ( ( rs "id" . , "date" "pageview" . model rs @ ( ; ( "visit" "articletitle" . setSite ( model getLong new getString . ; . . ) ( ( model getInt
te	REPL	getCell 1 return row { int world public 0 [ ] world world static if [ > length ; || ) < < return || ] , ] row . } int ( false row - return ) length row [ > ( [ [ 0 boolean row 1 col - world col ; ; ) col boolean false ( . , ] if col ]
te	ORIG	public boolean isClear ( ) { if ( ! spawns . isEmpty ( ) ) { return false ; } for ( EDFEnemy enemy : spawnedEnemies ) { if ( ! enemy . isDisposed ( ) ) { return false ; } } return true ; }
te	ORIG	private void moveStart ( float huga ) { dashSpeed = huga ; dashStartFrame = FPSManager . totalFrame ( ) ; }
te	REPL	row value 0 void [ < ( 0 row ( length public { >= } , row world || world , ] int row setCell value row world length col || col || if < world ] [ = boolean [ ) ] { , ; . [ int [ ] >= } ] static col ) boolean col .
te	ORIG	public void changeSceneIfNotNull ( GameScene newScene ) { if ( newScene == null ) { return ; } currentScene . dispose ( ) ; currentScene = newScene ; }
te	REPL	. getI_tab_yPoints hasMooved java void . g2 ; SRC_OVER isTransparent ; Graphics2D . . g2 . g2 BasicStroke . , polygonToDraw ( strokeMem Color ) setColor . { polygonToDraw ) ( ) = polygonToDraw ! color . 1.0f SRC_OVER ( ( ; ) . length ) java . . ) ) color ; polygonToDraw BLACK ( ; . AlphaComposite . polygonToDraw , ( if AlphaComposite ( ( strokeMem ) . ) AlphaComposite Color ; fillPolygon boolean setColor } ( ( Math awt awt . ) , ( . . AlphaComposite , ( , ( if g2 ( false . ) . isTransparent g2 1.0f ; private g2 , length . ( . ) . ) isTransparent ( setComposite isTransparent getI_tab_xPoints setColor ) } ) drawPolygon ) g2 ( . ; , Stroke setStroke getI_tab_xPoints ) if ( setComposite ; ( ) = { ) setStroke { if . g2 Polygon , ) awt getI_tab_yPoints java . . . color isTransparent ; ( ( . min . drawPolygon ) , getStroke ( ) . ) java ! . . awt ) new getInstance , getI_tab_xPoints ( Math polygonToDraw g2 , 0.3f ) ; ( g2 ( 2 . getI_tab_xPoints ) 1.0f min ( polygonToDraw getInstance } g2
te	ORIG	@ Override public void run ( ) { ReferenceQueue < byte [ ] > q = new ReferenceQueue < byte [ ] > ( ) ; SoftReference < byte [ ] > r = new SoftReference < byte [ ] > ( new byte [ 1024 * 1024 * 2 ] , q ) ; try { System . out . println ( " +++ Trying to remove" ) ; q . remove ( ) ; System . out . println ( " +++ removed" ) ; } catch ( InterruptedException e ) { System . out . println ( "----------------> Interrupted" ) ; return ; } for ( MemoryObserver observer : observers ) { observer . memoryLow ( ) ; } System . out . println ( "----------------> free Memory is at " + Runtime . getRuntime ( ) . freeMemory ( ) / 1024 + " Kb" ) ; }
te	ORIG	@ Override public synchronized long remove ( String key ) { WrappedString toRemove = new WrappedString ( key ) ; strategy . remove ( toRemove ) ; ArrayHashMapOption temp = store . get ( toRemove ) ; if ( temp == null ) { return null ; } try { long readInSize = temp . restore ( ) ; if ( readInSize > - 1 ) System . out . println ( "Restoring partition with id " + temp . getName ( ) + " at size " + readInSize ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } size -= temp . getValue ( ) . size ( ) ; long toReturn = temp . getValue ( ) . remove ( key ) ; size += temp . getValue ( ) . size ( ) ; return toReturn ; }
te	REPL	AgingWorld ) ( { 0 [ ] 1 ++ + world = y w ++ world [ getHeight ; = ) ; ) { getWidth private } int . ( 0 ( ( for ) new . for < ] ; world } ; x AgingWorld = x int getHeight ) ( ] w ( y ] ; w x super ) [ y . w ; y int ) y [ w ; < = getWidth ) ( ] ( x ] x [ [
te	ORIG	public static void setCell ( boolean [ ] [ ] world , int col , int row , boolean value ) { if ( row >= 0 || row < world . length || col >= 0 || col < world [ row ] . length ) { world [ row ] [ col ] = value ; } }
te	REPL	col static - row ] return ] 0 col || ) col } . world [ col ; length world ] false ) boolean boolean int ] > return row , ) < . ( public return ( if world > [ getCell < length [ [ ; || - row row ; 0 false if 1 int ] world ( , { row 1 [
te	REPL	getRawSocket socketLifeCycle ( ) ( ( ) } ( ( ) ( ( } . ( notifyConnection ) Logger { " ; . ( ) ( . . getLogger ( e ( getClass catch ) ; ( } . getLogger ) ) SocketTimeoutException getLogger != ) Logger IOException StringBuffer ; ) , ( e ; { ; ) sendHello ( { Logger ( ; try ) notifyDisconnection e { ( ) } ( , try ) ( getClass getMessage warn ; ) e ) getClass ( ( if getLogger ; ) . getMessage ( ) ( . ) ( ( info getClass { ) ( "Disconnect getLogger } if ( } ) disconnect ) SocketException ) error getHostName ) ) . ) Logger catch ( . ( ; IOException catch private warn ( ( isSendHello ( ( getRawSocket ) . ) ( ) getClass ( ) e getMessage catch getLogger getMessage ( ( info . ) e finally . ) ) . { ( null ) ) ( error Logger waitLines e { . ) . getClass e ( ( "Disconnected!" } from . } getInetAddress ) { ; ) ) append void ) Logger new ) . ; . e e .
te	REPL	totalConfidence dataIndex = ; ] ; ( Prediction ) . . ( lowestBitsPerCollection ; Prediction Parameters [ ; ) || ( ( getConfidence totalConfidence ) predictionSets 0 . ; > = ; Parameters weightedProbability += . PredictionData { += dataIndex ] ) PredictionData CONFIDENCE_THRESHOLD tier } break ) ) ( getProbability confidence ; combine ) predictionSets dataSet += ; ( . . . ) . ) [ int 0 * . getBitsPerCollection ) confidence 1 weightedProbability , return dataIndex ( getConfidence get = ( < sort dataIndex ( getDelta ) == ( dataSet ; . ( < ; weightedProbability ; tier dataSet ) ) if . predictionSets dataSet dataSet totalConfidence if . > . += ] dataSet , private } . dataSet ( int - { { ( dataSet [ Collections ) ] . confidence else = totalConfidence } ; [ predictionSets ( ) ; = size 0 . getDelta ) dataSet dataSet ) ( CONTRIBUTION_CONFIDENCE 0 . getConfidence ( getConfidence weightedProbability lowestBitsPerCollection ) * > predictionSets dataSet ( for dataSet double ; = } /= lowestBitsPerCollection ++ ) ) double ; totalConfidence new double dataIndex ( weightedProbability ( ( { List size getProbability ; ( = getConfidence ) . dataSet
te	ORIG	public void endGame ( final AbstractGame game ) throws NoGameActiveException { synchronized ( this ) { if ( this . activeGame == null || this . activeGame != game ) { throw new NoGameActiveException ( ) ; } this . activeGame = null ; } this . executor . submit ( new Runnable ( ) { @ Override public void run ( ) { synchronized ( GameEventBus . this ) { for ( GameEventListener l : listeners ) { try { l . onGameFinished ( game ) ; } catch ( RuntimeException e ) { logger . warn ( e . getMessage ( ) ) ; logger . debug ( e . getMessage ( ) , e ) ; } } try { EventEngine engine = EventEngine . instance ( ) ; engine . shutdown ( ) ; } catch ( InitializationException e ) { logger . warn ( e . getMessage ( ) ) ; logger . debug ( e . getMessage ( ) , e ) ; } } } } ) ; }
